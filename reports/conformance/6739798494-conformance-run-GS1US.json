{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "09d8b65a-cc6f-4795-8ba0-ad9b011eb07c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e4432e74-8705-4753-a87f-4bcd42be86a7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "14f77563-2d08-49bf-b099-26cd020082ea",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "aeeb536d-ddaa-414c-9d6b-eff39b8cea6d"
                }
              }
            ]
          },
          {
            "id": "1cd55d54-8ca6-4c02-b0db-4939d6764bb7",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9d173e3f-bf7b-4184-ae27-24cd82299164",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "487603de-0524-48e4-a38e-9d161b941fb3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "26c66336-9e1a-4d89-866b-0b68a61d4279",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8aaad537-9214-4042-ae99-2e04006dd1d8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "17a0de76-d294-4717-9a91-c5aea94718eb",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b410ca6-b41f-40b1-9074-62c5dc0b5f69",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3d013c49-4901-4ac6-8cdc-18172adaf4b2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8f7a347e-2ab2-4683-ac3f-49721322ab2f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cb2361d5-f094-4b00-b643-08bdb76896c5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8cb55196-d083-4d4a-8d47-f8272b8dd694",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4aaa4476-54b2-46b4-b338-9c5ff4a028d7"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0f46cf5-a240-42c5-b35d-cc653648cd8c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "069c235a-a1d5-4c4b-98ef-6ced6320ed8e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ceb1577-719b-47ed-b7df-606fa81ec91b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c62c6469-f502-4076-8ea0-62fd5552a9f2"
            }
          }
        ]
      },
      {
        "id": "ee5f6945-23dc-4f89-94a0-222c144d1813",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b68fe7c9-114a-4104-8842-14ee79cd453d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9b31e786-2abe-4b2a-b03a-3ac846782c07",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c1d18bcd-732a-4e3e-9117-59282fce4d07",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6297039a-c0ac-47be-978d-2a975a48499b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a478fe7f-eaf4-4f64-89d8-fa86968f95e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1836f5dd-0439-4f3d-8ad2-fdaa391cd7d8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd81f1fd-dd9d-43c8-b311-5a1461d6ee09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b522de28-39e5-4fad-ae34-2a59b476245e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01b326e-57ae-402a-8d4e-e0b9ebcf9976",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b670b982-4cdb-4477-973e-96596ad9e001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "665e1a8a-ddbb-446e-aef7-1fcc19f9621b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f05d2ade-85c6-4f43-a623-2d345f478b70",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "700621e2-c507-4d8f-9d07-285003be2b9d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e878789-8c28-4b93-bcfb-534c876d75f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d428ff2-b2ac-40c3-a8a9-2825464ce258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7294766e-93ff-4d35-988f-51b4c413ae05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ddfdcd8-1688-4db7-869a-3af51f84bfdb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1db26fdc-80e8-4d88-8b42-605dc8b8cb63",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b4965331-d77d-45da-bc40-d7e1d0660f1b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "420440e5-1dfa-41a9-84cf-c9a0ae2f8bd1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ec4cac1f-212f-4dde-8c8b-78ff326eee23"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ef9fdf13-723f-4bf5-983c-600d09288b49",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "084b3a60-47b5-49dd-bb8a-2cee27eda8ca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43e41c59-28f4-4218-911f-4a771fecfacf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0a947db5-8544-43af-8cc0-84e67a26f677"
            }
          }
        ]
      },
      {
        "id": "50e6cddc-30e7-456d-acac-440d7ad55eed",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b70476db-64e4-43c0-8286-a1035801b10a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "358242d0-0b65-4f07-9d27-17779e8295e8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b7d06c66-885e-4e8f-ae30-ff1270e1f12f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa40067c-b7bf-4478-b1e8-5f3b9b943549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c58b3e-87b0-4896-8060-d3a71a6b4cff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a848e968-56c5-4a65-b921-0e7d6312362d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec8b7ec6-87c6-4a22-ab36-55dc91ebf8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "527ec88e-e390-4019-9e54-d6d96138c633",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f07a299-71fd-4b8d-b629-4ec317138a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a807ddf0-f4a0-47f3-94b1-c4567a3079e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6a11cd-c489-41ba-986f-f0a84e5770ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67c4f637-500c-4efc-bd2b-149d5a3c1fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b011e7d-aae6-4013-b8e6-46219dab4a65",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c67ab9-0859-4a6d-a78a-c7ede2cfd4ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15c14870-b5b0-4d28-b3d0-9bd7acb8a128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204f688d-3d38-451e-959b-e2e5e50912d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bdd20766-d7c6-4dd8-9dc3-be8137cf85a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1a7460-ddc0-476e-b505-576dbea818fb",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e00bba3-c0c3-4ec6-a2df-87aced1d4e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b907a824-3493-4374-9264-9e78c9ac881b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34bc65b6-c13d-405a-924a-4dc151bc041d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15cb39fc-a8ab-4254-8b32-be22e854e2a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf7a534-c61e-46f6-b09a-ac96d38e9d46",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e12dfe-5373-4d75-951b-f4acadec281a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "663494be-9107-45fe-b265-d54d68d1a766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe59e82-e384-48a5-9ce2-47cf37f7554e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85502d60-47b6-4379-a733-5a9a37316080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e14733e-9a29-4d54-87fc-54e51c40de5b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f6080d4-e2e2-4804-b4b9-e1ce3f444d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25124eea-bf33-4449-8d57-126d84c3a45c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c79bc0-f92a-42bc-a665-c52bac4161b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06229600-7f2f-4646-b784-f38749c9f4ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177c6541-8647-46ed-a1fe-0875fcc334ba",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8da2fe-e5e4-478e-8260-b4f92c8e622f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9427a2c9-7982-4f2b-884e-2ea0fd2dfd67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d3be26-a3d5-4a40-ba0f-7067c57252da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f95f42b-e7eb-4d21-8258-4beb9606f6e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed16dbf7-5a94-44bd-9c47-edd44ec27dba",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b94247b4-3195-4185-8570-445b4aecdf12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "772c5437-a911-43a6-bff2-68b9f845e6a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81731df6-3804-4bf2-98f6-6bbf5626eb98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bfec64c3-b81c-441b-bb69-a2b705071b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee43e6e-a5b1-4ee1-8eb3-6b41401b8d38",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85418d16-cd71-47fd-9ddd-8fdf6ecfd713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81d3b76c-98d6-4be4-9463-0c419543ec48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb7b49d-36f2-4b8b-b7d3-048518862285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa384e3f-2292-402a-8597-fd24ff155702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10021320-2dae-49cc-9023-fe40faf1f329",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b044815-ba8f-47ea-993e-e38525d2fdb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb5b92e6-9cbb-47cc-9313-1abf090a41b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bdabb4f-9fc5-43fa-a675-6e9103230829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bec093c-9006-4a3d-a448-7b0959208fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbcc02fb-17fa-4e2e-9ee8-7cd875f75d26",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e181ef-33ae-427e-94bc-4958d269541f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6681cff8-a990-495a-9433-f5456624d42e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6268843d-0348-4a01-93bf-c6944be113e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8167ba93-0837-44a4-ba73-51caeea4e7ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc1b5dce-c8ee-4807-ad83-9cfc3bb2ad35",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17527645-d7f1-4799-8bd5-828c04f8b000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "635a060d-a930-46c7-9789-a9fa8ca25c6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab9c09e-1e7d-4a36-b0e9-e7457cda4b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "744582cf-f0f6-494e-b0f1-b19cc726bfb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50502f3-527b-4190-8094-4ecec8b9c6b7",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87cab24d-3b8e-4925-a094-f234fac88567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a2dc8a0-a025-4c3f-b972-fb74ff6cb135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431dc59d-f3d4-4454-bafe-8e3188dae618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2736152d-9948-433a-9098-8b4a57719a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68026dad-def1-4b1c-a582-0d1906cb46cd",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1595ef-e1da-45ae-a2bb-d621d85acc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab5d6957-d16b-449b-af34-e8f8759d3917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3fb92d-c22d-4e1b-830d-782ba3249463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34d631ab-f0d4-4c3a-aac4-ba0362c365df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1124b776-534c-4346-820b-fde62d1d2aca",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b67901-dc51-415d-9090-be7db119f9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3cf4117-d72a-4703-992f-e41bee4d2be3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5e841f-c16a-4474-aed0-c414a97056f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b3da353-ff41-4091-9cd1-ded4543731ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb34079-e9e2-4b38-a3af-4057f4be073b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8b3ce5-c5be-4ced-bf4f-1397059d7017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38b91747-4c5e-4225-a595-dfa2d98e840f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2781298-f5ad-45f3-a152-0d9d90021108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5189ecbf-e8dc-4873-a49e-b48037ff31fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43dbb97-991f-4f2f-b001-a46a87490d68",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "429f3aef-ab64-4719-8108-8d9d60492553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3b8739a-d890-4e66-859f-160d1d11fefd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78af0ad-d29f-4f06-b954-cc16c94a777f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73017c17-ff35-4c2a-8e37-e9471e496dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1265f57e-c019-4a9a-9dd8-9362b07ac7c5",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d07d62-f463-46f3-becb-47215b2cf5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a62b63-ccc8-4d8a-8455-3f97a02c4eb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14eac45d-e710-48ed-b47a-5300f8eec69e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb231f7d-a714-4cfa-abb4-b9d7df56088f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5076b2b-2de3-41d6-9cf0-9cc53f43a135",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2bc3910-d26a-4fd6-81f6-2287a3352b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4063af6f-a9b2-4d04-b266-56adf2a92b42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14210a18-2326-436d-9037-c56b74c417e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "33e8f271-b20f-4be6-b717-5fe2f33b9025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f6b147-60d7-41b3-b548-fad52f619b38",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c1691a-1248-4c35-8bbf-3c1e0a5f1f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e311ccb-0ad6-4c22-aead-862304a111f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acbe6838-f804-45fa-9dc1-3c643429b922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "89d85529-e2c2-4713-8f38-983a73b539d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c818731-3643-441c-9297-b84b832c78ce",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11efc7b0-090c-420c-a938-39f8acc8c295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24600061-ae78-43f1-92fc-c55ecfe87a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64cc6fa9-9817-472a-88f0-c983736e8b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "622e2fa1-5441-4921-b162-c42abdf2a87e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459e3196-a02d-4678-a770-35e1ba7449b8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8491df54-4761-41e2-ae34-c1fd43791e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0f888f5-b992-4c88-b35d-a0dc28d52e53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1932de6-5c2d-4f02-a96e-c76dff5df3f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8605d68-347b-41d8-be93-9221246d57f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c14d2d0-b2d3-48a3-a8a9-6b6c0f36a594",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd4d567-378a-4264-a669-88c835491668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2b854d2-b7df-4f99-a240-81845280ea07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e5d758-3cd7-4feb-9bde-2818bb3b3522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c2267444-4f06-4abf-856a-5d6c3e92fda0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d4a8e6-0eca-40bd-8fd0-5201dc4d5181",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1da79dd-bcba-4b86-bd88-3efb3127234a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02514e54-92cf-4da7-8b3b-bb30396ddd6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527ea168-eaed-40c6-93dd-5c1ec0c8669d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa599384-9c41-45da-9760-b67474407747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3dafa5-a8d6-4c28-8c0e-939c853bd9fe",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42dd85db-13fe-4671-8d38-1527ad84d4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4148113f-6949-48c8-9597-9ce18b407f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4c6026-38c9-4f5d-9a59-89b6ebf89c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a745b510-c413-4e50-8f0c-c8d0dfd5ed95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9217c6-0776-40f5-b0b3-a34b0379782e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f97bd90-da52-49d1-bfd1-607e16c6d967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f154e78-5aa7-4708-8037-f4447d581301"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89341e57-1c3f-4531-81d7-ecb2b0904a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c931c135-7da1-4f85-935a-6c77a46b2533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65bdf6d5-3dae-4340-bb00-d3d68df3b6db",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b44a67-6f89-4417-ba6c-8e1cfbd637a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4276c828-2a5a-4709-a975-c25da1ff2f86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548f1331-d49a-472d-81a8-9a9a2bf73166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c923f804-1473-4e6c-936f-e1b35c512141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1ccbc4-facc-4a07-9c99-b14d3f497292",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab009f2f-cf35-45c1-baa6-249b537aa493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ae536f5-80b3-46d9-bcff-f61763f6e524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b30798d5-d51f-4d9e-826a-0efc7573059d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "49cfa858-c47e-4cb8-93fa-2b4e4c6c2559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a4c9ba-22ad-48c4-bca2-bac607b7ad86",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e21cc390-04c1-478a-881d-2ea414ede31c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b799fc2c-474e-4fa1-945e-14121c0bf2f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a009db50-d1c3-4974-9f89-2995e53757f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4105841c-73bd-472e-aeec-f007b2a7c150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2b9a3e-aa0e-4ccc-bac5-0f09dacbeb7c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44333ae3-dd0c-4eb8-911a-918fa141b77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9cd4a60-dadb-4667-b471-9a5b438923de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80129c8-55c9-4398-92f0-4af817c9132e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b16140a-4c0f-4660-bb9e-694acaf8c704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c4bfef-e8bd-4d82-9ae6-8ae291b3f9c9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef3cbe6-e9f1-49bf-baac-5fd4406de9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74041039-ab21-4a8d-89c1-58c20356c540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e28268-cae1-4450-a4c4-d7cf18ceef22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9897b83-70b0-48c4-ae5b-59977ae72bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514fabfa-53eb-4e25-b76f-a452a217c294",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39473c88-2edd-467e-a331-567175a8e373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daea28c7-5f17-465c-beae-8e9a25a58f7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355116e3-7b05-4303-8a1b-7438bfb265b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb0af235-e1ae-4ec2-b317-3c0a0337c5da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a09ef752-6376-42f6-8860-7798ffebfe91",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38c3540-1b54-496c-b9c7-f0192fe20465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e5a28a3-17a5-4012-b8e2-6a76ab9ad6a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f504459-ada7-4919-9660-9cf84a2e9ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ba2c02a-502a-4763-86be-cd18e8894c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9da7cb-4019-4781-8f93-b4205670cc5a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ac2995-cf43-49cb-8c52-06af8d8f3214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd8a5db-90ef-48f2-9dcf-b6fbba00c98c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f71bd1f-5317-467d-8611-84848745817c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a68d33a-5f14-400d-8131-94b8fa9e5a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106acf11-784a-49af-9a3e-040f8ffedf08",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa1b73f-5b94-4009-a8ab-408911afa7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd8460f1-5c47-475c-9efd-5293e636cf11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8967240c-cfd4-409c-96f0-1754bbf01eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3653db54-8862-4ed6-886b-77480b7fa60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03ce64b-5316-4b76-8326-b5adbc61afca",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ba97a4-24d8-4973-aa97-4eec10516cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2649d3d3-3eb2-409a-bf8b-8870d5a6632c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077c7115-dd56-497b-997b-8028e97be8d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "15716266-5bdd-47cb-9b7a-f6ea31abd8f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4706e956-d7d5-43aa-88aa-ae60c3071d91",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1318b5fe-d71f-4e29-9978-b4278bf43e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c68ac67-4e88-4860-83f9-9db230ccaad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d8022e-b9bc-4d9d-8337-5bb47c3b776f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ec49312-d4fd-4eab-83b3-aeab875d2392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3711ceee-6cf8-4434-97dc-5859c36cb04b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0905507c-4f5b-43e6-8286-178dd61c2c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c6d15ac-5c37-47eb-b456-7051cd008dae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5756fe62-f88f-43d8-b7fe-89bac6aebe65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b94405f-91b3-44a9-8425-7725c094bef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "904698cb-999e-4b37-9126-2dbf05869d91",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed67a7e-54fb-45de-b868-0f7a6b3d441e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a7b8c18-4fa9-4a33-a935-5d31a4470be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e9bc36-0115-484a-880a-2c7d7ef12f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dafdfcbc-43dc-41c7-ba8b-f46a38b57e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63f9004-7242-45e0-a206-7b4539f8a12e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f156e25e-5dd9-4930-b350-4e885e14a942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c40a64a4-d736-4621-a3a9-901ed38510ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e9483f-24fa-4abd-8f99-2662059a76f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "565b24f9-7d7b-4428-9c4f-847f472b7804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ba0450-2231-44ef-8ad5-69b2c8d44798",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f956fa-195d-400b-a243-d5c4d1164ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e1b99fa-19d5-4b4b-9d26-b04bfc436472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c57ad62-9805-41a9-867b-7beaccb04552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "edd11075-9164-48ff-91e6-e4cebb91445d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42e037e-88ee-4155-a862-df3f1a934d4b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec94828a-e79e-4564-b485-cab770b842ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c3600e9-5676-4b44-9276-2d4a614ec84f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf71fcff-889b-4557-aa55-d97d195ce4f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "cfcaa7d0-7b6a-437d-a20e-cd576cff7d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceff8fd5-4d65-4d00-9fe4-812b76b0995d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11fc1f56-0102-46fa-a578-d7eeade15c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e62b461d-73b5-4ebb-b870-4c980874421d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19daa81-e882-4d11-8eef-77718425df3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "44178722-eb70-4d3e-9e46-4fe647c8da60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7aa5ec-e202-4c11-bf17-e42869c8a5ba",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c582a8e8-caf6-4d7b-8f14-00b0e0270c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9ee57d1-7d91-487a-b187-dfbffa8fb630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95538b2a-ad6f-4fc6-9a9c-5c5e8dbb4d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d64093b6-84d9-47f9-8d46-2821bb57cf07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d939fccb-7748-405e-9529-90bb9aaecc1b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9461a924-9eea-4b3b-bcf0-148b2d565b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74afb228-a6ed-42a6-96f6-884632c2c3db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cce62e0-01e2-4ee4-b28f-8474bcb6349b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "14b3ae46-461a-48e2-a238-f99594b7f2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c10ec0a-63d9-48d8-88d0-af7474c17889",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89a8e3c-52ba-4290-82d5-8e17c70e6ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c06f28-c36f-4015-ba0b-d1fcc4ccd358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fff43f3-137c-4da8-ade7-c9eb7f1842bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b3e2ba4-3dd3-47fb-845f-03e4041c55c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7fbf9f-a5e7-4082-b9e5-02bff40082f9",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a6a6e8-3096-4957-adf7-4e99120dee50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a89dc4a8-c508-4866-b313-31a0d4f564af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327a0cd9-c74f-477c-abff-240ae3f9e827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e16d313f-7f1b-4dc4-bb2d-40f59273812a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62230e7e-89d1-4063-926c-ad9af24e9445",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "774c0e87-59a9-47b3-8d68-d0b0f57515dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf0c09e-60b5-4fcf-945f-ce9eb9bbbd01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d32e8e-d144-4c6b-8ca4-0c3ea1834b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7c9ebfd-7273-4d5c-a2a1-4198adced175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a7a842-7439-4e95-98f0-a81dd676902d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f064b209-239a-4eca-86de-f54d0c080a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bba2fa0-1c66-4b07-bf5c-3a573f2b689e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d29468-ac5d-4956-b451-0f1a6e93ada1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "94f1961e-7140-4307-a30f-e1bced95d757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ef296f-f56b-4fed-b576-03893b4e0ba0",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc8e362-4902-453b-bcc5-e1878eeb2334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9475a0fc-49b5-4df2-9cba-b811e55df13f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4911e63b-adcd-4ed8-8a8a-99ca52048cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9182bb30-6fc0-4d07-99a6-066b27d488bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e94457-1da1-4674-a62d-d0460f7868b6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "459b4a40-2235-4eaf-9832-fd267063a5e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9597f5bb-3633-46af-8c48-fcf02d5a266f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d1c009-3642-4d2c-aca1-bb5660537968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a341e45a-d3fd-41ba-9c4e-c7a61e5d33b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf68195-a136-4983-83fe-7bcb0c7c83c4",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ecbe15-cf58-4a68-b6cf-c1f99bd4900a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c5b659-d749-4d6a-8fef-ff15d0083bd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24624a74-56c3-45c8-83f5-6fd99551fe92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8452efe-3117-4648-8876-12527d96c814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c24d29-94f9-43d5-95d7-3c764fd6013f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b374604-69f1-494c-ac4e-a4cfb2baf08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c5c9a71-75c5-4f14-9382-18fdca8706f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449a3986-64f4-4fbf-949c-164d45a12cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f249e987-70fc-4e6c-811c-0b324b332af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cdfba90-58fc-420d-bb22-9bb36b95c139",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f517519c-ad1a-4c9f-b0c8-3794a0115edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb040e63-7767-4b68-b61b-657b8e73e6fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a0fb33-c0dc-4d54-8d8f-f8ea65d1c9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac47a19f-9be5-4ad6-9f23-8d0a64e5a6dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54612cba-34f6-4134-a767-8f35588b5fbb",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a64d73-889a-42b6-a470-9d92c4b48004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "884edbb4-1308-4bdd-9224-14dc7f2fcc95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a29ca3e-d424-4fdf-a011-442a7a41403c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a205dd58-4869-4d84-a3a4-7f1f1840e35a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3e174e-2445-4d4f-85db-8145d0b3838c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee10def3-35b2-49ad-841d-85e37f0a8ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a45bd78a-830e-469a-b4b7-793456f23b7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff69e716-c553-43d1-998f-9ac7a1460c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9b58df45-3fdf-47a7-ae13-fc940f799a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddfaf55f-ccdc-40c4-8b84-9162cd083702",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21db951f-778e-456d-a83a-c0f2da5c28ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "341c788d-f05a-4cee-aaf5-48536fd0f648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a139fa-262a-44fc-b29b-465b584789d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "54ea4026-ef51-4238-94e6-e9c5447cde02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "938b30ba-7bc0-484b-8c92-d24c7938144a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "951c9919-cac8-43db-bbaf-007990c21f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "017c6dd4-aae6-48e5-9ee9-742ef12bbda6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890ec8fb-02c8-40cf-af1b-ddfe1e7eec75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e03c3d41-6035-4c29-a28f-a189d7b1d66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a636bfc-7c38-4147-90ef-651568295e29",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338d433b-19bf-4d63-ab4a-968f53196df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "468f74d1-78e7-4895-ad17-e57c85e994d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12382e18-ceac-4660-8b77-893789565d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4695becb-5c13-49b9-9c78-7997196a294e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3097bf81-7bd6-4204-9041-58a355f299a8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a884eb0-e87f-416d-8352-4a8a59fcee73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a9bbc45-ba92-423f-a781-fc778f6b3f18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a954b8f9-ea11-43ef-b1c0-ef07b61b0a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b259377-90e4-4690-8b0b-f14cc7400ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba55fa5-81f7-4e8a-b5b1-118833bd0190",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b531211-880c-4dea-83df-b14745ceed8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2467a60d-41dd-4daf-97f3-058fb802b561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb14b52-c48b-4077-8f5b-b5a4f55e80b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2330a848-d026-4e59-b9ac-295f9f600148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5b0016-815f-4025-a810-ee91df743431",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "539c83de-f3a7-467a-a472-d2307e1707c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e460284-0c35-4611-99de-95f34a1d9e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c77201e-2221-4c60-8659-c4278a09ae15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ee9a5fa-1da5-40ab-b10c-89a392e04996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b28e2bad-c59c-4fda-9b95-5bd0d9e15d38",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33264e91-9f02-497e-af49-c89ae0b4dbc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e8f536f-49fe-4f7c-8bd6-5bb6863ac418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c83da38-8133-4540-b242-7e0ee0b6c231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "124a262e-e155-4612-9260-39001ef8a732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7bdb39-fc56-4a5a-b917-fa49df6aa1ad",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f17ac87-e55e-48b7-84b5-2e64c1cc103d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b3e80a6-3a5c-4646-88b4-c72b12a2a40b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2833bc27-a8a9-4cba-899f-ada32ac06f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ebef8e8-a993-43d7-bdfc-c96e640f2f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d297ec-7fce-466b-8fe5-72593db3a23d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea97f560-f50c-4476-b43b-2ca8001ea597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9121d735-da45-496d-b1ab-e1cd7de08ee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53984c08-55ad-4bc5-8b9d-5b0d0c82e5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf69ee44-a927-4dd7-972e-c2d054541a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "352f65cd-0641-4018-b8d4-0e91b1780050",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d6184a4-c5b1-434f-9465-09aff91a62ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75ee9a33-63b1-4890-a081-f9aae55687a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa46362-574e-45a8-b00e-007070e33639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d770271-cbb5-4e2a-b359-924c8f6d3e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7896e5b7-945c-4b8b-9e19-8582242667e6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51290f51-e27f-4ba0-9de2-af3e656e3411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "466cc4b2-7332-439b-b564-a253255c2205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87579a6-2d76-4908-8509-4688ef1f9b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b067128c-a04a-490c-9de7-09a71f0606c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bffaff1d-e4ac-43f0-8ea9-383e18382758",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a058fd-ac9a-4586-b2b5-6757bca88251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07a82932-cbc8-4857-9462-ad05ba3523c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4bad1cc-a7d3-4105-b91b-2b0d3436c11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "78ce9442-dd11-4059-a8eb-862828a69d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0011189-45cf-4c50-b92e-752d869862c7",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "588efe50-ef7e-450d-8989-f1583ea60cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17886e5c-c8e7-471e-840b-222a790103ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46288f43-7f5b-489e-801f-c3b40a6a60ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "13bef33b-7476-4b76-bbcf-68d98eac6fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6b0b87-d4d1-4f41-8193-237e2a730986",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4b899c-42b6-4bc5-bbae-740e015cab67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8da72dd1-41f7-4882-b45a-6f3b0b3a9133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd8de04-10a3-4f2e-8b63-ffb86eeca691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9ce98a0-9a61-4d26-990b-d91fc54a12e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd6fbc3a-d033-4f83-a3c4-dc833ef88495",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "203f6233-aea4-4575-8598-4a8794c10a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "889eedca-6954-4013-b9e4-e88289f9265f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3943ac26-cae8-4905-b26a-16f7cb209a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ad5ba4-7e74-4b3f-9fb4-dca3b011b778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aac8813-3b3e-494d-95ed-e9879211507c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63debe7b-18fb-4f98-97df-705578125444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebc32361-f9ab-4a37-a2a4-4a926dec7af4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cae5989-491c-4105-a3b3-b233be4f9637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0359e49-5cae-46a9-b11a-84877a0e4ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a16f71-08d3-4a26-8c06-e94e973fbd6e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ceac2f-e55e-4f67-870b-c6d9b9978191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ba02c38-ced6-4cda-9cc1-424c8cbc119a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2beb2f82-b4d4-4865-8490-10d3d60b88b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b34460c5-7be5-4840-a5f7-62e99c881a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e1ebfe-295f-4d84-9431-8be09f9b54c6",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62d4fd2-5321-4131-9a29-7d549ca829b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8ce9a3c-19d2-44db-bd14-1fefab24cacd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8a3ed2-e638-4bff-a14c-4524d47aecbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "93bc60f0-8e19-4274-a800-21a9967e0672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f11041-dbdd-408c-a7c0-7300ea2aac9f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cecedc3d-6c65-4843-8c41-f74a671e3e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "282337f6-e1d5-4c7f-b87d-9d4f979185f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b5ffa6-baf2-4992-86f9-8fcfd7f0ed5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d570ce6-11d9-459e-aa6c-703c48feb1d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555cbe2b-b7d2-4bd8-8910-040d5bc8a845",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a4e799-62c2-4968-a6e0-10090bbb9335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b8afc3-5194-4e8d-b07e-cd2f04c46435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d287a46-b025-4bf9-a485-009debe125ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "55074e3c-033c-43d3-b298-45eaeb41d85d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758d569e-6118-4046-a412-09d950887d42",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce2a1d6-0743-4e68-8663-65937c9ac807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e3e9f83-eb2e-4789-8307-c93e5e102eb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e34bf2a-9422-4bba-abc8-c42645d601f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6492c39-02cc-4100-9239-de8b9c031ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94104da3-2c5a-435b-a348-5c0b202c555c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd0271d-1028-4415-a5a2-918d0b35300a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ada9ec9-082e-4ff2-92d2-e165eee185cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3667fb7b-7e9c-4296-9c55-6f8ebdf56795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dca7c6ad-881d-4343-829b-270007468637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6034b2a-25d7-4785-9dbd-e515edf7c362",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29da6b66-70f6-432f-afaf-d30a9ce8be1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42ee4f63-13b7-4538-becc-aa2755cc1057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9555c3-77d3-4843-8d0e-9316db884d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ddc799e-d8ee-413c-858f-04f4ff5c1be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5162eaab-6059-4195-b25e-fb844a87ea14",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4207b9ac-4bbc-4bea-9c6f-579836e6d9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dab1396-f6df-41fc-9d68-819078c88b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f52d24-73c2-45e9-885f-1d5bd1720a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e703ec79-8e4e-4dbd-a072-2840d53d42c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52bbd6eb-0aad-4150-be03-33b30808b90c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5b244e-2917-467d-881b-21c74e9eb269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e467a1c3-6f5d-4639-b96c-576f38fef3e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc82c47-d1f9-4ebe-8707-329935912a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb62b5d9-47a5-4b4d-b17b-30617e24c81f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4c300c-0be6-41b0-997e-48a28f020bc1",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825e30bf-343f-4284-925f-53b839f3db4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "503ba499-caa8-4ce9-9a40-d86be1f80eda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a9d73fd-e155-461f-8344-4adaeed1ad38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b162e2e9-920c-4af9-80cb-1c7590f86168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f5f69ce-a75c-4ea9-8ad3-6758ff7b8add",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8642bcd-2412-49a3-9d98-2ec0a530b70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1331a0aa-3038-472c-9d14-9313cf5c0d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78742d6-9dea-4607-a167-3d29204385e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd50de03-f9b8-4341-b492-caadd8c3f4b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ea1080-d388-4107-b802-75318ba76397",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff182670-6c5d-45f1-90ff-9b38d123c604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f100095f-ed4b-4b71-9d62-4eb44e2717ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e9dfd4-e0ed-4800-bb33-47ab834dd875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "73df9657-1897-48b1-b11a-af78634138d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bfb875a-34fe-42f6-aa4d-48b609059120",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8487fa21-eb42-45f2-8c16-d1c77d54468e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a04e66f-2113-4b58-9dfa-7e6dc30f5963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaae1114-0955-4003-a619-baf9de16c988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ba570d65-ce4d-49e7-9b4d-0fcae4c34682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87fa584-ab1d-45ca-bf97-818831b66c8e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcac6e4d-bb49-464e-92f1-f561914dcaee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b6a9046-c22a-49ac-bdd7-2dd097e8cd0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d33a76-0484-499e-926f-21f102ea0661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "78e00262-0ab0-4d6b-9a46-5f37570f0b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a86fd427-7e20-4804-ae6a-5246e46bf251",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92cdff74-bb48-4170-bcd3-32c3a04f184c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c54817f-04af-4396-9142-6f6f3d328e01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e430cac2-61ed-4686-98ed-2ce888854034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3526579b-374c-4c8d-8648-d9fd061ee6c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07cc5752-0d5d-4cf5-816e-785aa5508fab",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "176f6a82-75f1-466e-954f-17ffb6b440fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b8a588-dc39-4fdf-bfb1-385fd78a2106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d2a307-2bb6-4458-9b07-f4b7afdb27b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "18265796-1780-411b-97c7-cb1be814e9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80aa9b58-1c40-4b45-acc9-d39ce0fd586c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3007ede7-f0b0-48fa-956d-c36be2fee80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "910ba29f-7595-4a6c-b2a3-e91ef053ac92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49daa204-a7f5-4eb3-86bf-677df62883f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f1e85db-614b-4e9a-ac03-dc3379621781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ab6de6-62fd-487c-b343-2bc2ac01c7ec",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f6e214-a491-45e8-ba17-3804234b4574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bd5fb2d-cac2-4b38-a3ee-7b1236fcba01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2909699e-8b5a-449c-b2bc-8a434d51f992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0004d539-81f1-40d4-b575-afeb987fec05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f665110d-3753-441e-9934-7e20a79e7d12",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23642eb2-6ae0-47fa-9f39-559a550b43ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0949bf55-2602-4072-9957-bba8595217ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20196d7b-76bc-48cd-bf20-61ce6f4ddb5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c92c44bf-efb0-469c-92dc-dad1c887e595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541042a4-1769-4571-810b-eac5abd98955",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be8cd601-021e-414d-a92d-6b1a3f93b96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "05531199-08a8-4199-a5e8-9e62416c8154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56fcd354-9053-4189-b5da-189573784828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1106109-4296-4c22-93de-b0c990cc4f30"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "16590ad4-ffb4-41fc-8e25-55a4604bf51a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f15f3e13-c69c-4290-bc3a-fe57642a210f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "727a1959-8fb9-4a33-881b-13044212c01a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42d403c7-2ae2-419c-9c9c-75fa6b63acf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ffd1ebd-93d0-4fb5-919f-10f8cc2c7ecd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "719f6ec2-3d87-4eba-8027-ff09760c588a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f2a86d5e-8f18-4fa9-8d37-f416f10d9092",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d57b253a-eb08-4521-9fb2-e8690d2151c4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f493ec9-316b-46fe-802a-6b9230b16df0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "133f8df4-04ff-4f5a-9e2f-063a1d2f61dc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4e9f0474-8886-4a31-8bf6-ce91ec1b371a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c941a281-cee0-4efb-906c-4b1362e9bdfe"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cbeb8769-7da6-4260-951e-ac10d65a9eee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0d946d89-a40e-440e-bb85-7804eb005558"
                }
              }
            ]
          },
          {
            "id": "7c561b87-3c6a-4a3e-a07a-6b4475dae868",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b31d449e-72bc-4f60-9ed6-f25f089e346b",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "c45e5649-0e1c-41de-b713-f6481fbab053",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23abebaf-ee32-4eda-8c65-e3841d57ed9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a8e65cde-745d-46d6-b5d9-00e62f666b9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446d1326-a801-4346-a833-c3b123cb5df9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "135a3578-25ba-4300-bb78-0ff4831c9caa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9be5e4b3-8aab-4eff-becb-c96960c4fc76",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "40c47813-bca9-4a9f-8645-1e2f33c6d285",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b6d9e822-094b-42d0-895c-11a2befbd4b2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12ee086c-fbdd-46c4-a9cb-ff90ca9b56e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1e1cd34c-cf73-4f43-b053-6ebc9936aa49"
                    }
                  }
                ]
              },
              {
                "id": "471ab119-592d-4f10-9f5f-cb75765c8715",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "76d76c5c-f5c7-4f9f-b280-24d986f20cfe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2b191729-0715-4b44-8a29-1cb7c17887a7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40252ecb-ab83-46c2-b93b-c620b61d3c53",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e0339daf-9a41-4d66-851e-76a0104fa6c4"
                    }
                  }
                ]
              },
              {
                "id": "991010f9-0d19-41eb-9e8c-8f91ac7acd66",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1016b222-45dc-44d3-afdf-a830f6ecae60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "69b912b6-3bbe-4214-82e3-3371ce51b8e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69f39c85-cab9-42e0-87e0-3da98701507d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "778d4653-cb1c-440d-80a0-b5e8e1bda303"
                    }
                  }
                ]
              },
              {
                "id": "f069f77a-c029-41e3-ad34-14d93afc6459",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b19390b2-dbc9-41f1-b41e-f6e068d86bcc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "356cd7f9-bd26-481e-9261-47d8098a0c8a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be87aa39-771a-4541-a58b-bf25e7d504b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "33c1d5a2-35f4-41e2-a5f0-2124329c83d0"
                    }
                  }
                ]
              },
              {
                "id": "e2a435f3-ee14-4608-9e1c-e866a0e29287",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "789df4b4-9c00-40b2-ba7e-42f3d6600a69",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6f851a5d-53db-40ec-8a7d-09770dcce115"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a76f9752-8b6b-44aa-a276-ece5c8c78818",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0d227a43-9915-4218-bdf7-35857776befb"
                    }
                  }
                ]
              },
              {
                "id": "0be3b348-4d18-42d7-862f-37cb5f0f3c5f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aed1cd08-d3cd-485f-82b8-3d8fa14d2252",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "64384782-518f-4876-85aa-fae3c614018f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "feef6b56-3845-4795-91fa-4cb0a556a0cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a70d0c7f-763c-4f14-abac-bc286e12d18a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f458a731-f5cd-40b2-9ab4-c17265a728cd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "425cb2e9-d33c-4d91-ba3c-3bb64cbbf312"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e1057fab-2548-4e14-8e46-00151bb686a5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2f624216-4e96-4d5b-9149-e64cdd63d6f7"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6fa59621-94de-46cc-a828-f828068f4118",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3b753f54-6308-4813-920b-69cb5306c43e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dab0a08b-ebbe-40c6-a3c5-0c5c4934d05f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ce863c5-8f63-4fc6-b4b0-ab8d4edc3656"
            }
          }
        ]
      },
      {
        "id": "0d3460f7-c4d8-4799-be29-5964b9ba6561",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "577caee7-88f2-4d37-a12c-a7bb7d8ed4d1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fb650a5a-af02-4d5f-95ab-c3a4577e7de4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6a72d0ca-bc87-4781-97e8-9c5a45159e1b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80bc3924-e6e7-4c3f-bf98-ad11c65e95a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58dbe79c-b2b7-48a3-8eef-da0541a6baf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "665c6684-3013-4542-8f08-7ee6bab4c7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d513a994-5b73-4ecc-bbbb-9c9bdfd59d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ecb5060-a8c7-49ed-8132-9ba3ed74eaf1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75490ac9-cff7-4731-977d-0f9f038a7e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a65c0dbd-d083-4860-8324-bb7f6e827aa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc60364-1650-44da-9c2f-47db32567000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "341776ae-b156-4150-a8f8-afad8ae90d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bce37ba-ef62-4ee6-a393-f5184e6f56be",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e157a7c4-16e9-448c-911c-a70e35423a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f8174d6-accd-48cc-91ee-28a4001df501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb5e085-a1d1-4370-a2e7-c3d5833af0a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "50aee86c-f1c5-4120-ad9d-c3ab8cbccfd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3292c6bd-6add-4e93-9b8d-5822f29290be",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6030be95-d95f-433e-b0b7-9dec9e9320cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6be80db-9cb3-4058-ae74-4545e471ae44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9073653-e148-4f14-ba47-f513f33967c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "71302859-7741-483d-ac4c-1dbd4dff8ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b3cc3c-dce2-4ba2-8b9b-c0052f95bcec",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece8b44a-26c0-4ba0-be5b-b6656c28836a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3358ec40-7ae8-484d-9410-22488dba6262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf2a98f-21ae-4b72-bb19-7c6b67bfb156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fc37ab3-2223-4e60-80dd-8e18d1d9e4f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064b832d-7018-458b-b331-7241119240ef",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79014e86-1223-440f-b168-738b38117a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92e54e8a-a381-42ec-a5f3-51062ef467b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b99f25a-f7a4-4747-b052-f458c9882ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "49424e30-9123-4dd3-af69-88a1a07167e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769132f0-f003-4172-9755-93a4d9485339",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb46aed4-37da-4f9d-9bc4-2ddabac1ccdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e177a02c-7acc-49eb-af5e-933ed6b79a4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e8aee6-7fb6-4ff7-8585-39373fe74b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "39b0ef73-07b2-4ff6-9711-6c549120d963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ccb228a-1057-4ea5-be8c-2790dffd43c0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d20c2a-501e-442c-9880-7a26551fe0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfe3a531-b040-4f93-a2c3-4b943577c19d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef69ace0-f143-49f6-baec-f92a91118f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b084f9ae-35ec-4f6c-b4f9-a1932dd6fe05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c5da45-7785-4473-90bf-ef38288446d7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7af6a79-9f14-4976-8a34-a6f8a2273246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4c812a6-e35e-43e3-994a-160361f20ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc6c8dc-abab-44bc-bc53-3f3d2c5dc9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3adf003f-d880-4a64-9bbe-df4527790232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6faf6899-d1a7-432c-ac5b-0849b598c04b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33c3193-8236-4f14-bb48-4f1c8d1224cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a38f375-cb90-4fcd-8c6d-6bcdd5d27002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed75a457-3e14-454c-a3c0-27a0fba28479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad6ce6f6-35e4-4ec7-9169-de6357c1b3e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d5f517-d997-4f7a-813e-934fac788bb1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b43b8d-ced3-41c5-86a9-d236ef91872f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6e5832-0ccf-4d43-a0d8-2a66680c7da8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262f71ca-8fb8-4465-9485-df084a4e2ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b2d4cef3-aeef-4be2-aac6-6b2ea7e6e197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab1cb6e-6e31-4110-9a58-9954d1289019",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "573c6db7-c4a5-4e6b-b97c-99c1d19c537f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e18fb57-5f6f-4ce5-bc62-275848ec2381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e463f8ca-85e0-4def-b701-4ffd30f8af3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db74cb70-4ecd-4741-92df-e68347eb3b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0fa5adb-d60b-4589-a3e1-c92eb62e6a18",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e99886-f645-4894-915f-6b7cf905cb69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6d18976-a0d0-47c3-be04-f705be535630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78aedd52-065d-4a2f-89d3-8f16a59a01be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a457a25-1bbe-43e3-9824-c672cd7afa94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a892eb83-a5db-470f-8cb0-21e281b27b85",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db7c744b-3f6e-48fa-88e6-926a03aebca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6bf5bf9-e4da-4cc9-9381-d79737ea41fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c500d883-f673-4eff-8bee-25ce60ca2b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b20b1c7-4d25-442f-a38f-42cea51cc13f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d300399b-d27c-4be6-840c-a2040b39e9c8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c619fdca-79c2-449a-bd54-990368042ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be150053-13cc-4245-bd19-14ee4b0abec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15985c59-885e-4210-a63f-eb2747797554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d26fc7f-26d2-495f-8316-d7fd0272ab66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c4f2b5-929d-493c-ae83-23cb374a85ae",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3611ed7b-2535-4f93-ac5b-346ad2992099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd4cdfe-79ad-40c2-a909-d92d13b5118e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afac4bb8-a648-457c-b865-5b4a4850cfab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bfac133-f5a0-41b3-8cd8-2033a5bca028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a112d71-e148-4bdb-8d63-a6fb667f7263",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e611e3-f70c-4d11-b464-f1fc5ac386e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edb0b28c-63f7-493b-8855-2815d45b1cf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d458e1-ee35-464f-97a4-1378dcf7e9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6985a252-d66c-4e2a-9e8f-34621872134b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccce1894-2d48-4542-a125-57aecf869c9b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8aa1b2e-e2cf-4b54-a295-1664382a8681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "360668b5-e491-48c3-b1bb-55ffd0789bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945e2011-e283-4512-ade4-41246465ec44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "83ac78fd-c940-4a3b-a37b-d79957c0a918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a43b975-d8b1-4658-85f2-e568199dc873",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63731821-5274-4313-8b73-6afaeccd831a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2669a364-3733-474d-8931-057f2a916628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0647c8-f767-4d10-847e-27ee331ce36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac42e2e6-70d8-4c97-8d68-276b71c3c089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d3c3d7-6027-44b4-9c05-5d3d73b8bc59",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc81d959-e4c9-41df-9f88-109bde6d0d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a801bdc1-ed55-40e9-bd84-c01b69469c47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f27ab2-90fc-4b3f-9e72-5075fdcd9b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07bd5196-2f9e-4cc8-b10d-4b59de839132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25ee20f-8904-46a4-989a-10b4d54996ba",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98584661-9438-4965-86b2-6948f670ffc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daee289e-e2d4-494b-a16f-89ec7eca991e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05771174-7c96-4662-8801-44f0d71e2c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9395e10-b029-4048-b96e-484204762799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a72d54-a0a0-4cd1-8600-bb59cdfc9b6d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f535e3f8-2f32-4371-a56a-3853534f7402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc49411e-4b42-44fd-a002-e15f1d861b76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e58f7a-57e0-459d-acd8-48c6e1dd39d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "299ce059-4af1-4479-bc51-d34b7dd3bb43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad0f3cc-6e11-4eb6-9533-c813392b6f56",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "512d83c2-4f69-4671-9095-1829a34bc3e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d4d9da-cd72-44bb-8a69-d5ee02bf5578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc262f4-c291-4e68-84dc-5ed3295b6b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e161b87-9f3c-4168-85c0-54cf31f85c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02954027-9d3c-49e1-95de-bc9944a12038",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e0b03f9-f46e-48d5-8ec5-39c0176dfd90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3b25576-f683-477d-a864-85a30333ec58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b32bffa-baa3-45f0-a916-dd7b39621d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6c36ea8-4f24-46c9-91b2-aa2dd9f3101e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428b69f9-3b0f-4c7b-adb6-1d154f48115c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83c980a-4b96-47ca-8eac-ec08486f55f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4d0f5d1-0249-4917-8fc6-80faf3fb6e64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7847e671-b5e4-4e1b-8a00-e66ae5948dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aef1e602-6131-4411-bb9a-9b4df30f326f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c34a182-115c-495a-8c91-b7bd4d2e5d04",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa68a3a-f0f6-445c-9551-4aa968400586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "108f70a8-a175-40f4-a297-6573612a7f51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1104309-cf76-4eb7-86e7-d97d01f81a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d88c568-e8f9-413c-8fea-3a3f12bef8cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd8c9e8-ec28-41e1-9cbb-e5096b305544",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8663f8-42fa-4212-9b26-4edaf3afeca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a11cbd26-5e7c-42a9-aa52-a2d235588ae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2fb1cd9-5976-4b33-abe7-844a867ae54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "640c3c09-cdb5-45cb-a3d7-a6e3a7402b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b034fd7b-f685-4205-a1e4-6a5d0c8b391f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b01444-eeb6-4681-9a29-22e3c2b30826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea725145-fd65-4b84-975f-87d0211062d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca0d250-520c-4dcf-ad94-1d91aee2ca10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9115e81-7b37-4812-9233-e16f50335f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b606388-9431-42a7-9e88-5486868d4df5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9faaf5-2741-4563-8680-5c60582c26c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a810bc08-5f7e-4928-913f-8b81ddda8fd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f4189b-eb8c-46f1-b8c4-0db3c1bc3363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02e484bc-98b3-4233-ad76-cddef41ef427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71324be3-3fea-4f54-9bc0-b6c9f885421d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9178b79-234c-4adb-aedd-eecce03e27bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed33c738-b620-4054-88f9-3bf36f0fb202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86409db5-86b7-4846-8f6c-e217e357f681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cbb99b8-da64-432f-a6fe-4cd9cb2422c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "014a6fd2-cafd-4e15-b04a-ff1bdecd6c7c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f8ff19-a98d-4981-a9cf-fe242ca3dbb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cee22c9-bb1f-410b-bbff-e40a76331264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7620a4e4-34a2-42c5-8458-c731d7b5ecc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f93edd7-cfd7-459b-b28d-9a0b0f5caf7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6693b4f0-9dd2-4436-a162-0f2c8f991f09",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ff6986-d32c-44ff-8df8-c2702b5d7eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dbed186-e3f2-4997-afcf-896b6e9bb525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e17273-8b43-4b31-888d-6aaf59c9736b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd2b5449-5408-4578-892e-0e21129a8c3a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "49ea96ce-0d91-4315-878e-16e346fb2855",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bd801445-bf97-42ae-8d0b-88e1e8a8980d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781a0f70-6b45-44b1-b73b-d583b756b96b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f8b9d390-38c6-4dd7-bbe1-22398340f216"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "980e0405-2d02-48af-b559-f2f00f75ffb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ceace939-e127-4f36-9310-d7b8679d5ee9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "218da684-9975-4c6a-a753-6ce4f9504a88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6278d81-21d2-4ce2-8e7a-d61e3812431e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "854a05cd-f86f-4960-96a2-ec84021b07dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b1788cf-39cb-461f-85d5-f33f27305ff1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eb16d299-f6e4-4b27-8c79-31b45203f4f3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "28d8fece-30f6-4367-922f-0f7a1afe860c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fa600ae2-4243-4b91-9f46-56c0fd0c48a4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c0007c33-bea9-445b-ba4b-be3fc3c25535"
            }
          }
        ]
      },
      {
        "id": "1953a87f-93af-4700-85a7-f9da4e1f6f91",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "73de8d8b-276b-471d-ade0-e555b9e5af87",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fd18c133-9285-43de-a21f-955549c6507b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9f2d2fcc-c430-4e95-bf92-2e744998866f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c91c5e-fc09-4f99-8a7b-636df7add652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b1f27f0-1f77-4a25-95b0-f75c5517321a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900c6103-15c5-45c5-b938-7706641bf5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9866c57-e625-44cb-badc-ecbf374f7978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d07094b-5df9-49d6-91f4-0ea8ad82c8d0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5602d738-b468-423a-8e77-89895f4a13a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "043a4add-286e-47e5-9f23-60a642563d73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c9f222-9597-4cce-9a57-40df54a101d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e844160c-1297-4549-bb53-1257f4fadf4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc38e7f-bb20-4e05-bd42-5235f58fe87a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289e23c0-4c45-4850-81f7-28bc3b5a53f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63a6ea6c-5abe-4e8f-a963-958ec83fc31f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb30bc9d-f1bc-4ed3-a542-5cbf7f24eb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b77ea26f-0619-4539-bedf-80091667adeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0b202a-5159-455c-bb36-e81844ba599a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0e58af-35b4-4a7e-827b-ed24c2daee0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4afb89b-d05a-4d21-bf77-f02a4f5b9a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ba294d-9a3b-42cb-94fa-675545507fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4036d1c1-9c63-4382-89e9-909bc2ca19ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f331328a-ebb8-4a25-b677-2f497cbc6da3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6f8f51-ca0c-460d-8544-c2497c0321f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65a8861-0354-4fdf-91ab-62d16335a838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea87ecce-244f-49a5-bf82-e2f3437b797e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e920657-ad81-43b2-9011-9fce9942e809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "108a3efe-543f-4e83-9931-b069f7155729",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2588bc5f-f92f-4be8-aaab-11f94447aa0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d71a4112-7e1c-45e8-93a0-7ff7f42b193b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a65e1e5f-e74a-4041-b4e9-079ad64ddf38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "34f804e7-f3ac-4f31-b7db-8381a10a78f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09e8377-cfc2-4b61-9213-45f693fd9729",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b35456-5ab1-4088-b861-f243d9936125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "952d97c2-0282-470e-a4df-9880d8b491f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb4fcec-0509-4e78-b591-297313f4925a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2275a38f-1d03-441a-8ad2-cd6d0c8c29e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5fef4fa-7e04-4ff9-8c9b-0f0a12e29572",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff4e25f-2c48-4f43-996c-0e1464ee63aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f03ff389-6329-425a-b942-2d3ec11a8897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b1ad5c-9214-4063-b731-5958d78da884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f86fc84b-ad14-40b9-ae98-ead43bb9b432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43890bc-b196-4b54-9df4-be1b263acf5a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa8974e0-87f0-4136-b90d-f7decef9ef81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6255519-b272-46ae-b80b-3536f35aea73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64abc4b-1657-40a0-9aea-fef114415136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "93238eba-7a51-4c88-9138-41d615cb451c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2154a4-cb71-4eb1-92aa-334b74e34664",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e4892c7-d9fb-4675-81ae-80c5fce971da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed7ba9bc-3222-45a5-b596-57571b8d39ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b965cbc6-b865-4f0e-938c-a4329e2d1afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbe2c028-9a54-47a6-8c26-18752ef2865b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf3917a-0044-40bb-a5cd-23aa556f2bde",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0392bcd-ae6b-4b3c-842a-a07d4e719d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3230cc17-b8d6-45f5-9845-e4a5ac7115c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc683ec3-85b7-4cef-a4bf-3e9540c6790f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cce031be-ae66-4b0b-9f18-02b71d31e04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90db390c-9bb5-4c9b-b9a5-eda1d0cd7fc7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd88fd7a-8614-48fc-af7c-8ac1a43e0b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55d807af-fe0b-46a1-926e-8799ddf38c78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a43522-1081-4b5f-80ca-2e944e7cf028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "75764f69-24ca-49ac-b234-fac7e486a649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b497230-41d9-4898-b4bc-caaa8ffd3e3a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e98f98d-e4f6-4c96-a620-9ae4adffccaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5df9581f-b745-49c0-bff7-ab42d1e2c557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4abf4b85-7f90-48ef-bf93-5b6a89dbc591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "56c32ba0-a43d-4ad1-ad29-956e955a679d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e80a0d-47b6-4b0a-93a0-2ed5cf4f2ed9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1926c32f-8c51-4e72-adaa-7829b88710a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2ecde3a-470d-4e3a-804b-66b0abff547e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91594de-0136-48af-873d-4e7c3c75eba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3db41516-ba59-43c7-a765-458d1d2340a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b419a3b-78dc-4d29-8f02-7ace45501b88",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d292ff1-d641-4f16-aa6f-3b16a0d2beb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b86f4ce-5839-4247-9cba-453a49212cae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db7d03a2-7959-45fe-9c01-4f0d359c73af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "01c74ba5-b252-4c07-a04b-870f5623ad68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1fe30e-a47a-4fea-9c75-124dd63a2c84",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e06bb02-bd09-4545-b6ab-f06b54c51c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "136bec85-7467-47e6-9b0e-ba2c3daf49c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4772c9c-0294-4a49-9711-0f7220ba3a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2397e4a3-5d55-4923-ba97-78855c537024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8989c6b-7ebe-4dbd-91b3-2f24fc8723e7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce45cdf6-c98e-4987-856a-618d44f1d3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b95eb93-e436-4f73-bf97-a9903e2cd9e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf65975-9c85-4e97-a83d-3a6b95e51207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b7e947c-14c7-4e05-9493-d32d13ba56f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8453a47-71ae-4f98-895e-557f52b8adee",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53499284-408a-4a46-8adf-3d5fe1f2652b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec1d80ca-e2ee-47da-a426-f3625106f987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4240c6-402c-47c1-80b2-9de136e7cc39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9072707b-6db1-4ae0-86c7-f42260b070a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cafd067e-5d75-48d8-b308-a867f7a149d3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71ab9db-b220-4005-80ae-925d922b0b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a24cec6c-9505-4fee-a7d0-82ba5e491f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2b5e9a-10cb-4403-93dc-1c66ac396e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5db3ed38-7058-44fe-a10e-df25a616dc8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075c3f8d-c8fc-44ba-94cb-c514a04d32c0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57bd993-c4b1-41c9-aaef-8ef6befd18e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c44b7c6-b8a9-46ee-a660-85c4fe4f5736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4daab3e3-009e-4982-8a1d-3786e45cf615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0879b972-fc95-4db8-8efe-aa6f297b36eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ea3455-9253-4f85-9a14-a9869de2c43d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62b07f0-06ee-4397-b246-3439d9bfa660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c06f80-fb21-4b33-a3aa-7e8b324492c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ad9b9a-8233-4b8e-9451-529b41b77354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0e65b61-332e-4a1d-88ef-1531788033c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581cb64b-6143-4345-b30d-082191155e97",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec703247-bcdc-40b0-b492-4fe394fc5fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "223ff926-42e0-45d4-9c90-d99c0a5bdc52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c89a9a-f556-4179-bbaf-6b5d814d4915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ebdc513-4747-4909-9c44-96c92fb94c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f6664a-7dd2-4fd2-9136-84d300d15947",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b8c6542-345d-41f5-bb7b-38e21705c8cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef0a1517-66f9-426e-9853-5c1a48afbe1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1101636-9583-4811-a0ee-c831349bd6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "686ceb84-5af2-48e2-b9cc-72623af4c6dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45125c5-c934-4273-bca2-ffecfa2ccd35",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02802a03-635f-4844-9b0c-2c095c66851a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e5b41f-cb28-4d4f-a9b3-00dd8c086666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1bb6cb-e89f-4171-9af8-8f51ece0a0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd25a7d5-a9f3-4911-8c41-8fd281404d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3ce66b-ba6a-4992-b39e-eb7a965f10f5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efaa4113-c377-4067-8095-c4ab3e691a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffdcebba-6f90-4481-9d11-1fe3a3dcd0df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e755e30e-5c8c-43e1-b5bd-0cfe3d276c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d55cc474-76f8-4117-992a-9ee1e4b6db75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc892050-f4ae-4d9b-a97f-588e9a3f5939",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8010d94f-b8c1-4315-8929-48d76f84083f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfeec402-94e8-4a4c-9e3e-586d0d1d2224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67fa95b3-1158-4d90-808f-94b7a50dd3e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db05ffb0-b136-485a-b00d-43841cdd422c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3285c689-1264-442f-83fb-b706e562fe2c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f723abe-8e91-4942-95e7-36f0c62fe8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0c525dd-e2fe-48ae-bbb1-48e56212706d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a8ca78-f5b5-48ac-8a16-788950573abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a130ab44-2d41-43f7-927b-c15e259e7ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f73749-c3e9-4dd0-88cb-5cd257226f27",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17fab8d2-699c-42a6-93e5-b0fa3d32fee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ade11d1-ea13-486d-a66b-acb708e0784b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca1c937-22c0-478d-8c3e-18af4b1e3c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78f3ac7e-fe31-4515-bffc-2eae715e5dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120ae889-c77d-4265-9091-b9f3bbbd407f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b82d070-a12f-4e2c-bb0b-a2718f1fbb5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a69c1b14-8832-4901-ae98-697be97d5b51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9ef72a-6ff8-47f9-9e75-0039be1a6ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a252137-6736-49e4-beb7-4cc493b56959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "099dd553-5f4e-466b-bfa6-b77d8e23168e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beda76ac-9fe0-479e-81e2-91001400d23b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "600d6db9-3fcd-4577-a49b-70c6a7724b91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f60b706a-803c-4b12-baf4-3ff05e616ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c22c250-daae-4012-ab94-b94e0c9b8825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b996f12-f5d5-42b1-b69a-0202a7ac335e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80f9f11-8617-4d79-8979-f3df213fec99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db0a54e2-cfc1-4253-88cc-0285953d2068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd473f1b-e794-4c45-a9fb-a8afe8b4207a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cfa9145-ccc3-494e-b600-7ffb1e7dca76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83fb63a5-606b-47a3-a385-cbd6ccdf3b9d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "552fc4a7-1ba1-4315-ba5b-b0bd891f2881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a7217ca-be59-4ef9-ab5c-2cb13122d6ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ae0848-a98c-4869-92c3-0048368decb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df990b31-9ff5-42e0-acdc-6cf7ec1a4f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c378bda2-9d35-4682-8bcc-dc56ed7d16fe",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b630310-96e8-47d4-ac4b-e8ded30c7770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d4d2176-95d8-4888-97ba-f2707fb3adf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595a8c85-5b9f-4713-a2bf-126d8914e6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a095fb0a-fa28-4b37-b71a-f32fcccdce69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5556947a-afe7-4b7b-87ca-28dbb8db0790",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "832d263b-0a94-4afb-9156-e75be6faec7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c3ab23e-c95c-4202-9cc0-857431ecf882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce1c47a-a6cb-4056-bd4e-c9b02e0b12db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4cf1482-7efb-4b27-96ac-80527d3f4c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca9878f-4ea9-4f54-85b3-bc538a992bc4",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a479bd18-5d1a-4698-aed2-2288c8e649a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e94862a-c28d-4636-a651-d6fd8dff92e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bee5072-b3d6-4fa4-8aa4-f3159dc12d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a5db38c-2a1a-442a-8cbe-8940bae096cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585d346f-37d5-41ac-af7d-e59ec63e3ac3",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8677481f-3ff7-4f39-ae60-150a56efdb50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e4526cd-06c4-4ee5-b5a8-f905e01b5dea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c6b7f5-ff40-470e-bfcf-404c690cbeb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "815fc775-0678-4c78-bd4b-a4e19f4143bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17dac4c7-7eb1-4318-8bb9-9601556772a6",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d825b5-a189-4d54-8e9f-8cd5add0413e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7609044-6281-4673-bd7b-211c561ac17d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ec70d0-fd50-4fca-84e8-addc02563919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "879f5aff-b2e7-4a6a-9d65-f8c321d4b32f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "793a3dc4-b11c-4e05-9075-bebe77982dcd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cf432497-182a-4fed-a932-4ff19fe08566",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f355d458-53ec-49d0-8af2-a18f8cce65de",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf473a1-479c-478a-ae81-faff470c9733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f07e72-a859-432c-adc7-00b548ebc061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74b92ab0-5911-4125-bd77-c260d0eca0aa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e7e49eb-7d79-4fd7-8c2f-620bcdd12cb2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e580066f-8f24-4b49-ac97-858fa17c7564"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "158698dc-d96c-4620-b20c-efe93896fe2d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bfae50cd-3392-4d91-80cb-ae92b41109f0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fbeb6695-98c8-449a-8fc3-b13d2b81bceb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "02328182-30cb-49ac-b918-b7fc266f04af"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cae90bf1-4d59-4f80-a697-2c98dd9ce4ed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18db6b34-653a-4db9-b6d4-2421e822c932"
            }
          }
        ]
      },
      {
        "id": "008952b4-33c7-4009-828c-ab6b0c8fae2a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d7468655-f7a1-435a-954c-7b7a05a4fe0d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4f31434a-bb5f-447b-9376-f610167bdfa1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "319148f5-d02e-4c44-b358-5f0b1abd22eb",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79be5f1d-674d-49fc-871d-6a0b62a196c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d75b748-5a34-47b1-a556-ae3bbd140fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d95f509c-4f67-423d-9c63-c8b3cb74b2a0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bacf22dc-195c-404a-8b8f-92bd31d4a2ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "477f1204-72ad-47db-808b-39450063e16a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0465fbc-1c5b-46c0-a4b3-c47ce982c5ba",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82840b7-6b81-4f54-b1cd-3ad6dd05c07c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b329d52d-5e08-4616-8074-bba8b8a2e02e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6995253b-de7e-436a-be96-b91f1fc46f9c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c755f906-6b1f-4ce8-910f-ed25857976c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70964e7a-fd7c-462d-8375-2d86a4fda653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f789cc-cc7b-4fb4-9173-5b0b4dfa7b77",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3291ea-2fcb-46de-9ad7-37e3330a28ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a477103e-3507-4759-88eb-5a68686c21cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340ca123-fb06-4b77-945f-d9a7d88930c5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52023631-61b9-4686-8984-a01bce64a432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c31a3d4f-c49e-430c-9576-03b2abb13ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f0dd2a-ad8e-4dcf-b7f5-102d83c8e9c9",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27f3393-a19c-4959-aa8b-73f9e3e46ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f085f6ee-f417-48b8-9967-6b22cc09e132"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "654345b7-7b3c-4d94-9c89-687c6f0b4ea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83761a2c-a587-4a84-97e3-94d68f764d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98357437-133c-4665-987a-609080ceb432",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675dbe00-6653-412a-a6c4-3072fca79d2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6390e8f6-f926-4114-bee4-53c50adca1f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f07eda-56f4-4fe2-ae65-73d3e3f63afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "417e3b15-b8f5-45c2-86a6-0b8477574a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af6ff80-4f49-4d06-ad2e-cc2e1db8f2bd",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d185f4ce-fbb8-46cf-bdfb-a67ca35a68cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "062a7a08-0e37-4201-bde8-9b5a521dd7fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f30fde-c396-435c-a2da-d18aaa311f39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33498211-a331-44e8-b573-20da6350676b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db63e949-0c64-40e9-b9e9-7c60b2ab18a9",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f72ad53-879d-4578-8934-071d9d0bf765",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c492700-1a14-4aec-8de9-e68c73ba562c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b20d837-149e-44b2-b5bd-3b9e305312cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7234a7ac-5ba9-4042-b90c-ebef56605a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee8f4a5-6b99-4830-97f6-192cc0f345d8",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d96c3a7-40e7-477d-9dd3-60104bf23d34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24640167-7649-43b6-b856-43e616a0d98f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e441921d-7376-479e-80f8-5b01bf7fe232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed093421-3938-44fb-a936-f18e48ce4c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f7c355-cc6f-44dc-a10a-838a81ef0dcd",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44ebef7-afb9-4ddb-bf61-00c60567e59b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "583da414-9e82-4a78-ae4f-d4b98527ded5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f705446f-9497-426f-9018-47ec97d7db65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28ec2635-5d18-4a14-920b-e973c2c76b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6437338f-d180-4e55-ac35-330267007fdd",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff00c3f-c5e7-45e9-9400-0248e18f6340",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05548d8d-6ee2-4faf-b005-0b29480f3477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "956099ea-a8e2-4b20-b812-8fd02cd55eb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f6513e-e9ca-4b49-b764-c9a9ebefa0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd0570a-b944-4f34-ab98-61e629ed6ab5",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aaa2196-b41e-4666-a689-53f527624cb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9accffd-b968-49d8-b06a-8bb39da130d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "103b3c0d-cc5a-42d4-a80e-e57e37a1746f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dacd48e0-2131-49cb-adb9-dc20100bbb2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d592ac6-dd65-4fe3-80cc-d4022bb4e3eb",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62392a23-2014-475a-a2af-fa5afef9d304",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9034eb46-53ad-4ec5-99b1-7ad3f961b585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08517813-306c-4ee6-b8b3-a7f72ac3017b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1685f843-b3b1-4f28-93f6-37a710bf3a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33197f1-f810-4a37-a107-116dd408129c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe79df8-ed81-4332-a488-04005251c95d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae946031-8476-497d-92ec-490825f07890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4992a5b8-1ca2-4f60-8c52-ae994d45f397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77372fb6-fd56-4472-8c8e-36a426035611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd466a0-416f-49f0-8dca-403116e63211",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06282ff-f95e-4bd0-92d5-b8099fae2182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d05aa9d2-ad38-481c-96b5-e0f603d7a9b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3632a2c3-2d57-4682-92a5-e13116fb6789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce31344b-22df-406c-ba36-4358d6f98712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f8ea405-7e3b-4d66-a9e8-985840f72011",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6cf849-59d2-430f-9991-a343f56da4f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a57f50b5-314b-4fb2-b357-c6b94ab0f62d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0396df4b-8e55-4593-85ca-41d4b2670cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60b26c61-ee17-4bc4-926b-c0054595003a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f88adb-72d5-4691-a61a-864c1f258394",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0251077f-4bb1-4c40-aebb-c67a32e07293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7b1ac95-c98a-491e-8594-e45046254e2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b5eb1c-ab82-407c-89ec-e2d211d1f6e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3f7dbdc-9b1c-4f1d-afd2-6712a9636afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653745a7-d722-4eb1-931f-7ef89242cee8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a6b34d-c622-4b22-aaf5-7b413a281595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66235019-e54f-4002-84b4-2502a70c8aef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdcc4dc8-3e3c-48f8-bd67-2594378b5d57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa724df-b793-48cf-9f04-10f4d8caa782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4becb1-969b-4e1f-a538-aa0fd74830a9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f81451f-4511-4501-b24b-a7ec5b4679f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35eeb2d1-5370-4933-9248-69c0ad234559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c091c2-577e-41fa-afe0-4863a7cbe0d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f2725a4-4d05-4c8b-bb07-0f35d8fbf714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92f3657-48de-43d5-91ef-aa6c6401fcc8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79bfc196-276c-4825-8bba-287ab422884d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aca981d-2be8-4832-833a-7152462cd13b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ecb3a6-606e-4d06-a434-0386c802b483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1793e36a-9254-413b-942d-ff45625fd531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0f11d9-bf9a-428d-9401-41c450f158bc",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c59e90-be99-49c3-b931-1cd631533ef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d767c40a-d73d-4c80-ab8a-60967c3cccf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef329505-92a8-4d7e-a164-ce5f153c8b61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d18a304c-e58c-45d5-ac9c-82e90fc5eaa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e135d82-0e03-4fc2-93d9-7f6f415efd81",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1390ecd9-5a22-4646-9351-e7b05f0e1aca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0c0ed1b-4f98-4887-8abf-3dc9e0a425c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d7c0bf-3dcb-42b7-a89f-7ccb1e4bd2b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "511ab74a-5e46-4d4b-9335-5f1c7dba52ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd60fde-a05b-47e8-8c43-bd3aff8cee7b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ca62f8-afc7-47aa-b97f-cd2e249727fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33b42429-8d8f-4c51-8552-df2649cd5a43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d75edd3-5eef-43de-b276-c3e7d09a3450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "761a40f4-d463-411e-acbe-f73fa88788ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab97f20-b2c0-40be-aa36-74aedd1d9e02",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d90963-9f59-4564-a776-7e1da2b5520e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7eb52eb-ce24-4510-9de9-dc5fad750ad4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc3306c3-ac75-4bee-bbfe-237b3d8322f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a8b1351-b4c7-4b11-95f7-d507444106c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff3593a7-f3d8-4a87-809b-18cda2f0eb41",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b81d3d-de52-40d5-b1df-219caf9a989f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49c1e1c3-2180-40d2-8ada-5b18451eaf29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a324d1-552a-4675-acc2-e553ca7c69ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8976760c-808c-442e-b84d-989c8c3d8182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68a1edb-1a7f-4b74-8c0b-d162fe711196",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec027cc6-f1c5-4c6f-9420-1d397246ea40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a81e89a-7e87-4fe9-89b2-3685831643e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ede528d-9df7-4ff3-a69c-dbf921c8b7cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97104bbe-cdd0-4c4a-b4c5-533f864fc3e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e3d104-8fb9-4d88-b0cd-d98b8fb523b4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c0d565-2d07-4177-9e57-0dc3aa3c22b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a36e9e8c-c614-44c9-a0eb-42e4a5d9e48d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d00a5c4-4336-459e-b7f6-78ed8703e68e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "406ced3f-36a1-481e-9061-afd106c3d0ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb014f5d-f2cc-4e56-9616-8d3f66214368",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b22456-51d7-4327-a0de-1c09f9f1d265",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39520d34-f913-45f9-b11a-32b9b9f3fb17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b1a95e-92b6-443b-b3a7-5a62d2d3ed56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fccbdbcd-0945-4521-aa44-2f57df2ec7a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46742d26-ca4d-46c3-83fa-c18e3a3164b7",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332cfa55-93d5-466d-be98-a744cddde651",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ca0ffa4-73ea-4394-a3ad-88fcb38bf424"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "883004d7-0229-453d-8ebd-80f623a56e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf0d3b6-fe11-4573-b483-d2c97554e4c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b7259e-613d-4080-a469-edba569bd1a5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6216ba87-fbe5-4542-b88f-35c3f13bdd62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10ecbc6a-f04f-44f8-84b8-ef8ecdfd4ad0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e4b2f3-1d1a-4348-8c61-214bf21e9adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6801a03b-48f2-40e2-b6c7-c232dd9888d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d7ffc8-48e9-400a-8b2c-d5457294be88",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31cfa274-175e-4872-a760-418dec2a527c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a7b8e12-0567-43b9-aaa0-3054ad7c7521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afaa70d6-3c6f-4d13-aba9-2eee7892b943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "191793a8-e936-480f-812f-58291c3d4a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e14b9e6-56f6-452f-bbed-803e63ec7bb6",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "135b21cd-7244-4161-8316-7d04b5a6b601",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1b246cd-9cd6-4c51-b672-68733ebc04f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1adb6d-4378-478a-a6df-a3e3d7639994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe9a950a-b599-45c7-8eb4-29f88672da15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a4a99b3-3773-4139-8383-58cb25462422",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9e0a26-2a1f-435a-94d3-ff2c6cca4f70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "888b72cb-3041-4ecc-9aaf-438e5c5a177a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c52813-a847-4e02-bb3a-8c4cd9e55afb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce11fb39-73aa-463d-a685-10c8c0d06f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612342ff-f59d-4c6b-9c2a-ed867d037176",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a6adb9-c590-4e11-8702-eec22f13d5a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aeae546-d841-44eb-ac58-6414a23911a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "400f464c-b4de-43ad-a20c-473d1696714c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e376b40-13b9-4be4-873f-0b6294d20bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d66bb9-f803-4f0b-b595-63606e068c21",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45a949d-60ee-44f9-9176-10248b7a55c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd8b7d64-a285-40e0-aca4-37caebafe2fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55bbdfba-652d-4482-8b7b-8f88a85cb1da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7698d088-0a00-4fc0-b8a2-a1d7c831a4e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dcceabd-e1f1-4bfb-a895-2ee1aff0a83e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7381a3b-c5aa-43f7-90e6-f1ecf5080a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33cdf98b-1843-4eb5-8cf9-0fbb6c180160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cbaf5d9-a0a4-434e-a8d7-8ffd0071946d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f744fd6b-558e-4a56-9408-62a3da4e7b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a05dde3-dbee-4317-8497-cf701acfabf7",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d45a3b9-d596-441b-a15a-86a58dc0d3a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0376f056-7f97-4357-bfc6-d7b617579c04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd7e44f-70e4-46f8-883f-dedfaf1b8d17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a8b4444-4715-4c2b-a6ae-76838ef7461f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6035ef19-205f-4bb2-aabd-b9b172efa8d4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b18297cd-011c-47db-b616-af7617b7d733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a1823c6-eaa6-421d-b194-edf61bcf15d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a7702d-cb7f-4abc-ab55-6e703fb0b13f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "828c88b0-a07d-4ac6-bff2-6ee0f944b200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c38a93a-78aa-4b4d-868d-20ec1f87b4a7",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb45208-95cd-48d3-8107-34ea5499ce52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8afbf763-1b06-4a06-9028-1a24be2ce119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "842d47bc-0f69-4b7c-935b-8490cf3ffffa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "573e71e7-b30d-4dba-8d1a-49f06aad09ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784c2166-5edc-4b3b-ba21-b779298cc769",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b558788-9223-4e82-92e1-cfafa9b94965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27e7c17d-e05b-49ef-8d44-bbab0617fb58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0690ed7d-9eb0-4649-8270-81b6ca328be6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a7b3e32-1f22-44ed-8306-990661133157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb524db-656f-419c-9014-94b1eeae5a9c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f689082-06cd-4a63-be63-3b5833be2a1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fde1a528-9c2b-4bbb-9912-c5513169f7ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29949fce-fec7-4466-b306-be93cda54ed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "447e4a6f-76f5-4c1e-a47d-cbccb972a3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2fbb98c-f673-4929-8298-de03e93f2b63",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df8c84f-fc59-4db8-acdf-d440a2d0b01e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0ee5e7a-47d7-4f3e-92c8-46c33b02f150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0addb2e1-47b2-4918-a135-1d7caf518e9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e9e6734-f236-4b96-9694-1ef372d51331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "939ad3cf-db4b-46f0-8146-f6c60bedd3dc",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0959ccf7-625f-4bcf-aa94-78a71d847573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6e19242-539b-482e-814d-fdd46847a0ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa66dd55-9695-4c20-bfdb-55c7bef7318b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70dcea8a-ff45-4441-a59c-96f8bd84a7c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4b76a0-ffdb-4a0e-a647-64001425d9e7",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f959c4-86ce-4e35-862e-8804e808c683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08dd6f41-1a2a-4fd3-adfd-9843db5be8d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14aed3e-48f1-4ef2-80e9-e4879ac761f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d644295-09d7-43f4-bb4f-5c0856bbda7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09aaf252-9e3d-4fb8-88f9-ccf2ea4b1e5d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884bf52e-632d-453b-bf12-0f715281e3b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33498d07-2d6b-4718-8884-fb7d8f982b2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56297013-6233-4690-8e0a-6e21100ee1fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2424c6d8-a77c-4632-a6b6-16a6d564e171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6653c65a-a168-4124-857f-69898209c8b5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef39298-0176-4f1d-98b9-736945c9a668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80dfa363-53f9-49c8-b6d5-5c02fb0cdd2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "531889c9-86cb-4ffc-a978-388c41975653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c6cf2e3-d2c5-425a-93f1-660488ae7037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94e53fa-d896-43f0-9a7a-d75c33ad94eb",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92526aa-b76d-470d-9012-0d487fcce508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52073fab-f609-4ea3-a082-58a331707506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c89eae2-51fa-4c92-9884-7427fbdaa53b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b65e186c-a642-4ff3-b07d-b4d99fd5b2a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634c090f-e959-46fc-aec1-596049b42260",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48dd4e7-658e-4a1d-aada-10b3766c261e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6df1e957-6601-4ae0-98c6-47cbe2bd0bb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72f3fd6-f95e-442d-8748-80581cfac6d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c795ff2-dcbb-4c27-96d0-5c0db327311d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac08a3d0-33c2-41d2-a445-3a81c9b83ba5",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d7aa66-8fba-4cca-8eef-f2ff86cba745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b4347a7-6fff-43ee-b375-3a36f37defae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7318b1b-2003-4735-90a7-a60a79b36ef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f003cd-70ed-405b-9dfc-edb476975de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffcbb624-6dfa-4b8b-a0ca-430f8e456093",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736ec49d-6d96-4dc3-b828-986e60c51b3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bf81a07-426f-4998-b762-b0119d510b6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "585ba4d1-1651-4929-8f79-3a8d19aaf45f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe6c82a1-e818-48f8-8977-2871919b845e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bad652e-3107-4651-a546-42432736bda8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45bfcfaf-d003-4675-9758-709de79d9c91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc42630e-b1fb-4d67-9670-a9cff7129834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc42bc8f-6a9c-4cbd-8d2c-3156483c0456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37e5d2c1-974a-434f-a4ae-aaee66844bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589eed19-e471-42af-8810-d98a9fe4d7b6",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1279a835-1471-40bb-98bf-a42eea443221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a323bebd-5eaa-480d-98c2-18e438328317"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "724b0acd-85c1-4006-82e6-a89002d8e6d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6819cbb3-0b60-41df-ae85-03c9bf22f346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52831022-124e-4fba-9355-cce9d29f09f8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4204cd92-6dd3-4f1b-a3e0-661af5bb6ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac57d68-960c-4b43-a161-8bb3e313d7bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7feff42-4aaa-4f71-b2e0-5b887e4d3a68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f641fb21-ec39-4ae4-a431-7470dd93ffe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2bf192-12b2-4cdd-81a1-2182f5a3defc",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7319bfd8-25f0-43f6-93be-21343c6c3793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "161b9946-381f-4581-82a5-f79b5b90e2b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3b8969-7b1e-41bf-8bb1-43be8acc05cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e08053ff-ee88-401c-b32e-635553dfaa4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9f7dc5-5532-4b8f-a4a4-473842c21db2",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b391a1b-9bf2-4fdf-bd8b-d56a5a132d1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89cd4885-f181-4218-8fdc-27b2daf12588"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d75f0cb-b454-46b7-81b5-c2a70041e3ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cde277e-d3d5-4001-87bb-0137da7bd36f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41b5d59-8ebf-4afb-afed-a6c28556570e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb642077-73a6-4fb5-a65b-b7b072db99aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b820249d-c63e-4d8e-aeee-71619a067e58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bff5083-1a94-4746-955c-27e59c113300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0fa0237-7186-4fe5-b1e2-72ad77a4b461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b53f4d-0110-4e2f-bff7-48b98b8dc32d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23af4f36-727c-46f1-9512-e649c3933409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "577b17c9-ebd2-4288-834c-9d4eff9ac388"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b7f43d-28c3-43da-864a-1bee94cc3c01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7266c553-22f7-456e-a3b7-c7938ac18ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cacadb8-9613-41dd-a14f-4fb34682cb4f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c95a6ea-1c4f-433d-9699-2ca1fe3a62bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "466bf786-ee84-4347-9f02-fa9a8eac7476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa31127-ca41-4e5f-aed2-76a1802306dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2292923f-f23c-4e86-a0fe-c52bd58a73e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b46a95-d985-4312-8d43-1bfcc999f0f9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58c48e9-ef20-4f1f-a8bd-98016957195b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7462a493-1c4a-4504-91ff-719857685340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49f6d50-4995-46f8-85d2-6809a0fec811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b862c070-e6d6-417b-a9ed-6732d626a54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de71562-3ce8-4efb-8407-5dba251922b9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdad5c15-dfaf-4ae5-ae15-8ae8cdb3d194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f324aac-d818-4eea-860d-1970020661d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7940e840-5857-4ba8-b5de-df0b1c92dc52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f226108-add1-44a8-aedf-6cc2baae98e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ba3152-420a-4452-988e-f21458df6336",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fbd75f3-0f9c-4528-995a-32a0208acbd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fa60f51-712d-42c4-abf9-5047767489b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf63c02-349d-4d10-a3eb-e61463bc01d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "574cdf95-ab61-4d16-81ca-32ad4f3e5f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ed2059-ab3f-480b-8f7b-6cd25c2a5186",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1d1e24-88ce-4165-bc1e-1e4723443f2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9592ef1-4bcb-4d38-ba2f-be3c21b403d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eacad2b-fc93-4717-bd02-c5d1c0e0cdc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b59a54-0bbb-4f8c-a3ed-a9a6ccc79c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb127aa7-5b8c-4f56-806c-66783b44cc2f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dfcfa5a-3df2-4921-b992-56deba37faa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1646de41-e796-4f58-a75b-74351657f3bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78d27d9-61c5-4229-9994-ee0a960d1111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1c83b9c-ae2b-478f-ac26-4cc4257fd245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766b9a91-6197-4362-90a8-1138ac8b2b66",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cce3640-51d7-4cfb-95e8-7c6b232f29a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b1e04b2-f529-4d49-8643-9b5a07d527d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb869c7-69e8-4bf7-ae91-a9f970d9ad05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a5481a2-f083-487b-9532-4ee56d2cc078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae447bb7-1af2-44d1-8674-671debfd59c0",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7074ff3-b82d-4ec3-8f09-4a52b524ab51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b508c16-1e3f-4142-bf1b-b8e452618db6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2f746d-dffe-43ba-9541-6fe69b5f87d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c924b5-23a6-433f-a47f-6b295e13ff4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ab5d0b-0f56-4fd4-8673-59e91d1820a1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa110a3-ffa9-4493-a86c-a1f4df71f172",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cef8a9fb-dcdc-4438-8ba1-94d5794def4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d4ee92-a675-4b05-9232-04cfb78cba9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1adf069b-c9bf-462c-b792-0c91df268041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01969119-7a14-4c24-b773-7309d065d285",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955c64ca-017f-4345-b938-bbc266c778ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76bba5d8-a5ab-4c58-a0c8-585f57b72e65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee308c10-1617-479c-9b79-b427db372c6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e55fc9ba-e951-4f44-a229-b40ec985fbe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9a4c7c-a679-468a-b91d-fe79e09f2ebc",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33b903d-0a1d-45c5-9d0a-f8339261fe1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d9be40c-cc2a-4615-9981-eb3494f8a2cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5865479d-e355-4f49-9fdf-dafb7560a2da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1279f787-a83a-430a-9f9d-2a20d1989741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5a1d8d-7d44-4097-b560-b3d195b9b80a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2411527f-31a0-415a-9709-ce1e09d4e8d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbf539fe-7d2b-470b-a0c0-de1452cf518d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98cb9214-fee7-48d1-ad39-956855e4a3f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de071aa7-0374-43dc-9867-6ad9679ac420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3980042a-92bf-4807-b171-ea4f44d3d2b3",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee93c72-3552-4682-a03d-9cdfd1d71317",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "019d27c7-4cad-42d4-acc7-1fcf4540946d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac9324d-dd91-4ebb-88f3-4e6c12dc373c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95bfe124-4937-4523-a211-8b14548dd4bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9b8fcc-923c-4fa3-a6ca-d2a8f277584d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14fc11f4-d1f0-46c2-b51e-5330377d1186",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce22b0d6-9436-42b1-b7d1-78804b8d44d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd4971d-9ca4-4e42-a359-81a11b8efb1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03a42e54-72ab-4867-a7cb-bcb81ef550b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7757a203-8e14-42bd-babc-f7d07f50a796",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6394c1bc-81c2-4bf6-b4ea-b800448b1f4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba8fcebe-543d-41cf-b68c-95a5e4010251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "794bac2d-f7e3-43d4-809c-b57da28f3be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e265c675-4b3d-4206-8ab3-eadc524b9ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec2b54c6-d70d-483c-a8f9-8f33cb7539e5",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e2c7e54-0d58-4aa4-9f56-4e1630d7c7ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62c1e57f-437b-4d1f-b532-ac402a47fba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7241b3f7-94b0-49e9-8cf1-6c36d981d918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd06e15-918a-4e2a-8843-a643ec9d5042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547eb2ee-b6a5-44e2-b89a-926644b2bdf9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f092bed5-979d-4e20-a1dc-9892f2c2381b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1183f4fd-fc99-4646-ac9f-5894d37070f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7f439e-18de-49c7-9352-545df50687c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f762d6f7-d812-4c0e-a4c3-983f191562c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd111c22-a4c9-4d57-a249-7d1bef492698",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e90eb44-45d6-43da-997a-26e41cda4ccb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2869121-c2fa-4d23-8eb5-8bc222a53de9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55bae85-046b-438e-ac0b-3efb4cbf1d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9995ea38-ad39-4c2c-abbe-db5b1e490dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd9f732-449a-4f35-ba0f-d4d397b783dd",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e28c0453-f5ae-4e34-8852-9027d7738e6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5949f09-ca27-4043-8a72-dd73c59a5a68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89914ec6-6345-4593-955e-26bba7cd7d2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba8b34ab-756d-4d4d-8fdb-613283f41702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee2144d-6393-45ca-9563-387d24e87719",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c887ed48-980b-4d8f-8bec-9d86dffd2d82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea343a14-2a51-4827-9e89-89e501e8fa3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39507cdc-f7dd-43d8-8cd0-b0ef4f09a4d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89eefb78-7de4-4965-bf2c-7bcfda150aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9908faaa-ebcb-4a92-99e0-b725ee9cd7d4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b000b739-4d01-467f-b917-df92ede74ad9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1db7482e-4807-4d85-a69b-9db841158536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41df0d93-e67f-492c-96ac-fde536fd5356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bafa86b3-b242-475f-b197-3d03c681ef0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec31528d-ca2e-4341-9964-3780fafcf9ce",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5dbeb9-d7f9-408c-b856-80f9e76b1074",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ede00adb-5ccc-4879-bbd1-0c5bc7acecff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e62584-8376-40e2-bc35-bd77671613b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbcb4c89-6204-48f5-8f91-06ff9efc929d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385ef8ce-fa01-47d2-94cf-001f8c2bcbc0",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11cdcb83-e81c-46ef-bed8-72f114ede498",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "899823f3-baa1-4b0d-a126-b04acdb5f0d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67913c9b-8da8-4bb3-90fb-ffe5fd6d86dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ce829de-5180-49d8-b948-975aa99c7470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ee44c6-1cfb-477d-9c80-10045629d3d7",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e0f8e2-c049-4f34-9de8-3ef3a77fa4ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be2a390b-85f6-40ce-b75d-83d741dd1523"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc3db87-1dad-45dd-8ab4-e7177df399ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad6c342c-f9b1-4256-b7e6-397db130f2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34079d4e-27b8-4ce7-bbee-bb30b106d901",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6df978f-9032-4d4c-9a96-c3a20ecbc771",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "affee34c-6d12-4790-a14d-4adde36b4eed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0dd0276-c203-4082-81a7-a1de0453534c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9114d4d3-cec5-4eb6-b3f8-5365195e5515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f327d174-b7b1-4ed5-8013-b16dedbdb239",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5395ad17-6e41-4fc9-a3f8-63ead2f831d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f70ebd5-bb01-4139-8689-6df4151c73e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc681853-d486-46b3-a25e-41bd6c8d634e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b7c3d5c-18f7-422c-9841-cfa9d74a8ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85bc5164-2f86-4827-9381-d1c339f3e115",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e307b0-0d22-4bc6-8afd-441f4726dd62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6700d2a0-2cd2-4cfa-baa5-870dba9bacc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a36e76-248c-4a28-a0dc-fdd3891c89f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3dafee9-6396-4669-8886-f5d7f6c99cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba0ade9-1e27-4cc0-b579-0fcd9a0d5d0c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57c5a69-58fd-43b3-b330-10edcf688742",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31a475af-126a-4bcd-b166-4a205cd57ffa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e90c64f-4749-4ce5-8f98-9470b15833c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a364febf-2671-48bc-ac46-973dd1c1797c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a4c486-4cfb-49df-a13d-bced26755601",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce018e0b-f818-444c-b09e-bb4d8cea6abc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3889f7db-92e9-4e21-aac5-de79c0c990f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69fd62b4-08cd-4fd3-bcd1-60f5d9cec41e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f63344e-b5a8-49c4-8046-17732372f3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d22158f-b319-4375-bd94-84860a0f8bac",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c86242-2a01-4600-9669-dd32e5c70388",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56ff14e3-35da-4626-bacd-dd826af5eb0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc94e2a2-2555-425b-9a44-3cd69c2c1e93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4093da65-cf66-4059-b28a-2417245eb73b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03e51d8-4998-47ca-915f-acb1e7aa5481",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfdf17e2-a93f-4aef-9ab0-05dd33cb8669",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d0e122a-b224-4ade-a82a-db8c9bf58777"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fedbfa2-c13d-4f96-8c0b-855a2fc2b745",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b3c0fa5-d01c-4981-94eb-bba5b2b43a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3edee3b7-52de-4008-96f6-47e4949c2fe7",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f994b459-72a7-4050-95a9-51c28a3a994a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dcab04c-b126-42a1-9934-e09cfb7a8419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f6c14c-7505-4c88-a95e-c65f74bd483b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1873008-870e-4d7d-b163-fde0d56fb35e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "408bf3d1-eebb-420e-b4ed-0cf3f68960b2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c1e4e6-82c4-493b-a46c-3697d844b040",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "652ecd5a-b0d9-4b4b-a0e8-c3f26c07adca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d643f3bc-0fa8-4475-b690-8154620b2dda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1c53088-b1bb-4cdd-9221-f849e7dc6ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43af3fe6-d444-4b9b-8928-4d1eb22cb971",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89dae3c9-4b21-49d8-b74b-a92f09a2f609",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b013b9f-c8fd-4a3e-aa43-d55dbd078cf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddcc8ec0-88a4-422c-ad83-3195bd60758c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2082987-b2ed-40b5-8484-a36eb3b202ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d11a918e-7d0d-4960-9212-a0c5f8d67502",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2af06c-dae6-4f42-80a5-62eee680d521",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8a2b4e8-2b47-400f-9ec6-e72b349b3b0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2bbfb9c-e488-4a01-99a2-fd9b298508e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1777d832-7187-4538-987a-452d9dfbadbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657cb456-0e89-40ac-9342-98d9f6961a7b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b7b9d3-bdf7-46a2-a948-c8debd14d1c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61f06c25-0ab0-46dc-8e5e-5a7e74a838d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3def2efa-f710-42d8-8f6a-9a47b5148248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b55d4ae-1f9f-4731-94f7-02d90d6a8db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c93ac9-9acf-4d85-b573-ebd0a541f54b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e383f1de-e819-40eb-934c-0bee762544b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f37fcfac-183e-4afe-9c4a-e568a9c6808d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec612f80-7032-4e13-99de-60df7cbc925f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9925e94-ba13-4960-b82c-5c528d1a5d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7265e592-e1e2-4d7b-b50b-8acb260991af",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf6c3c8-fd7c-4308-bfae-cdd583b3d24e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d18db4ff-2464-41b0-bfe4-7390463751a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4c6f29-d709-4e18-8d8f-1ad9e7960e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05ccdc32-d206-422e-90c1-ce460b832d84"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0227f7cd-a3ca-4372-aefa-ada164ce7dfc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "051c5106-893e-4de7-ab45-f0d98f0795f2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef16b398-f3a1-4dc3-83a7-96c823daf120",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9a9d0983-f7de-4e51-bfe7-61ada900ec97"
                    }
                  }
                ]
              },
              {
                "id": "4393cc64-c125-4a1d-a261-6494517fa8dd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "63f6f7c2-93eb-4757-a224-abe61826a2b8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1538498c-06c5-472e-a6e8-711f68035e18",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "03f11a1c-6d2c-4247-ae12-240c233c618c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "120e6898-5223-42c8-8100-2d44dd431000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b825086d-19e0-4a4f-9e2a-944b63ec0a10"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9a73fb6-289e-42de-b102-f855c14848ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43a04892-03c0-431e-bfa3-9a5010e8c6c2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fecb5b6-1271-4a63-aaa3-6a1a847efd51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27b1f05e-64dd-497c-95d5-d919752a4891"
                    }
                  }
                ]
              },
              {
                "id": "ee81cce2-fd45-40be-a742-c526b608ad1b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "dc17d80a-9bf4-49dd-9565-e303a2c88354",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b75f12-db9c-495b-baf3-8fe104e00f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "cc5e51e8-c57e-43c9-b075-849b434d6b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3896b3b8-8b5b-4403-a38a-7e4b546e07b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc7cb377-97ec-4665-b125-2825eb09bd19"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "eb9d9bd6-45dd-4bf6-a4ad-cb7ebd8098e8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c5099e30-20a9-4cbc-8f6e-730dcd0a3f09",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac262730-1b38-4d89-87a4-c1b6641516c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e99a4a76-13de-4c74-b86e-3e80a8316c70"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92c07766-2c93-4273-b6ad-32e444793390",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8b3f400-4cbf-4c52-b149-c8ae356277a4"
                    }
                  }
                ]
              },
              {
                "id": "49d6baa0-216b-40e4-b407-528b953a15d6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a57751a8-cd4a-45ea-9ae2-2ffec3810d34",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "51d8c2a5-9efb-451d-8a2d-23b9ce54d103"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c39764df-1740-4af0-afcf-3dbe31c99590",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "201386d1-34e9-4cff-8b1a-cea6bb2b82e0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f8ca5bc9-0a5b-478a-a20f-106cbc61548b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f4ae592a-1c34-48a0-90e0-cb8e9202d51d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "387b7429-6a4d-4e76-b3bb-7cedee7d36b2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ddb43b41-06a2-4868-af37-4376e790f446"
            }
          }
        ]
      },
      {
        "id": "98a49c61-15fe-4eac-ac9e-7a4999046661",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4962af0a-3877-42c4-9943-9794e3362d70",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4c0ea9ba-0fea-4086-87db-a211541acffd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0f73db40-dbc0-4fc5-b2f4-fdc670e07909",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09b2400-8f9c-4b0d-92c2-326135015f8c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "be5a7781-0b4f-48d6-ab07-9cdcb7a87a7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c810c5-8e11-4d55-a914-b4e27a99b9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6589b4e-53aa-42e4-86d3-bb3ff1a9d73f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f79d57b-2ea8-41d6-95f8-4e59d8dd8c21",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de9224cf-c54c-44e9-a8ea-eacd0153d81f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2aef0928-b19b-481a-9379-a8a3c97e2552",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4e2640d-b92c-4b96-8939-2d1400eedb98"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a4a4d317-d098-44b0-8b2e-0ce45215e17b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2a334a13-02e1-47d5-afa3-77f7bcc9e354"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7a091c91-eca8-451d-a82e-1a974af183a4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e054c300-064c-4784-9bed-e73a695afaf2"
            }
          }
        ]
      },
      {
        "id": "f92cf53e-c088-45c2-8dfe-17e462c8a47d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "59e87c01-e1db-4f47-a84d-df2f7ee4cacc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "54bdca07-d225-4cd7-a4c9-8d56c3d5f3ff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "41bc360f-d6ad-4d1b-8366-096144e2b3f3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9b64ad-af87-4204-b8bd-c48958d3082b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2a0ac2e-c0d3-4799-9a49-5f90416d2a4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07470b75-4151-46bb-a8d8-6205831dad9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0babc6e9-7dbe-4106-8681-df8ebeb01271"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4d6a3f3-b9b8-4599-8334-e1623f4bdaa3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd2e312d-827e-4829-8740-e2c6343b55f9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "030e753b-8f65-4dc9-82dd-a94dde6731d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "edbd24f4-ce20-47fc-8a28-6ca0e2b4c9ce"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e8c3a662-d7cb-409f-aec0-c1555327f4e3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7b951138-df1d-4464-88ab-3a27f4d1f497"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5cb478e7-87c6-4dcf-978e-fdd28dcbc2c4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5c11c64e-a249-491a-bd5a-77dd823ff901"
            }
          }
        ]
      },
      {
        "id": "c4523cf2-d64c-4dfd-ab55-8c976361411e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "defbf06e-b90a-4601-b6cd-fb02ace9bbe0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "47e57f3e-9ef5-4ec5-9711-99ba4a9e3535",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7b473e4d-c15a-4b67-812d-0794e4839f7c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14403a5-302a-41ac-9b3b-4b4df46ace0e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc29e170-582d-478d-aa5f-ff31d75f4e25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00281311-bfb6-4b4f-852f-1055e564744c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0696583-857d-4f7b-8b67-1f084b741301"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d2d18af-3637-42c2-9f93-aa3a04eecf93",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efd490b9-a614-4a45-9a6c-e89dec0d34b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b43afe0-e061-4144-a87c-cdbb75ae382f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "915fb5b2-b93a-4880-a8c0-a31261695c73"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b27fe1d-2ee5-4654-a726-bf5f1a4d580c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a5881ef2-0d61-44b6-8c74-aca7cb43f54b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d88a5986-987e-4b37-8509-753f30d4c777",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e7dfe9e-1fd7-4454-85f6-7f53cea7636e"
            }
          }
        ]
      },
      {
        "id": "c629fd7e-d665-473e-bc96-d370b7a7dfb1",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3edbf602-659f-4e86-9df5-ff5c5992222b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e440517-572a-4607-b199-1072dc319061",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "24c2d1ee-42fb-43f5-843b-7963f1c7d4c1",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba7fc595-09fd-4d56-99e1-9dcfdd429233",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3f2544ab-c87a-4424-88d3-3f451de8a3a8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 106.3087719298246,
      "responseMin": 5,
      "responseMax": 4767,
      "responseSd": 369.3573120409846,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1698971628878,
      "completed": 1698971668350
    },
    "executions": [
      {
        "id": "e4432e74-8705-4753-a87f-4bcd42be86a7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3d16d503-5cf3-4fe4-805e-c5a6c737a9ec",
          "httpRequestId": "68b80473-97b0-4ea5-ad2a-dc34e09f82dd"
        },
        "item": {
          "id": "e4432e74-8705-4753-a87f-4bcd42be86a7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9cb5b0b3-f455-4dff-9eea-21f6095cbce4",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "1cd55d54-8ca6-4c02-b0db-4939d6764bb7",
        "cursor": {
          "ref": "f87da75f-d2b6-467a-a969-44ba10c7d6aa",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "353c7c8e-d19f-4c28-bad4-f8c14e62743e"
        },
        "item": {
          "id": "1cd55d54-8ca6-4c02-b0db-4939d6764bb7",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "15c5ac81-1463-4524-8163-450ddce8bdf7",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "17a0de76-d294-4717-9a91-c5aea94718eb",
        "cursor": {
          "ref": "86e82c6e-d7ba-4b9c-88a2-7adb6c56e626",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "cebddf21-cc6b-4358-83b0-2d0c089dc0e5"
        },
        "item": {
          "id": "17a0de76-d294-4717-9a91-c5aea94718eb",
          "name": "did_json"
        },
        "response": {
          "id": "237f6639-740f-4ee4-92a4-222ce085ae6f",
          "status": "OK",
          "code": 200,
          "responseTime": 406,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d18bcd-732a-4e3e-9117-59282fce4d07",
        "cursor": {
          "ref": "6074f3ca-00f5-4fb8-a749-a6c37cc123f8",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7ee75336-2d42-464f-b3e5-5e067266a4f8"
        },
        "item": {
          "id": "c1d18bcd-732a-4e3e-9117-59282fce4d07",
          "name": "did:invalid"
        },
        "response": {
          "id": "0321f252-ab44-48dc-bd75-5253967eb3b9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 501,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d18bcd-732a-4e3e-9117-59282fce4d07",
        "cursor": {
          "ref": "6074f3ca-00f5-4fb8-a749-a6c37cc123f8",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7ee75336-2d42-464f-b3e5-5e067266a4f8"
        },
        "item": {
          "id": "c1d18bcd-732a-4e3e-9117-59282fce4d07",
          "name": "did:invalid"
        },
        "response": {
          "id": "0321f252-ab44-48dc-bd75-5253967eb3b9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 501,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1836f5dd-0439-4f3d-8ad2-fdaa391cd7d8",
        "cursor": {
          "ref": "1f55d1d7-bf2b-47e8-8a88-1b9bb55c1a5d",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "cd6850f8-228e-42df-a674-b3b5f37caaba"
        },
        "item": {
          "id": "1836f5dd-0439-4f3d-8ad2-fdaa391cd7d8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9ef5885e-91f2-4064-ad18-64482a48be74",
          "status": "Not Found",
          "code": 404,
          "responseTime": 58,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01b326e-57ae-402a-8d4e-e0b9ebcf9976",
        "cursor": {
          "ref": "f3de339c-b9c0-42b7-b04f-27898141c376",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "17e6c1ba-ab04-476b-b869-bca5c772d9d4"
        },
        "item": {
          "id": "b01b326e-57ae-402a-8d4e-e0b9ebcf9976",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f22e3e1a-b68f-47cf-a997-dce58ace6acd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 57,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "700621e2-c507-4d8f-9d07-285003be2b9d",
        "cursor": {
          "ref": "0985dea9-a03e-4f8d-94fe-78ce0f34185f",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "198e333f-cc6d-401c-9e97-cccbd376c218"
        },
        "item": {
          "id": "700621e2-c507-4d8f-9d07-285003be2b9d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "cb8589c1-3481-4705-ac15-1bbb60cf8cd5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 95,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4965331-d77d-45da-bc40-d7e1d0660f1b",
        "cursor": {
          "ref": "799b0a20-d703-47c6-b966-7725324f11ca",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ee43c733-f392-4398-a388-83cb85d44d67"
        },
        "item": {
          "id": "b4965331-d77d-45da-bc40-d7e1d0660f1b",
          "name": "identifiers"
        },
        "response": {
          "id": "e3d143c4-a00f-4bb9-b9ac-b88470fb9d70",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d06c66-885e-4e8f-ae30-ff1270e1f12f",
        "cursor": {
          "ref": "834c24ed-8380-4937-ac5b-8c8a63d21d85",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1fc6a3b7-0a67-456b-931e-5060220da4fd"
        },
        "item": {
          "id": "b7d06c66-885e-4e8f-ae30-ff1270e1f12f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "956969fa-5e70-47a2-8875-e12a8fd1d9aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "527ec88e-e390-4019-9e54-d6d96138c633",
        "cursor": {
          "ref": "fc78ee3f-d029-4b11-8c9d-5e6b29b29ea0",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ba304a88-653a-47d8-a4e4-aa701503b1d4"
        },
        "item": {
          "id": "527ec88e-e390-4019-9e54-d6d96138c633",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2a81764b-5d8a-4bf1-93ad-efc8d4146346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b011e7d-aae6-4013-b8e6-46219dab4a65",
        "cursor": {
          "ref": "80b6b5c2-dbe5-4e84-8f22-2b64939ed98b",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3c0b34a8-26e9-4d77-9b1d-4b05bf71dacb"
        },
        "item": {
          "id": "5b011e7d-aae6-4013-b8e6-46219dab4a65",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "574c66cf-fdc8-4ec6-8034-69759d35db37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1a7460-ddc0-476e-b505-576dbea818fb",
        "cursor": {
          "ref": "818443e1-2d62-4383-9a28-983140b1f4e4",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6ed98f56-c362-4be8-8b45-52df2fe7a73e"
        },
        "item": {
          "id": "3f1a7460-ddc0-476e-b505-576dbea818fb",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "200247bf-12d4-4201-9517-ef5dc6618fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf7a534-c61e-46f6-b09a-ac96d38e9d46",
        "cursor": {
          "ref": "5e324c6f-3217-47eb-b881-a5037c5852c4",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e737a675-31ab-4f6a-8a19-7dd410c0c605"
        },
        "item": {
          "id": "fbf7a534-c61e-46f6-b09a-ac96d38e9d46",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3aa2a4c3-600f-4170-aac2-ec282a32cece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e14733e-9a29-4d54-87fc-54e51c40de5b",
        "cursor": {
          "ref": "4d052bc8-7903-4587-9b96-d02446ce5afe",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "466e625a-5606-4025-9aa5-85616add7b40"
        },
        "item": {
          "id": "4e14733e-9a29-4d54-87fc-54e51c40de5b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "aa562f3e-de5d-4fa8-a141-d4e090f1b617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177c6541-8647-46ed-a1fe-0875fcc334ba",
        "cursor": {
          "ref": "587a4a98-771f-4d21-8619-f2f794c663c6",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "01ce1fd6-67e5-40b5-9b75-4c6b94344ac9"
        },
        "item": {
          "id": "177c6541-8647-46ed-a1fe-0875fcc334ba",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2bff9c8e-658a-4f64-bf50-b047629b2c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed16dbf7-5a94-44bd-9c47-edd44ec27dba",
        "cursor": {
          "ref": "cd4c50c0-c05c-4cb6-a754-5eefa302c8e5",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6847aacd-7899-46a4-b81d-bd1f5838679c"
        },
        "item": {
          "id": "ed16dbf7-5a94-44bd-9c47-edd44ec27dba",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "49968ab2-bb84-4d9a-a26b-e777816ba016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee43e6e-a5b1-4ee1-8eb3-6b41401b8d38",
        "cursor": {
          "ref": "dca69cb5-e8b6-4630-a83f-2ea9a3b7508b",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6038bc40-fddf-4a8f-ab36-d2e48428e587"
        },
        "item": {
          "id": "3ee43e6e-a5b1-4ee1-8eb3-6b41401b8d38",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0c7a9458-b8ed-46b0-89b9-6d25c2838a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10021320-2dae-49cc-9023-fe40faf1f329",
        "cursor": {
          "ref": "da45afab-2f26-4ae1-8765-848709e65e46",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c11feaf8-576d-4977-b8fc-00004f866d1e"
        },
        "item": {
          "id": "10021320-2dae-49cc-9023-fe40faf1f329",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "9c180b8e-c7d9-45c6-9d8c-b1e73b9f7fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbcc02fb-17fa-4e2e-9ee8-7cd875f75d26",
        "cursor": {
          "ref": "e6f5a813-5c42-43bb-ae47-bc8c1e16548c",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9ab328ab-1321-401f-ac16-11c18e246a9a"
        },
        "item": {
          "id": "bbcc02fb-17fa-4e2e-9ee8-7cd875f75d26",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0a6e957c-d1f4-42a9-b83a-f818a2567233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1b5dce-c8ee-4807-ad83-9cfc3bb2ad35",
        "cursor": {
          "ref": "0e41c18f-9e69-402a-a67e-49850d66f6bb",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4ad04966-34fe-48de-a6a9-b673f7b86c0f"
        },
        "item": {
          "id": "bc1b5dce-c8ee-4807-ad83-9cfc3bb2ad35",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9949bac4-505a-4be0-bd4e-7cb73234b682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50502f3-527b-4190-8094-4ecec8b9c6b7",
        "cursor": {
          "ref": "8e3dfd46-c612-4b62-9441-9205050491a1",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "30d76b59-8a0b-4613-91b7-77863e85fb76"
        },
        "item": {
          "id": "f50502f3-527b-4190-8094-4ecec8b9c6b7",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "756abfa5-6882-4faf-a780-07205a1193ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68026dad-def1-4b1c-a582-0d1906cb46cd",
        "cursor": {
          "ref": "a245d655-fed3-4532-b525-ef3edda2c67c",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "73815d05-8f9c-43ff-b689-dc7f4fb0b62e"
        },
        "item": {
          "id": "68026dad-def1-4b1c-a582-0d1906cb46cd",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "87f20548-6cbb-4fbd-a5bb-0514b39f9074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1124b776-534c-4346-820b-fde62d1d2aca",
        "cursor": {
          "ref": "8f729a55-6f05-43e3-bc5c-3bc27c92926d",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a0b5f626-aebd-4022-a18f-3384d6907f45"
        },
        "item": {
          "id": "1124b776-534c-4346-820b-fde62d1d2aca",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "adf9c98a-e6f3-4858-a472-6a64eb6e81ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb34079-e9e2-4b38-a3af-4057f4be073b",
        "cursor": {
          "ref": "a0f383b4-f6c7-4cb2-935c-caab36d9830d",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f1576b67-7706-4218-a12b-a12e74f7f009"
        },
        "item": {
          "id": "4fb34079-e9e2-4b38-a3af-4057f4be073b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f6b650bf-5a12-416b-801a-e5cd78c411aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43dbb97-991f-4f2f-b001-a46a87490d68",
        "cursor": {
          "ref": "4dd0182d-396c-44be-b765-00fa21d3281a",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a5cb07b2-9f44-40ca-9fb2-a82b3263c545"
        },
        "item": {
          "id": "e43dbb97-991f-4f2f-b001-a46a87490d68",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "76e32f4c-afe8-45ee-880e-2365d6598bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1265f57e-c019-4a9a-9dd8-9362b07ac7c5",
        "cursor": {
          "ref": "8c897df4-78b7-4994-8a38-de20437c2952",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e6dd0019-fbc9-4da8-8c62-3851d783d453"
        },
        "item": {
          "id": "1265f57e-c019-4a9a-9dd8-9362b07ac7c5",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ac9a9375-ab0c-4353-a023-9aaa3fba3b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5076b2b-2de3-41d6-9cf0-9cc53f43a135",
        "cursor": {
          "ref": "c1e63968-c8e3-41a4-8680-282151b105ad",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "dd77e3c6-1f21-46ac-a68f-358218547420"
        },
        "item": {
          "id": "c5076b2b-2de3-41d6-9cf0-9cc53f43a135",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2d46c00a-9328-47fe-a217-bffb92615706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f6b147-60d7-41b3-b548-fad52f619b38",
        "cursor": {
          "ref": "9de3d8cb-8a64-450f-b289-2366229de180",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8f7160f5-132f-4ea5-9d1a-43846a5b3edf"
        },
        "item": {
          "id": "b2f6b147-60d7-41b3-b548-fad52f619b38",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "83d55387-c7dd-43cc-a64c-a55871694a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c818731-3643-441c-9297-b84b832c78ce",
        "cursor": {
          "ref": "f432f151-5f81-437f-9a30-cc62c3dc4f33",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1b14a20b-20fd-4cda-aa4c-23ea77b5b540"
        },
        "item": {
          "id": "5c818731-3643-441c-9297-b84b832c78ce",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3ad908b5-6ba8-4f39-bc13-bb927021168e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459e3196-a02d-4678-a770-35e1ba7449b8",
        "cursor": {
          "ref": "426f37d5-efe1-4b50-b05c-2a838f535e08",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9ba4e913-6b85-4fe5-bfe5-2483a9c2e18c"
        },
        "item": {
          "id": "459e3196-a02d-4678-a770-35e1ba7449b8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ea25b0f9-0367-43c1-9887-858dcd804216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c14d2d0-b2d3-48a3-a8a9-6b6c0f36a594",
        "cursor": {
          "ref": "027d8d71-6a0f-4ee5-90a9-74f2abfbbe23",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8a66647d-cdda-4350-ae9d-f921e948105f"
        },
        "item": {
          "id": "7c14d2d0-b2d3-48a3-a8a9-6b6c0f36a594",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "781bb324-3740-4a92-9713-0d74db2b2707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d4a8e6-0eca-40bd-8fd0-5201dc4d5181",
        "cursor": {
          "ref": "5a07cbd4-1700-4d2c-acd5-f50137507a7a",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e944fe82-6ef5-4331-8afa-43c55fde9adc"
        },
        "item": {
          "id": "d3d4a8e6-0eca-40bd-8fd0-5201dc4d5181",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b97fc234-1e37-4937-8e1a-e6d9155f842f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3dafa5-a8d6-4c28-8c0e-939c853bd9fe",
        "cursor": {
          "ref": "0d6f640c-830f-46ac-b3cf-e14f65fb7e60",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "74b74896-0c48-4a3a-b328-ab0d50f5b841"
        },
        "item": {
          "id": "db3dafa5-a8d6-4c28-8c0e-939c853bd9fe",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "41245b6d-540b-4a6a-922f-d665cc01b0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9217c6-0776-40f5-b0b3-a34b0379782e",
        "cursor": {
          "ref": "dff50a04-9765-41a0-8343-44c4c1b3e99b",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1a5cf38b-1701-48f8-b3e5-bafb0af6b444"
        },
        "item": {
          "id": "1d9217c6-0776-40f5-b0b3-a34b0379782e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2a18e7e3-5269-4a9a-8a80-e6174a72a709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65bdf6d5-3dae-4340-bb00-d3d68df3b6db",
        "cursor": {
          "ref": "c2a1198a-26b0-407e-8595-40bf78f5b9e2",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "bc104230-b0f2-4b35-adc4-b9df3a84e74f"
        },
        "item": {
          "id": "65bdf6d5-3dae-4340-bb00-d3d68df3b6db",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9aba62c9-3bfa-4d3d-88f9-dd0eb85fd6ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1ccbc4-facc-4a07-9c99-b14d3f497292",
        "cursor": {
          "ref": "9ba5aa27-2af5-451e-bca7-c76b7e946d84",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d6b6693b-9c78-49a7-b9ee-a362d0442486"
        },
        "item": {
          "id": "7e1ccbc4-facc-4a07-9c99-b14d3f497292",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "fc98394e-103a-4efc-89e1-69d2f93dfadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a4c9ba-22ad-48c4-bca2-bac607b7ad86",
        "cursor": {
          "ref": "4f6634e7-b3b9-48fa-93d6-d5723a39b999",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "cd4fffd1-df13-4a41-842f-eb9484772a82"
        },
        "item": {
          "id": "89a4c9ba-22ad-48c4-bca2-bac607b7ad86",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "897b1197-f011-4c7a-8aad-b9d0864a9a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2b9a3e-aa0e-4ccc-bac5-0f09dacbeb7c",
        "cursor": {
          "ref": "defdc1e0-49ab-4136-8c25-ee6d2b61e4a1",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d5d6f7dc-93f1-4f48-891c-ae7a5418475e"
        },
        "item": {
          "id": "5e2b9a3e-aa0e-4ccc-bac5-0f09dacbeb7c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7208e2e7-d9dd-4537-b340-3528634823e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c4bfef-e8bd-4d82-9ae6-8ae291b3f9c9",
        "cursor": {
          "ref": "2e83742f-a93a-4035-b654-762fab3a8d36",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f481ac7d-c055-49b6-a1ff-85f41a929b28"
        },
        "item": {
          "id": "43c4bfef-e8bd-4d82-9ae6-8ae291b3f9c9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c340979b-c8d5-4c1f-8441-0d4213c2f8b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514fabfa-53eb-4e25-b76f-a452a217c294",
        "cursor": {
          "ref": "6f449388-43ff-4625-a3c5-9045b714abe9",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7a5beb8f-78cf-4c45-b1bc-3abc5216d2c9"
        },
        "item": {
          "id": "514fabfa-53eb-4e25-b76f-a452a217c294",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f8a12478-182d-4298-84f9-2ccec11d94d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a09ef752-6376-42f6-8860-7798ffebfe91",
        "cursor": {
          "ref": "08ad729e-ebfe-4185-af5c-20f1c3b17e4a",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1eb7af9a-d52f-48f2-a56b-10c97f1902fb"
        },
        "item": {
          "id": "a09ef752-6376-42f6-8860-7798ffebfe91",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ce517b17-9b23-41f4-af94-22716f1f9e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9da7cb-4019-4781-8f93-b4205670cc5a",
        "cursor": {
          "ref": "affd06e2-6ee1-4f2c-a70e-c2210776a4ad",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4c46f399-baaa-42aa-aaf6-575a82205dd1"
        },
        "item": {
          "id": "2c9da7cb-4019-4781-8f93-b4205670cc5a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8e7d41ea-c767-4536-97c9-fdeabc747762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106acf11-784a-49af-9a3e-040f8ffedf08",
        "cursor": {
          "ref": "7cdb108f-c621-4f30-af15-f65924cf4aa4",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "56db4f9b-53ae-4133-a4b4-9c6b9e915ecf"
        },
        "item": {
          "id": "106acf11-784a-49af-9a3e-040f8ffedf08",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1a7e0fd3-f2c3-4568-96b6-0e629c34ee64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03ce64b-5316-4b76-8326-b5adbc61afca",
        "cursor": {
          "ref": "651651eb-3d65-43d5-b013-0331eb69cbda",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1ad4fc25-a4e5-4a2d-adaf-016ca61578c0"
        },
        "item": {
          "id": "c03ce64b-5316-4b76-8326-b5adbc61afca",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "eac56bbc-fd11-4609-8b4a-1a3fe31a9453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4706e956-d7d5-43aa-88aa-ae60c3071d91",
        "cursor": {
          "ref": "0d69a48d-c302-434f-b65b-719fcfb61dbf",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "afaffd34-8f64-4486-9f3e-ab304614bc5d"
        },
        "item": {
          "id": "4706e956-d7d5-43aa-88aa-ae60c3071d91",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4521a48b-8a0c-431a-9070-11ac4c344c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3711ceee-6cf8-4434-97dc-5859c36cb04b",
        "cursor": {
          "ref": "ab3f92b7-d632-4d4b-9379-138ad5fc5ea8",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7cf7e260-4726-4b89-8f80-6eff95a779f8"
        },
        "item": {
          "id": "3711ceee-6cf8-4434-97dc-5859c36cb04b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "95cd7e97-1343-4589-8dc4-ced0893409ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "904698cb-999e-4b37-9126-2dbf05869d91",
        "cursor": {
          "ref": "949f2f48-ac2f-4e62-a907-fbcaf03e984d",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "aa64ce6c-b1e4-4d36-adea-1fc5b2ffe5d8"
        },
        "item": {
          "id": "904698cb-999e-4b37-9126-2dbf05869d91",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6041ee26-a5ab-4cc1-82c7-9b27a3488276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63f9004-7242-45e0-a206-7b4539f8a12e",
        "cursor": {
          "ref": "74c50474-fb50-46c8-87c7-4a825093a267",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a2ed8ca8-1c68-4263-b333-b375b48e315d"
        },
        "item": {
          "id": "c63f9004-7242-45e0-a206-7b4539f8a12e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b4ae1e3c-dbc2-43ec-9c58-0a7d8b9e20ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ba0450-2231-44ef-8ad5-69b2c8d44798",
        "cursor": {
          "ref": "9fbccdc4-8273-47db-972b-8855d7f211f8",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "bbdd3c7b-bf19-47a5-b695-4a3a424bec78"
        },
        "item": {
          "id": "37ba0450-2231-44ef-8ad5-69b2c8d44798",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d7336bf8-78f4-4f9a-907d-52f7c39fa0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42e037e-88ee-4155-a862-df3f1a934d4b",
        "cursor": {
          "ref": "1ddbca6f-5999-4f9a-919d-9c1d745fbf37",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "dfe6a214-d906-443e-9b3c-9da045fefca6"
        },
        "item": {
          "id": "d42e037e-88ee-4155-a862-df3f1a934d4b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "35186096-2d13-48cc-a577-84dfe6c857a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceff8fd5-4d65-4d00-9fe4-812b76b0995d",
        "cursor": {
          "ref": "f040d31a-6081-46f5-a3c9-98dc63c30567",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "197af8ae-b062-4d46-8c7c-48bc431443ed"
        },
        "item": {
          "id": "ceff8fd5-4d65-4d00-9fe4-812b76b0995d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "dba84550-1653-4666-8dc8-4b2a101a3489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7aa5ec-e202-4c11-bf17-e42869c8a5ba",
        "cursor": {
          "ref": "4c4ec224-cddc-4c92-8759-0e56e74658e7",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3bc4426a-22e1-4e6c-978b-687b815e9206"
        },
        "item": {
          "id": "7c7aa5ec-e202-4c11-bf17-e42869c8a5ba",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3ec6ea19-e4a6-438b-b770-3503b62da47e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d939fccb-7748-405e-9529-90bb9aaecc1b",
        "cursor": {
          "ref": "6e37d758-080d-4234-86e2-3db13f732744",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4b6a0c6c-1af8-47f3-98cb-4e9447cf7897"
        },
        "item": {
          "id": "d939fccb-7748-405e-9529-90bb9aaecc1b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f5f02fb7-9b65-4a7b-ba56-a95df22a663e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c10ec0a-63d9-48d8-88d0-af7474c17889",
        "cursor": {
          "ref": "c7a82a24-544e-4d11-a18d-d1b71c77a093",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "74e66cff-2885-441b-87c5-a0cb2cda131b"
        },
        "item": {
          "id": "3c10ec0a-63d9-48d8-88d0-af7474c17889",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "23ba8faa-6b17-417c-b917-01be405e854d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7fbf9f-a5e7-4082-b9e5-02bff40082f9",
        "cursor": {
          "ref": "42ffb088-c4fb-4295-b908-8af061f93f71",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2b28d3cc-1f8a-4857-8774-4d66384c1e86"
        },
        "item": {
          "id": "7d7fbf9f-a5e7-4082-b9e5-02bff40082f9",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e2a3c4e3-4446-49c6-b4a6-eec2d691ce86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62230e7e-89d1-4063-926c-ad9af24e9445",
        "cursor": {
          "ref": "5687fde1-201c-41c2-9ec4-4b5ca6f55c42",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f4eecf87-a2b6-48cd-9747-e527e7b97f59"
        },
        "item": {
          "id": "62230e7e-89d1-4063-926c-ad9af24e9445",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c5774152-65b5-4751-9bc4-307b6d5d64ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a7a842-7439-4e95-98f0-a81dd676902d",
        "cursor": {
          "ref": "de317a7e-e826-48ca-9345-c6ceb96e9f75",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "da2082d6-00e0-482b-b3b9-88c2e6d95884"
        },
        "item": {
          "id": "18a7a842-7439-4e95-98f0-a81dd676902d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "05ac784f-bf60-423d-9a57-eeaeadf8037e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ef296f-f56b-4fed-b576-03893b4e0ba0",
        "cursor": {
          "ref": "b8b77c6d-2ce8-4445-8022-b5faee63b985",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2223bd7c-6d77-487c-896c-db517f1ede28"
        },
        "item": {
          "id": "26ef296f-f56b-4fed-b576-03893b4e0ba0",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f1e198cf-c351-46c6-8cb3-50d038090724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e94457-1da1-4674-a62d-d0460f7868b6",
        "cursor": {
          "ref": "e4094d74-880d-4d6b-b60d-0ee16a1b6774",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9f7f40b8-3797-441f-87c5-8bd4f10a6403"
        },
        "item": {
          "id": "74e94457-1da1-4674-a62d-d0460f7868b6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5d8d9f3b-88a1-4173-b237-03452f27aea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf68195-a136-4983-83fe-7bcb0c7c83c4",
        "cursor": {
          "ref": "31fb6842-745e-4563-a73a-f99ba6a72a0b",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f250bfbc-d447-4f78-a3d4-bc500b1902d0"
        },
        "item": {
          "id": "ddf68195-a136-4983-83fe-7bcb0c7c83c4",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "dab70e9b-aed9-448d-9ba5-747178d06b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c24d29-94f9-43d5-95d7-3c764fd6013f",
        "cursor": {
          "ref": "f3dae4eb-f673-4983-aff5-498645dc5799",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3e5f0188-96e5-4706-909b-e67a5dee05e4"
        },
        "item": {
          "id": "f5c24d29-94f9-43d5-95d7-3c764fd6013f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ef5ab0ad-3168-4a6c-b7f8-15a50713259d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cdfba90-58fc-420d-bb22-9bb36b95c139",
        "cursor": {
          "ref": "df555925-4c41-4be9-b30f-bff8637428e8",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c6679093-e5c7-4c1b-9bf6-f18d9fa35c44"
        },
        "item": {
          "id": "7cdfba90-58fc-420d-bb22-9bb36b95c139",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b360df33-8c7b-4a95-98a7-353389a1edf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54612cba-34f6-4134-a767-8f35588b5fbb",
        "cursor": {
          "ref": "0a7f4198-9f29-465a-bb0a-bacec2269150",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "247c9b09-a36b-4231-83b7-cd369e2aebbf"
        },
        "item": {
          "id": "54612cba-34f6-4134-a767-8f35588b5fbb",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7ff4e3be-93ad-4b06-ba4a-64b7a4a64991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3e174e-2445-4d4f-85db-8145d0b3838c",
        "cursor": {
          "ref": "b9c3a79d-c58b-449d-81f4-7536c0126de9",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "bd4a0544-cb55-482d-b948-1e1ad114f0f7"
        },
        "item": {
          "id": "8c3e174e-2445-4d4f-85db-8145d0b3838c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c8a6938e-7d0f-4db3-9c80-0cf88e83ab7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddfaf55f-ccdc-40c4-8b84-9162cd083702",
        "cursor": {
          "ref": "2051f86e-b9b3-48e5-959f-2897b2bf1b35",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "cf3e36ec-f0bc-4bd8-8902-574a6f3d6bc9"
        },
        "item": {
          "id": "ddfaf55f-ccdc-40c4-8b84-9162cd083702",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9da13244-772e-4c1a-bd99-88c3e03ba931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "938b30ba-7bc0-484b-8c92-d24c7938144a",
        "cursor": {
          "ref": "ab258cfd-3c1d-4699-bc36-8f91ec4c2c3d",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e5c1e190-2532-4dcb-9f52-fccbca73ab16"
        },
        "item": {
          "id": "938b30ba-7bc0-484b-8c92-d24c7938144a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e288a853-3375-4136-a327-f52aec1f73fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a636bfc-7c38-4147-90ef-651568295e29",
        "cursor": {
          "ref": "542e994c-a269-44cd-9cea-4e9fa62e2d2f",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ea3f7725-312d-4d10-8a26-6c49ba5b0d3f"
        },
        "item": {
          "id": "2a636bfc-7c38-4147-90ef-651568295e29",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "76d5e36b-4043-44e8-b1ef-715ef6a6605f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3097bf81-7bd6-4204-9041-58a355f299a8",
        "cursor": {
          "ref": "21b1d996-a029-41f2-9798-5f13183d1de9",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e0db51c2-a19c-44f9-baf3-6875c402642f"
        },
        "item": {
          "id": "3097bf81-7bd6-4204-9041-58a355f299a8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7dde092e-9b50-4973-adfa-16af8c402cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba55fa5-81f7-4e8a-b5b1-118833bd0190",
        "cursor": {
          "ref": "43c75d41-9b8d-465c-b33d-20b684c90d8e",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "cfb874c6-7178-46df-b870-6dd2c469b3e7"
        },
        "item": {
          "id": "cba55fa5-81f7-4e8a-b5b1-118833bd0190",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "410108ee-1c75-4d3b-ae19-0b583b04297a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5b0016-815f-4025-a810-ee91df743431",
        "cursor": {
          "ref": "3972dc56-660e-4fbd-9dfb-be24c7e9bdfa",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "001b33fd-3d91-4b26-ad59-674ae4d93786"
        },
        "item": {
          "id": "3d5b0016-815f-4025-a810-ee91df743431",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3dca3a27-b43d-4b74-a954-74e5a8ca9f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28e2bad-c59c-4fda-9b95-5bd0d9e15d38",
        "cursor": {
          "ref": "8e39b273-48e8-4964-bf28-05f1a6cf96e0",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ba3aae8e-295f-475f-adfa-f8b5e0e9352e"
        },
        "item": {
          "id": "b28e2bad-c59c-4fda-9b95-5bd0d9e15d38",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "eb19683a-0a35-4097-bd35-843878af7374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7bdb39-fc56-4a5a-b917-fa49df6aa1ad",
        "cursor": {
          "ref": "e052c653-0627-4ecb-9209-30e6ad2c881a",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c1182b7f-7617-4d54-b8da-b0c910547666"
        },
        "item": {
          "id": "7b7bdb39-fc56-4a5a-b917-fa49df6aa1ad",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "65861023-854d-4364-b904-e05d626f45cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d297ec-7fce-466b-8fe5-72593db3a23d",
        "cursor": {
          "ref": "89a93e4d-6e78-42aa-b13d-f973689f878b",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0c077dcc-cda4-4b5a-a744-bd779800b8cf"
        },
        "item": {
          "id": "38d297ec-7fce-466b-8fe5-72593db3a23d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "bdb586b3-717a-461e-aaeb-ba325b05f5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "352f65cd-0641-4018-b8d4-0e91b1780050",
        "cursor": {
          "ref": "801afca1-bc93-4994-a45b-f65182d5b937",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c8ec0c49-f5d1-45e9-a9f8-27589a612800"
        },
        "item": {
          "id": "352f65cd-0641-4018-b8d4-0e91b1780050",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b10cd964-819f-458f-807d-e88a7d4a6393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7896e5b7-945c-4b8b-9e19-8582242667e6",
        "cursor": {
          "ref": "0cc69f18-986a-4d0f-8b97-7ce8d72a7afa",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "76ad8707-b256-449c-8359-ec02ff3d5318"
        },
        "item": {
          "id": "7896e5b7-945c-4b8b-9e19-8582242667e6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "11dcbbcb-7a2e-40a9-b0a5-bf02186a6fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bffaff1d-e4ac-43f0-8ea9-383e18382758",
        "cursor": {
          "ref": "3110af7c-34c0-478a-ab04-5a2a43779972",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9c032db9-1f3c-456a-aa0f-76c007cee12b"
        },
        "item": {
          "id": "bffaff1d-e4ac-43f0-8ea9-383e18382758",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "99d2c07a-8ba2-4a74-ac4d-0196e9f87cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0011189-45cf-4c50-b92e-752d869862c7",
        "cursor": {
          "ref": "6f02ffeb-055f-4b2b-a70a-0a2c1273cf42",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "01a54694-673d-43e0-8022-588a9d7062e9"
        },
        "item": {
          "id": "c0011189-45cf-4c50-b92e-752d869862c7",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2b63af07-5c3d-4509-a0e5-5a1aab7c9de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6b0b87-d4d1-4f41-8193-237e2a730986",
        "cursor": {
          "ref": "382fe8d8-5275-4f72-aff5-df9518f0919f",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ab10437a-c95e-4bf1-94ed-476de131a086"
        },
        "item": {
          "id": "dc6b0b87-d4d1-4f41-8193-237e2a730986",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f6f5451f-d724-4022-bcd8-665fdd7d585f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd6fbc3a-d033-4f83-a3c4-dc833ef88495",
        "cursor": {
          "ref": "dc253fc6-211d-4359-8f35-3b9ab63ee564",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "21e70059-1733-4a5e-91e2-d3c0ada6420e"
        },
        "item": {
          "id": "cd6fbc3a-d033-4f83-a3c4-dc833ef88495",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "02b76eae-4da3-464f-b65b-791abadc0dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aac8813-3b3e-494d-95ed-e9879211507c",
        "cursor": {
          "ref": "e5aee43e-9550-4efd-b799-0da487d1847e",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8a87a1a4-5f06-4573-bd03-d83ac811f0d1"
        },
        "item": {
          "id": "1aac8813-3b3e-494d-95ed-e9879211507c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9e1ef09e-2f50-479e-aab0-f9a8bc211714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a16f71-08d3-4a26-8c06-e94e973fbd6e",
        "cursor": {
          "ref": "fbc187ed-55a2-452e-8cd4-000f512dcb77",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8e3ef063-7fb6-41ab-8dfa-fc8ea22a6822"
        },
        "item": {
          "id": "94a16f71-08d3-4a26-8c06-e94e973fbd6e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8d9ebb9d-22f3-4cfa-8d72-c1d20e348bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e1ebfe-295f-4d84-9431-8be09f9b54c6",
        "cursor": {
          "ref": "4ddc76b1-9fac-41c0-9b0c-9a1ff2bcf292",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8241e496-9b87-423a-aef6-50e311490c1a"
        },
        "item": {
          "id": "47e1ebfe-295f-4d84-9431-8be09f9b54c6",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7e181e82-3f72-4eb4-9753-278dd67172ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f11041-dbdd-408c-a7c0-7300ea2aac9f",
        "cursor": {
          "ref": "bb1e263f-be1f-435e-9258-e39252029e1a",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "39ee85a0-bb69-4305-99df-6cae714bc20c"
        },
        "item": {
          "id": "93f11041-dbdd-408c-a7c0-7300ea2aac9f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "96ccad50-30de-4495-b6ba-a4d65b32c919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555cbe2b-b7d2-4bd8-8910-040d5bc8a845",
        "cursor": {
          "ref": "65769084-3ae5-4a2e-8892-bfe0893b2e59",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3ae6a2e2-c9fb-4762-8679-57b85b924038"
        },
        "item": {
          "id": "555cbe2b-b7d2-4bd8-8910-040d5bc8a845",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9c4d571f-e706-4944-b657-24de6462b0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758d569e-6118-4046-a412-09d950887d42",
        "cursor": {
          "ref": "2f7595eb-d2b7-4f79-86f7-770e1bc2d633",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "fb966ab6-9e59-418a-8aee-7bbb105a3a33"
        },
        "item": {
          "id": "758d569e-6118-4046-a412-09d950887d42",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "95a843be-9f77-4568-9cb4-015ef6f1fa4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94104da3-2c5a-435b-a348-5c0b202c555c",
        "cursor": {
          "ref": "790edcb3-22b8-4634-a93d-40b38be76ea1",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d1a39e55-ef1d-49d5-b15d-4c641fae5aea"
        },
        "item": {
          "id": "94104da3-2c5a-435b-a348-5c0b202c555c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "65453909-3396-4085-bb6b-584f486e0d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6034b2a-25d7-4785-9dbd-e515edf7c362",
        "cursor": {
          "ref": "ffd2fa27-c4cc-4a29-ae87-c4e0adca79f3",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "39a7f24c-ee12-4825-9df1-6697f8e09b92"
        },
        "item": {
          "id": "e6034b2a-25d7-4785-9dbd-e515edf7c362",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4979491f-8b9b-42a1-b21a-1209ea76d935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5162eaab-6059-4195-b25e-fb844a87ea14",
        "cursor": {
          "ref": "e0e9b763-9917-474b-9251-b347f3b72e75",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f8cdd9c8-d5cf-4fc5-85cf-cecc5c89ab98"
        },
        "item": {
          "id": "5162eaab-6059-4195-b25e-fb844a87ea14",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "19fe13a2-297a-4528-90f8-97394e481a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52bbd6eb-0aad-4150-be03-33b30808b90c",
        "cursor": {
          "ref": "cd84541e-030e-4fc4-b260-fb8d8b16d55f",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d8cad483-e132-4637-8795-9820c5884c9e"
        },
        "item": {
          "id": "52bbd6eb-0aad-4150-be03-33b30808b90c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4c141661-6e86-4960-a16e-2a19fc61a7c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4c300c-0be6-41b0-997e-48a28f020bc1",
        "cursor": {
          "ref": "8b8d4bfa-56c0-4112-b2cf-ecbb476ed45a",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "bc9e8568-65a1-4e69-8f6c-df5a17e59547"
        },
        "item": {
          "id": "1e4c300c-0be6-41b0-997e-48a28f020bc1",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c4fee481-24fd-4efd-90a5-5f94495e8c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f5f69ce-a75c-4ea9-8ad3-6758ff7b8add",
        "cursor": {
          "ref": "73eb75e1-7c84-409d-892b-93eb0037bf0e",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1fe111cf-183f-4dd9-bb91-2df509960533"
        },
        "item": {
          "id": "0f5f69ce-a75c-4ea9-8ad3-6758ff7b8add",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2891418e-032a-4c5b-9079-ae854a2320d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ea1080-d388-4107-b802-75318ba76397",
        "cursor": {
          "ref": "36eb50a0-b526-47e1-be23-5b69cfbe4bbb",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e1e9ec6c-a925-43a0-8f0c-0ad2eade5a02"
        },
        "item": {
          "id": "09ea1080-d388-4107-b802-75318ba76397",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "335988e9-c411-4e42-8c14-2411acbcb1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bfb875a-34fe-42f6-aa4d-48b609059120",
        "cursor": {
          "ref": "faa279bb-b613-442d-a221-ae5da406a3a7",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "25bad822-05fd-4356-b583-b2163e7a2623"
        },
        "item": {
          "id": "4bfb875a-34fe-42f6-aa4d-48b609059120",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b8221cfa-36f6-4a72-88ce-5e38031a5c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87fa584-ab1d-45ca-bf97-818831b66c8e",
        "cursor": {
          "ref": "f6aae751-9c1d-46ef-ab3b-b9c38afa7e3e",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "57abab0f-44e0-4e45-885d-6395db90345a"
        },
        "item": {
          "id": "f87fa584-ab1d-45ca-bf97-818831b66c8e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e93da231-4dc8-4b95-9143-e930c9377047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86fd427-7e20-4804-ae6a-5246e46bf251",
        "cursor": {
          "ref": "29afba5f-881a-49fe-93e0-e4ff39e79d71",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d2d89dc5-bcef-4c0a-b567-6506d7e4c27e"
        },
        "item": {
          "id": "a86fd427-7e20-4804-ae6a-5246e46bf251",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "69e20835-61be-49dd-80b4-ad86814c1e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07cc5752-0d5d-4cf5-816e-785aa5508fab",
        "cursor": {
          "ref": "34470141-5c44-4ecd-93d6-13d93986afa0",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "be48fe81-dd8b-48e7-bed9-096be85d98af"
        },
        "item": {
          "id": "07cc5752-0d5d-4cf5-816e-785aa5508fab",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "71741348-8968-4811-8a10-6a46c6d8b70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80aa9b58-1c40-4b45-acc9-d39ce0fd586c",
        "cursor": {
          "ref": "3ead1e64-7c22-42ac-9049-328ea905d79c",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "aab47e49-7881-41fb-8fea-dd16933ab3e0"
        },
        "item": {
          "id": "80aa9b58-1c40-4b45-acc9-d39ce0fd586c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2366fa50-36f0-44c7-966f-1e2f27946c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ab6de6-62fd-487c-b343-2bc2ac01c7ec",
        "cursor": {
          "ref": "7bcb39b5-8186-441b-aa7a-ee2dc942a04f",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "76a23a57-64aa-4c03-a00b-9f41075aa3a2"
        },
        "item": {
          "id": "e1ab6de6-62fd-487c-b343-2bc2ac01c7ec",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "054505fe-d31f-4a50-ba68-e85b80ebb22b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f665110d-3753-441e-9934-7e20a79e7d12",
        "cursor": {
          "ref": "d50a9390-4e7c-4b12-a239-59399f6508fe",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "9f8eedec-fb9e-4855-9f88-7e9cb78f95b1"
        },
        "item": {
          "id": "f665110d-3753-441e-9934-7e20a79e7d12",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0bff725f-c87f-4eeb-a6c3-44c6325c8671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541042a4-1769-4571-810b-eac5abd98955",
        "cursor": {
          "ref": "36666843-330b-445c-b152-5bd73de0e224",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8fb35444-2d6f-4f2f-b7df-f6b41ad45b5d"
        },
        "item": {
          "id": "541042a4-1769-4571-810b-eac5abd98955",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "373788fe-ed16-4cae-8a41-e562c86c28ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15f3e13-c69c-4290-bc3a-fe57642a210f",
        "cursor": {
          "ref": "574fe1f1-5bd7-47ef-9be7-5f28ba4a63a9",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "bb539797-bce2-4ebc-82ba-3489ce2def97"
        },
        "item": {
          "id": "f15f3e13-c69c-4290-bc3a-fe57642a210f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3e1f0d03-887d-4574-b295-e6daa156f1c4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c45e5649-0e1c-41de-b713-f6481fbab053",
        "cursor": {
          "ref": "ebad96ca-e338-4091-81cf-57be5425a800",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4f35a67b-88da-4666-9b0a-949c177636e4"
        },
        "item": {
          "id": "c45e5649-0e1c-41de-b713-f6481fbab053",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "5e249ba4-bb21-40c8-9c5c-08ffd71b6a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "9be5e4b3-8aab-4eff-becb-c96960c4fc76",
        "cursor": {
          "ref": "65ae6248-3341-4056-a317-e20c97814e20",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "bef14b3c-decf-4f7c-8c9f-191de078a525"
        },
        "item": {
          "id": "9be5e4b3-8aab-4eff-becb-c96960c4fc76",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e3970b8c-6a5f-4c17-b137-de51480994c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "471ab119-592d-4f10-9f5f-cb75765c8715",
        "cursor": {
          "ref": "2089b8fd-3522-46a0-9257-efe1681b4e74",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "814b34e6-8b68-4af1-9f82-7bc521874271"
        },
        "item": {
          "id": "471ab119-592d-4f10-9f5f-cb75765c8715",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c04015b6-74d6-4836-bb09-1b4b7b7f2a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "991010f9-0d19-41eb-9e8c-8f91ac7acd66",
        "cursor": {
          "ref": "da1769dc-6bf1-495e-a1d5-4b637aceb607",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ab1726f0-0b5e-4578-ad46-35092f0f297d"
        },
        "item": {
          "id": "991010f9-0d19-41eb-9e8c-8f91ac7acd66",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "23f9b1da-bae1-45b4-8d19-d91d297f115f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "f069f77a-c029-41e3-ad34-14d93afc6459",
        "cursor": {
          "ref": "b9059121-3833-40ce-aca2-49c6831db2bf",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "78944aba-27e7-42b0-b87f-362997d0e657"
        },
        "item": {
          "id": "f069f77a-c029-41e3-ad34-14d93afc6459",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d9374438-ecd2-454b-97b4-63ddb61c35c2",
          "status": "Created",
          "code": 201,
          "responseTime": 4767,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a435f3-ee14-4608-9e1c-e866a0e29287",
        "cursor": {
          "ref": "a1ecd307-3c75-43d8-a9ae-5eadc461ac8b",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7b7afe0f-34ad-4a63-afe6-d4af2594912f"
        },
        "item": {
          "id": "e2a435f3-ee14-4608-9e1c-e866a0e29287",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "14131ee8-941e-4173-9477-21992223f4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "0be3b348-4d18-42d7-862f-37cb5f0f3c5f",
        "cursor": {
          "ref": "8ee6e4de-9679-42bc-99cd-d9c1d6c023a9",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4feddf83-8172-4cd6-aa9c-3ac014309634"
        },
        "item": {
          "id": "0be3b348-4d18-42d7-862f-37cb5f0f3c5f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "661b91a2-d4be-475f-88a5-ccda5cc71c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "6a72d0ca-bc87-4781-97e8-9c5a45159e1b",
        "cursor": {
          "ref": "b0a58715-cca2-4567-9f04-0e23c2e9d238",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "96acd3e8-0d68-4efa-a345-fccb2c73aab0"
        },
        "item": {
          "id": "6a72d0ca-bc87-4781-97e8-9c5a45159e1b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "90a91456-4e0e-4946-87c7-f6c581ff1044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ecb5060-a8c7-49ed-8132-9ba3ed74eaf1",
        "cursor": {
          "ref": "413c7d93-f9b9-4584-b74b-ed57791c7a13",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5e8e50f4-3ea9-4f52-b229-305958fb3642"
        },
        "item": {
          "id": "4ecb5060-a8c7-49ed-8132-9ba3ed74eaf1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9761e783-4bfc-4529-89e6-0b1c0a2ae64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bce37ba-ef62-4ee6-a393-f5184e6f56be",
        "cursor": {
          "ref": "22085100-b7c4-434d-bc9d-53fd37b9d89d",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d771ab82-2fd2-4aab-8030-e490da3a7d07"
        },
        "item": {
          "id": "9bce37ba-ef62-4ee6-a393-f5184e6f56be",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "75ffca4f-770e-48b6-be88-1e43913bb009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3292c6bd-6add-4e93-9b8d-5822f29290be",
        "cursor": {
          "ref": "7de87a97-3959-494c-92f1-34808664860b",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a4fb8a06-8844-414e-99ee-cb0ac1f6e1c4"
        },
        "item": {
          "id": "3292c6bd-6add-4e93-9b8d-5822f29290be",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d5fb9e7a-3f47-4150-ac20-89b9a833001e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b3cc3c-dce2-4ba2-8b9b-c0052f95bcec",
        "cursor": {
          "ref": "f3b2c6dc-45c9-4cb8-9f15-baae4969ac45",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ff404180-c2b7-4695-86ab-5deaff805283"
        },
        "item": {
          "id": "33b3cc3c-dce2-4ba2-8b9b-c0052f95bcec",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b23cc34f-3582-41c4-b7b4-609d3d93cb6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064b832d-7018-458b-b331-7241119240ef",
        "cursor": {
          "ref": "042ae65a-e75c-4a0d-9f00-b67e5b4e8b45",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "40633f9f-05e9-4dd7-ab6e-c31e774d687d"
        },
        "item": {
          "id": "064b832d-7018-458b-b331-7241119240ef",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "bb917dfb-40f4-4b17-adf5-b3d2e3df421d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769132f0-f003-4172-9755-93a4d9485339",
        "cursor": {
          "ref": "5cd6741d-a8dc-4e0b-8866-d0f1e177657b",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "cba88686-1667-49ae-a180-c6515d0c3381"
        },
        "item": {
          "id": "769132f0-f003-4172-9755-93a4d9485339",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "890f2706-b934-42bf-bfbb-505da3c8690c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ccb228a-1057-4ea5-be8c-2790dffd43c0",
        "cursor": {
          "ref": "64e8e260-1f22-4741-b692-b0fef32174ed",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6f5e639c-e6c2-4a7a-bd96-4828489cbba9"
        },
        "item": {
          "id": "4ccb228a-1057-4ea5-be8c-2790dffd43c0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3928d53c-4210-4014-bdc6-62cf26934b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c5da45-7785-4473-90bf-ef38288446d7",
        "cursor": {
          "ref": "1a610594-7759-4b21-b2e5-1fd909ba9e3c",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "43724ac0-8b79-4767-a611-89e916545bfd"
        },
        "item": {
          "id": "c3c5da45-7785-4473-90bf-ef38288446d7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "044a4377-d746-4e61-a9f3-696d3517d09a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6faf6899-d1a7-432c-ac5b-0849b598c04b",
        "cursor": {
          "ref": "1da514a2-b9b0-4710-a5d1-e2d656eaa0a7",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a97a7e9a-ef36-437f-809f-3f887157295c"
        },
        "item": {
          "id": "6faf6899-d1a7-432c-ac5b-0849b598c04b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "96016360-a6ad-4263-ab57-e56d43deae04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d5f517-d997-4f7a-813e-934fac788bb1",
        "cursor": {
          "ref": "a3564de6-3e3c-4413-ae9f-f4da5804442c",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "73661640-1c88-486b-9596-e901a87b8f9b"
        },
        "item": {
          "id": "d0d5f517-d997-4f7a-813e-934fac788bb1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5c2a3c19-07fc-41d3-a885-bf7d7ed6c32f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab1cb6e-6e31-4110-9a58-9954d1289019",
        "cursor": {
          "ref": "f1eb1136-7732-44b3-a819-4ab318c171db",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "472ba6eb-7015-4128-984e-a08f5d5b8cd1"
        },
        "item": {
          "id": "5ab1cb6e-6e31-4110-9a58-9954d1289019",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "984b6543-193d-4f2f-8296-34ef2c77d22b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0fa5adb-d60b-4589-a3e1-c92eb62e6a18",
        "cursor": {
          "ref": "419b7bff-72e7-4378-a948-cb27098a1b1b",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2d80adac-c9ab-4c1e-a3c1-d5b304feeb68"
        },
        "item": {
          "id": "e0fa5adb-d60b-4589-a3e1-c92eb62e6a18",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e6ee7226-78fd-44cb-86af-3423338fde1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a892eb83-a5db-470f-8cb0-21e281b27b85",
        "cursor": {
          "ref": "c91d2899-a0bd-4769-8a36-a1e568a8bd2f",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f66fba57-15c0-4e69-911f-1700cc48f91d"
        },
        "item": {
          "id": "a892eb83-a5db-470f-8cb0-21e281b27b85",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2f29ba5e-d75c-40bf-adc2-7c47c0c97f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d300399b-d27c-4be6-840c-a2040b39e9c8",
        "cursor": {
          "ref": "3428e621-8fa0-4006-86eb-eded0b156651",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "25f6485b-1cfd-4c2c-9eb1-4f9479177664"
        },
        "item": {
          "id": "d300399b-d27c-4be6-840c-a2040b39e9c8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "570807a9-8900-4b25-a443-a7e1d2a8555f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c4f2b5-929d-493c-ae83-23cb374a85ae",
        "cursor": {
          "ref": "b9300f74-d660-4724-b2ed-2dc8d05a5d3f",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6db80290-01cd-42b7-881d-fb844167256b"
        },
        "item": {
          "id": "c0c4f2b5-929d-493c-ae83-23cb374a85ae",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7813ad29-c489-4ad6-b63f-df719c8a2c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a112d71-e148-4bdb-8d63-a6fb667f7263",
        "cursor": {
          "ref": "701deff1-e7c4-45b1-afc3-f3658fb05ade",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2f655dc9-60b2-4820-9fe4-a033bb727032"
        },
        "item": {
          "id": "6a112d71-e148-4bdb-8d63-a6fb667f7263",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "85021471-31ff-49bc-acd4-3fbee97f87f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccce1894-2d48-4542-a125-57aecf869c9b",
        "cursor": {
          "ref": "cdd385af-1771-4f63-9da2-7c26266e237b",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e7a38b98-d5d9-4a32-bb81-cb0569f8e1b0"
        },
        "item": {
          "id": "ccce1894-2d48-4542-a125-57aecf869c9b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0eea448f-5c65-42d2-8c46-afed885b0ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a43b975-d8b1-4658-85f2-e568199dc873",
        "cursor": {
          "ref": "81aacffe-3abe-4bff-b005-167a87a9eb2c",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f46353b5-63f9-4ed1-b7ff-a907b85eb76c"
        },
        "item": {
          "id": "0a43b975-d8b1-4658-85f2-e568199dc873",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ed10ad40-422a-4961-8005-7c59234e77f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d3c3d7-6027-44b4-9c05-5d3d73b8bc59",
        "cursor": {
          "ref": "03d6a3b8-457c-4f1e-ad81-c32f60e06478",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "da6c8a70-4565-4dce-9a91-47ac0ccdf290"
        },
        "item": {
          "id": "83d3c3d7-6027-44b4-9c05-5d3d73b8bc59",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fb291928-a6fc-429d-9269-619ea3526350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25ee20f-8904-46a4-989a-10b4d54996ba",
        "cursor": {
          "ref": "81c47130-fdf5-487f-a16b-85a5b3cef6b2",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a48847ba-3668-4cec-b09d-782bd9befee8"
        },
        "item": {
          "id": "f25ee20f-8904-46a4-989a-10b4d54996ba",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "722a1aa8-660a-44f2-ab83-bc740c4a463b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a72d54-a0a0-4cd1-8600-bb59cdfc9b6d",
        "cursor": {
          "ref": "61881ee8-4fc3-42ef-a1be-aef8681b9f02",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7eb124b9-9dcc-4009-a923-7fc33e36cebe"
        },
        "item": {
          "id": "38a72d54-a0a0-4cd1-8600-bb59cdfc9b6d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "035542a4-42b8-41bb-a442-47464719fb0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad0f3cc-6e11-4eb6-9533-c813392b6f56",
        "cursor": {
          "ref": "c506bca3-9041-4e62-a149-679b33d8e06e",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5396075d-af63-4ca3-a3c9-d9b6129fe760"
        },
        "item": {
          "id": "6ad0f3cc-6e11-4eb6-9533-c813392b6f56",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9c820406-e5a0-4445-81f9-6887f4831fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02954027-9d3c-49e1-95de-bc9944a12038",
        "cursor": {
          "ref": "fb24dd22-195a-493c-be0f-4d4f614c1433",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6b549334-f4ba-412c-994c-2b3f6d9984fa"
        },
        "item": {
          "id": "02954027-9d3c-49e1-95de-bc9944a12038",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "65955453-a5d3-400f-a7ba-6e7e757cc266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428b69f9-3b0f-4c7b-adb6-1d154f48115c",
        "cursor": {
          "ref": "95b2762c-f083-4c70-a30f-d6209867c20a",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a8aab619-aa8d-424e-b5bf-371c0c941a4d"
        },
        "item": {
          "id": "428b69f9-3b0f-4c7b-adb6-1d154f48115c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bc49b107-cc55-492c-9558-ac4874b701d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c34a182-115c-495a-8c91-b7bd4d2e5d04",
        "cursor": {
          "ref": "f9891c63-2603-4515-9388-464119be8cd7",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "36bb1eee-17c9-45e6-9d1a-26b086a74efe"
        },
        "item": {
          "id": "6c34a182-115c-495a-8c91-b7bd4d2e5d04",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0ae0b91c-f5da-4d3f-82c8-20f4ae7643d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd8c9e8-ec28-41e1-9cbb-e5096b305544",
        "cursor": {
          "ref": "881548a0-2222-42bb-a075-bd8f4d608941",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "67fc7ff9-9cf6-428b-87bc-1f73dcd99415"
        },
        "item": {
          "id": "5fd8c9e8-ec28-41e1-9cbb-e5096b305544",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "54d156c5-33fc-43d8-a150-093e17d56977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b034fd7b-f685-4205-a1e4-6a5d0c8b391f",
        "cursor": {
          "ref": "8436e7cb-110e-45e3-b8ab-ec7b644ce65b",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d378d36d-8487-4cc7-8481-6c6005be93da"
        },
        "item": {
          "id": "b034fd7b-f685-4205-a1e4-6a5d0c8b391f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "344bc254-d9bd-4116-a696-7795d44ba480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b606388-9431-42a7-9e88-5486868d4df5",
        "cursor": {
          "ref": "3b66b867-31f4-48e7-8eb0-e13dcddc0909",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8a9751f2-3d25-45a2-ad50-31cf0a3dd476"
        },
        "item": {
          "id": "4b606388-9431-42a7-9e88-5486868d4df5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1f6143eb-d88a-49e2-abf2-0fb2ad83d054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71324be3-3fea-4f54-9bc0-b6c9f885421d",
        "cursor": {
          "ref": "f42a9e03-0003-44bc-9ba3-620073348b76",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0634d5a3-0c5d-4513-a8bf-523f51c9285e"
        },
        "item": {
          "id": "71324be3-3fea-4f54-9bc0-b6c9f885421d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d3a20e94-e435-4592-8af6-3b04768b54f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "014a6fd2-cafd-4e15-b04a-ff1bdecd6c7c",
        "cursor": {
          "ref": "9fa7875b-6a5c-4bd8-9a95-14f1d9726518",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3cc3e397-747c-4aa1-8ece-82e44dbe00f7"
        },
        "item": {
          "id": "014a6fd2-cafd-4e15-b04a-ff1bdecd6c7c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2b1e9e33-ac70-4bdf-a3d3-63e6ecc445fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6693b4f0-9dd2-4436-a162-0f2c8f991f09",
        "cursor": {
          "ref": "a53fd86d-2353-4938-b903-c482b7137c1c",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d0fc6a18-bc7b-455b-873f-b2c56a5c585c"
        },
        "item": {
          "id": "6693b4f0-9dd2-4436-a162-0f2c8f991f09",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1360550a-e872-4a75-ae1b-365f76bfacf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd801445-bf97-42ae-8d0b-88e1e8a8980d",
        "cursor": {
          "ref": "5ca033b0-1761-4764-b5d1-fa937ea2cc4a",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ccd83b60-ddf0-44c6-9730-4006bed0fa5c"
        },
        "item": {
          "id": "bd801445-bf97-42ae-8d0b-88e1e8a8980d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "080dfcb6-c405-4428-a295-86b1b7b805bd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2d2fcc-c430-4e95-bf92-2e744998866f",
        "cursor": {
          "ref": "c6079fc4-63d3-4973-9a15-f723190e4e35",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e2e8b09e-c188-46b6-9256-e9efd104548b"
        },
        "item": {
          "id": "9f2d2fcc-c430-4e95-bf92-2e744998866f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e444ebc3-15aa-448d-a5ad-39364fc17e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d07094b-5df9-49d6-91f4-0ea8ad82c8d0",
        "cursor": {
          "ref": "7e7557cc-08e5-4c2e-bcf9-3ba0f536df94",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7c7d6c04-c65d-4a6b-bba2-ef0c1d3cc0e3"
        },
        "item": {
          "id": "9d07094b-5df9-49d6-91f4-0ea8ad82c8d0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cec18354-5a68-4b7d-8b5a-bf4607ec992f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc38e7f-bb20-4e05-bd42-5235f58fe87a",
        "cursor": {
          "ref": "55305f25-1d68-4ce7-8126-0d6c0aae755e",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "96871f42-1981-4d5a-9271-08ec3871b034"
        },
        "item": {
          "id": "6fc38e7f-bb20-4e05-bd42-5235f58fe87a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5caa4b80-9037-4dd5-a5b6-0f15f3b00003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0b202a-5159-455c-bb36-e81844ba599a",
        "cursor": {
          "ref": "a7d36dbb-f79b-4cc3-9b40-28ee0282928e",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8d766bb0-7135-4f03-8795-da7fc215bfe5"
        },
        "item": {
          "id": "1f0b202a-5159-455c-bb36-e81844ba599a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5485cca0-fac9-4006-b08d-fbd8b3d1609f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f331328a-ebb8-4a25-b677-2f497cbc6da3",
        "cursor": {
          "ref": "fe714d06-8cb9-47b6-9282-452578e4dd36",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "db6e6191-e09f-43ac-8497-0d2d4d46fe45"
        },
        "item": {
          "id": "f331328a-ebb8-4a25-b677-2f497cbc6da3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "badf1d6a-6c66-4314-9ec5-ae92e72a7e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108a3efe-543f-4e83-9931-b069f7155729",
        "cursor": {
          "ref": "709eb76e-07f6-4d17-b709-2bdd7bdc44af",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "725446be-f119-4aeb-8a0c-1c26000911cd"
        },
        "item": {
          "id": "108a3efe-543f-4e83-9931-b069f7155729",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ece6c9a4-c4b7-4e56-a078-8f7fe21b47d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09e8377-cfc2-4b61-9213-45f693fd9729",
        "cursor": {
          "ref": "d62f3f48-38eb-4320-bbde-ef65e3b61dd3",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8ac0bc8e-1cec-4d3b-8f86-5f66fe9b3439"
        },
        "item": {
          "id": "e09e8377-cfc2-4b61-9213-45f693fd9729",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "030b35dc-b6fc-48b1-b311-9b7712fc1fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fef4fa-7e04-4ff9-8c9b-0f0a12e29572",
        "cursor": {
          "ref": "22024c2d-d39e-4761-b0e8-7e90fbe9fe87",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3cdcc6d1-2277-4c2c-a1f3-ac2b52c91bb7"
        },
        "item": {
          "id": "c5fef4fa-7e04-4ff9-8c9b-0f0a12e29572",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8d935ecc-2f81-44d0-8a2f-a2cc28041230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43890bc-b196-4b54-9df4-be1b263acf5a",
        "cursor": {
          "ref": "38b228a9-56e4-446a-990e-62f440c0e787",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1531ebd0-ae7e-425b-a91d-a4abbc625626"
        },
        "item": {
          "id": "b43890bc-b196-4b54-9df4-be1b263acf5a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "288bb6cc-6759-4c92-b194-19918881af1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2154a4-cb71-4eb1-92aa-334b74e34664",
        "cursor": {
          "ref": "d452f568-85b0-4bc9-abd4-aebf981b1c65",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "87d50b64-28a4-4080-a74a-d77dd2d2e98c"
        },
        "item": {
          "id": "cd2154a4-cb71-4eb1-92aa-334b74e34664",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3ce30ecd-e4ad-4703-9e59-71c5cf6eb244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 174,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf3917a-0044-40bb-a5cd-23aa556f2bde",
        "cursor": {
          "ref": "87ae543a-df4b-47d8-ae42-99e0e79d404e",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8f13049a-f152-43e1-af0f-7b32bc6b1caa"
        },
        "item": {
          "id": "1bf3917a-0044-40bb-a5cd-23aa556f2bde",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7b9d0a86-c39b-4d58-9c60-bee0590380ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90db390c-9bb5-4c9b-b9a5-eda1d0cd7fc7",
        "cursor": {
          "ref": "eac3af8c-bca0-4ef8-a77b-944b1a187b4d",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "cee89eb6-886e-415e-bbd3-529b54edba70"
        },
        "item": {
          "id": "90db390c-9bb5-4c9b-b9a5-eda1d0cd7fc7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7d4ccd2a-20e8-480f-987f-651c0aaf9d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b497230-41d9-4898-b4bc-caaa8ffd3e3a",
        "cursor": {
          "ref": "0a76927c-a387-48b4-ae88-608be0ae379d",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a34d3008-7151-4609-ac27-89845adae1b5"
        },
        "item": {
          "id": "9b497230-41d9-4898-b4bc-caaa8ffd3e3a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e9e1306d-650d-45d0-b618-645f9bd19e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e80a0d-47b6-4b0a-93a0-2ed5cf4f2ed9",
        "cursor": {
          "ref": "67c06747-8dc8-4c51-8cce-20f556b51c04",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b6f4a947-c3fa-4221-8e06-b3752939c2c3"
        },
        "item": {
          "id": "47e80a0d-47b6-4b0a-93a0-2ed5cf4f2ed9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f3ba78ef-5cf0-4817-b127-a530ea53e70f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b419a3b-78dc-4d29-8f02-7ace45501b88",
        "cursor": {
          "ref": "72704a79-03d6-4e20-84a9-13b1a33aad5c",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "aca1829b-089a-4a8a-b4e2-d209c496a42b"
        },
        "item": {
          "id": "3b419a3b-78dc-4d29-8f02-7ace45501b88",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4ec489e5-72f5-4572-9dc2-941c2ac17bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1fe30e-a47a-4fea-9c75-124dd63a2c84",
        "cursor": {
          "ref": "535d2d1d-81ab-4013-953e-c91143656287",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f03eb8f3-251a-49a5-8353-a16f022a7bb8"
        },
        "item": {
          "id": "8f1fe30e-a47a-4fea-9c75-124dd63a2c84",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "967e158d-942c-4dc4-a249-db773670cabf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8989c6b-7ebe-4dbd-91b3-2f24fc8723e7",
        "cursor": {
          "ref": "f7cab277-50d4-4391-957b-cd320cfde453",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3915e2cf-fdc5-4447-8cb0-e60fcf43fd46"
        },
        "item": {
          "id": "f8989c6b-7ebe-4dbd-91b3-2f24fc8723e7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d12a1e14-30f9-4e7d-afe3-e83fd2834e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8453a47-71ae-4f98-895e-557f52b8adee",
        "cursor": {
          "ref": "625ac24b-cc0f-4a7e-969c-eabe87aab630",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "498d3b19-bdf2-4e20-8533-5a2b31cec55e"
        },
        "item": {
          "id": "c8453a47-71ae-4f98-895e-557f52b8adee",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "097d6da5-9169-4916-9725-9c823f4015e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cafd067e-5d75-48d8-b308-a867f7a149d3",
        "cursor": {
          "ref": "00570faf-672c-45a7-9134-272d824905e6",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c57756f4-4407-4cb4-a206-bb5629864256"
        },
        "item": {
          "id": "cafd067e-5d75-48d8-b308-a867f7a149d3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6cf9837c-ba9e-4382-8d6b-16bc0b8cfda9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075c3f8d-c8fc-44ba-94cb-c514a04d32c0",
        "cursor": {
          "ref": "4809ccb4-400a-44c4-a7a8-f168af902561",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2899427c-a4a4-4610-a692-6e4af0c29e68"
        },
        "item": {
          "id": "075c3f8d-c8fc-44ba-94cb-c514a04d32c0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f1ca486f-412f-4027-96ec-7d077a90b038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ea3455-9253-4f85-9a14-a9869de2c43d",
        "cursor": {
          "ref": "634e347b-3f93-451e-bf3b-d039d2640a34",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b6f8a15c-546e-43d5-93cd-2f4ce2e8c01a"
        },
        "item": {
          "id": "c9ea3455-9253-4f85-9a14-a9869de2c43d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "74a02d42-9347-46f6-b186-bd9260671be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581cb64b-6143-4345-b30d-082191155e97",
        "cursor": {
          "ref": "d187db47-1057-46e1-b98d-942e0767abfc",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "81639bb7-e848-4989-af9a-551ac59dfabd"
        },
        "item": {
          "id": "581cb64b-6143-4345-b30d-082191155e97",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6a908b34-a629-4e8f-8547-bd3162135fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f6664a-7dd2-4fd2-9136-84d300d15947",
        "cursor": {
          "ref": "2c05d03e-6b67-495a-9a6f-ab57219412b3",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "82174ba6-af2c-413a-95cc-101963ca9214"
        },
        "item": {
          "id": "29f6664a-7dd2-4fd2-9136-84d300d15947",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6a669473-ab93-4550-af34-137e8c839d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45125c5-c934-4273-bca2-ffecfa2ccd35",
        "cursor": {
          "ref": "55b30356-c741-49a6-ab45-52214ed68063",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a7ecece0-e742-436e-bc6e-5f00db4b1d4e"
        },
        "item": {
          "id": "a45125c5-c934-4273-bca2-ffecfa2ccd35",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "311e8250-3b44-4471-9f7b-788a8203faff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3ce66b-ba6a-4992-b39e-eb7a965f10f5",
        "cursor": {
          "ref": "a1b7dcc8-5452-4c0c-8298-8a51de1b80ff",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "2ec03a4a-c8ee-4d3d-a81a-1f23d9e0de2f"
        },
        "item": {
          "id": "1a3ce66b-ba6a-4992-b39e-eb7a965f10f5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0f3a09df-c5c6-42c2-bb98-fc17f248ff53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc892050-f4ae-4d9b-a97f-588e9a3f5939",
        "cursor": {
          "ref": "82be1d0a-849e-475f-8686-a4093eda908a",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "255df2b4-4108-44cc-b169-22af12bed8f4"
        },
        "item": {
          "id": "bc892050-f4ae-4d9b-a97f-588e9a3f5939",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bded9b3c-0565-45dd-8dc2-7a1461f2a0f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3285c689-1264-442f-83fb-b706e562fe2c",
        "cursor": {
          "ref": "6af07446-7117-4c85-863d-a16f5891d854",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "897abc08-ad64-48b2-8231-75be934c298c"
        },
        "item": {
          "id": "3285c689-1264-442f-83fb-b706e562fe2c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fae331b6-783d-487f-986c-ae1fee65f2eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f73749-c3e9-4dd0-88cb-5cd257226f27",
        "cursor": {
          "ref": "de14c9d0-b21c-4be7-826b-4eb7f9bfb2d0",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b4eb7f33-f8a5-4554-a98e-86920bb78818"
        },
        "item": {
          "id": "49f73749-c3e9-4dd0-88cb-5cd257226f27",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7a1108dc-70c8-4f25-8971-f8c38c117e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120ae889-c77d-4265-9091-b9f3bbbd407f",
        "cursor": {
          "ref": "edadebaa-119f-44d7-9382-7e6ffbc17407",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ca41ca18-0d64-447b-9a5e-8598fccc4bec"
        },
        "item": {
          "id": "120ae889-c77d-4265-9091-b9f3bbbd407f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9b8220a4-8248-4fc2-949a-f5f4a3b197aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099dd553-5f4e-466b-bfa6-b77d8e23168e",
        "cursor": {
          "ref": "6f225cef-28c7-4ead-9ca3-2f1135663f69",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "97410ce6-04f4-476c-9b4b-b27217d1f7e3"
        },
        "item": {
          "id": "099dd553-5f4e-466b-bfa6-b77d8e23168e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ec701926-4e8c-409a-b60c-16b4f78643af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b996f12-f5d5-42b1-b69a-0202a7ac335e",
        "cursor": {
          "ref": "a114af1c-f530-451e-ac6a-9067737a2506",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6620a662-f5b0-4a4d-a397-ef6ea692d590"
        },
        "item": {
          "id": "5b996f12-f5d5-42b1-b69a-0202a7ac335e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f281f4ff-1511-483f-997a-13a3e667d0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83fb63a5-606b-47a3-a385-cbd6ccdf3b9d",
        "cursor": {
          "ref": "4e69f6f2-c9f5-4a07-9a6f-ffbef16432b4",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8884feb4-f88c-4d0f-915f-8e4ef41f6f2c"
        },
        "item": {
          "id": "83fb63a5-606b-47a3-a385-cbd6ccdf3b9d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f8ed2a6c-5f0b-4d01-a0c9-d9bc338cf2d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c378bda2-9d35-4682-8bcc-dc56ed7d16fe",
        "cursor": {
          "ref": "2de62bb3-6bec-4f08-af2a-8b64618ce548",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "63195779-554d-434d-ba96-e2876a10793c"
        },
        "item": {
          "id": "c378bda2-9d35-4682-8bcc-dc56ed7d16fe",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4b5762c3-63d1-4da7-a421-dcfd9acfd5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5556947a-afe7-4b7b-87ca-28dbb8db0790",
        "cursor": {
          "ref": "aafbcb5e-a659-4a65-ab96-4aba5649c5af",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4c289408-e61c-48b1-b407-579af015079a"
        },
        "item": {
          "id": "5556947a-afe7-4b7b-87ca-28dbb8db0790",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "ec08f5f8-7c6d-46b2-bfa6-bb2a27b6b546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca9878f-4ea9-4f54-85b3-bc538a992bc4",
        "cursor": {
          "ref": "64e339f8-8c67-450c-9199-53041d697e60",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1b438c92-4152-4e53-9d26-f530db6a4452"
        },
        "item": {
          "id": "6ca9878f-4ea9-4f54-85b3-bc538a992bc4",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "296459c3-9c7e-4816-9c98-963128de092f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585d346f-37d5-41ac-af7d-e59ec63e3ac3",
        "cursor": {
          "ref": "9f13d4e4-a8a5-4019-85e5-14a755a9926c",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b15955f0-7f3c-49f4-891f-923a245e96a0"
        },
        "item": {
          "id": "585d346f-37d5-41ac-af7d-e59ec63e3ac3",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "6259b760-1401-4a67-b542-e53dbea5447c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17dac4c7-7eb1-4318-8bb9-9601556772a6",
        "cursor": {
          "ref": "c2373dd8-61c2-445b-8803-feb1d629d505",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e8685d1a-c9cb-4f2c-ab63-f07e8a4a51be"
        },
        "item": {
          "id": "17dac4c7-7eb1-4318-8bb9-9601556772a6",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "183c9686-76d3-42d9-95a8-f3c1743b72c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf432497-182a-4fed-a932-4ff19fe08566",
        "cursor": {
          "ref": "314a1b74-160a-425f-986f-1a74e9b12dab",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "95619b23-af5b-4615-9e40-b788225a8ff7"
        },
        "item": {
          "id": "cf432497-182a-4fed-a932-4ff19fe08566",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "030aef57-e761-48c0-8f70-be05e251343f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319148f5-d02e-4c44-b358-5f0b1abd22eb",
        "cursor": {
          "ref": "94a8029a-5b3e-46f7-86a5-7ab402a5a62e",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "101af910-4a74-4386-b633-03654c56f978"
        },
        "item": {
          "id": "319148f5-d02e-4c44-b358-5f0b1abd22eb",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "382b24b5-7343-4b56-bd66-239c393f508d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d95f509c-4f67-423d-9c63-c8b3cb74b2a0",
        "cursor": {
          "ref": "95517c13-60d0-463e-9665-bbe8295a2706",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9663212f-a212-475d-affb-31fba1aa8979"
        },
        "item": {
          "id": "d95f509c-4f67-423d-9c63-c8b3cb74b2a0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "06024bdf-f483-4896-a66c-c30c42b40053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0465fbc-1c5b-46c0-a4b3-c47ce982c5ba",
        "cursor": {
          "ref": "24fc9ce0-b781-406d-9793-433eed3b346e",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0ad8986d-86d8-4a6f-a70e-f18e2acfa4a1"
        },
        "item": {
          "id": "f0465fbc-1c5b-46c0-a4b3-c47ce982c5ba",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f25d7a58-1c9f-499a-83fa-57878fe23eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6995253b-de7e-436a-be96-b91f1fc46f9c",
        "cursor": {
          "ref": "712c9c30-c24d-4238-aaf1-ca78c01cb7dc",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1206c8a0-818e-4154-a14a-1bde5d92fa20"
        },
        "item": {
          "id": "6995253b-de7e-436a-be96-b91f1fc46f9c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8e1cd0de-8827-4866-acb2-8c80c6174980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f789cc-cc7b-4fb4-9173-5b0b4dfa7b77",
        "cursor": {
          "ref": "24b471a8-6ce1-4e2e-9b69-6b5ca3ed9db1",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1041b023-5036-4f8a-8016-99a95489a5ff"
        },
        "item": {
          "id": "e5f789cc-cc7b-4fb4-9173-5b0b4dfa7b77",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "75deb0d8-9560-41f8-b30d-3ce04bb2ad4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340ca123-fb06-4b77-945f-d9a7d88930c5",
        "cursor": {
          "ref": "cee00458-017a-4ff9-a5ec-9dd9e9ceb84c",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "682d889f-6e4a-4da8-b94b-876d0b1186ff"
        },
        "item": {
          "id": "340ca123-fb06-4b77-945f-d9a7d88930c5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "93abc6d1-e17b-4e5a-bc35-f489a1168ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f0dd2a-ad8e-4dcf-b7f5-102d83c8e9c9",
        "cursor": {
          "ref": "1c1fb698-cbc7-467b-8c9f-1637207386fa",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "50631639-eeda-4e8a-847b-538d7b1fcd5c"
        },
        "item": {
          "id": "83f0dd2a-ad8e-4dcf-b7f5-102d83c8e9c9",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "04df1fe0-1644-4cdc-b2c2-7087e2932c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98357437-133c-4665-987a-609080ceb432",
        "cursor": {
          "ref": "5e70899d-9096-4584-a206-05fa70c22538",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "9e4def74-4d6c-4109-bba4-ab5b6d6136d8"
        },
        "item": {
          "id": "98357437-133c-4665-987a-609080ceb432",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "cf50e003-2a20-4c9e-a85e-61c14851e34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af6ff80-4f49-4d06-ad2e-cc2e1db8f2bd",
        "cursor": {
          "ref": "93a6bbbd-f087-4177-bef5-23a520bcf577",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c1907b46-938d-4375-a1e0-63531a4308a6"
        },
        "item": {
          "id": "8af6ff80-4f49-4d06-ad2e-cc2e1db8f2bd",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "fd828c8e-465d-468b-b5db-f0432b59af13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db63e949-0c64-40e9-b9e9-7c60b2ab18a9",
        "cursor": {
          "ref": "44a23560-8c88-4293-b1e3-01e63a841acb",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c1f62d9a-5451-4e2e-8afe-6259a7816e48"
        },
        "item": {
          "id": "db63e949-0c64-40e9-b9e9-7c60b2ab18a9",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d56a8b61-8679-49da-b7b4-7e44459fd7ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee8f4a5-6b99-4830-97f6-192cc0f345d8",
        "cursor": {
          "ref": "98f2e2a0-d7aa-49a6-a485-0e2163e23e45",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0a05d4ab-979c-4576-bc04-60adfee50868"
        },
        "item": {
          "id": "dee8f4a5-6b99-4830-97f6-192cc0f345d8",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d006d92d-f166-4744-b872-ea21e6a447c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f7c355-cc6f-44dc-a10a-838a81ef0dcd",
        "cursor": {
          "ref": "d788268f-9118-44ae-b85f-b03544bd3011",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "471c718e-cc02-4904-9981-f1b4ac7540c9"
        },
        "item": {
          "id": "d1f7c355-cc6f-44dc-a10a-838a81ef0dcd",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a468c542-8580-451f-bee1-2d338cdbce33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6437338f-d180-4e55-ac35-330267007fdd",
        "cursor": {
          "ref": "21e62df4-b11b-47c6-b959-7ad274528d9d",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "55d6b3d8-51d6-4bf8-87f7-bacaebc6cfa3"
        },
        "item": {
          "id": "6437338f-d180-4e55-ac35-330267007fdd",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0f3bc09f-a18a-4b6a-ad55-5ab1e7fef291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd0570a-b944-4f34-ab98-61e629ed6ab5",
        "cursor": {
          "ref": "705b51fe-2d6d-479b-8df6-9252ee7ac2ae",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a42a1024-4770-4242-ade2-615738c62f60"
        },
        "item": {
          "id": "0cd0570a-b944-4f34-ab98-61e629ed6ab5",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "eba70f11-5f5c-4ae6-8561-d372b23c3998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d592ac6-dd65-4fe3-80cc-d4022bb4e3eb",
        "cursor": {
          "ref": "09c6369c-4dfd-476e-bf69-2fa53010715e",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4bd949ca-ac2d-45fb-8b44-55c031be6e88"
        },
        "item": {
          "id": "3d592ac6-dd65-4fe3-80cc-d4022bb4e3eb",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "01b7dcbc-ad16-483e-a5cc-794224baccb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33197f1-f810-4a37-a107-116dd408129c",
        "cursor": {
          "ref": "e45775a3-2737-431b-9279-f81b3da7432f",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "04ddc951-4823-411d-a4c4-a999d42bb0d2"
        },
        "item": {
          "id": "b33197f1-f810-4a37-a107-116dd408129c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "bf3ff3bd-8c1f-47e3-86f0-05fee4482724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd466a0-416f-49f0-8dca-403116e63211",
        "cursor": {
          "ref": "d6ac6975-0bb3-4d8d-897b-3574aeeec962",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9d1510e9-c4a8-4370-90ef-92421c4bb21d"
        },
        "item": {
          "id": "6fd466a0-416f-49f0-8dca-403116e63211",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "43e63228-17bc-4329-bb7e-ef0f77ed5458",
          "status": "OK",
          "code": 200,
          "responseTime": 95,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "3f8ea405-7e3b-4d66-a9e8-985840f72011",
        "cursor": {
          "ref": "745a201a-5bbc-4485-8044-48af5841fce5",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ba99b3fc-45ab-4870-bbd1-b0a114cf4841"
        },
        "item": {
          "id": "3f8ea405-7e3b-4d66-a9e8-985840f72011",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6adeedc8-881c-483c-a69a-ca29a00817a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f88adb-72d5-4691-a61a-864c1f258394",
        "cursor": {
          "ref": "83e67cca-ce42-41a7-816a-043d4d357f7e",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "34194fa1-7ec4-4609-a250-70d3013c8685"
        },
        "item": {
          "id": "67f88adb-72d5-4691-a61a-864c1f258394",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a7ba9190-9b2d-4731-b401-c01c2e386a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653745a7-d722-4eb1-931f-7ef89242cee8",
        "cursor": {
          "ref": "47726c56-4d3a-49db-94a8-4f637920a3f5",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "855228d4-abb0-4f30-b3ed-a62567f65789"
        },
        "item": {
          "id": "653745a7-d722-4eb1-931f-7ef89242cee8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "5c99b9d5-c757-49a6-907b-352889ea0be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4becb1-969b-4e1f-a538-aa0fd74830a9",
        "cursor": {
          "ref": "a4bed8b8-64af-4e22-88ce-31eff2d676a1",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "891d272f-d0f5-49d2-9aab-08ace27b1615"
        },
        "item": {
          "id": "0e4becb1-969b-4e1f-a538-aa0fd74830a9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a6495273-eb75-424f-9b25-351935527882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92f3657-48de-43d5-91ef-aa6c6401fcc8",
        "cursor": {
          "ref": "83781d68-2737-4fe3-9085-9c0f42c8a59e",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9bf82e4f-832a-4b8a-818f-096d4edb18ff"
        },
        "item": {
          "id": "d92f3657-48de-43d5-91ef-aa6c6401fcc8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "73765db4-442b-4ff1-b0c3-19f31cfee041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0f11d9-bf9a-428d-9401-41c450f158bc",
        "cursor": {
          "ref": "bfd692d2-34fd-4c34-b62d-6087665d87a6",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "da90714f-c359-4c67-97d5-efab7e62de85"
        },
        "item": {
          "id": "9f0f11d9-bf9a-428d-9401-41c450f158bc",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f5075620-a136-4916-acf3-c96b7c4aef05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e135d82-0e03-4fc2-93d9-7f6f415efd81",
        "cursor": {
          "ref": "f987ceb3-d368-4c11-9fa3-e242b18fd1f1",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "af28a479-ba4b-493b-8d67-50c420f85a65"
        },
        "item": {
          "id": "5e135d82-0e03-4fc2-93d9-7f6f415efd81",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3f1580d4-fb13-40c1-a3fd-a6f59e3d46eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd60fde-a05b-47e8-8c43-bd3aff8cee7b",
        "cursor": {
          "ref": "b4a096f4-0f34-48be-9573-9be2332187fa",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "20e75794-4888-426a-86d1-979b054288f0"
        },
        "item": {
          "id": "9fd60fde-a05b-47e8-8c43-bd3aff8cee7b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "52c7465a-c9d9-4c39-b41a-49d89f3c6e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab97f20-b2c0-40be-aa36-74aedd1d9e02",
        "cursor": {
          "ref": "c92604aa-4fb5-4b18-a04c-6f4bed064525",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "da1e2f38-b070-4002-936d-12c56f9d2968"
        },
        "item": {
          "id": "5ab97f20-b2c0-40be-aa36-74aedd1d9e02",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e045496f-d886-4949-b335-21f3f6fe5154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3593a7-f3d8-4a87-809b-18cda2f0eb41",
        "cursor": {
          "ref": "9c1ed0bf-f6b6-48bd-8de3-e1a9f5bfb2f1",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0941012b-3324-4d05-b924-9b48761c3136"
        },
        "item": {
          "id": "ff3593a7-f3d8-4a87-809b-18cda2f0eb41",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "91cf0531-56b1-4e96-b0c4-12c83dc4fee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68a1edb-1a7f-4b74-8c0b-d162fe711196",
        "cursor": {
          "ref": "d006db97-c84f-48a1-94a9-22437b13ef47",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4d7734a7-b0bd-42fc-b78d-e8fa9b882252"
        },
        "item": {
          "id": "f68a1edb-1a7f-4b74-8c0b-d162fe711196",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ab45c1a6-32a4-466b-8a50-72c6d064cf85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e3d104-8fb9-4d88-b0cd-d98b8fb523b4",
        "cursor": {
          "ref": "30089950-f6da-48ae-8b03-c67de7db359f",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "23f4cf99-170c-42d2-9636-d148fdb99d61"
        },
        "item": {
          "id": "67e3d104-8fb9-4d88-b0cd-d98b8fb523b4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d99704ba-5a9c-4846-9338-e5cba1bc2204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb014f5d-f2cc-4e56-9616-8d3f66214368",
        "cursor": {
          "ref": "b8441760-96cf-4f55-82c4-1a492d19b3d2",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "eb18b4da-e6d9-4da3-b863-a78370ab95e6"
        },
        "item": {
          "id": "eb014f5d-f2cc-4e56-9616-8d3f66214368",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5cdfbe30-9cb2-4d72-add5-801c080485a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46742d26-ca4d-46c3-83fa-c18e3a3164b7",
        "cursor": {
          "ref": "2c3e5967-09d1-4dae-abce-bd5eb57eeac8",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "21aa2dba-ee31-41ba-b6d7-3c0b7578d8dc"
        },
        "item": {
          "id": "46742d26-ca4d-46c3-83fa-c18e3a3164b7",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "73c0cbd5-3fb8-46e4-acda-031d3198ccc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b7259e-613d-4080-a469-edba569bd1a5",
        "cursor": {
          "ref": "e10c18c3-bf32-4941-8893-77fa9f9952c1",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6cf0356e-dfa8-4e2f-aa06-faeee28226ce"
        },
        "item": {
          "id": "46b7259e-613d-4080-a469-edba569bd1a5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "62aac570-a401-43ad-b2e5-a837997729cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d7ffc8-48e9-400a-8b2c-d5457294be88",
        "cursor": {
          "ref": "ed954825-ff79-4268-858a-4c58ea329eb7",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "721c02cc-0213-48fc-9bd3-bbbdafe95da7"
        },
        "item": {
          "id": "c9d7ffc8-48e9-400a-8b2c-d5457294be88",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "79eb6c86-13f1-4b59-b738-7a9e9c7a954c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e14b9e6-56f6-452f-bbed-803e63ec7bb6",
        "cursor": {
          "ref": "7d0bef23-0b6e-4dee-99ef-d2167b22cf91",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d2b821e9-4c73-4378-b986-27bd30727705"
        },
        "item": {
          "id": "7e14b9e6-56f6-452f-bbed-803e63ec7bb6",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "21bfc360-ff9b-45a4-be96-e31cd3292474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a4a99b3-3773-4139-8383-58cb25462422",
        "cursor": {
          "ref": "cf481760-66f7-4b66-b19f-f270a9e91372",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5c1a4c16-6091-4659-a3f1-24c763548458"
        },
        "item": {
          "id": "9a4a99b3-3773-4139-8383-58cb25462422",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "62a67b43-33c7-495d-9c57-a7fd9922887a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612342ff-f59d-4c6b-9c2a-ed867d037176",
        "cursor": {
          "ref": "0ddbd593-144f-49f4-834f-5d9a55e51b28",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5a50d0bc-f20f-4cc1-8728-e45b4918a589"
        },
        "item": {
          "id": "612342ff-f59d-4c6b-9c2a-ed867d037176",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ccd5a59b-9f30-474f-8565-427270233a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d66bb9-f803-4f0b-b595-63606e068c21",
        "cursor": {
          "ref": "295f09b9-e06d-4b1a-8ef1-40bf58e57372",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0090f8e4-32ec-4b24-9850-fe889bb43e87"
        },
        "item": {
          "id": "38d66bb9-f803-4f0b-b595-63606e068c21",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b3590e97-9804-4633-8d18-cc452ef42dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dcceabd-e1f1-4bfb-a895-2ee1aff0a83e",
        "cursor": {
          "ref": "ef708c47-cb6d-4586-be74-3e389dfdaf6a",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "093b6e35-0912-4e14-a621-2d25e3279c09"
        },
        "item": {
          "id": "4dcceabd-e1f1-4bfb-a895-2ee1aff0a83e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0cf81130-5954-43c8-9779-dc560c796c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a05dde3-dbee-4317-8497-cf701acfabf7",
        "cursor": {
          "ref": "6d4f9249-00d3-4815-8f5a-1a8c28bb36e1",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "2c429637-b984-4c0c-970f-68f1e7f34f05"
        },
        "item": {
          "id": "2a05dde3-dbee-4317-8497-cf701acfabf7",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ef2b3320-c90d-4291-bc4c-410ab653ff39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6035ef19-205f-4bb2-aabd-b9b172efa8d4",
        "cursor": {
          "ref": "bf710405-e9c5-4543-b838-ef365bef0d8e",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "88f92b1f-b089-4a4e-8cb9-0b828f4a4a00"
        },
        "item": {
          "id": "6035ef19-205f-4bb2-aabd-b9b172efa8d4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ea62ace2-3e5b-4f36-b5de-d78ed894fdfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c38a93a-78aa-4b4d-868d-20ec1f87b4a7",
        "cursor": {
          "ref": "14cb14d2-5d88-4edd-a3e9-0be06c5b5474",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "dee0c213-67c4-4185-92e1-99b0b74a13da"
        },
        "item": {
          "id": "0c38a93a-78aa-4b4d-868d-20ec1f87b4a7",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ca8ae259-e9a1-498d-a448-1d3970e220ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784c2166-5edc-4b3b-ba21-b779298cc769",
        "cursor": {
          "ref": "52bbe0b2-8f04-4088-ae64-a9d94f11de9c",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f75d989d-9de3-449d-acfa-f6b6a807b5a4"
        },
        "item": {
          "id": "784c2166-5edc-4b3b-ba21-b779298cc769",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b58b8c9d-81aa-41f4-8a0d-0c972d5af59d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb524db-656f-419c-9014-94b1eeae5a9c",
        "cursor": {
          "ref": "6cd110dc-0876-423d-a5bd-863b9f0fdee9",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e27969bf-f49e-45b7-90c6-5fbc4ed4ca9c"
        },
        "item": {
          "id": "2cb524db-656f-419c-9014-94b1eeae5a9c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2aa864df-c91c-4307-b9b1-ce5048eaf2b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2fbb98c-f673-4929-8298-de03e93f2b63",
        "cursor": {
          "ref": "f855090c-58d8-4eef-94e9-1e737bdd5268",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6cd13d25-7c60-4db1-b5b1-9c4829f45fa9"
        },
        "item": {
          "id": "a2fbb98c-f673-4929-8298-de03e93f2b63",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "14c5974b-9b2e-4cd7-8c6c-d4d4b4446f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "939ad3cf-db4b-46f0-8146-f6c60bedd3dc",
        "cursor": {
          "ref": "7e5c41a3-7bf8-4cf2-8f19-33cba8b550b1",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "97606743-2691-4a6f-b710-444de3107574"
        },
        "item": {
          "id": "939ad3cf-db4b-46f0-8146-f6c60bedd3dc",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9cb1ccb5-6e4b-456f-abfe-1bbd35547ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4b76a0-ffdb-4a0e-a647-64001425d9e7",
        "cursor": {
          "ref": "d687caf0-de89-4aa4-af3a-f6def52f5db7",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ab48a729-4b3a-4c25-847e-0d9dbc8adb95"
        },
        "item": {
          "id": "5a4b76a0-ffdb-4a0e-a647-64001425d9e7",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a03e0214-518d-437a-95b1-6057e48bf924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09aaf252-9e3d-4fb8-88f9-ccf2ea4b1e5d",
        "cursor": {
          "ref": "a9dd47b1-8e8a-4217-bb96-224121739d04",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3c2c2836-7d4f-41c2-90f4-3d03c38167a1"
        },
        "item": {
          "id": "09aaf252-9e3d-4fb8-88f9-ccf2ea4b1e5d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "79136a0b-6de6-4b45-ba1f-c093e76c0d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6653c65a-a168-4124-857f-69898209c8b5",
        "cursor": {
          "ref": "00ecc585-46bc-43cd-b200-0827c39dc617",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1570934f-d076-4a53-8603-730b9367e01a"
        },
        "item": {
          "id": "6653c65a-a168-4124-857f-69898209c8b5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9289125c-5ef5-4cea-ba01-f0e124d23cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94e53fa-d896-43f0-9a7a-d75c33ad94eb",
        "cursor": {
          "ref": "1c79c456-cf8c-41a8-8757-dd6d0a9839c3",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3846fef3-d99f-4a49-a536-74815f02884e"
        },
        "item": {
          "id": "b94e53fa-d896-43f0-9a7a-d75c33ad94eb",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c6ff8a74-d69f-4287-a6e9-e097171dbca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634c090f-e959-46fc-aec1-596049b42260",
        "cursor": {
          "ref": "ce3168a4-7bb6-418c-8f2f-3f76fa110695",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a62b6219-4e48-4bf4-9836-f03956d57ead"
        },
        "item": {
          "id": "634c090f-e959-46fc-aec1-596049b42260",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "fc121f17-c00b-4cb9-9291-73a4a6658ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac08a3d0-33c2-41d2-a445-3a81c9b83ba5",
        "cursor": {
          "ref": "be6fc12f-9aaa-4cb2-b9b7-f886c625306d",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d2c8c41b-3a3d-4432-9c61-2d4012e1f4e4"
        },
        "item": {
          "id": "ac08a3d0-33c2-41d2-a445-3a81c9b83ba5",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "efae1a46-9649-4828-a2a4-0b3a27f226f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffcbb624-6dfa-4b8b-a0ca-430f8e456093",
        "cursor": {
          "ref": "feda0809-aac6-42df-8502-ebc2a3395ed4",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e78a8e64-513a-4dd7-891a-6c1fbab05eef"
        },
        "item": {
          "id": "ffcbb624-6dfa-4b8b-a0ca-430f8e456093",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a4aa62e5-47ae-475d-82bd-6119e4632a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bad652e-3107-4651-a546-42432736bda8",
        "cursor": {
          "ref": "9060afec-36a3-4e87-8868-0cf6345c887c",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5027eee0-7a29-4cb7-9de4-f35adb35ef51"
        },
        "item": {
          "id": "2bad652e-3107-4651-a546-42432736bda8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "416e478a-86d4-4de8-bbaf-89bc20f2c3af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589eed19-e471-42af-8810-d98a9fe4d7b6",
        "cursor": {
          "ref": "f4716f9c-b5b2-4f6b-9786-a783d1b695bf",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7a288c03-b100-415a-975f-47d91119530b"
        },
        "item": {
          "id": "589eed19-e471-42af-8810-d98a9fe4d7b6",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "da75c63e-d99c-48ea-a57d-5a5446b3eb8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52831022-124e-4fba-9355-cce9d29f09f8",
        "cursor": {
          "ref": "3eb1df2c-ea3b-45bb-b40d-90ae68a1c08c",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5c5a1049-7572-4f7d-8c91-bb9054ffc4eb"
        },
        "item": {
          "id": "52831022-124e-4fba-9355-cce9d29f09f8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6c5bec90-f294-4d24-89d3-9b46519e30ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2bf192-12b2-4cdd-81a1-2182f5a3defc",
        "cursor": {
          "ref": "c5c507e5-383a-49f2-a168-a4ad230dd548",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "52117ea6-dcb4-47b5-980b-4cc186459406"
        },
        "item": {
          "id": "bd2bf192-12b2-4cdd-81a1-2182f5a3defc",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ad8f2fe7-158b-4151-af34-412fbaa1b279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9f7dc5-5532-4b8f-a4a4-473842c21db2",
        "cursor": {
          "ref": "a36b9122-0f76-426a-a44d-fb718d76d405",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "64ecac18-3239-49c8-8b30-a9334f76923a"
        },
        "item": {
          "id": "4e9f7dc5-5532-4b8f-a4a4-473842c21db2",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e7061236-6fe0-45c1-96cb-767eb3572d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41b5d59-8ebf-4afb-afed-a6c28556570e",
        "cursor": {
          "ref": "f26b4050-a1f3-4347-858f-e1cac9cca4fd",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0cd0da40-c9a3-4aaf-a0e0-58d0e361738a"
        },
        "item": {
          "id": "b41b5d59-8ebf-4afb-afed-a6c28556570e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "11397a1b-4458-4def-a169-f342a8f76d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b53f4d-0110-4e2f-bff7-48b98b8dc32d",
        "cursor": {
          "ref": "c122da77-fa31-4f68-b08e-f9242c4f74e0",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "13134c39-1129-4aa7-857d-674a83021945"
        },
        "item": {
          "id": "74b53f4d-0110-4e2f-bff7-48b98b8dc32d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "17daeacb-d672-4e12-b3bd-e56802f0c0cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cacadb8-9613-41dd-a14f-4fb34682cb4f",
        "cursor": {
          "ref": "d016c8e3-d971-4b12-98fb-5e8f134e02e3",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "75ac36c9-8a80-407e-9fee-d6101684d62f"
        },
        "item": {
          "id": "1cacadb8-9613-41dd-a14f-4fb34682cb4f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "88394ad6-b4da-4cd9-b35c-d33c757d4e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b46a95-d985-4312-8d43-1bfcc999f0f9",
        "cursor": {
          "ref": "0f74c6e3-bfb7-45f5-8b0c-e81417451923",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e1d113b2-ae00-4df2-94ea-ea26663c85d6"
        },
        "item": {
          "id": "45b46a95-d985-4312-8d43-1bfcc999f0f9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9e6e310f-80e3-48f5-9d63-967613259408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de71562-3ce8-4efb-8407-5dba251922b9",
        "cursor": {
          "ref": "6267ce44-5c2c-4f1b-8695-29117198155b",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "54f011c3-0122-4a0e-b036-bf601bf3ea73"
        },
        "item": {
          "id": "2de71562-3ce8-4efb-8407-5dba251922b9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "aa0df7fe-5b1b-41c3-adcc-6841d450d7c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ba3152-420a-4452-988e-f21458df6336",
        "cursor": {
          "ref": "1d9827ef-7d18-434d-ae0a-3b6fa8153d04",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "52dce6a9-76aa-4c9e-9657-1a730fe49900"
        },
        "item": {
          "id": "e0ba3152-420a-4452-988e-f21458df6336",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "fc0c0e70-1e7d-468f-9ac7-7701130af328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ed2059-ab3f-480b-8f7b-6cd25c2a5186",
        "cursor": {
          "ref": "c54a05b1-f1cd-4b40-8bf4-20f919e78baf",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8688e9da-08d1-48b9-bb21-5735de191503"
        },
        "item": {
          "id": "34ed2059-ab3f-480b-8f7b-6cd25c2a5186",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "299283d4-c140-47d8-a3a9-a91f93619934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb127aa7-5b8c-4f56-806c-66783b44cc2f",
        "cursor": {
          "ref": "e9062249-2db9-4d32-8af1-c6808e36ed82",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9786b82b-1c75-4a7c-b698-1ac265b983ef"
        },
        "item": {
          "id": "bb127aa7-5b8c-4f56-806c-66783b44cc2f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6cd76898-45d2-4a82-afba-00681bc73fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766b9a91-6197-4362-90a8-1138ac8b2b66",
        "cursor": {
          "ref": "2447a0b7-eaf6-4975-b2c9-1f5499231f84",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d459ac85-cebc-4a5c-8287-6ea5d85cb329"
        },
        "item": {
          "id": "766b9a91-6197-4362-90a8-1138ac8b2b66",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "299b74ed-a873-4f4a-b5ea-a540c6bf0f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae447bb7-1af2-44d1-8674-671debfd59c0",
        "cursor": {
          "ref": "6cf32540-9d4c-4a6c-af60-89cf83a78bb1",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1407d9e2-988e-4523-aec1-db0ed9d7db6d"
        },
        "item": {
          "id": "ae447bb7-1af2-44d1-8674-671debfd59c0",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5c64a211-7ed9-4636-910a-9cd10bbaf4d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ab5d0b-0f56-4fd4-8673-59e91d1820a1",
        "cursor": {
          "ref": "2ab44e27-7a3f-4190-ba2d-1f96a28da0fc",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "115461a8-37af-4bf9-bd2b-668d3f1a35c1"
        },
        "item": {
          "id": "77ab5d0b-0f56-4fd4-8673-59e91d1820a1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "bd0363b6-708c-405a-b9f2-d5b401b36bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01969119-7a14-4c24-b773-7309d065d285",
        "cursor": {
          "ref": "e2b05097-3ba0-4076-ad4f-15a779b351a3",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ad381439-be11-4900-9cc9-da3ecedfa6d2"
        },
        "item": {
          "id": "01969119-7a14-4c24-b773-7309d065d285",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e0a7a0dd-579a-4e76-9088-5c46c66637b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9a4c7c-a679-468a-b91d-fe79e09f2ebc",
        "cursor": {
          "ref": "be5eb352-8ecb-454a-8c01-4d27b40de7da",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "19aea1fe-76a2-4b2f-82ed-7a584608b54e"
        },
        "item": {
          "id": "ea9a4c7c-a679-468a-b91d-fe79e09f2ebc",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e3d89f87-a2fc-46d1-bef2-d7985bf7f6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5a1d8d-7d44-4097-b560-b3d195b9b80a",
        "cursor": {
          "ref": "4392e87b-4b27-4715-b5ce-a47d7912d226",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7471c8cc-76c8-4fc3-9bb8-dc9229c5c76c"
        },
        "item": {
          "id": "ea5a1d8d-7d44-4097-b560-b3d195b9b80a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ac36e6e3-9a36-4bd5-92ab-5454995423c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3980042a-92bf-4807-b171-ea4f44d3d2b3",
        "cursor": {
          "ref": "5c753533-b6aa-4b34-9327-4fe3becd418e",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "9677b39f-fe8f-4e76-853f-9d4417c10ae2"
        },
        "item": {
          "id": "3980042a-92bf-4807-b171-ea4f44d3d2b3",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "32948e92-6207-4e3d-9294-453d574d205d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9b8fcc-923c-4fa3-a6ca-d2a8f277584d",
        "cursor": {
          "ref": "931f841e-30b5-478b-83e5-0826376e906d",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "c628dd1c-7b76-4432-b9c2-16d264a3e4c5"
        },
        "item": {
          "id": "4d9b8fcc-923c-4fa3-a6ca-d2a8f277584d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9ac64482-0435-4a3e-9a18-5307ee1ad695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7757a203-8e14-42bd-babc-f7d07f50a796",
        "cursor": {
          "ref": "3c103dbc-d7ef-449c-9a58-0e6c60842b38",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "98532cff-b3d2-48e1-9d56-9d13164cfa3f"
        },
        "item": {
          "id": "7757a203-8e14-42bd-babc-f7d07f50a796",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "fb27462c-41cb-43a7-b2a6-230b98d9c906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2b54c6-d70d-483c-a8f9-8f33cb7539e5",
        "cursor": {
          "ref": "54f2edfa-ab7c-4c65-b4d7-32b1dcfbffe6",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "141937a1-5702-443d-be73-f02d0e014cd5"
        },
        "item": {
          "id": "ec2b54c6-d70d-483c-a8f9-8f33cb7539e5",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7bed45d2-a072-4b9d-b80a-fddf779988b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547eb2ee-b6a5-44e2-b89a-926644b2bdf9",
        "cursor": {
          "ref": "e7bd65f8-fb70-422f-bb25-bc36a0154ed0",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "a1f95cb4-f286-4093-9474-7dbba6b36fc2"
        },
        "item": {
          "id": "547eb2ee-b6a5-44e2-b89a-926644b2bdf9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "fa076194-d83d-4b99-a281-150a43a7d488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd111c22-a4c9-4d57-a249-7d1bef492698",
        "cursor": {
          "ref": "9178e6bf-b0fd-48db-9f56-c7e6d7ccf089",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "fe8e4007-09b0-4ac5-9807-0a85c22bb6d0"
        },
        "item": {
          "id": "cd111c22-a4c9-4d57-a249-7d1bef492698",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2773eac4-6f42-4569-89b4-f84a68dd2b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd9f732-449a-4f35-ba0f-d4d397b783dd",
        "cursor": {
          "ref": "981f1d06-ecfc-41fa-8cf8-78497f77d025",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "367e9220-24c3-47bc-b35e-6211d1b0c7f6"
        },
        "item": {
          "id": "0cd9f732-449a-4f35-ba0f-d4d397b783dd",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ba5b853c-e27c-4fac-8336-2fbcb4990e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee2144d-6393-45ca-9563-387d24e87719",
        "cursor": {
          "ref": "dc603637-890d-4559-b8c1-79a770ec3cb6",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "f6f2027b-a530-4022-aed8-02d0717d21e9"
        },
        "item": {
          "id": "9ee2144d-6393-45ca-9563-387d24e87719",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e4846ec9-3442-47df-9b3b-10f100766554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9908faaa-ebcb-4a92-99e0-b725ee9cd7d4",
        "cursor": {
          "ref": "aec92fca-4af8-4d58-bcfe-8895262f95a8",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "fff4d675-6b6c-4ce9-9459-70972fbac672"
        },
        "item": {
          "id": "9908faaa-ebcb-4a92-99e0-b725ee9cd7d4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0212ea66-3382-430f-b6eb-3a497031ec3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec31528d-ca2e-4341-9964-3780fafcf9ce",
        "cursor": {
          "ref": "9df4b760-4ac1-41d1-a9f0-4489a2ef5d86",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "9f632d80-b935-4883-a8e4-97c13d12e474"
        },
        "item": {
          "id": "ec31528d-ca2e-4341-9964-3780fafcf9ce",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "10abbcb4-8530-4030-a9dc-6fd0d6a6e9d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385ef8ce-fa01-47d2-94cf-001f8c2bcbc0",
        "cursor": {
          "ref": "bced806e-8334-4d9c-85c0-5b2a78ff37fc",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "9b22f89c-8ecc-4274-a0a8-01a8467813bb"
        },
        "item": {
          "id": "385ef8ce-fa01-47d2-94cf-001f8c2bcbc0",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "15a842a3-62dc-4c84-b0fc-d1edbc502c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ee44c6-1cfb-477d-9c80-10045629d3d7",
        "cursor": {
          "ref": "9a2fff35-e246-4b70-80d2-0389a99f4154",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "3ec619da-ca0a-4299-bece-4d3248105ec1"
        },
        "item": {
          "id": "71ee44c6-1cfb-477d-9c80-10045629d3d7",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7f5d6567-6890-4789-81f7-3ef5e984cc77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34079d4e-27b8-4ce7-bbee-bb30b106d901",
        "cursor": {
          "ref": "66fbd19d-8886-4704-8aab-ba1cb9364abc",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "b591c0e2-9a11-4906-bc0c-3271d499144e"
        },
        "item": {
          "id": "34079d4e-27b8-4ce7-bbee-bb30b106d901",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "42bb670c-f1d6-4ec3-aacd-f8b79a486592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f327d174-b7b1-4ed5-8013-b16dedbdb239",
        "cursor": {
          "ref": "06854483-c8a4-4eec-8922-c5d8cb26d128",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "3642522e-aef5-49c7-96ce-617b3befbec6"
        },
        "item": {
          "id": "f327d174-b7b1-4ed5-8013-b16dedbdb239",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d2c0d138-82e9-4942-89bd-286bffe59b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85bc5164-2f86-4827-9381-d1c339f3e115",
        "cursor": {
          "ref": "7335b308-29a4-4312-9c17-94e781bd6121",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "2d081469-a791-4b1b-a90f-0b19f7be285f"
        },
        "item": {
          "id": "85bc5164-2f86-4827-9381-d1c339f3e115",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1b482d36-41ce-4e75-9f12-173752768ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba0ade9-1e27-4cc0-b579-0fcd9a0d5d0c",
        "cursor": {
          "ref": "74a10f0d-6ff1-4de9-bc5f-5c1ca11127d6",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "f1335fbd-3f73-4330-9ca3-e35999507b69"
        },
        "item": {
          "id": "8ba0ade9-1e27-4cc0-b579-0fcd9a0d5d0c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7d72c7c8-c00c-4ef1-9556-d7125a02ade8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a4c486-4cfb-49df-a13d-bced26755601",
        "cursor": {
          "ref": "f3fd347c-067c-42ca-98bc-4c4adbb9d7a9",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "3e7e7201-55ee-4c56-ba7c-21ec50d897ca"
        },
        "item": {
          "id": "c2a4c486-4cfb-49df-a13d-bced26755601",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1561fe59-417a-4912-bb27-3b1c34509d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d22158f-b319-4375-bd94-84860a0f8bac",
        "cursor": {
          "ref": "96fb804f-bf03-407c-a3d1-8e1f67b9e657",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "c2f48730-dfe0-4a55-a612-fbf5cbb8f12b"
        },
        "item": {
          "id": "0d22158f-b319-4375-bd94-84860a0f8bac",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "08bad058-7b18-4425-bf60-544c4a64be3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03e51d8-4998-47ca-915f-acb1e7aa5481",
        "cursor": {
          "ref": "f9a1fb19-5ab7-4726-92c3-a00741041b03",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "ef9191a7-8a15-4cd6-a569-cbf0bdf325d8"
        },
        "item": {
          "id": "b03e51d8-4998-47ca-915f-acb1e7aa5481",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3c7b1645-18bd-4d82-8131-4700ab72b365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3edee3b7-52de-4008-96f6-47e4949c2fe7",
        "cursor": {
          "ref": "e94e385a-d2c7-490a-9e82-5f91e613c61d",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "c7609c8c-f2e9-4bb0-b603-8945dc48ff5a"
        },
        "item": {
          "id": "3edee3b7-52de-4008-96f6-47e4949c2fe7",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9e5349ed-5fd8-44d5-a549-b0b420fc91cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "408bf3d1-eebb-420e-b4ed-0cf3f68960b2",
        "cursor": {
          "ref": "3e3ca742-63ba-456a-94dd-6aba370d6fad",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "379b352b-b41e-4037-8045-3c1ab28fc59d"
        },
        "item": {
          "id": "408bf3d1-eebb-420e-b4ed-0cf3f68960b2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3ca3ae0d-d430-400f-bb93-4198da8526e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43af3fe6-d444-4b9b-8928-4d1eb22cb971",
        "cursor": {
          "ref": "65e6aff6-ecb2-4209-a464-edb959622ab3",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "1e376e47-14aa-4445-81d8-0e1f975565ba"
        },
        "item": {
          "id": "43af3fe6-d444-4b9b-8928-4d1eb22cb971",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2a21b1e7-581c-49e6-a6a6-b87476d72171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11a918e-7d0d-4960-9212-a0c5f8d67502",
        "cursor": {
          "ref": "b8ec390f-85ef-47f8-b524-e2a10c952e71",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "19fec8e3-4b2e-4526-a096-3b808cdd5649"
        },
        "item": {
          "id": "d11a918e-7d0d-4960-9212-a0c5f8d67502",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "24e51fbf-34e1-4134-9178-412dc6f2d3ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657cb456-0e89-40ac-9342-98d9f6961a7b",
        "cursor": {
          "ref": "f77e08d7-636f-4f4f-989f-944e9e6b7170",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "f7447344-dd21-4ff2-a14a-0b2872e60e5b"
        },
        "item": {
          "id": "657cb456-0e89-40ac-9342-98d9f6961a7b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "fea27068-1bfc-4571-a8d8-cb33fd839c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c93ac9-9acf-4d85-b573-ebd0a541f54b",
        "cursor": {
          "ref": "ec67696e-1788-4100-b1dd-7296b3d5999d",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "67bf627e-5825-434a-9482-33ae4fae1a7f"
        },
        "item": {
          "id": "65c93ac9-9acf-4d85-b573-ebd0a541f54b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "beea92e3-e687-4253-9e9d-139951f89e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7265e592-e1e2-4d7b-b50b-8acb260991af",
        "cursor": {
          "ref": "97587d1a-61a5-4657-a25b-5fcd6f2b428b",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "bd07740e-6046-43ea-9cd8-189d152582d4"
        },
        "item": {
          "id": "7265e592-e1e2-4d7b-b50b-8acb260991af",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c41846b9-be6f-4634-99c1-254dabb04a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f6f7c2-93eb-4757-a224-abe61826a2b8",
        "cursor": {
          "ref": "7b4bfc49-3da5-4699-b849-02a89fd89b78",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "3df53e54-6193-4f09-bf1f-1517fc484f70"
        },
        "item": {
          "id": "63f6f7c2-93eb-4757-a224-abe61826a2b8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "77f19fe6-454d-4a42-8756-32dd3666f3f9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc17d80a-9bf4-49dd-9565-e303a2c88354",
        "cursor": {
          "ref": "b63a6099-ebf9-45b8-aebc-4bda521c6d3e",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "6be3c1f8-879f-464a-8fa4-6e43d346881b"
        },
        "item": {
          "id": "dc17d80a-9bf4-49dd-9565-e303a2c88354",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ff640634-5021-4e86-82f3-b325782624cf",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5099e30-20a9-4cbc-8f6e-730dcd0a3f09",
        "cursor": {
          "ref": "c0b98ffa-6eb9-4729-8d85-ced8a0d70b48",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "7d242504-6672-4f76-a1c5-914b2fe9fc86"
        },
        "item": {
          "id": "c5099e30-20a9-4cbc-8f6e-730dcd0a3f09",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e936b7ca-b420-4e03-9095-4360b597dcfd",
          "status": "OK",
          "code": 200,
          "responseTime": 3050,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d6baa0-216b-40e4-b407-528b953a15d6",
        "cursor": {
          "ref": "dbbf8518-011f-47e1-8c0a-a459993f2871",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "9e2cd86e-8952-4c77-9edc-30317820585c"
        },
        "item": {
          "id": "49d6baa0-216b-40e4-b407-528b953a15d6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b6bf5c15-7ccd-4b15-8cea-557ea604f59c",
          "status": "OK",
          "code": 200,
          "responseTime": 2716,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f73db40-dbc0-4fc5-b2f4-fdc670e07909",
        "cursor": {
          "ref": "204455ec-d7bb-4c70-b070-e10707db23ef",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "25c0b79e-add6-47f1-bcba-60e65bd01ec3"
        },
        "item": {
          "id": "0f73db40-dbc0-4fc5-b2f4-fdc670e07909",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ecb8a3bb-29a4-4ce8-a9f2-04265c464a11",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 366,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f73db40-dbc0-4fc5-b2f4-fdc670e07909",
        "cursor": {
          "ref": "204455ec-d7bb-4c70-b070-e10707db23ef",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "25c0b79e-add6-47f1-bcba-60e65bd01ec3"
        },
        "item": {
          "id": "0f73db40-dbc0-4fc5-b2f4-fdc670e07909",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ecb8a3bb-29a4-4ce8-a9f2-04265c464a11",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 366,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41bc360f-d6ad-4d1b-8366-096144e2b3f3",
        "cursor": {
          "ref": "4567092c-d0fb-4fa7-a2aa-8fad37188495",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "e7d77c74-bf3c-4b21-a788-f0fde7a0d96e"
        },
        "item": {
          "id": "41bc360f-d6ad-4d1b-8366-096144e2b3f3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "118cb1e6-bde6-4ecd-a051-6574914c1f53",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 137,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b473e4d-c15a-4b67-812d-0794e4839f7c",
        "cursor": {
          "ref": "b1a37e3b-7d47-4468-8ce5-c2236c639966",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "ea92a013-9e85-464d-900b-4fd7bdaf4dd1"
        },
        "item": {
          "id": "7b473e4d-c15a-4b67-812d-0794e4839f7c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ea7d9f1a-adcc-475b-9909-7e958be1fcde",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 206,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}