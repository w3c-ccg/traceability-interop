{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c5dbf291-cebc-4898-aec9-d7a264ce767f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3aa64c47-7912-44f2-b323-8986c550f9e0",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6535041c-f6e7-4828-b070-1bc391221a93",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "de5398f5-7374-4f3d-b645-861bc82bb625"
                }
              }
            ]
          },
          {
            "id": "cfed24e3-27b4-4e92-ac86-59871910be48",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e5ba5a09-c863-4db8-bd7e-700e78eb2066",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cbc92ced-63c7-4bd1-be82-39c5c74a0f59"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2c3310c5-1bd7-45ff-868f-fbac64903283",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c15d1a7e-7737-4e06-92dd-382b86c522c5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "11d1682a-1b3b-486e-8f9a-609b21c0dd0c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "18994ea0-8443-4046-8fd7-5f8d840e0298",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3e134b13-f4fe-434a-ac56-f7a0cd659035"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2859e0b5-ffdd-4546-b76d-8e67fc3d529b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8b8ce111-8f1c-4d47-adf0-ae9b9c6a8d0a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a6be899b-30b9-49a4-83e1-c216bc2a05c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9260e400-63cc-4650-aa9a-d001551bc18d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "170ad876-5e54-41d6-a858-1f9a2ec328cd",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "76b9fb78-ca2f-45b0-aebb-1fe0176709c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34b59b60-9729-4f1d-9f0f-ca55006351cd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "db9fce03-4a35-48e1-a1f6-e3cff7258c39"
            }
          }
        ]
      },
      {
        "id": "0e69a52a-ffcb-4b96-a80e-62b76a6e15a1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9391e215-05f6-4f87-85b5-edfc4731bd03",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ac9e358c-38e8-4120-b4b4-715bb8a3916d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dbe64ec1-f573-47a5-b222-38ba27becdb6",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f98097b-c291-402d-aba7-32a607deb01a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "094e80a9-6014-4409-9a95-8b81238b882e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56f98d3-a997-4c7f-a75f-aad5031dede2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8678629e-2eea-4203-ab1e-cc3ca572e275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89f464b1-6e10-40a7-ad9a-a662e3cda71b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7b517a-0a63-4f2f-9db6-86a2dc25cad3",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d766a66-d46e-4643-9f28-ed73d420c8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "405e66b1-04e4-4f01-9c99-7589327224e2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dd4a84d4-f321-430d-b19d-80ff198451e0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "479fb137-1099-48de-87d2-eec57eaa24af",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb26814-609a-4d8d-bd94-11d12fd0a917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1165d50-629b-4273-9ad1-874075bc6b35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b33ff1-39e8-4b3d-a663-c0aa48027a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3feb14e5-1fbb-4941-ab80-58d318fc81a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bdbbe56-bf6a-4f50-8566-17fd12f18820",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0f71fa-9bef-43b1-b269-ab6d9c5083e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6484dbfd-b2fd-4ad9-bc44-9c4c1446b18a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29581113-ee0e-460b-ba80-ddb5b6326148",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "1419304f-4afc-48c3-a8b9-37659120e667"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "84cc9254-5e5c-4b9d-b3e4-3d7adcfe86d9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3d7b6ce5-413d-4563-a008-9a360450776b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b999bdd-9287-4e94-a5cd-c84ac96f8102",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "deb39e47-6d45-45f7-b8c1-36f9c96b136a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc04935e-2636-4867-a9a7-6c242a6772c8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "d887b37b-c450-4c60-8cd9-9deeae3d86b8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa082e78-e7e1-45cf-9fa4-a4e88e016124",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "85e82a39-7b16-4c71-96ec-fdd4446cecda"
            }
          }
        ]
      },
      {
        "id": "1628fbbf-5108-4e24-b13e-28847dce652e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6323deff-f97a-4ed1-a2fe-c44cf4eacdef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e7c4e686-9b6e-4f2e-a2a8-02d330305e19",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6e146d28-feff-4fb3-a3ef-1039e8d77ee1",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f1206c-051e-4f1b-a400-e3130da5b2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ca34334-41d1-4b77-a6f4-5a0687f3d7f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c356f694-440b-44c1-8bfd-38040c9d2cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0701f95d-0eef-4989-9e3e-3973e12a6abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3adf3da8-50e7-4be4-9494-e4a189db2df1",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d9437c-6b32-4d66-86f5-4421d33aa432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22913b8d-c233-4d19-91d2-946f58e99d4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c8d0519-eaae-4ebf-9ff6-7ae71ade46f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c153431c-a5c8-467f-99e5-81fa3d887048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150bdba0-dcca-45fa-876d-08d3202073ad",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5633f459-0809-4681-a2a4-70bc65f92d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04dcbdbf-02f2-4736-a96b-3faa066fdfbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edca54ab-8bb6-47bf-bd29-280c49c8b031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b80189c-792b-4b00-9c21-130e140d717a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ddadc35-2fc8-4cc7-b42d-0f139e805520",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d43088e-78ca-4342-85eb-dc4943598d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea68a60-6642-41f6-b820-755bf7572a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188a62bc-0620-4188-9c3d-c5c0c01ab6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abbe6e96-22b3-405d-970c-b040616cd8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cfd15cc-7749-410f-b759-368fe7d8a261",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b121c7-8745-42ac-b193-4ac0e47d94b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b06388e-7e61-44b9-9cd8-6b673de3d10e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50a343a-e92d-4016-a5bd-7f8a48724273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "123e9551-020f-483c-aba0-bfd411732262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84eb1418-ca48-4766-9af7-99eb3d9a757e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16558b4a-9a57-4e1c-a4d0-af94545d2de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f6bb7e-7d10-41fc-b9c5-53183cd8366d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af44ef07-e694-4b7f-9430-0d74cb336163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4b8ef96-3b4a-47d8-b106-2343eebd576b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b08e81-e07e-4b49-ab76-654a0c4ee48e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f017f7e2-8ebc-4774-aefe-896a6a427afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46cec641-a5db-4e7f-a47b-fa9dbd173cd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b399e1d1-04fc-4478-b8f7-6b4b5c5f71c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ba333d3-5fb7-4ff4-b4a6-00486607b387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed403b5-b982-4de6-8085-b676683bb07b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e675a5da-7ccf-4f88-a7e0-962695296ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c22e6a-e49f-42bc-8e7f-a068cf31a1b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f07f278-d6ef-4025-870b-798e4b832e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0be02f00-92f4-440b-a13b-7da3478a6d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1557e24-81b6-4a16-9fc6-06e4d957ad3c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be8e09c0-b0ef-45b6-ab36-3e76b5ec0d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6fbb60e-2727-41c5-b1de-1ac618b8b45e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0072b5-dba0-4254-9f7d-ea7d60349863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e46a340-00ef-4318-8b87-7b03c6e72d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1d336e-e42f-4739-a778-384c7f2bf98d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32f3bd3-0bfa-4ac9-a182-7207f11849f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48800f3c-3d97-4240-a049-bb5524ff0c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ac7d55-3150-41bd-a302-79f9c5bc3ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b420c350-0f93-4fa2-a17e-201f5876fb68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc56172c-f002-4132-a507-d107b7dfe994",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42675ebd-9336-4d91-9202-910c6dcd5384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35e020b9-2159-496c-a421-5dd3eba7bb5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc68fea6-181f-4163-9fdb-63c35b0e3036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79c1a31b-867a-42c7-8257-d284cd048e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b831c3b-c958-4359-8b60-0af38095a9ae",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71226a20-7c94-43c1-93c9-6f9c912b3379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "288274a6-8b04-41c2-bdcd-8786a683703e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a66de2-15b7-4538-9517-048a72a0e4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ce9cb7b-441e-47e0-9564-8fa4f383de41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e8b95f-ceae-41a3-8a92-bc0a4c9213d2",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a31a8b59-38e3-4003-b20d-a126c86aa573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a061c56-dc3a-4fa5-bdc4-2c5c5c8c9efc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d836fa9e-cbe5-41dc-bdc5-6073a8c4147a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee659773-15e3-434f-ab0d-c9e6ea6ac94b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9bac84a-850b-428e-82ff-d499b6173cd6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e8e51e-5bc3-4571-a535-1ab82bbc4d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2623811e-0029-41cf-8d2e-f5ae52182d0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0fcb85c-f72a-4b0c-b1a6-7d64097cf04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aaba19cd-3c95-49f0-89b3-73444162f8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3152366c-d432-4b5d-9a33-87daf44a271a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c9328a-8b32-435e-af91-166df8b4ef48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "261b1701-d415-4df1-b251-22947071eecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bedf4e96-a11a-4422-8eb1-98bd1a95dcc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b2f02d1-1835-4f5c-82a8-8195a55d4506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f328254f-97e9-44e4-a54c-104842b3afde",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c65643b-a7d0-4e4d-bb52-e864faf14aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1301ce67-0804-4488-9819-c71e4299bdd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86a8b1b-db95-4add-82b7-bb7d650e4d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9636dbb8-3c1c-4954-b67d-dc24690fb3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a41237-c24b-41c6-8997-965e233260f3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01071c6-7144-43ff-a8ba-83fb5f265e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace4ed6c-fe03-4967-9f6a-103c7afc5f28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651e252d-9556-49bb-9b60-0a7f3d97596c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d31c344-73f4-4489-ba11-70d3ca6d046b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774cd874-ee17-42a0-8767-0988fda6e533",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb58433-36e3-4a0a-a88c-5bcccbb6307c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9745298c-7b54-49de-ba15-710a94ef5ec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143e2b94-0f0f-4be1-b2cb-9a3f65bbf536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "79cdeea7-67f2-465b-a809-e335f58d1f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2b4215-14cf-4a85-89a5-fe83925e1779",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f43ee60-2f68-4c81-8e23-8e0d1ddf81fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3549b3ad-c0e4-494e-b541-a00ec50ff6f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80fce0c7-11ff-4d35-a997-66937dd7ec94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4b4703a-6b25-42f9-833f-f8924ea40d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12aa7505-b7bb-440e-97e5-788e6926456b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9eb8fd-0c1b-4662-9110-c561a39e3608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "add4c3ce-2eb5-4292-8b19-d98f9422c018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49eeb3bf-157a-47d4-928b-d90b26a4b10f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1221b907-94f8-4761-bef6-bea415324802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36f7710-f553-46ed-8326-2e1fd43fa0c9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "992d63c4-d03e-47a0-9947-4535cffff477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7596c88f-53ee-45c1-a179-f843d2e6cf4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7063f173-f14c-4765-bfc1-223baf9960f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "27ff817c-b17f-4d65-a46c-0c9b9c63299e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033e8cad-78c3-4b24-8051-7067836faae6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf406a3-d136-421d-b8c1-2d5d77917fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dc9903f-f274-41cc-a571-d6531109d112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8bc9ff-d4e7-4edf-beba-732a7f4059a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b75d371f-3474-43e0-b507-c5640a1341ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426a3b7a-76f0-4399-bfc3-4e17d0cdc23b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "437c6c8a-498e-4d5d-b503-9f257f5ef9b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8768033-cdc0-4aea-9b9e-f5ec05a05341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f15bc1-b5d4-4a6d-b5e0-17e75c75cf4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5536e7ed-62cc-4c87-a937-8979938112fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f3416d-114f-4c11-93c3-409865e49fb7",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88b3744-ce26-4450-95b8-14d8b1872200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57939573-2434-4455-b6d4-9171e4e7a95c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689190ad-3c65-40d3-8697-466d7fb51d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "34a93985-eb6c-4749-b334-ccb345e46036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee128eef-c115-48ae-a3a9-3894fe86c157",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b5930d3-ad16-4ef8-9c24-a0e717cde209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ae878f6-c1ae-4ff5-aa4c-dabb36490036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff42a7c-d694-427c-a148-9b20cf1b43b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b73f4ab0-3507-4171-bcc1-2c3d423a9405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ceea76-7f76-4b83-9726-7656d7e49669",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6211367e-54d2-4bd8-b0b2-2c6285d30089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23dbed2b-8ebc-45dd-95c8-532316c87922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281c46bb-972c-4ec5-bc2a-8ea9ab3cf2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "45d1a3c4-874f-4b71-a72c-ca917f6ca88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65fc8323-3026-4205-b000-268f5a4f8c9a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ff8fad-b11c-48ba-8354-b6a7f4b21dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "707c4bbf-c015-473b-b032-bd5f3ac36068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d9bc999-1c6e-4256-a115-d3020a07862a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b34e6c67-6d7a-4bea-8a67-36c0f41f6f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0119bccb-e9d5-4327-9b35-47ce84167159",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aaedf8b-294f-4520-80fe-695ea487790b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a4a0f52-7c56-4e9b-b12f-7b7f3b14a414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccba46c9-b435-41f4-8843-334b8c1e797e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4835ccb5-d1ff-4908-a31a-00c55c290d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03a1a02-74a7-4bc8-90a0-44b518f87e9b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c90efd1a-ab47-4355-b18a-3bd84778fee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90470d75-309e-4a9d-824c-adfbdf46afdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7886e892-4d79-4348-8240-f84c29a37d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "30c7a8d0-5b46-48de-b020-78a33f942cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160f1a87-1438-48fb-8886-06a4eb9b1c65",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3aeae7-88d6-4c1d-a28c-a35c460e0317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b09bf7-ea0b-47b3-8598-a7373b538f7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e603518a-258f-46a5-9ea0-cd5b4c0cadc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e97eecaf-3425-405a-ab23-cf74c4bc188a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac05836-e650-4ce4-870c-a9ecd7c71423",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3faaa02a-8a54-4004-bde2-a64e0d824f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d3d3400-b818-489b-bfb6-cbc7fa9d0dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3dd7aa9-f0b6-4cf9-a511-0cdaf421c269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "66e1baed-e9e4-4b6b-8513-12ec6fcc4c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3394fd6e-1332-4ddf-8969-fea9882647fb",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9376263f-058f-4346-8434-1d9005dc441f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd559db5-99a3-401e-b468-e1e96fed0310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c46a3d0-e416-464a-937c-781b17b3bbd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee75e6f4-2870-40ff-997e-b5df04ee77df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ccbced0-8239-4775-b8f0-631f9621c25e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d7d6a7-279f-44d8-8a3b-4ce2ee380dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcef244d-2a7f-44f7-8c24-40e40d7cea8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fda3f42-7f7f-46de-a747-11d1a648931a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "78705138-3412-4e75-819a-450b46a58ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233920bd-de66-4618-a465-b6775229626b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48b2936-3104-4e1e-85e8-f77f714d85a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be158589-5d6d-4dbb-9097-335e381062b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1ffff2-b871-4bb5-a989-e0b001c9fe04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2b374c0-8d61-434c-86f7-2806b4bfb448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c0b514-54a8-4890-a728-14a8dec9ee22",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3467832-01cd-479a-8585-d8b7f4e21211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c18ade1-9d71-430e-835d-2ca3b307a525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f345f7bc-35a5-4a48-979b-d754fa9f5254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c6888ddd-48e6-4bf4-82ca-06e220318b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7084e0a7-46db-47d5-99d9-18312b5c5ac9",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cfd1b23-2d0e-4f1b-ae57-16dda88865ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a518d313-79f6-4670-becb-8cd1bd46b447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859564e1-8808-43aa-909a-98db06d7464a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "85a0c5dd-f2e0-4a49-82df-dd200fc41bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c32e823-7618-4e55-84a9-206c6aae18a1",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b209c69-b046-4ce4-a503-5d6e53c38b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e61e49-794a-41e8-8e6a-4d70fb97eaf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8cbaf9-469d-4174-b02c-01badb562381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "666aecbb-7105-4732-a744-edfb488e5d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ccfcc9-1672-4ff1-9a44-693e9f093969",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3cc1c97-23e0-4469-b369-7f7cfa6ab6b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39c068a9-2295-456b-ab89-43a0986a882c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1993b48d-8a9e-4a47-b5e1-30ccd6b5423a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d5c4f3d-4fa7-4bcb-a3e8-23dc04b0f7f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f8ae3ca-6dfb-460b-a58f-ba6d787258fa",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e25d4d-2ed5-4c80-a01d-0ea95951777d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5140424-9d0a-442f-8165-2bd92129e090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da966af5-ecea-4031-ad29-2eccb5fc59c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "128e6ef9-2567-44fc-bca5-72a675c95764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc924328-f970-49a2-8648-b3300a5e8ba1",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b029db24-2b14-425b-9592-e016698584d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97bd111c-25b4-4d62-9f0e-0e89c7584e71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56fb8157-aa23-4f5b-96a1-3fbd27d032b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e748bce2-48a7-43ab-a83d-9264c1be2612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c708f83-2031-4538-93de-d05b66f3d799",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be54b6c8-c1d7-4240-ad8b-f914dc56be29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91539cc8-4485-4284-ab1b-9f874ade806d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa9d352-94a0-4c7a-a175-f39bd386c905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3cc02a0a-72e6-465e-8883-e9558ea4c199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d8c6ad-3f06-4890-a895-ab6800d4b724",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7059927-b205-48ea-998d-26afd10acae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6375ea74-7ead-4b61-a345-69009e1d8cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c13653-1651-4596-994f-2a4e6571f620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f00d8ce4-4136-4a04-8976-e6078b14ddf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d6cbe9-a5dc-46db-bcb5-6ef4556a2706",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2032d74b-62b6-41f5-b0fd-2e7c8dbfe8c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61c99b04-4b2c-4b29-afa6-528e1f3f7d55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d5f6a5-b07d-45db-b5bd-08d4e9e27e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "524740ae-6654-40fc-b299-c5db88ce68d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc455e4-2ffe-4373-92f4-3148417c9d5a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed691ea-f6cf-45df-b928-2f54e34cd6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbf957fa-131d-4b05-93ae-f5c3d4b3459f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf351c1-1591-48fc-a272-63bd6e224f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "af58a450-9394-44a9-877c-a461e61e1bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073d3e59-8d7f-4627-bdca-de55b3963cb4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62803425-f3ee-4af0-91fd-1e69d927cf21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d297b5-ba35-4815-853a-b6bece4a385c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e49a19-55dc-44a1-90e1-9516e35022b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbb386da-21d1-4572-966c-263352406b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52ef813-4227-4a85-82cb-8a9bca55b343",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "144c2ad7-a45b-4f5e-9ae4-35e2b242100b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "976c159f-daa7-44dd-8c3d-344ee9797ec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2caabe30-ceca-40a3-bb79-1711f275ec81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b35e2ba5-2017-418d-9652-3222c44b2c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d6ab11-5368-4d78-9b47-a2db2c3b081f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1618baf-846f-4dae-9db7-78ee12d760ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12243a17-a09a-48e8-a9b7-009b711fec44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70edfce-8032-4c7a-a8dc-be57707af79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab4a7c54-4ca6-46ac-bb43-ab6e1fa16b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4a0e8c-2432-4ad2-a164-93a5d5d20acb",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b743c59-79e6-4f9e-aa8f-34e811a0d4f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9671d416-3a79-4bb0-9b27-74910dc681f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2657336a-028d-4bfd-bf30-fcfac1e04361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "62460c28-7b36-42f6-8953-70d583ad2633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "153fdcff-8423-4100-89aa-c43769382c53",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd3f62b-b7fd-4e17-9320-e4e39a4003b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4f6535b-91e1-4eba-8857-b500d2fbdde1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47fe849d-83c1-4f0c-81aa-c544408aa608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "09598d16-b488-43ff-a025-225aa6dd02f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ee0ba8-640d-4765-95a4-f69c25cb1bb8",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "678c3146-b308-448a-804a-960351247acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e71e9213-287c-40fa-882a-bbe905f09111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536f1807-79e0-4a4c-9f65-3c9948391bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9e4fcadf-52d9-4d39-b1b3-b4b468a522c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7741a2ef-1556-4fcd-83e3-eed35b2d4cee",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6119ab5e-c52e-4e38-9cb4-998c42293e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9c2f225-f4e7-449b-aa56-628fcd41d6a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1032af-b432-4f85-a835-d8a6beae8c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "67d92436-fa20-4517-9a8b-422a3919ac2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78672c93-fe56-4a19-921b-c1deec47f19f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf51bccb-1167-4ac0-a55b-1fa21e580a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5cac7d4-968a-4562-a67d-674c079923c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d63af1-f294-4be0-a3bd-cab7fa761d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a84cbc4f-8d4d-4d94-b1b4-44e718ffaac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0746a4e8-60ab-461e-a12f-89835d9c4a50",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6406ab8f-b0ba-4af2-951c-5a9f898bc641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37ff10d3-f5c0-489a-8146-a9f412ca2aa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8556710-7047-47d2-955c-ebcf5693a46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5a69405-7068-438a-985c-d92961540b04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27375c34-25f8-43b2-9195-f5d232085cde",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41d8df1-2e3b-4a97-b096-6b9dc3c06f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8587e2ac-699b-44c8-8ea2-3a3ee088d90e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7b4596-728d-4b18-9907-297e053a1eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b693fb93-2c9f-447e-a761-dcd49b049493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41fdf7c0-fcc2-49ea-beee-3512c7a67d3d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e85d62e-79c8-4190-b914-fc45dc8213e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79323bae-a386-4320-a37a-4a21201597fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ad103e-cddc-450e-87b7-07ff77eece38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1ca21c7-127d-476c-8077-fa5347bee1bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8a0e9b-9340-4b52-89a1-e48b5c4b3ca8",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "483453dc-c966-472c-bda5-1dc70d0e2651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2377edd0-d195-4141-85e9-b030194510cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320361d4-87b9-4621-bd1b-f767d7d922db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "75c54871-c414-4f01-8801-70333c0c7491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d9c0ba-2571-4ae0-998a-6ffe249527c7",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c85084-0874-4896-8983-28618b1662a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f998705-5b1b-44ce-8258-e56bbe75f3ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8fbdd7-f25f-4fbe-970e-6d87e6c20214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "746651f5-34cb-4752-8f03-27125cc95466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6af53dd-2e5d-4808-8bec-f5fd3eb77d01",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d108fc-9968-4b27-9e6e-d3530165bb6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3778a171-e78e-4a2d-9169-fa59be06e05d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12e41c7-6ddc-44ca-8391-b470380f6b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b20f202-1285-4622-a487-81f22735b868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c26daf1-e839-434e-ac26-c77c89691681",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7149c526-9243-4b6c-80e0-796645d499eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "698b7cb2-0cf3-40ae-93d5-5295f65fb827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5640b6-03a3-4b07-b242-dcfdd350ded9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ddcc2145-073e-44a2-b262-ca635d89d44d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77903676-f8cb-4111-b60a-2637c350155a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de459bcc-974b-44bc-b155-2b2c5b53ca08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a478f0-d0ec-4ad4-83e4-1256886ede80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b427d94f-02df-45ae-8c9b-6d6a3b988f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "62981171-a999-4b55-aa27-85f685d68f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c556828a-9df1-4780-ac33-48e4230dd652",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c8073a-0e5a-4f6b-9165-d377bc5f141b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a8b492-853f-4e45-a553-54dd2d7da6de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4815202b-f294-40c7-b2d8-d46110d126fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "27f0064a-53dd-4f55-bbc2-86cfd57d90df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b8a070-15dc-4387-ae5e-455eff32f75c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2a7f39-6780-4c3f-b8e6-d55d93397302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94543095-0a04-4b52-af87-48cd80434ee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b692d2c-2b47-4a42-b1b7-edaefe7bf797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e207385-c026-4030-a253-52f894d535eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dab15d7-a9b8-4899-8034-e7a4b57cdfeb",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f27d7790-4505-4c70-8bf1-0312113d3b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b48357-2bf6-452d-8ff9-73b7b92be1aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f0e08f8-6592-4286-823a-6647b32cf7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "abde061c-fdd6-438c-bdd4-20e56d572d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "755340fc-55fd-4501-9a43-6b17d0352698",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1566e95-7199-431c-9128-6792874519bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c952ff47-e7a7-4c85-a475-1eb7d3c19176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c710cef5-171b-4304-acaf-bb57ada6e6e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ee44e22-abfc-40fb-8399-a83ac3772e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4050da-9844-4cb5-853f-cdeb9e5cf72a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64003fa1-a12c-4d42-aa20-d88213420f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed35e785-fac3-44f6-b508-0542335599be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2883926-cfc7-4b87-bad0-8317fae81381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca004ce6-29c8-4db6-a4cc-0a7383094feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84548f19-a641-4ab2-b785-4105b8cc8690",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81d2426-0822-4a27-ac9a-eb822b3682d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48f71d56-d514-4c00-a1dd-70198dea827c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c72df0-6f1a-413c-885b-7050cfd85405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d62c6794-4197-42e9-a7cf-4502e29d73f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc133968-8102-4665-b03f-888c61f25bf7",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f913c0-f772-4854-8221-64988138bd78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95f1c86a-ddc4-4cab-bf1a-b05237d86f67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41bd9bd1-1870-445a-bb0d-70c4ca7e2a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c9235fcf-d3b9-4c18-9e67-0ed9ef3a7c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca57a55-02ca-4285-a5d8-2364de3befe2",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "914638df-0370-4318-a3c2-4d68558436f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c79aa783-6e80-44b5-b99c-ae3640a240cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b77b4c3-2e6d-413b-b6c6-bcfead69bf7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a33fd755-29d0-48f7-8aa7-165167305ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52221a82-58e9-4914-a90c-87fe86f530de",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3108f6-8e82-4177-80b0-09276ee7c1af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d62f15f8-cedf-4c07-8920-1301bb93a1fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f30b3ce-04b9-477a-beef-7e61e2bfd98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b18c1181-09a2-4a5a-bc1e-52e86019985a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "014b4c3a-5e09-464e-af34-af9ba3899b60",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e9cd1ea-3490-46ac-94a7-3cf9f23b5188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a43ef355-7273-48cc-9ae5-12cf0712ea18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a02b315-4346-4970-8043-8b693e6194f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f4c2c6d-e4b4-431d-af09-a3940f6d6bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a8432a-3c1b-402c-9d32-d7bd74be35aa",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90412d4e-4f05-4d67-b5dd-c1de9580814d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85d0e18f-2c97-4343-8f64-dbcabc5cb728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea02f786-4b44-4bc5-aae1-02c400173c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "11586088-0c03-4f59-8535-341728d5b6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "277ec862-183b-4f52-9e43-764bc1bf2261",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afff0959-8bf9-49a5-94e9-b91360098b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdb8d05f-282a-4b85-a979-d0f425282a17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d72c08-054b-49b5-b360-0dfd9af580c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "24c661ae-1194-444c-8390-b88c30cceb44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1dd118-ed05-4ff8-b1cc-6921dc05ec52",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b56ba9-0670-40a4-ae34-38ca0d510a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9183a43a-4a74-465d-aa7e-fb1e91083b58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08f37cc-b40f-49d2-b07f-8b0a3af9b084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "960431fe-9b89-4f1d-8bee-90df3025cfc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e47d16-82b0-4c04-b691-861b0e93ad52",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "545f00a5-d7a0-4b0d-a507-b6fb7c7994c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f32e64da-702f-4885-ab08-cd02c5313793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca2ffad-b160-45e8-8bec-7ecd79f6f876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fa1315cb-b3fc-4142-a1af-7a0f411d8c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c859f5c0-51ad-4daa-9c8a-e57be794ad87",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbef4d2b-9d79-4897-93e8-22ead7a81265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56dae85e-0adc-4404-8bd1-27e17286a051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f0a042-9990-4257-b14f-c95643689db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "10a1220a-8355-4fa4-8e6b-233999d46254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e6b68f-5908-4f2b-9425-1782451e3500",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0125e702-c2eb-47b6-bbdd-d558549be7ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b168d6-83f6-4c6b-b664-dd28368a2ee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "977bcc96-e6ce-4e30-afdc-5ca012908170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "19f36146-001e-42fd-ba91-e705b1e88634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17269445-5549-412e-a25d-1807eadeb4ed",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4773f457-9f90-4590-bf83-e9435998fa6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a932824d-e68f-4969-bb86-2b0bb6a42895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4fba6a-6cf6-44c5-a9cf-c10b40c87bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e9d129d-0c25-46ab-80df-4a7cb407e324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd7c8c01-d3a3-4e69-bc3f-346de7a8ac1c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6060490e-837f-490e-994b-e4d156d9912c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b82c43-b3d8-4262-a78f-fac9fcf6a3bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b040dc7c-9c6e-42c7-b4fa-fb2098bf4378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "83fde901-2756-4c50-963e-29d626383c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf7b984-c6ab-42de-94e0-f5a919482033",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00e6cc4-6a94-4fa0-94cf-613db9a975e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8a895d4-6ab0-4306-8830-b3b92b3d4981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84871ce-6a2e-4a5c-b2f2-3b74eaaa37cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6612bee0-71ea-42b7-98f9-b094532c2c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a364d1e3-9119-40ca-adb9-f979bd082adc",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41cddd42-54af-4bcf-a5c0-8ece229eeaf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e782963-c94f-4f08-8d3c-d4a037cd894f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a135b2-2363-4a2e-8c1e-4466f361b45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4901a3e7-86f1-42c8-acc5-85632e7edbe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b48679f4-0ba2-461b-b88b-a5b363b8e3fb",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6962366c-ac9b-4dca-b7b0-044061aeb5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b60fb9a6-43d1-4035-9c71-6d36d5338f34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c058b514-1ea3-4a5a-b001-498f783f261b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbe86cec-ea86-4096-9160-9f746f3fdac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35608f1b-d1d4-4bc0-8fe8-cfaf5fffb52c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94b82d5-6ff6-4228-a490-8d47810ba9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a85c363-2366-4d84-a39f-a44758dd4009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a3aa6d-6072-42f2-9109-6eaf415e7b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ba2d8ce-bbbf-4aab-8cbb-dfedac6751c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad6d619-1be2-41ab-8792-d4e7bf891074",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fd7108-77aa-460a-8a4d-075c6c3d968c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12456dd8-a652-478d-87fb-aaa6779d9907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1835c01a-a7d5-4677-bb05-dfd6712f054d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf6f1b14-31e6-4093-9b4f-97e8e632cbc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc82d23-dadf-4053-acab-efd487bb0ca3",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20f6191-d01f-4385-8533-e9d5b97116ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10a34930-4034-47d7-96d3-3fa6f445221a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f917f88-94ba-4192-bdd9-f76d763e3f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c34b1771-d5d0-421a-99bf-7f1757285564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "528490f2-3ac1-4691-a029-d2a94e1ff97d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980bce81-4573-4c5b-b575-ab478f4c237b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c57a502b-8f76-4cd4-be3c-3e25e4b509f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7934bf6-4c6f-4bdf-a50f-5be3bc7c6ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8897c6f8-5724-43de-99dd-2702137bb0d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "200d9ac9-adfa-427e-90a5-b456a9483062",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2b6b6b-f8fe-49df-92fe-30a1f536bee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fd8337f-bedc-4e58-a4bf-edf17a21aa38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af4e841-aae7-4f80-abf7-52c63268e39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e76734b0-1fb4-47f3-a8a2-baba07dd848e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0976ae6f-19f9-4868-8cb0-d2120dc8f0ff",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02726567-7993-426e-bf37-ecec5879b218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51dbfb5c-98c1-4480-a797-1662531fd650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc634a6-2c02-44fe-afe0-68e46529fdc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ab48632-2ce8-4f33-9d80-6380fc142de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb323cf-ad41-4d0d-a442-f6351c72bf89",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7740069e-dee3-4d14-9fa7-d4ad69b54b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bff59eb8-91fd-439b-9280-76dfb4e6d627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55eeacb3-89df-4309-aadc-0c3f6efe36b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "38571508-6455-4dfb-9e6b-4d0489d24a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5739d073-9ac6-401c-b9df-dbae35b5b632",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97637b1-7aaa-4cd9-b7db-657b640baec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be01e31a-608b-418f-ba33-61910bed5d36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012da361-0ae7-4a10-9508-e728a19317a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f5a085d-49fc-4359-a987-9564f9c9e479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21af94ea-d088-41e9-a92f-bfa4fe0c6544",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68abbb2-d4e4-4db1-97ab-269bdb8f1694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62d392b6-dafd-4f11-b19a-7dfa323dd8c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98a8889-2048-4473-9093-b2394305e83c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bbf85a1-ab4d-4470-90bb-aed533926d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb429588-f834-4eaf-9082-5c0c43979f3d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0080d2fd-6342-4e05-b6f2-ffd91b4d9d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ccf3bc5-9aaa-439d-9eef-d5d376e169d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2685fbf3-9005-48b3-9ae8-488cf014faef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8184283b-03b8-436c-b317-cb0099a42a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bfc616e-de35-44f8-b4dd-08d76a435c6b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db258046-11a3-4308-a3a4-728c1234d6ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c33926ec-0814-4047-91d4-b8af00df6b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4fe57a8-bf7e-4e1e-8508-93bc5a5f95bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "df3a4d3f-e5e2-4ad4-80a8-366bb12e1e2a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8d8d4eec-df25-49bb-8d91-e23cb2d6b937",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f6d0a5a2-913d-4c03-928c-f7bf32775d57",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a67d83-9328-41d1-9d3e-c40863e89829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6869b5c3-cbc3-4fcb-b27d-5a1c21cd4048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249c8c11-3537-479f-9f11-1b6455f5c7e8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a486d31e-6d94-4ac0-bfa4-90d287541fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae35297-a5b2-46f9-a6ff-a7c1fd2a4fca",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1201d5fc-6b8c-40c0-97d5-43c0313fa2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42557621-5fc6-4e34-bb67-560b22af27a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e505e9e-cf13-42f8-8984-f473fa4ed9e2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c77d8654-537c-44aa-a711-bcbbce23120b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4a6b19e-ed0f-440c-a6eb-9f4d1625e19b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb2c85dd-8fab-43a6-aa1c-1292b5ccda39"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2728c52-f31f-4062-a772-7dc1373c0c89",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02fff33c-0f8c-49d8-abe0-8a11a723e8dc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f0f8aa73-fcd5-4b21-9b49-082526e28155",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ae0a5ad5-d865-4d55-82e5-5cdb0abeb7a8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9b9aec74-eed2-4ebe-9327-9e5cf8d1dea4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f94fb577-cbcf-4f8b-80b9-003eaffd0b91"
                }
              }
            ]
          },
          {
            "id": "c5e632b5-5940-4eaa-b217-de5abcbb3682",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cd3e3178-d2b4-4dc8-aef6-1b654c44ca1f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9c1049c-6247-460a-8454-5a78a23a8506",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "967525b4-ccf9-4026-af24-07ec86ea58c1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5dcd7fa1-72a6-45a9-8b9e-4a277d872038",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "189fce92-a948-4cac-9636-6d630142ca59"
                    }
                  }
                ]
              },
              {
                "id": "edea45fa-f9e5-4dbe-b7d7-a879cfcd5764",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae9846db-f523-4b22-927d-8ce1c336101b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "67841e82-4d55-4009-a4c7-23485925a651"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1da9e69-583f-4158-80e9-4bb2cc23a7ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "58c43fa7-97f2-4640-acda-5c2e5710cb86"
                    }
                  }
                ]
              },
              {
                "id": "873bc33c-ca6f-4bc6-a0ec-c007dfc41f3a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "13236069-3eec-4a9f-a1a6-4e673d20cd62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1c90e93c-c31d-41e0-9ec3-72b2f7fa78a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81c3396a-62e0-4015-9f97-22685bb2de31",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "900a1c09-7285-47ef-b3a2-9f9d5d7c07a4"
                    }
                  }
                ]
              },
              {
                "id": "7e4547d5-c00b-42a2-9280-d62f37aa5412",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9d309d7-2fee-48e5-aadb-e48952894fc8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8af6ec60-0373-4de8-b4d7-03ddac76e3e8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e8dbb4b1-12aa-4e0f-b67a-62c4d859492b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "16164eb5-a088-4df3-8e30-b4a9c0b14d6c"
                    }
                  }
                ]
              },
              {
                "id": "5e55baf8-a4c9-4201-bb37-473f8436c649",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4b8f6a2-34b3-4db6-a36d-b87f7d8016c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a9605ba9-3d5b-4e32-b5ed-fdfb0406b622"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ab0e195-d154-41fc-bcff-b86ec33a1dda",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5d19a5de-674e-4df6-bf20-eb2d4dc7786d"
                    }
                  }
                ]
              },
              {
                "id": "63bacd68-98d7-4253-9791-81d6460cc18c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eac1ea60-c3ed-46d5-abba-fde053c10a97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "36c568b1-9242-43b8-87a2-91e62031178f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "048cfae1-6f84-4d70-8a90-3ba17a184163",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2d5e472c-fc2e-477d-ae7f-45bb211fb3f5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9f45fdd4-bdb4-4db6-927e-47b9a924fefe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e1913a8e-b004-4c15-9939-0db544b62950"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9b6943b8-30e0-4eb2-aa62-3451cfacaf01",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "21c4466b-18a3-475f-9093-1a4e0b90eec1"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3fdf2ee5-8b76-46e7-8675-3801ad512b53",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "325caf93-c13a-4a82-ac25-1db6c5ec7b00"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04c5c79d-fd50-4c77-8161-1a7f2dd1b222",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b4353417-01de-4dd0-b8eb-b5d23846ed05"
            }
          }
        ]
      },
      {
        "id": "c45813e0-b06c-4b38-b95f-4d161bea4fdb",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4408ea0b-ad44-4dc3-b2d1-e7a7ec178d20",
            "name": "Negative Testing",
            "item": [
              {
                "id": "55460584-a735-4e5a-9c02-bc4a124380fd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c222203d-586d-4116-8774-5d31ef65719b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b9355b9-5d5e-4e8f-bf66-65968d52970e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "998bac74-9311-475d-a0a5-073d4f45e8bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941b88c4-d699-4605-bd62-bd22cc6b1dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "454e1376-628e-424c-8933-9cf4c664e1c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2779b33b-4b0e-474d-80eb-bcc91e4b2e0b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8440d661-75e9-4dd7-8361-441b07b809bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46a8bb8d-c4db-470a-8e2f-6d8e604ed2eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbee519c-fad9-4028-9aab-04399ed8f8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9861f0a4-5597-40bc-86fa-0cb296c5ed22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a790429-0f12-459f-84e7-83ef8bc78517",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "405a7dbc-56a6-42a1-8169-b1b48fdae299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70387a79-f9a7-4c3b-aa58-979e720244c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2672e1-5b0a-4a41-9be2-d070682a7b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "931b3c8d-3f93-47b5-86f6-24e0b1503290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0ece5b-accd-4dba-ab2e-18d7b06e7256",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8c4ec7-b636-49c5-8ce5-f34c02958047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78325872-d91b-47d2-a0d2-26c097844d64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d578cd-33d0-4126-ac76-6d3c26970f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f92346a-6b54-4bda-b562-71130b96d7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53677b71-e248-4ba9-882c-f9701af12762",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b540fb-543e-49c6-8dde-6dd01db954f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23a3da10-4456-4aff-8f86-7796a5205af2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95d3e64-d318-4a2a-a634-250f8415155f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f586dd-f2c3-4a12-809f-da94450bad81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad93590-3301-4cef-b60d-bb37f530e884",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d5aaf60-123a-44ab-bca8-c9d49297aa6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4aab75f-0487-4214-a6d1-6fe8dc65b08e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d652fefc-766b-46d9-97b8-032d3312acdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "20b83860-bf54-4e47-b13a-6c6428ab97e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61d180f-f550-4d2d-8d05-1d42ba045351",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74737082-d5a3-478f-be15-998f0b40df8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a8b14f4-6468-42bb-8b6b-ce4c29d40df0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1751b968-e893-48d2-ab0b-f381f886b8fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9edce77-f01f-4c5f-82f3-e06143b57918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e489f3-60d7-45eb-8a76-ca3c88e443e3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f075e0-9943-46c0-a305-465aca880166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "241d1b8f-3849-4367-9540-a5e7f09d82fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df87339-fb89-46be-8b04-cace17d8a6af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a43d0bfe-3150-430e-9530-a2dc15db0722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9376d8d-c7d3-4022-be3c-72235821bb79",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30740b5e-be93-41c8-bd42-e2a086bd661a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ce9b0c-bf52-4bb3-b390-08e7e126425b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6cb3307-2bc9-4069-9d86-a0fdf91294e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d007ea7-7935-4fc3-bf9d-0c6781d3d660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f4b464-abce-4f6d-84ef-67308c9af1d3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7bc62c2-bdb5-465e-848d-6cd7a27c318d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5f81bf9-61d9-4890-bf81-70e6946bf0fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f15da411-8d8c-429e-ad53-f67337273bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3744bc05-7a3b-4289-8cfb-4e89783f9d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c610a5a-ead3-4f0e-98fd-cf5890ba85ec",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5256ab7d-1546-48d6-8a79-9179a47bc797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db5896d-0027-4aff-8df2-3701669f1e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e39bbb7-248c-4aee-ae14-085a96f681ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d1dceeb5-cabe-40f8-9b9a-d027e64c49f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7899f5-1dae-4c03-9fa2-a8c371f2731f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39b31f9-1eb3-4ee7-a09d-a28c5cf09355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af5c7161-58bb-428a-a139-a5343345691d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a219f1-e57d-44b8-818d-282d40dd87e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e2f19737-8a11-4fda-81d5-a2ef10716eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dae4b17-7a85-4353-b6b0-eb6c758b1504",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbcba618-c3fb-48a5-a329-ad437a3ef4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce756c99-7adf-447e-8496-850196f83404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1493f536-254d-40d7-b05d-7a99cba79291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "949fb60b-8ac0-4613-931b-d508c2ddc801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c913142-1cce-43b2-9d89-7a14b58304a6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e847bb3-2da0-4876-bf34-ecf228ead66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cc270a5-afc1-4900-9cd0-b196218500d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc507ae-4d19-478c-99ec-0985ea448759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "24d2f86b-4ce5-43db-a149-59e8c220c367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0634924d-e2c3-44ba-8c0b-6b8ca98f970c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "631a9feb-6016-421c-a091-b24dc15ae31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4faf667-414b-4f44-8b6f-9342376f4398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9e2aa6-a0db-4d6b-89ef-04da77712577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1508e3e1-6756-418b-a7ee-f960ae2952c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee3d285-3f2f-4b5a-a609-83a8f3e94dce",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68472810-0c2e-403e-8ab4-0d3769b0f286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56499b83-8c5e-4295-9999-2287f3cb510a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5963d87-f833-40da-8804-d343078bd6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc380fac-ddff-47c4-9cd9-9796eaf8ebd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5bb09e3-f2ec-4422-aef9-223788bd09e0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e881a34-98a8-4f36-964e-a80af66509b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c24d8a7-b43c-4967-beed-29285b35801a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0ca26e-f514-43e5-aa1d-fab0e7cbfd53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee5ab7b6-f1de-4671-b034-3bc4dc399d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc4a99b-6470-4cb0-8f27-3e31522caaf1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0478bd-26c0-4d20-88b6-c6c1f897e972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "790b69aa-4451-4b80-b58f-9fca23d1f2e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3576301-4b17-490c-9681-fab581f34431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "87b10c05-d800-4b7d-a6f4-eb8d3654a0e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c527864-3b4e-4d0c-93bb-b34b3fa76173",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9d77a5-d443-47c7-a274-783ec8f81128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "982f7e1c-bf50-4e74-9222-dc66fa8c9ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f0d5b0-7035-4c01-9579-2868ce711ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dd10366-26ad-4f5f-9787-9c6aad612e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4f3ec8-b27b-45e6-b2d6-58b109ede69b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "962bd2f8-d518-4fc8-8ba5-d802f47279a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57d895ec-2a05-43e4-a9d0-f05f5cb087db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e815c6-e74c-4983-8ace-e926c66cbab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd3b2776-819a-471b-ba15-bb53e0e0a724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b388f69-74a0-4517-9d6b-55798126bdbf",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "705c4491-8a1d-4868-9705-50536ea9ee87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77340b26-313c-4f69-93c6-561554b7de20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e5140f-4d5d-4cdc-9ecd-356329f9d70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bfded9e-b316-45ab-8f08-72c189ed16af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4608ffd3-afda-4fe9-b029-36563bba3459",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2db70f-ed93-40d3-b3ba-7365421205b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dd03e53-d85a-41c9-aa0e-e446118af654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768b5a69-ebc9-4fec-81e1-4235231b817f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1000164a-b3c3-4056-948e-5adf1de9ecbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85feecaa-9817-4c75-9f96-b1f3aa838bf2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb47779-1425-43b4-bf5e-ca2fcb002f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2cb49e8-2e86-41e0-8d72-b3f7182a9e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a390106b-205b-4480-9ec2-40c8b7cf78ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f5a5b69-e133-42d3-a4d9-d751d236fe80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b945ca07-3209-4401-b6ac-cb9023d01504",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b389bf4a-137c-4261-8d98-97f796acc8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd8a03c7-1ce1-4a33-aae8-d124d82f8283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b580b1db-16bc-45fd-b26d-f1908ccfd9c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58735f46-3293-4301-a267-72b9d02064ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a40c9ce-a57e-4aab-800c-b4d7ec5707ae",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfde1796-c7ba-431d-bcf0-c55fcc87bc0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ef9ba2f-d9df-4c92-bcd8-95847c8d091d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4a85f0-0f93-4754-8a13-90dea3f7a3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e894b3da-0e83-4394-9c87-9f6b33cb64b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef73e8f-cb87-4d03-8452-a7afcfa35d36",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc03d934-c17e-4add-88fc-a754e716cfa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "650217d9-2d6d-438b-b91f-d3a516188fc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feac1176-13c4-490d-8213-a9cd2e3e4b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c29c0bb4-443c-4cec-89eb-7729b4800c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f2b6d2-4b40-47dc-b878-4b57c77cd5a7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d528481-27a3-4016-b5f3-55b2ffac5c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "069ebe22-267c-46d6-a614-74c828fe9b1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c7b4103-bf9c-428d-974c-2bebfe67efbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab78c067-7bc8-4277-b6e1-c6c1991091ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160bd2bb-82c1-4022-a53e-f1587f99b278",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3592d2-7224-4f2e-a658-0515261c92d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "607f88cc-b3ed-439e-9e5f-e140022dbcab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1859eb0-1a5b-4bd4-9988-0b7ec9d445eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da1182a7-a09c-40fc-b285-db4da46d071a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa9b3c2-45f2-46d8-8c37-f273c4392cdb",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21b0368-4292-44cc-8a2a-0e6e24beb8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "705696ec-523a-48b8-8e96-43a1a52da6a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260688a2-769e-4f19-843f-69f0bedfd3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d58bf762-0122-47af-84dc-fbb6562a6eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5479b4-0a4d-4ceb-8389-f17281c1e50d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60fffd4-f597-414b-9813-29cccd9d64a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59da9418-37cd-418d-aa93-4587bb854a28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a442ca33-8483-473f-b525-eb17fcee1aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d3ef6d1-ef83-4e23-8921-0ccb052cb705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4383efd7-97f7-46ce-8408-4a67ecb9e643",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8472f3-057f-426e-a4c4-03154f11fe28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bd62069-5cb3-474d-859a-91c96f230583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51e6fba-9ccf-419d-9800-2d6799d13398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62f2cad1-44d2-4b22-858f-5308b55dcf81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf6034b-6b00-4746-976d-63bf4bad9326",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f361d31a-d6f4-4855-8553-b54de6f0c718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c808dee-62b2-4cb9-8c0a-ba19ee17b0a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8f475e-2646-451f-8e86-7a4aa6adfb1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df7148f6-e6ed-4159-b64d-a76aa8726223"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3e93e522-909d-4ca6-b6c9-533e508396a3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "da83803a-78bd-40af-a59f-adf539517a8c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a735357f-25dc-4196-9d67-ebc2372b22b6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c2c9eb41-e59d-41cd-aced-7e7925ac00b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58dd3633-98bf-43b2-8849-2ea5be9c6586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3466d60-8198-4473-99b3-f73b59edf140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7263cd2e-92a1-4e21-ad90-1a31074ce5da",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f9507a-dd24-4dcd-8d46-f1e4532d2312",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f99243dc-0c6a-48dd-8110-55ff3ac54548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1d556b-1aff-4468-a373-d1cf0158e7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea6297e8-833b-4e5d-874b-4a8d2b7048f8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0b87c82-5d14-44be-bce1-9468ace02981",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7eb79dd9-a222-40b4-93cf-43e90e44bc65"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ecd8b4a-6e84-48f7-85d4-c004b73b4f4e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "718f9536-e0cd-48b1-b7f7-2db45aab2155"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28bb0696-6235-4fa5-bed7-19474371f828",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5c03d654-250d-47ab-bb9f-e80b515126d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81d420e8-06d1-4f2c-b30d-bbe384d647a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3b0c303f-572d-4765-a8b3-311edc95d59d"
            }
          }
        ]
      },
      {
        "id": "b2bbe93d-436b-4503-a2c7-7e67f37b23eb",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "21e3a9e1-75db-490d-94eb-55072522aa5e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e09300dc-40d2-4c7c-958d-1bae3cb69566",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b78fce15-abfc-4634-919b-feae66fb15b2",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4090a702-0e99-411d-a795-29e9348b49de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80dadfeb-def6-4db1-bacb-14b552bfa81c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e9bb89-4b3a-49c5-9e16-7412922370d5",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a379c2d6-1ebf-47c9-b6db-9532e277f6e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fdb6928-d9a1-4c4a-8790-8ba4d6bad9b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52f1187-d73a-41d5-9638-99202ed66f9e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "180440d2-12b9-42f9-9a33-53f249fee7bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3edde4be-fbc3-439a-b266-f50c8ee36a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be7e675-6c41-42a8-ba4e-e024762e67fd",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7701eba-91ea-4cb5-8d60-7f472c9fea79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c691cab1-2f86-494e-ae2c-83c4861b2921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081d852d-7f23-4b44-b588-adc55eeb6f06",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63aee05f-aba9-46df-9b76-7dc796efd0c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50dfb346-2308-451d-9a89-9f732c53a998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0fb97ab-bf51-4c8b-b16f-e64154f6583e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af398935-546e-466c-a64d-d0f3f1388de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7d5fa15-81f3-40e0-b7d3-8bc0335de614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7f0877-c276-408e-ab8f-82e8e15468a3",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76fc4558-4b0c-4c9a-b4ab-ea7fad2bd488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dae602d6-e2c8-4a5c-b371-ae955c349953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0261b971-a262-4c69-b64e-7d8828046385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b6f8a4f-cbde-44a9-9749-ed0d34ae633e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95fc9164-223f-4091-b39f-72902872ebb4",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca5e7fb-d2e2-48a1-8e83-c29f27a3d1c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faabde9c-e52d-4b41-a351-81c3d7b6ede1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f2a2c2-efbf-4273-b540-d35a7eb5ee6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d31b35d-67f2-4d00-8aee-052549c0f70d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df1cff5-072b-4e59-af41-03f4483ab889",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe2c8d1-4ec1-4c9c-a0a9-b8b95c39dbf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1347728f-96dd-492b-b040-ebd997aafeb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74dcd051-a1fa-4317-8e93-64acced0dff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc82fcc9-e63f-4c04-9970-f0714d587aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6afc044-9953-4e26-8479-0240c467ba3d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7aab1f-9139-4f76-9a50-16fbf40b7ff0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc32c134-5f1f-4076-a49e-79f2a5cb501d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b05caf-fbc7-4475-947b-ec65803ea148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a90543cf-127b-4d02-b8f1-118f14318b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713f797c-557a-4d86-9ea0-ccb3811b7014",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc9b4ed-ad3c-4cfd-bd49-62e77fe76360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57184ff2-c780-448d-9e92-539b8b557d84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b041dd-a6a0-4181-afc1-116056bf1631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f8cb81e-0b4f-4b5f-9551-3d5bf4999127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b938417-5140-4c9b-84ea-e08a9c7d9a2e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a47c7aa-64ba-4ffe-8761-8ffe9b435b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd4878e3-8dc0-4658-ab1a-b68fcbefee46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c448d77-72e2-4e76-86d4-2788dfed014f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0733a5b-f7d4-47e6-a7b7-ad5bb87cc63c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ca2b90-25ad-4b40-a96e-9428668ec9e5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a03bcae-2c6d-42ab-9853-bff85414092e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ee00208-71af-46c1-bd5b-7c247dde4c9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e89dd33-f79b-4d1d-ac65-6455b4dbc391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a96fd554-7da7-4db5-8e92-772088f65674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef6ed85-2320-4f38-96ac-2531071554f0",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "018f5693-abe5-4bce-bfd0-0ba4b0bd729e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d30d5664-c902-4063-a6c4-fdf1d7687c3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b582d4-e061-4c6c-95f0-9a60483b0475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63d645fd-7c4d-46ec-b471-b9aeec1fa38a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfbf0a43-c33a-4b47-84e1-09e52a1b99e2",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5e1b46-4680-47e1-8be8-a50285fdec23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2346904d-a2d9-42ec-86d0-605ad2fdb619"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf62b85-b0da-4420-8d33-1aa096dab63f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71eed1ec-875e-439d-be3f-ff42558b60c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c0c89c-6180-47dd-a4e9-95a07e939728",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea13739-070a-4c8b-87ac-168a41d6c5ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "480c369b-89cd-4f77-9dfc-5ff80ab4c096"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e42f1f3-66a7-47d2-bd2b-a5aa7f63472b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "799597d4-487f-491a-93a6-4656cdbe170b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d96f1538-2aee-441e-9047-8f98d70985b2",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67016a27-0ba7-49f8-bc8d-f4f1965757ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9934e968-beab-4af9-8b53-194d165ae78d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4508ccea-7b95-48ed-ad40-6bc75abee2d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5353823f-743e-437c-823c-f32834737643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd89f09d-9eb6-449e-9821-a5f7cc27a2bb",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8cb6b7-8cd7-42c3-b26c-f46c914847b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f6946ce-217a-4744-ab55-2bd862b254ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a8d3f0c-ac7a-49ba-9893-9faff2117b75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "774e5ed1-0f8f-4b21-93b7-e976830d3003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63857159-0256-4dcb-9cd2-bda9b93d7eaf",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8633e17d-f536-48bf-963e-f0fe36876f5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2101c6e-1c13-4b86-a568-6bc20acbaef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f6ee39-5dde-4325-8c7e-5d8f0f509b02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "067a802c-9313-4ba4-82ee-09d814bb414a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7c6c70-32eb-4961-858d-f663b7c67ec3",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e3d8ca-3a92-4c3c-b2cf-e069d15a61fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae2b8166-7662-42f0-bfb7-5853cfbac5a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0d59e6-b4a1-4948-aba1-c232537ce0ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9db5384-7290-4958-94ba-9ed6415b1265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9483d7a-6620-4ef5-ab23-20a3e6b2e5b9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e90f1c-b558-4c29-9c74-a23a812db6a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7fd3e87-ce60-4202-9487-eb319c4ba7bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "177aa08e-246f-422c-901d-4e1eab81b427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a0efce3-e08e-4136-9f0e-dbe062b93b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "157c87ef-0173-4556-a6c8-17c08c277866",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e78ab253-f899-4777-852c-100af9dc53b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fab1c29-1dbe-4629-9f4b-252d4d102c75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "411466c6-1f26-49ab-8cc1-8ffedcd4a382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "098aad7c-90f2-4a12-b3a3-510096043276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0999a64a-d487-421a-96c3-578be13f188a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96254aa1-ffae-4790-82f6-1bedbb78a325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46ab3241-c865-473d-95ee-50a61c714ddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2acc87ab-5fef-4790-86bb-100b0e561d02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cccf88c-0cf7-4f51-beb3-6d36b35026a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a6da14-14e2-49d4-b5d8-b4f4556d4588",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068c7321-9732-401b-81ea-237726ee3a35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eeb5595a-2254-49e2-a24b-424d02e8dfa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7250e67-017f-49eb-bb5e-835f536afd4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f8e6a89-5eca-4854-b789-a7797523c5c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be696dce-8199-40d9-b547-fcbe67dc4374",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96e829f-fdb8-4dc1-9317-8a088d24b7dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02062aef-d7ea-4def-9c24-334e33ca2ca2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3015cf18-cb5b-49e3-ac4b-a305edf3fe7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "971a4ef7-4c9d-4c1d-81ac-14d076500d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f8de9a-03e5-44e0-a894-41b0a19818da",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21797518-ad9f-47f2-a320-eb886dc6510e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efbf33a5-af91-47e0-b27e-bb67f268fb6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75fad179-1d1e-4f48-88b6-85cc8dfda8fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1dfad27-113d-4b0c-b3d2-f76eb69436b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c580258b-a55b-4b3e-94ed-de7d6072902f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f05550-a77b-4c5f-9bad-08ac694c48d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "701bc850-469f-4dc9-8cf3-4df45f5d3f6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c2ba90-c1fd-4f27-8329-0252da127d57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af1acce2-6b6d-4ec7-ae0e-663a6f5d1f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bfe4c1f-be91-43ce-9926-67573c76f680",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d749633f-a1f3-42a1-8a53-276747b6bf06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f36d804d-3a02-4bb3-a771-f2b4c4906b1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc882862-d154-4803-aa27-0f5028bf2465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7742480-60be-4eec-be76-c9020756d50a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b7a43b-e741-449f-93b5-7aaca1ec1d58",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac31edd-f2a0-482d-8577-86fa06268037",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7eb13a4-bdb7-483e-b0fd-836c90473b05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "831b884e-3e77-4754-b245-7ee55a7cf891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2e33680-4d89-4b7d-bebd-7edd4405b6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321efb74-1877-4095-801f-03b79a2e94c8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee32c53-edcd-48b1-9c87-138e2a603801",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1bd61f1-823b-42af-845f-8891a2688709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd30f523-4bdb-4667-bad7-ecb88fa61bad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63544b94-3987-424f-b52f-0dda0f779137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc905254-df4c-40a3-af63-897041ebebc4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73e9222-d0d7-49ee-9afc-cabe3dbeca4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dc79584-e765-458a-8c58-c524591b7355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4903c1b7-3cf0-4987-86c8-dd413dd84e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f624c1ed-79ec-41b4-9bb3-15f145459694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f6bb1da-3ae4-428a-ab39-7c0e4ff9792d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92432e84-68a0-4e84-9042-666e3e880849",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0e36b68-86c9-4608-aaf9-e3e653499ac6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b73e94b-7d5c-4b44-8981-23842da35d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e65e0ed6-c8e5-47b3-bb33-99900c3ac88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558babdf-1c90-4fb9-a6b0-2cc5f991f711",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617c2f74-fdf3-4408-a672-55c75a389194",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fee59fc-3435-41c4-910d-1a6c7d85e22e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c86ac72-f5b4-4347-bb20-b1c412a8af40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f702a87-9778-4df8-bc8d-fd9b32f7c87a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0e7496-39e1-4351-a13d-dfad86f1a613",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78faf93c-d292-4b74-9121-5cfb117d04c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59203b64-e15f-4a9a-b57e-d5e5327e12dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b95af0-7929-43e6-8bec-3a673e182914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68e0856b-6321-4239-8afe-f5a01764d2da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348e8217-7751-499d-8d8f-5267d744fc9a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2a6c74a-bb95-43b6-b97e-6892a165e8f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8336efc5-1197-4d26-a6c8-7323b3b8629d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13208c8f-c337-4613-962d-ad19d6e57a63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92f20baa-1459-4b61-8e17-04eaa6e12d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8344823-b989-4042-8a67-880178867af3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c5a142-90f9-46e2-913b-0490d0674088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cfc42a3-69ff-4bd7-94db-fad64f4eb8fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa54918-5407-41d0-9955-4a9f7ef274f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a556f1c-0bc4-487b-b690-779ccd26e1f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d20522-67c9-45d0-ace2-e2a77f300f53",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74fb3003-94df-4c6e-aa60-4e2e5a720087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8506b83-b7be-441a-ac8a-40c68d063ae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee8fca4-2e76-4ef1-a84c-49b5c1d6f0ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22ed86a-65f2-4a8a-ab3d-95f8a3529237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d68560b-5bcd-480d-badc-3e897216272a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4117d48c-9f29-430a-a06a-d623fd7d3741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c90f708-8b38-41b4-b211-12b8e4c4b3fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4affb690-0779-48ad-a1fd-e33cf5e2435c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deba2df9-cf47-41c4-8d54-0171c7ada7e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331f8120-e2c6-4d31-979a-c8283dae0cef",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6650a80e-186a-4892-9780-80114d23f592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "553bda48-3495-4a13-812e-5e3266ca3211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82596687-2452-4514-9837-650f7826c193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb6edfaa-444d-4064-bb10-c9b6d720680f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca12820-5acb-4bd4-bd6b-cd84231934f5",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca12ea8d-219f-4c67-8cd1-7f05028ee6fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cab0e7d-5f5d-4a45-b376-f39c59376ca2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "551d41b8-a513-443f-8bcf-de5b9b27c1a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f8f7a5f-21f7-4825-a047-7ccd1073254b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c261752d-2391-448f-bf00-f69259867c75",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac7015c-eb89-40be-8d63-a6706f05a6ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28569e4a-4eaf-4d82-84f0-14cfa2e33811"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8cbacf-3215-4dc9-ab3b-b60676082b1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b5cc170-e55d-4b1f-a3d9-545ff4671206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9cb312-470a-414c-a4b5-9405d0c883ff",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c345f64e-e9bf-4675-ba75-082dd496a866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d971f6fe-8735-4d2d-8f9f-fac0dca39bcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c388931-6f5f-473c-8727-4927fbf8a711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e0d7ba5-1b2a-4b19-9c22-2fa61335fc2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e63f0c-aef5-456d-9bcf-7f2afdba5f65",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ac7b03-6343-4e89-acd3-82ad44e5843c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8755e681-2340-4c6b-9f2e-f5b63c30317d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adbcf725-3fba-4afb-8714-a62ef38fcfe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13eaee31-14bf-470e-85b9-404731c4cae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63084c59-eb8e-4534-88fa-d1c46078e172",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d30925-fa0f-4303-9f66-af2fe569623b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18fea125-9f71-4cdc-a9a5-b0140b545213"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c947dd-9c7c-45f0-8d0d-be13db0d0f18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4404d8b2-e5c6-414a-926a-cc8797c2fb98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d424e99-7e99-476b-bf78-954bf86f513c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7831a06f-85ce-48a9-b12b-ac3bfc117bfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a7cd731-98ac-464b-85c6-d658023f5dc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a290185-2a23-497e-a33e-6bac3f805e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4e1de2e-ca70-496e-9739-8e6dd6beb22a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c655cb90-eff9-4148-a7c6-000c86156e0a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f8899c-b762-472b-aa1f-eb1c995162b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ab4b6bd-98c5-45ea-a8c5-21a46c962ee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "639f987d-4d92-4c83-aa9c-d480e9d8676c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "352ee3d0-6836-4da7-8cf8-0e064003a1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d46a8d8-8deb-4f02-93ff-f1623970e50d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d408e3-5ced-40b2-b1b7-4c350d9bff44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb07bff9-0c57-4e1e-b0ec-85d3503e9aa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8cb2e8-6f82-48cc-9fa5-355091725db2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb461ef1-29ac-41f9-a7af-e8b319c73331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cecb83-f54e-4689-b578-c3b3ef607a14",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aefbb965-e632-475f-8932-c714b1baeddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16057321-a15b-497d-9e84-1f697fe4fcff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36351ad5-fda6-40f5-a96f-722854db6f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a82a6aa-1fb9-457f-b0ac-5ea1bd261eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5eb3ffa-328e-415c-b6ba-ad33d7a97c5f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca03178-4932-4e25-b87a-dce9acdff494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "224bc3c8-79cb-4b8c-8393-676d0d3ae2ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1d32b8-332b-4b3e-aecb-aaea4badc2e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a385f7c-1a51-4c3f-b0e3-e7d5a295f824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b32604-126d-41f5-8aca-58f6d5c953dd",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a152ae-588b-4582-b6ea-77e465355527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b6419e8-df01-4b9d-ae81-7ae531cc1bd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acec8852-31ee-4c6b-b505-263299e7af73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e76a8bc2-6c09-44d6-8720-7d7f6e5081a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e9638c-0cf7-4bcf-ba55-6606f2d32a06",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f469aaf-1663-4fd7-8023-e030723ad634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "183dc40c-af85-4e89-ab58-7d0c10a96ccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0b0ed5-f014-4990-836b-c53c0b8e25d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75e7bfe4-fe80-41b4-8343-a8cc4f603e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce60cef-c101-49d8-9265-46234b227221",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dabf8d05-babc-439f-bad9-b2cb80306f6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f5b7d51-b1b6-4bf5-9384-d3a3fe68df40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "459e0d11-7b35-447f-bba4-3dbbbde614ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "072354e7-6585-466b-9afb-d31b94bd6d78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96cb8dd2-be5f-4f17-a906-651edcff1be4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b0468d-984c-46d0-b03e-ac5b07ff02f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58544950-682a-4e31-8229-83e3af5af838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d924ef48-ccc0-49bf-9732-246c0fcde4f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d835ea0d-b281-4342-9de1-fc9ec5e91eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1903696a-ed01-4aa7-8486-9189d49b669d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31847732-ccdb-46b2-92cf-13ff8607ec34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0774793c-2f16-42e0-b428-64afcfa0586c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fbc60f8-631b-46a3-8a2b-d52b57a52d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98c061e2-ae9f-4470-a5aa-d1d15451d028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "605453ca-700e-42c2-b204-dab5993be727",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae919f9-a0ca-4191-abbb-fc5e0a847387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ec277ec-8e73-4bf7-848f-8ae5a1e6b4eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ea2951-ecc1-4647-b3fc-34b32eabacf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2875c3f0-7d5a-4435-a27a-077e392fcdd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f4888ce-df5c-4faf-a155-2457746c05b9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b218c78-1a3f-4236-9965-e039e1394974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "419cf6c2-a36f-46f5-b20a-389b9542ccb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ada682-4646-4247-ad21-6fadb502b8e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1089bf3e-a740-4ef8-9ed1-382bf93e7cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb46898-f3ed-4d93-9ab8-f5db7b4f9a3f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f4d212-bd58-4f51-bcc8-0e47d6f5eb5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7669fe2-ae77-438d-9b27-d6ccf7290195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8694ae80-50cc-4d08-80b1-ad62d099dfec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d24f53a-4e51-4e20-877e-7fc5971d922d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9b9b8c-f6ac-4a32-b474-4317b55109e9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2024dce-ab29-4139-8f9a-02e329a22b7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce3f9467-b3c9-4c72-91d0-208d9bd03fdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa8935a-8e8b-4767-8c9f-d5e17a18f253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2928eeb1-8dc2-4852-ba5e-429a1ed76a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6c78c8-3a63-45aa-afba-5f8d473bb93a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4bfa02-c3b2-4dbd-8839-c4cfae96b0ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b66ea8-d584-46d8-8280-faca921fa229"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2b6172-c4af-4c70-a834-03f29ac28fe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b96e535a-d288-4b34-85f5-19240f380679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9b183b-d484-413a-aa9b-7144164c7633",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5787a583-213c-4aad-b5ec-f9fb97a1b3fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8e9f19a-d11a-44c3-b103-4d08528bca7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbebe421-cd9e-4d18-8934-9cdb8409aae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8792635a-2433-47c2-ae99-26a7c8808719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ab5db6-783f-448b-8425-20c9f415d335",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e1edae-67aa-4958-8ce8-c1b754c42caa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eac79b13-e877-4e12-b504-4fbb6d6e8cd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5690ec-bce1-4591-be9d-ee204baba147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d100d8b5-8aac-45bd-a103-161aaaad7abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c55679-d941-49ef-93a0-37f06e772b7b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01aebd2e-7ffd-48f5-bcd8-3a89178b617a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f0ad8f5-559d-4c73-b0d2-4133f71ba5fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ba9b11-bb2e-4d4a-bf8b-cf1f7725997e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbde2d82-22d5-410b-807c-50d229a0fc57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd6c0d53-cd10-4d91-a2f1-63551704cbfc",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee827e7-1515-4060-b668-e797dd433864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f250a21-fcf7-477c-baf0-3539ea0a6b37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a13f3d6-02bb-4ecf-bf3b-db9ae2557a6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7856576-95d9-40b6-9299-771ec1772a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4397c42e-46e1-4fff-90ae-8f62c8fcd496",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95343fdf-8836-4b07-baf1-2c919a876919",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bcc1b47-f540-459b-83c4-e2072f86f5b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e308771c-2926-4105-bf43-0b4780152bfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b95ba81a-f9da-4be2-b2d6-6014d884d49a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321fa73e-bb5e-40ed-8a48-9a22a34c5d68",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14af37a6-016e-4d07-a244-e60cfd6fdbc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6d4d0be-cff3-403f-be2f-a1770ea2b9ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a51034-9dfd-469f-8999-d73f9f0bb32d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0fd9920-dde9-4ae3-93b9-ff0e66a0eb39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f45e93-d6b9-4e21-8e4c-11d729ee26c9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e05af69-a85b-4430-8a34-d6911ec3e3cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c14ba24-4946-4ba5-bb44-f7f0dae531cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d6da3d-6b25-49e4-92fe-8a45de8a9b41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad92f1a-6184-475c-a77c-78f0277241a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906a51af-4bdb-4545-979c-f60b52a4c292",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ad3833-a7e2-4eac-add1-e8c1211c6d45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3ab60e3-5ee3-416d-b8d4-92b772b062d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d058eb6-502b-4d8d-b392-697bb74d135d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3997aafb-5a2f-4829-beb8-4238f619aebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c360058-32a0-48b7-9a1b-bbc6b58248a1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3ab82c-770f-4a31-b265-50949f71ea6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ca4ba3a-c500-4081-91f5-0f091fc37808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e4a63a-02c2-4f41-bd42-de2426f9a138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "893f9c06-cfe9-4643-b471-2c931d1ccc1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9083719-dacb-48f9-8d6b-3705e639f4b5",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5115dcb1-e09e-4407-8f70-1770761ba09c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52042344-3917-4769-94a6-c34d1c028444"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d298aeb5-6493-4700-b93b-8bde75ff5dd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6e48deb-35c6-4aaa-a392-8f78f7042e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f03d84d-a70c-4e85-8870-7fab17a36426",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50aa871f-7bca-4f3d-891a-faf91c364ae7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddec7247-ac26-4fab-a25a-2a9e9509bb4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f754fd5f-08f7-44bc-8274-f2737c6ff7bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "953a5eed-9c83-4a7e-b881-c78e0311c40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab964153-98a9-4170-afc4-5b98d7f61b07",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd9cc01-d1ea-476b-946e-5376c75b3aee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa3370f8-cb59-4b51-a5df-cf19727775fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a003797-f70f-4e05-a24e-eb4d265aec6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e70a361a-ec34-4141-ad4e-9e7b728841e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce99c63-6552-4146-9ffc-c24b5aaed0c1",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6203a1e-6b0a-4266-b24b-c2e0060dca91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bde59751-c38c-4572-a69d-c9d0b7be0366"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a4e746-defc-495b-9855-acc9ffb51214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef057f86-838e-4c83-980f-daf5ebd8fe2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d226d9b9-f6c6-4a4b-bbaa-09336f00c539",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd778a0a-324c-4afa-a973-9a20b59f3de6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ca5dc0d-8fa7-44cc-9867-7b0b520c98ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fad9820-7707-40da-891d-0412a1024843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82c6033d-ef20-460e-a415-4b976a111be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f665ad72-f8f0-45ad-8c2e-25e87fced689",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97acc950-70f2-4927-a64a-b609b381b456",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7366cbe6-2ec7-4f59-b047-4ebe0a0a0990"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42219bd-a31b-4a98-adc6-beb8ea85477e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa68239f-771a-46c4-b009-ccc32e96c001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d2def5-e211-4242-bf4c-1d8b91c7f560",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66928749-d1ee-40b3-8a85-47425eedbce9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a091354-69bf-4915-8da9-b8a554b84a22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d372e9-4b3c-4a08-b816-3fbf03656017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acffed7b-43e4-4fcc-963b-0db28b0b26c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b229461-7970-44f5-be37-b6a3a436bb0f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2168eb86-dab2-4047-9e7e-06d9127e3eed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01dfcce0-dc35-4f11-85de-fc995aa5daf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d031bf-f273-4c9a-a839-d0b8f1e1ef43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c50581b-701d-4c7f-8583-9e45e06dd896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2df0c28-98b0-4c08-9925-a79a3d4ebe96",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568fc804-673d-401d-864d-732942fc6a1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dba3278b-01db-46ef-aad3-fbff5907dd28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03607370-f38c-41cb-bc8f-909773edbf2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bbac6e3-d40b-452d-ac4a-d2e844d30b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce30be6-0174-43ac-8618-ef60e48ee4d7",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2df66ca-e1b3-4d9e-958b-efc88b5c5383",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f7670fd-9f8a-49bb-9db2-8c2719830d04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "363e2e6a-4389-44b4-92b1-a9882ede1e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a37ecb4-8166-44a2-bb2c-ba0a62018912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c27fa63-8f48-4bdc-95df-0a130a2935be",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fdeb8e6-ccb6-4ccb-8427-1caa0a335976",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2141e9b3-290a-4cf1-b2a1-60667a36fe2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b2d5dd-bd98-494c-9895-f9a85c4c3003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab4770d2-6804-4c20-9832-151440dc375b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d41444c-9784-4912-ae1a-a93c8e8aa0d0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0d1049-3346-416f-8aaa-39ed0c3e4ffd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e5620b9-d33e-4adc-a0e7-524f803935a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eebfe07-c910-422e-8beb-cc7f441cb7f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7b3fb28-7b7b-4187-9dca-fda139e1d092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072b83f3-a21a-429f-9f43-15cba4157243",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700ef0c7-ea47-45c5-99ab-6ff0e474c97d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52ac11f5-20c6-4c9c-a69c-168ac38b8052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2caeaaeb-342a-4e2b-9eb1-cdf944861768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3756cece-87da-4631-a3bb-c2274e3a777d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f795a868-d7b0-444f-aff7-717edd1d4351",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a948531-91ab-444a-8681-5166ab9d061a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e304687c-1741-4b03-b08d-887ad0df355c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "449cad9e-c6c2-4eb2-bc03-d7fdd7429ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f08e960e-1cbf-4646-a81f-8a596ce28246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfb7483-9e3b-48e9-93fc-130579b4c1c0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a3268a-db09-4c4c-a0b6-d4c8e5f69bfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "027200f5-4be6-4537-b997-7988ac88f2a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "163c7a3d-334a-45b7-9abc-e1feccae3ee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a9f984-6fb0-4bbc-befb-7e5aade4f74f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c67dde-512c-40bd-abc5-9974e0f34528",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb9cf41a-dc32-4af1-b680-3c050bb83ec9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df17ba42-97fe-4cf9-a1fe-1aeea62e48f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "782a0c52-96db-41c5-8d8f-0e296d5caf95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bea0a2a-496f-48f5-a047-eefd7a428890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0004a54d-349f-457f-8cc8-f71cdb64a7f6",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5e48a6-a9e6-46ae-a647-c1e199084f8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15e404bc-32e5-48a7-9067-b1e13bd32a44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1384a5bf-1342-48b8-a4d3-a99bc426c56c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb95785-0dd4-48ae-8651-40531d5ba766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c29600e-12ff-4fa2-9ddb-f60ff3f377ae",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db20db45-3482-4440-ab0f-bb54d563d134",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e42ad884-f636-4519-9937-44678012a0b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2518eb4d-a22e-4c0f-8213-90697ce928ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6581fef1-555f-40f4-81b5-14a368834694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d362c299-03ae-426e-b4ea-ed1e97a5703a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a650cc34-809c-406c-998a-8e486682c7aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c043ea3-4420-4724-b802-a2974dd77bbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88383d8d-aa16-416b-b528-7b638b523285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "078dbccd-ce99-4f69-a15f-1fdc627f154c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca4d56e-fc4e-4f21-992d-db908984063c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11631984-aa6e-4867-b198-154fa43d594c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7f4217a-82ac-4554-a733-7d4d71ca5568"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e1df09-4afc-47a3-aa46-150c38d0b4d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6014b8dd-5f39-4d78-ab1b-4670cea928d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0777310f-4287-44b1-9926-9a8ef2902c60",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0990ed1-2dc3-43b5-9f87-c51cb09419ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d338dcd1-744a-4c68-9c2e-6e6368238bf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75db70f-251c-435d-b948-414c16e8eaf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ebefc4-c468-4abe-b7c9-d8f1d9cf638c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7df2e8a-cc56-433e-b875-7c32b4f0bb88",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65d5f79-780d-40a7-a7da-428095d1af81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "725e095d-cfff-470f-bb38-82f3aa6b6a8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e48a07-7ff9-4203-b534-27aeb97958ac",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94cb8efa-c98b-4c14-9a21-7e018eee54d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65dd737-44ca-4210-b4bd-00945600d306",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f516d138-8084-474d-85e8-dfab15b895f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "246054c9-1865-4267-8c5c-f36afd5453d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d712c7cc-fa45-43a6-86cd-a7b22d772256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8406f187-108f-4f00-98b8-d9422136b7a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae0699b-32bb-4257-a475-a54d8a81f118",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86504cc6-1fed-401b-8649-c995f9dcfb9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ed6f88a-b0fb-4c21-a7fc-90558d9db28f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ab1d07-56a2-4a92-950c-dd20035f25c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6187a71c-c332-4a24-84d1-6b164f47e983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c378c3c-dccc-467e-98e5-86572dea9510",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644057f1-724a-488d-90f2-e3a7c4d33c6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b99a975-36a9-4736-9809-af7faf1da463"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94cd8c4d-8f1f-497f-8b0d-6da202928d07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77affdc9-e3e5-4c02-93ca-27300790cb57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43c7712-c183-4e08-8fe2-6f2df7672fc8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107adc0f-307a-4f43-beaf-0c7c4d145464",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8211caa7-9165-478e-ace1-12c5d09d3dac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "645c1f39-a6e7-4faa-9182-038124b7b0a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b83e754-0b4b-4a10-bc5a-51859c56b8ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988105d2-e0d9-402c-a2df-4a51c1a641b5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74cc525-28a5-45a5-8654-f8cf1a0616a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21cd21ad-86d1-4f5b-b8c3-c1470e8f82a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ea6664-4733-46d4-bc2e-eb74de55e2f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9638cf1-2fbf-4432-a331-9cbdd97c3e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1063bdcf-2749-4cef-b871-9b7c1f61f35f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976acbf6-1ab1-439f-9bfe-36f5550179f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35bc09c4-b86a-463a-9151-c15515ef1b5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a4d331-e893-47b1-9b7f-41878f9db8d1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80d09625-e9f8-4bc8-930b-484efe0f6cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6ae2e4-6dff-4617-a280-c920569bde72",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3ac2b8-0e2f-497d-be77-a922df6384c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dfd072f-ee8c-4b06-9464-f671e6d041ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0bf2d0-1add-4aa1-81fe-6af95a35c5d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6400c4e-fd7d-48e6-8fae-819a6e59ad88"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05b66313-5097-4285-8ff4-7a0f971664ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07cbe2fb-bfff-4791-a61f-cc63656c0ef2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5cdbd2f-4c84-4a76-b8a9-f350f5091c88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "33d73585-c2eb-4f98-a586-4fe9fc8836de"
                    }
                  }
                ]
              },
              {
                "id": "a476c218-5934-4c0b-b3b3-00d4e786a2dd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8ac034ce-1414-4c7c-be07-fd6596390463",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073082a8-c56b-45e3-a91d-c316b3b27e5f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "186b0050-358c-478b-8ef8-0532899079ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce19ebc-b7ab-43a2-904f-c21a7c1c4d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f948885f-d5c4-43da-8e26-ebbb585cf014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d42bea-6d26-4a55-ac33-833b9e2eda22",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3801a509-9808-435f-b4b3-bb0fc86f83e6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "276fa421-9adb-4268-9d86-65530df707fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bee7188-73e3-428b-91b7-56cbaef3a349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e11bb87-0734-4e74-8209-d042dc3c76a8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5310457-3079-4a53-97b3-7ddd96cd865f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b141047-495e-42dd-8f59-efdf8417ea6b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "26330a64-5324-4f6e-b09f-3f4824a68364",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e957ea2-4db8-445f-aa32-fbd3b99be08f"
                    }
                  }
                ]
              },
              {
                "id": "99193174-db4f-4364-9bf5-8b0703b0de1d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "688ab40c-619e-44fd-813d-9f37f5fdd237",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93f2beb-6a74-429b-b0c0-637ab2f6b0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "0ed60154-de13-473e-9ce4-b1ff05cae230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e5864e-f2aa-46af-bacb-d3e295a16c07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8db4432-418c-4a62-ae61-52e7d9bd2a0f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1f6492dd-5186-4f8b-b221-30affdb5777c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b14b09db-0bcb-4484-9a9f-511f080c71b7",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "69935ea3-032d-4134-be5a-3a7446fc8c4a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b4939533-6e55-4890-b186-71865582821a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aaa353c1-7a58-415b-8d2d-f779870c5be5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "007e4692-1964-4076-aad9-e9eec4d96387"
                    }
                  }
                ]
              },
              {
                "id": "4abb38d7-ae08-4661-88b2-0ec0897c073b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "04bd8cda-b1d8-488f-af65-05af1e2d9895",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "00abe95c-db99-429e-81bf-5739c26afbbc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7aae7bcb-8352-47b7-bab0-fafb625c5bd0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3018c83-9b43-41f6-93e1-87c0458f5b25"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "748c27d1-a5f7-413e-ab0d-7ea45cacd30c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "16abfe48-1a1e-4a2c-9535-b8c2a56426bd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d319081b-671d-4399-8869-9324d48ba8e9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1c18dbaa-787c-4338-973b-c90af4987319"
            }
          }
        ]
      },
      {
        "id": "de37de55-f1da-4de5-b571-815535376aae",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8e9f1f51-78dc-4037-a3d0-e800d9f2ca99",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a12b3e8e-db05-493b-9f4c-62c4183ca28b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4c147935-bb35-4497-9391-9c3258f6db65",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec77872-a138-4229-81cd-5de3be05f1b4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b5a953d4-d575-4d55-89e6-4e55d5ba8d12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "741d1c23-29dc-4390-9c57-26afbd86381b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7739d7d-ba33-419f-8a93-1ebb744bdb19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16078273-9a7d-4b57-9ced-eb4c7b97fbc4",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49ae26f-25d3-4e1b-b93f-658b4eaa4255",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e71acf3f-d9ef-44e2-b77a-f3d1e63b0e7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70909848-3a8d-4ad9-8ee4-36e1c32f46dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e075ee49-1257-4960-a957-c924cd078e85"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f125f6ed-8374-4dc2-a96e-a87b27ab3834",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3a5f5a3-eea3-4551-8374-21fb23c0e981"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4771ce2-832b-44af-9f85-0f375f054822",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1711436-2c0e-4fa8-9b25-39278b92d3ec"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3e463bd-ea2f-45b7-91a0-b202bd84b737",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "39ad77ea-7a30-4d86-96ad-364e155cc16d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4c0b37ca-0d69-4636-8952-dadec5ec5beb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c010ac70-63aa-48c8-a416-675161ddc91a"
            }
          }
        ]
      },
      {
        "id": "4b9b861d-d613-4f2b-8874-d8ac31657a3d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "8e244da2-d5eb-4985-9910-7e69927950e5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1f82d56a-2ee6-4338-90ad-e9557cfa8a19",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2853ed2e-cc80-417e-9437-9858554cd022",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f5b520-5d0e-4df4-93ec-699ad52a6201",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3c24e2a-9dc8-4e4d-82d5-bac58376ec01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08999a39-b950-4eed-b732-313676b0f196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f38d4e39-1921-4c6f-8d51-407c52e1c314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79337a65-ff9b-4cd7-98d3-962f849bef1a",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5775088f-7063-4a62-9a59-41e140e805c7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "51f465ea-926c-48e9-bc55-8b28e0d2b886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ee511c-a500-4878-aa63-072690b646f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94458e7a-476d-48fd-b32e-3628461a4dd3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "766214b1-bd60-4a41-91f9-2aa32aa82e5d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "057b8cb6-b206-47d9-889e-2f67f7033c01"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e61b94c5-6eca-4ccb-b633-260ea4a45233",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae5b8f13-6c86-49df-a8ba-e2448d86be53"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd0be4e0-d228-4ac8-850c-3a38b1045f09",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3c3e35b0-e195-4e00-b804-44aa4f6e6a62"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae59edbe-a920-4ef8-b903-281b49e5162a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "14856299-9b3a-4825-9b29-330e0560afeb"
            }
          }
        ]
      },
      {
        "id": "cac544c5-8aa2-451d-b8fb-af73cde7c90c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "fd7d99fe-4988-4a0f-9243-4e7e40116ffd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5a1fc4c7-269e-4b51-ba49-4b215e04f372",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8c0ee585-5d7f-4168-b603-a0abd5a092e8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ed58e0-3009-4161-9769-b15cb68ea127",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8503822d-f0ff-4c7c-88a8-c4820231bd3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e16515-5be1-41b2-b519-2b558408c5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11fac609-6a8e-4d54-b9c0-643ae6d21864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e08e01-6a68-489a-8723-aae2653e79b0",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db17312-466c-4bb2-b997-925b08594c34",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "41fd0dbb-0df1-489a-8dce-56f305055a86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd221514-55eb-467f-89c5-73d397c7b4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a129f596-49b3-49ce-8a99-b1fe04582409"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f38d90fd-c1d1-41f0-b39d-8726daceaba4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4a0d72a-9869-4df9-989e-59aa442240c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3bf644e5-58f1-4fd0-afae-19f6cee509c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a33eee6-d5bc-42e1-a617-17aec810ca40"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "63f261c2-4541-48ea-9b81-f7dee6e4a9a9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1ed82a61-00d4-4944-9185-c8917ce1accf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "31b79d3e-138c-4396-ada2-291bd23a1e08",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5adfdd80-0716-43f3-9d5c-6f81f1e91ff5"
            }
          }
        ]
      },
      {
        "id": "978343e1-e35f-45b0-a11f-78c896e9e679",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f87d593-c340-4ce4-a55f-c4c35b54ffbc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "141022b7-42c9-42ce-ad74-6e18a19c6d5b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c030e82a-cc06-4cb3-b380-107151425ce3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "32295be5-cc1d-4a95-af12-d36c29891b38",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9650b00f-2584-4aea-b5d6-21e58f61737b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 70.32307692307687,
      "responseMin": 7,
      "responseMax": 260,
      "responseSd": 26.13418491749409,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1684629630440,
      "completed": 1684629661711
    },
    "executions": [
      {
        "id": "3aa64c47-7912-44f2-b323-8986c550f9e0",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c8c21f56-6a25-4ce6-ae37-6bb244910ea0",
          "httpRequestId": "6ec5b014-e9c5-400f-b706-4a45a4302ed2"
        },
        "item": {
          "id": "3aa64c47-7912-44f2-b323-8986c550f9e0",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "868ea74e-9a12-48c3-bf0e-b1ce8f81c220",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 0
        }
      },
      {
        "id": "cfed24e3-27b4-4e92-ac86-59871910be48",
        "cursor": {
          "ref": "55a9666c-4c75-4f3c-bacd-5d24024d3e2c",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4141ee4c-d926-482b-9c54-5a37ceb13ad9"
        },
        "item": {
          "id": "cfed24e3-27b4-4e92-ac86-59871910be48",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "948e0217-d87a-4dbe-9d39-677a712f3683",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "11d1682a-1b3b-486e-8f9a-609b21c0dd0c",
        "cursor": {
          "ref": "c2a29257-a66b-4224-b8e0-1b490cd9c064",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f0074c9c-49a5-49f4-8e80-c27b7796e848"
        },
        "item": {
          "id": "11d1682a-1b3b-486e-8f9a-609b21c0dd0c",
          "name": "did_json"
        },
        "response": {
          "id": "8bd33fa1-ce40-4a7a-b93e-5833fc4814e2",
          "status": "OK",
          "code": 200,
          "responseTime": 221,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe64ec1-f573-47a5-b222-38ba27becdb6",
        "cursor": {
          "ref": "5a7f5613-6ae5-4873-9947-e9c0f67b86c7",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6de223ef-fc71-425f-ad4a-ceed86f3a8cc"
        },
        "item": {
          "id": "dbe64ec1-f573-47a5-b222-38ba27becdb6",
          "name": "did:invalid"
        },
        "response": {
          "id": "87c5b8b5-bf6d-4a91-b826-4d9282302699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe64ec1-f573-47a5-b222-38ba27becdb6",
        "cursor": {
          "ref": "5a7f5613-6ae5-4873-9947-e9c0f67b86c7",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6de223ef-fc71-425f-ad4a-ceed86f3a8cc"
        },
        "item": {
          "id": "dbe64ec1-f573-47a5-b222-38ba27becdb6",
          "name": "did:invalid"
        },
        "response": {
          "id": "87c5b8b5-bf6d-4a91-b826-4d9282302699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56f98d3-a997-4c7f-a75f-aad5031dede2",
        "cursor": {
          "ref": "93ed4b8b-7ea1-468c-8aa6-69e4ee9c69f5",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "353184bc-1a12-4f26-8cbb-9e4d40bbc251"
        },
        "item": {
          "id": "c56f98d3-a997-4c7f-a75f-aad5031dede2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "21ce65a3-bc1d-4737-92ef-24d1560dcf54",
          "status": "Not Found",
          "code": 404,
          "responseTime": 99,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7b517a-0a63-4f2f-9db6-86a2dc25cad3",
        "cursor": {
          "ref": "abd8bf36-4005-4096-9522-795abbacc3bf",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d56a4d9f-6e2f-47d6-9be3-3c01b96dadb1"
        },
        "item": {
          "id": "7c7b517a-0a63-4f2f-9db6-86a2dc25cad3",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "579e4a25-bc65-41f9-b6b4-0b954f775eb5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479fb137-1099-48de-87d2-eec57eaa24af",
        "cursor": {
          "ref": "4ba5abc2-bcc4-4a3c-8dbd-1d405e1625c3",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f8cdfa33-8d78-4894-be6e-667a3ea85f49"
        },
        "item": {
          "id": "479fb137-1099-48de-87d2-eec57eaa24af",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b9e217ea-f6ab-4eb6-85c5-cbe93d19bcc2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bdbbe56-bf6a-4f50-8566-17fd12f18820",
        "cursor": {
          "ref": "a49c3e94-53b7-47db-883c-99020deb8f3e",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e317e060-2322-4d84-8810-81997b473627"
        },
        "item": {
          "id": "2bdbbe56-bf6a-4f50-8566-17fd12f18820",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "b6402eb2-e5dc-4535-9272-e1e964fb9034",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 63,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bdbbe56-bf6a-4f50-8566-17fd12f18820",
        "cursor": {
          "ref": "a49c3e94-53b7-47db-883c-99020deb8f3e",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e317e060-2322-4d84-8810-81997b473627"
        },
        "item": {
          "id": "2bdbbe56-bf6a-4f50-8566-17fd12f18820",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "b6402eb2-e5dc-4535-9272-e1e964fb9034",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 63,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d7b6ce5-413d-4563-a008-9a360450776b",
        "cursor": {
          "ref": "2084e4cd-e24d-4746-ba92-1920d6d62190",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "cb30b219-ef65-4c6b-9603-501801aa597a"
        },
        "item": {
          "id": "3d7b6ce5-413d-4563-a008-9a360450776b",
          "name": "identifiers"
        },
        "response": {
          "id": "5cd433db-4c3a-43aa-a8f1-b01cec5f8e9f",
          "status": "OK",
          "code": 200,
          "responseTime": 107,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e146d28-feff-4fb3-a3ef-1039e8d77ee1",
        "cursor": {
          "ref": "07f1f558-2e7d-4f3e-b100-f04f05e65c9f",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5f55b4f5-25b0-456b-9c07-f57479a3efd3"
        },
        "item": {
          "id": "6e146d28-feff-4fb3-a3ef-1039e8d77ee1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "25541725-d4eb-480b-8bec-dcb723fe4005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e146d28-feff-4fb3-a3ef-1039e8d77ee1",
        "cursor": {
          "ref": "07f1f558-2e7d-4f3e-b100-f04f05e65c9f",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5f55b4f5-25b0-456b-9c07-f57479a3efd3"
        },
        "item": {
          "id": "6e146d28-feff-4fb3-a3ef-1039e8d77ee1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "25541725-d4eb-480b-8bec-dcb723fe4005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3adf3da8-50e7-4be4-9494-e4a189db2df1",
        "cursor": {
          "ref": "d108ee95-e9bd-4fe3-ad71-b4bbd0215dc9",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e6ae6ce2-8806-4530-9e69-e4cc15c0a707"
        },
        "item": {
          "id": "3adf3da8-50e7-4be4-9494-e4a189db2df1",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "993de5b9-de3f-4f58-b402-71f1edc8e45a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150bdba0-dcca-45fa-876d-08d3202073ad",
        "cursor": {
          "ref": "e1fbf8f0-5fab-4e37-9016-1d78c4e15bff",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "678e221c-bfbe-458f-8488-2bdfce6340a2"
        },
        "item": {
          "id": "150bdba0-dcca-45fa-876d-08d3202073ad",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "bb4ff6a3-8c10-4875-8c1e-884dd50bb1e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ddadc35-2fc8-4cc7-b42d-0f139e805520",
        "cursor": {
          "ref": "5f5d4b21-46d1-407a-bd7f-8f59c46c57e7",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "cce5743f-57ee-49ce-b2b5-b0d00f24581f"
        },
        "item": {
          "id": "5ddadc35-2fc8-4cc7-b42d-0f139e805520",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "6d61968f-5a8f-4610-8b11-6dc9ab510c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cfd15cc-7749-410f-b759-368fe7d8a261",
        "cursor": {
          "ref": "781d51b1-47ed-47de-bb97-5dc48819340a",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c4fb8ba4-1a6d-414d-b5b6-658c5d58b496"
        },
        "item": {
          "id": "2cfd15cc-7749-410f-b759-368fe7d8a261",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "378a3999-bd5a-42f2-b6b2-e6015e519fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84eb1418-ca48-4766-9af7-99eb3d9a757e",
        "cursor": {
          "ref": "701465f8-3c7e-49fa-82f5-a4ee92e5a8c8",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "684946c9-7a6f-4a51-bed6-fe95d0b884b4"
        },
        "item": {
          "id": "84eb1418-ca48-4766-9af7-99eb3d9a757e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "500bfd17-12cd-479d-8830-e022d722a801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b08e81-e07e-4b49-ab76-654a0c4ee48e",
        "cursor": {
          "ref": "82634f6f-03c7-4d6a-a22b-f4439057cdb9",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "328fd2e7-aae2-4d87-baae-d2c2fbb1c9d6"
        },
        "item": {
          "id": "97b08e81-e07e-4b49-ab76-654a0c4ee48e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c1918882-0499-40b4-bb66-ededdd8ae03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed403b5-b982-4de6-8085-b676683bb07b",
        "cursor": {
          "ref": "470b8d0e-7501-4f45-92b6-4a1e8887f7df",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0e63bbf8-551a-4f5d-92b9-ac72378fa688"
        },
        "item": {
          "id": "eed403b5-b982-4de6-8085-b676683bb07b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "56c6640e-d9c0-41af-a62f-2845133db1c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1557e24-81b6-4a16-9fc6-06e4d957ad3c",
        "cursor": {
          "ref": "6e705fc0-5f24-41d6-88bf-8963f64a21ed",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1034b7f1-f088-4f37-acc3-c5e6166d25c9"
        },
        "item": {
          "id": "c1557e24-81b6-4a16-9fc6-06e4d957ad3c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "700dfb86-f39e-4adc-ba0e-88fd86d657d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1d336e-e42f-4739-a778-384c7f2bf98d",
        "cursor": {
          "ref": "2d04c927-c5b3-4df0-b957-9250385ec97b",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "017db8cb-c99c-4736-8009-be3fbfb565ac"
        },
        "item": {
          "id": "8c1d336e-e42f-4739-a778-384c7f2bf98d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "cc6e3c16-d0b1-483e-a334-18b3c87800d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc56172c-f002-4132-a507-d107b7dfe994",
        "cursor": {
          "ref": "f5c9df97-821b-458c-b97e-691cce9d3a75",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f7090d9b-f797-42a7-9043-52e3e1f5179c"
        },
        "item": {
          "id": "bc56172c-f002-4132-a507-d107b7dfe994",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5d44bb70-e86d-4287-ab62-5169f417ea67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b831c3b-c958-4359-8b60-0af38095a9ae",
        "cursor": {
          "ref": "1e66401a-9c50-4707-b4c6-47c808dfb8b6",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "45d871fe-d0a0-4c1a-b26b-4e221532fe08"
        },
        "item": {
          "id": "7b831c3b-c958-4359-8b60-0af38095a9ae",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ae6d2714-aab4-424a-ac53-79f7e8fb0421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e8b95f-ceae-41a3-8a92-bc0a4c9213d2",
        "cursor": {
          "ref": "b5f528c8-ddd6-4146-b79d-f5513705e2ac",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7ec81cd6-5659-4f98-8915-d2512e571b7e"
        },
        "item": {
          "id": "97e8b95f-ceae-41a3-8a92-bc0a4c9213d2",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d809c75f-bb8e-4035-987e-e9962a01896f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9bac84a-850b-428e-82ff-d499b6173cd6",
        "cursor": {
          "ref": "01e593d2-3934-4868-b108-076a199c7d04",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "68d997de-be11-4c8c-ab5e-ba0bdaf04f53"
        },
        "item": {
          "id": "f9bac84a-850b-428e-82ff-d499b6173cd6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "a53f5583-1726-4804-a477-be65b625e431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3152366c-d432-4b5d-9a33-87daf44a271a",
        "cursor": {
          "ref": "e735fc3b-b909-4c8d-a3b2-b51828a34a68",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3e2c1b81-24b7-4b18-bc1b-c239d101bdb8"
        },
        "item": {
          "id": "3152366c-d432-4b5d-9a33-87daf44a271a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "28f7f6fd-9a6b-4090-8dc3-5707ed1e25ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f328254f-97e9-44e4-a54c-104842b3afde",
        "cursor": {
          "ref": "1f505222-2eab-4a0d-9a5b-469155225a65",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "cc8ed643-df3e-482d-b7da-e3634a9c1991"
        },
        "item": {
          "id": "f328254f-97e9-44e4-a54c-104842b3afde",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2cc3db54-bf39-4216-80cd-cd4ebd893ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a41237-c24b-41c6-8997-965e233260f3",
        "cursor": {
          "ref": "4ef10e66-724b-49a4-bc8d-5eac2b7c291d",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f604d7c9-69de-4d4c-b399-d872c2b8a974"
        },
        "item": {
          "id": "e5a41237-c24b-41c6-8997-965e233260f3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d387b811-a845-44d4-b8c0-1996e40bea6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774cd874-ee17-42a0-8767-0988fda6e533",
        "cursor": {
          "ref": "d49ff558-26ea-4ddd-840a-267ff79abdb3",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f84a0db2-bd4e-4cdc-a6c7-e219d4d5db84"
        },
        "item": {
          "id": "774cd874-ee17-42a0-8767-0988fda6e533",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "68f9acc1-1703-40b4-8290-97b51c9a64d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2b4215-14cf-4a85-89a5-fe83925e1779",
        "cursor": {
          "ref": "99b69256-ad2e-4146-bcb8-645d89614880",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "de05ad30-ae84-40ae-bc0a-1eae46503c7d"
        },
        "item": {
          "id": "be2b4215-14cf-4a85-89a5-fe83925e1779",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d4c69efb-b0da-4eee-9eb0-68e843f83e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12aa7505-b7bb-440e-97e5-788e6926456b",
        "cursor": {
          "ref": "6f255afa-d930-49b3-b757-bd138cf80861",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1aecda30-c5ca-42f5-b32e-3ecc47c0fcf6"
        },
        "item": {
          "id": "12aa7505-b7bb-440e-97e5-788e6926456b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8d64f4ec-c687-4668-801e-2538ad56c930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36f7710-f553-46ed-8326-2e1fd43fa0c9",
        "cursor": {
          "ref": "42f36df0-271b-4687-ba3c-faf121af7f26",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4c07d030-53cf-429d-85b5-d5adf881ad36"
        },
        "item": {
          "id": "d36f7710-f553-46ed-8326-2e1fd43fa0c9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "95afdb99-7a7f-4cba-90db-f73a84ed0703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033e8cad-78c3-4b24-8051-7067836faae6",
        "cursor": {
          "ref": "f640940e-fac0-4ea1-ac7c-ed719a6fb4a2",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "54b84da7-9cfb-49cb-9483-738e715aa1d1"
        },
        "item": {
          "id": "033e8cad-78c3-4b24-8051-7067836faae6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7fed4a1f-0ad5-4032-93af-5d05471ff462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426a3b7a-76f0-4399-bfc3-4e17d0cdc23b",
        "cursor": {
          "ref": "5428d467-7c2d-41b2-b185-b26ec756cd09",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ed193c43-16a0-4919-b316-7e36540ccdf5"
        },
        "item": {
          "id": "426a3b7a-76f0-4399-bfc3-4e17d0cdc23b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0286b522-6372-40dc-8b66-438635d93de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f3416d-114f-4c11-93c3-409865e49fb7",
        "cursor": {
          "ref": "d2d97e33-7e2c-4bc7-bc21-9002b0994313",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7110f4ed-2d70-4157-ba4c-6cc3f9e9f5cb"
        },
        "item": {
          "id": "52f3416d-114f-4c11-93c3-409865e49fb7",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "388f9298-b48e-4c3f-9748-667ef6a44559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee128eef-c115-48ae-a3a9-3894fe86c157",
        "cursor": {
          "ref": "d29245a1-2a06-46ed-8ca0-26b8ef1375be",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "eee11794-4a50-43d2-9adf-2fc80eba7411"
        },
        "item": {
          "id": "ee128eef-c115-48ae-a3a9-3894fe86c157",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "31b67988-6f5a-4856-a54b-1fb58c7a9911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ceea76-7f76-4b83-9726-7656d7e49669",
        "cursor": {
          "ref": "97a73866-8533-43ac-a19b-f78e147cdcd3",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0fc05f02-4e53-4dee-ace1-c1805dac9d5f"
        },
        "item": {
          "id": "11ceea76-7f76-4b83-9726-7656d7e49669",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "39e560e4-a6e4-4e98-a7d5-9fccf35b3fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65fc8323-3026-4205-b000-268f5a4f8c9a",
        "cursor": {
          "ref": "cb1abbf0-9f36-4a5c-9f91-0f5c90d60cf1",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ca95cc63-4db9-4fa8-a60b-5b1feaa47db9"
        },
        "item": {
          "id": "65fc8323-3026-4205-b000-268f5a4f8c9a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "8ce89efd-28b8-44a3-8838-bf70a9d3d07a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0119bccb-e9d5-4327-9b35-47ce84167159",
        "cursor": {
          "ref": "cefed64a-621c-4ba9-91cf-11d742f4737a",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5faf3537-7f70-4362-b537-6ecba46e9781"
        },
        "item": {
          "id": "0119bccb-e9d5-4327-9b35-47ce84167159",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9429b40f-40d2-406c-b724-cb2ec019bd20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03a1a02-74a7-4bc8-90a0-44b518f87e9b",
        "cursor": {
          "ref": "16b95b61-1216-485d-a30f-947182b63f15",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "56205cc9-9e92-4d45-afa7-d8890844aa5e"
        },
        "item": {
          "id": "e03a1a02-74a7-4bc8-90a0-44b518f87e9b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8fa052d5-572f-4b4a-8df3-7f47114f146f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160f1a87-1438-48fb-8886-06a4eb9b1c65",
        "cursor": {
          "ref": "f8c45fd4-625d-44a7-bdcf-4f9e267d9000",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e3e4c311-a5d4-4456-96ee-ca8b47e06e3b"
        },
        "item": {
          "id": "160f1a87-1438-48fb-8886-06a4eb9b1c65",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f3f5abf8-d7a0-4d35-b704-4e638e5e8f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac05836-e650-4ce4-870c-a9ecd7c71423",
        "cursor": {
          "ref": "e1393276-d49e-42ad-a88c-e7e1b4f3f33e",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a10a5a9b-34eb-47f9-aa3e-8bed2d601ffb"
        },
        "item": {
          "id": "9ac05836-e650-4ce4-870c-a9ecd7c71423",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3aa301f9-76ef-4d41-bd9c-ce537785da5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3394fd6e-1332-4ddf-8969-fea9882647fb",
        "cursor": {
          "ref": "f3432138-35cd-40e5-894e-c3a0488c1dab",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "40677108-bc85-40bb-bbbb-5ab29f935777"
        },
        "item": {
          "id": "3394fd6e-1332-4ddf-8969-fea9882647fb",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "18d90b26-f157-4c08-9775-c0ef9fa91e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ccbced0-8239-4775-b8f0-631f9621c25e",
        "cursor": {
          "ref": "c71ae65a-08aa-4bae-9fed-5e92b3d1b8e7",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "32b3c764-e903-4932-b17c-0c8a7f4a4597"
        },
        "item": {
          "id": "5ccbced0-8239-4775-b8f0-631f9621c25e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1bb6d6c7-24e9-4c91-bf07-4c155b21bc34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233920bd-de66-4618-a465-b6775229626b",
        "cursor": {
          "ref": "d0aaba1e-724d-48cd-916e-a3d232548d36",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a4736875-7fc9-4149-b439-76ff5e2bdd41"
        },
        "item": {
          "id": "233920bd-de66-4618-a465-b6775229626b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6ab449c6-b1c1-43ac-9a43-75accbd0f106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c0b514-54a8-4890-a728-14a8dec9ee22",
        "cursor": {
          "ref": "9a8ae1f0-2e15-45d7-97d0-acce57b75066",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "010570c1-1ee8-4bcd-ab42-948982b4ff92"
        },
        "item": {
          "id": "c9c0b514-54a8-4890-a728-14a8dec9ee22",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "362b1209-4e9f-4265-94eb-4a0dbcf1241f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7084e0a7-46db-47d5-99d9-18312b5c5ac9",
        "cursor": {
          "ref": "30ebbbae-ecb9-45bd-99f8-41543a3e3dfb",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a71742af-ef1b-48c3-a239-791858eca814"
        },
        "item": {
          "id": "7084e0a7-46db-47d5-99d9-18312b5c5ac9",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "57b34e3b-43bb-47be-a980-9312c0ee6141",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 72,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c32e823-7618-4e55-84a9-206c6aae18a1",
        "cursor": {
          "ref": "0acbef5f-11d6-4f55-921c-8b13fff0718b",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "65496954-bbde-4aac-a3c7-ac744aeb1d12"
        },
        "item": {
          "id": "7c32e823-7618-4e55-84a9-206c6aae18a1",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f47f6738-1c0f-427c-a46d-c60bd27a448a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ccfcc9-1672-4ff1-9a44-693e9f093969",
        "cursor": {
          "ref": "23e202f3-61ef-4e1e-b75c-f4f726347cf7",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5a8df0c4-6502-4b98-98ca-1f86c54a63ed"
        },
        "item": {
          "id": "c1ccfcc9-1672-4ff1-9a44-693e9f093969",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a4ac01f1-cb81-4695-a5e3-1ed299bd59ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f8ae3ca-6dfb-460b-a58f-ba6d787258fa",
        "cursor": {
          "ref": "cd9f02f7-858d-4bc0-9cda-b289d4d81def",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e03bfc27-ab7b-4645-b612-b56744af518e"
        },
        "item": {
          "id": "6f8ae3ca-6dfb-460b-a58f-ba6d787258fa",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1ec5a569-2e38-4f3f-8641-6b0157a6b680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc924328-f970-49a2-8648-b3300a5e8ba1",
        "cursor": {
          "ref": "45e91653-9b46-4dd9-adc3-290bec9142c0",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9b7173e5-74b9-4959-a324-41f8e3676772"
        },
        "item": {
          "id": "fc924328-f970-49a2-8648-b3300a5e8ba1",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "aa15f364-65cf-409c-87a5-4b50e398b964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c708f83-2031-4538-93de-d05b66f3d799",
        "cursor": {
          "ref": "7e96e35c-1aa1-43c6-b292-31b3baf1ddfd",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9e700ed1-9811-4c7b-8591-19a6013a59bc"
        },
        "item": {
          "id": "3c708f83-2031-4538-93de-d05b66f3d799",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0de4308d-04f0-493d-902c-742ddb046bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d8c6ad-3f06-4890-a895-ab6800d4b724",
        "cursor": {
          "ref": "014e922c-08f7-41ec-b1ed-4f757792dc85",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "515049fb-9bd1-4499-a8e2-fd1127ecfe0c"
        },
        "item": {
          "id": "21d8c6ad-3f06-4890-a895-ab6800d4b724",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "47ed18d0-b965-4ca7-ae0a-5b98982bce47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d6cbe9-a5dc-46db-bcb5-6ef4556a2706",
        "cursor": {
          "ref": "2a24faac-a406-4b83-8e67-7338cbba4e8c",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "6fc24ed0-86f5-4242-8765-8757463142db"
        },
        "item": {
          "id": "49d6cbe9-a5dc-46db-bcb5-6ef4556a2706",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "07ce8b46-3e42-4127-9931-74bde7e14b08",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 74,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc455e4-2ffe-4373-92f4-3148417c9d5a",
        "cursor": {
          "ref": "54a592cc-9c57-4b4e-9654-2ef3680c6df2",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6e9d47d9-03f7-426e-b6a8-a7c4cca47c74"
        },
        "item": {
          "id": "cfc455e4-2ffe-4373-92f4-3148417c9d5a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "708d0839-b871-42f5-95d9-6aac1909a6d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073d3e59-8d7f-4627-bdca-de55b3963cb4",
        "cursor": {
          "ref": "7460172e-a159-46eb-80c7-73956ebe6ba2",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "08bc1de7-17b5-4326-a66f-2cc0f91dcd1a"
        },
        "item": {
          "id": "073d3e59-8d7f-4627-bdca-de55b3963cb4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e6ccbacd-4dd7-4879-b7a0-b18473e59269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52ef813-4227-4a85-82cb-8a9bca55b343",
        "cursor": {
          "ref": "f9a80312-a203-4f6e-8f75-04d4db72cf09",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "bac2f48b-117b-441d-8d60-a825d9789f4d"
        },
        "item": {
          "id": "d52ef813-4227-4a85-82cb-8a9bca55b343",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "029a9bec-58ee-42dc-84e3-eb865e4103a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d6ab11-5368-4d78-9b47-a2db2c3b081f",
        "cursor": {
          "ref": "2a99c3ff-aa0b-476f-8f42-155aab5d9e4e",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a26c04f8-baba-4e15-83ad-3415d37315f3"
        },
        "item": {
          "id": "e4d6ab11-5368-4d78-9b47-a2db2c3b081f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ec238e3a-26ad-49a3-9ecb-567b7f2fc194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4a0e8c-2432-4ad2-a164-93a5d5d20acb",
        "cursor": {
          "ref": "83c315d1-3994-4008-b76c-2fc8c4f8820d",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "692d4cc5-efe1-4d2e-a2b6-263d02711a27"
        },
        "item": {
          "id": "6d4a0e8c-2432-4ad2-a164-93a5d5d20acb",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c6e5e6a8-d42a-48af-ae54-49308c83c635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "153fdcff-8423-4100-89aa-c43769382c53",
        "cursor": {
          "ref": "7fc43e95-f29a-499b-b056-e44f12560681",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4f4cc45a-d22a-405c-9c41-2c67d8a4306a"
        },
        "item": {
          "id": "153fdcff-8423-4100-89aa-c43769382c53",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "aa433403-ce8a-4e6c-be74-8278117d77ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ee0ba8-640d-4765-95a4-f69c25cb1bb8",
        "cursor": {
          "ref": "3de3e4b7-857b-4347-a58e-3e55328f4e7c",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d599cd80-f3f4-421c-b36e-bc2cdff1a079"
        },
        "item": {
          "id": "d2ee0ba8-640d-4765-95a4-f69c25cb1bb8",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7257ce2c-dd22-4caa-99a3-79a79467a2f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7741a2ef-1556-4fcd-83e3-eed35b2d4cee",
        "cursor": {
          "ref": "37314dc3-2824-4682-8100-42b7c601af6a",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "4abc9c74-4713-4db6-961f-8144d13ab91a"
        },
        "item": {
          "id": "7741a2ef-1556-4fcd-83e3-eed35b2d4cee",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8209c7f4-f702-4cf1-93a7-b97476cd8d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78672c93-fe56-4a19-921b-c1deec47f19f",
        "cursor": {
          "ref": "e243c31b-dd2e-46e0-9d14-9e7c7f36633a",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9013e2ca-5a39-4c7d-af82-8e3f0c89aae4"
        },
        "item": {
          "id": "78672c93-fe56-4a19-921b-c1deec47f19f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ebdeaa6b-08d0-4d91-a4fd-4c2de7e7ddd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0746a4e8-60ab-461e-a12f-89835d9c4a50",
        "cursor": {
          "ref": "83d32ec3-1370-43b4-aec1-5e4be40d94ab",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4162017e-8603-484a-b9e9-954e7b03ca47"
        },
        "item": {
          "id": "0746a4e8-60ab-461e-a12f-89835d9c4a50",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "80f35932-81e7-43e2-af88-d2ef00d70fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27375c34-25f8-43b2-9195-f5d232085cde",
        "cursor": {
          "ref": "d45a9788-36a7-4f02-9d27-743874e4ef40",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "1f789d67-41c3-4506-bf37-bc6be858ce34"
        },
        "item": {
          "id": "27375c34-25f8-43b2-9195-f5d232085cde",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a748959e-8d9e-45a1-ba72-0d23fd2a882b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41fdf7c0-fcc2-49ea-beee-3512c7a67d3d",
        "cursor": {
          "ref": "1ff5336e-322b-4e51-9692-17f097c031c6",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ec195804-0d1a-4cde-9b99-22787fd042ac"
        },
        "item": {
          "id": "41fdf7c0-fcc2-49ea-beee-3512c7a67d3d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1430be8d-7f6c-4631-a3e1-8fddab3b4b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8a0e9b-9340-4b52-89a1-e48b5c4b3ca8",
        "cursor": {
          "ref": "2320dd31-d1af-478a-98dc-0f1ebcfb8318",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "5a89f4a5-f1ba-46e5-9393-c10d3a73100b"
        },
        "item": {
          "id": "7e8a0e9b-9340-4b52-89a1-e48b5c4b3ca8",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "92177acf-2d78-4532-9705-0a27e8535a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d9c0ba-2571-4ae0-998a-6ffe249527c7",
        "cursor": {
          "ref": "89c01317-8268-4e19-8dd6-7e4cdb3ec2cf",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f1df7896-e1ac-443f-b41f-81a8e029d182"
        },
        "item": {
          "id": "87d9c0ba-2571-4ae0-998a-6ffe249527c7",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5c11cd10-3827-4884-8e0d-311c71f0a082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6af53dd-2e5d-4808-8bec-f5fd3eb77d01",
        "cursor": {
          "ref": "4fab6402-6c3d-4e75-82ef-4d0ee56509f0",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6b31325a-1313-46b1-8c7a-afa6b39e4254"
        },
        "item": {
          "id": "e6af53dd-2e5d-4808-8bec-f5fd3eb77d01",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "27be03fb-3c96-4da4-a369-981a563dd32a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c26daf1-e839-434e-ac26-c77c89691681",
        "cursor": {
          "ref": "43919c1e-a4f7-4ba5-b955-fc25c95d558c",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "47c0cd7d-6e30-4de0-ae1c-826fa8a91004"
        },
        "item": {
          "id": "0c26daf1-e839-434e-ac26-c77c89691681",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "22b4a42c-9533-4408-8c2a-7a6f6c946787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77903676-f8cb-4111-b60a-2637c350155a",
        "cursor": {
          "ref": "3ac6b6da-01c7-4331-a0e1-ca83a72f051f",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b0e52450-2866-4d3a-bacd-51110cb0679a"
        },
        "item": {
          "id": "77903676-f8cb-4111-b60a-2637c350155a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "bf87b945-79f9-4c77-9db4-c9930adaf9bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c556828a-9df1-4780-ac33-48e4230dd652",
        "cursor": {
          "ref": "bed822b5-831c-4efa-8fc9-a27f2f37ae7b",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b49f6092-8023-4d23-b60a-fee588dea013"
        },
        "item": {
          "id": "c556828a-9df1-4780-ac33-48e4230dd652",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "526574b5-44cb-41fd-9da8-4ef6681c8e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b8a070-15dc-4387-ae5e-455eff32f75c",
        "cursor": {
          "ref": "faae1bb4-3224-4257-81fd-0dcb6a42749f",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "63217f7e-2f99-475b-bae6-ebb33b6065bf"
        },
        "item": {
          "id": "c9b8a070-15dc-4387-ae5e-455eff32f75c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2a375f2a-6726-449c-b0fc-44e0505fb383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dab15d7-a9b8-4899-8034-e7a4b57cdfeb",
        "cursor": {
          "ref": "4126375b-3762-4d9b-9be2-3f5ef520b95f",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "35d190e9-5846-46d9-affd-3acc916fc740"
        },
        "item": {
          "id": "7dab15d7-a9b8-4899-8034-e7a4b57cdfeb",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "121ba1a5-1969-4e36-b914-763dc110959a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "755340fc-55fd-4501-9a43-6b17d0352698",
        "cursor": {
          "ref": "b2f3ff62-2120-44a8-adbc-d144c03ec18e",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d84856dc-ce44-49d6-8c98-ce6b4bdb5ff4"
        },
        "item": {
          "id": "755340fc-55fd-4501-9a43-6b17d0352698",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "60396a7a-606c-4d05-9248-49fe506861dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4050da-9844-4cb5-853f-cdeb9e5cf72a",
        "cursor": {
          "ref": "8220fc51-b4a2-4b02-83aa-51f13e8d4fe7",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3e2620ca-c474-478c-b65d-c98ccd3ef126"
        },
        "item": {
          "id": "db4050da-9844-4cb5-853f-cdeb9e5cf72a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6f852cfe-361b-4a8d-bc25-7eddbf7d5b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84548f19-a641-4ab2-b785-4105b8cc8690",
        "cursor": {
          "ref": "a1cc252d-0747-4584-b289-1cbd3a051740",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7586de73-1191-414d-9ad7-cfa32bde225c"
        },
        "item": {
          "id": "84548f19-a641-4ab2-b785-4105b8cc8690",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0c557e28-f236-4015-8d73-6988d8f10f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc133968-8102-4665-b03f-888c61f25bf7",
        "cursor": {
          "ref": "17576097-8ab8-4acc-8a44-8feb26c21aa9",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "af454683-581f-438c-9b4c-71650367f952"
        },
        "item": {
          "id": "bc133968-8102-4665-b03f-888c61f25bf7",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2f92e723-3de8-4dfb-86d1-56426976238a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca57a55-02ca-4285-a5d8-2364de3befe2",
        "cursor": {
          "ref": "bfeb29a8-56e6-4052-901d-162d15bf7eaf",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "63838368-c0fd-4020-9c18-652d3795d7a8"
        },
        "item": {
          "id": "4ca57a55-02ca-4285-a5d8-2364de3befe2",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4c9c1455-c318-4c08-9dfc-e61ce1893d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52221a82-58e9-4914-a90c-87fe86f530de",
        "cursor": {
          "ref": "955f55e7-a472-451b-87d9-7be2b2ca71d7",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3caa5559-c9db-4df1-89a1-76d4a7d520ff"
        },
        "item": {
          "id": "52221a82-58e9-4914-a90c-87fe86f530de",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "56e46aa6-951a-4d77-adfd-20c0fbaed859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "014b4c3a-5e09-464e-af34-af9ba3899b60",
        "cursor": {
          "ref": "d08458a5-4b99-49a4-979c-e7e7a782cb74",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "11baf681-90e1-437d-9889-da145286107d"
        },
        "item": {
          "id": "014b4c3a-5e09-464e-af34-af9ba3899b60",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "67d9cbb6-90d3-42ce-97c9-6078aeeb52d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a8432a-3c1b-402c-9d32-d7bd74be35aa",
        "cursor": {
          "ref": "4007cc37-9981-43de-88e2-f2fae9763128",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7ecaeb42-c990-4872-9e6d-946c0b10919d"
        },
        "item": {
          "id": "b7a8432a-3c1b-402c-9d32-d7bd74be35aa",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "41849029-73e0-431f-b7e6-d3e7609d037f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "277ec862-183b-4f52-9e43-764bc1bf2261",
        "cursor": {
          "ref": "bed91602-59dd-4697-8efa-46c947503924",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2b015728-0d9f-468e-be90-98ed137df876"
        },
        "item": {
          "id": "277ec862-183b-4f52-9e43-764bc1bf2261",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6eb71a92-446e-43ab-a822-f4e7aa45974f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1dd118-ed05-4ff8-b1cc-6921dc05ec52",
        "cursor": {
          "ref": "5b4f3ba1-1eb6-4815-95cd-f185c85b76d8",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "60bb4824-1d50-41bc-8b7f-2e5ac20e1fcb"
        },
        "item": {
          "id": "9a1dd118-ed05-4ff8-b1cc-6921dc05ec52",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "61c26bfb-cdcb-4c9a-8f89-d03d88a295b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e47d16-82b0-4c04-b691-861b0e93ad52",
        "cursor": {
          "ref": "2e508c2c-3434-42b6-acb9-95a84ac14b93",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8ac0bbd9-fa3c-46d1-9a48-99dc39362d77"
        },
        "item": {
          "id": "74e47d16-82b0-4c04-b691-861b0e93ad52",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "aa1ae3f0-663e-4605-abfc-705c318e720f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c859f5c0-51ad-4daa-9c8a-e57be794ad87",
        "cursor": {
          "ref": "24495b47-1317-47b6-96d0-e16cf0b61ebf",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9c2d745e-7e5b-4be9-bd4c-761dce18e66a"
        },
        "item": {
          "id": "c859f5c0-51ad-4daa-9c8a-e57be794ad87",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "96b860b9-220e-47f3-8de8-23acfda20edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e6b68f-5908-4f2b-9425-1782451e3500",
        "cursor": {
          "ref": "0b3cc52e-6cad-42e6-8635-d6761fc40e30",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1fc57f1d-b2bc-4d23-bcb9-b1d52390d097"
        },
        "item": {
          "id": "f0e6b68f-5908-4f2b-9425-1782451e3500",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1cc48878-fa95-42b0-90ff-d960fc321f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17269445-5549-412e-a25d-1807eadeb4ed",
        "cursor": {
          "ref": "ab4405ab-9626-4a18-b2fc-2c82adbfda1a",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "dff7e8cf-86b4-4362-8ceb-18f183b0bbb0"
        },
        "item": {
          "id": "17269445-5549-412e-a25d-1807eadeb4ed",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "91b04d50-78fc-4a3f-9c58-49a1e278c264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7c8c01-d3a3-4e69-bc3f-346de7a8ac1c",
        "cursor": {
          "ref": "750fa354-f9da-404c-8c22-b751824a64dc",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f2d1f524-da92-4c00-9508-94bde541df86"
        },
        "item": {
          "id": "bd7c8c01-d3a3-4e69-bc3f-346de7a8ac1c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "97598358-5bbf-419b-9a10-e61c42177f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf7b984-c6ab-42de-94e0-f5a919482033",
        "cursor": {
          "ref": "efbb6688-7a37-4b73-bf15-b2a0647d43f8",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "4cdd123f-94e3-4707-bfa1-690c391a0937"
        },
        "item": {
          "id": "2bf7b984-c6ab-42de-94e0-f5a919482033",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "fa66a494-aa71-4e6e-ac72-e6b0e9e62d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a364d1e3-9119-40ca-adb9-f979bd082adc",
        "cursor": {
          "ref": "21138c35-735f-4dbe-bb69-e3aa50788f68",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2a863fc6-29e8-4a90-82e9-08cfd04342ac"
        },
        "item": {
          "id": "a364d1e3-9119-40ca-adb9-f979bd082adc",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "bf8887f0-c0c1-49aa-befb-547c4837021d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b48679f4-0ba2-461b-b88b-a5b363b8e3fb",
        "cursor": {
          "ref": "235c419c-60e5-45f6-b243-a1f554a37b75",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3316aa1c-cd21-412e-93b8-22aa11430e19"
        },
        "item": {
          "id": "b48679f4-0ba2-461b-b88b-a5b363b8e3fb",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "14787fcf-ab4c-4d0f-8efb-e74b63612ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35608f1b-d1d4-4bc0-8fe8-cfaf5fffb52c",
        "cursor": {
          "ref": "965fbb4f-084e-4a65-9443-f623361dba47",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ac0b02ee-e8d9-4a42-81f6-5248e1d93177"
        },
        "item": {
          "id": "35608f1b-d1d4-4bc0-8fe8-cfaf5fffb52c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c1654ce4-3275-43a7-882e-6c0717698fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad6d619-1be2-41ab-8792-d4e7bf891074",
        "cursor": {
          "ref": "73edcb59-76ed-4d20-a81d-a7d8ae13b62a",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "083bfe58-9172-4bb3-8993-d1b8f3a84c8a"
        },
        "item": {
          "id": "fad6d619-1be2-41ab-8792-d4e7bf891074",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4e2fe2d2-3856-4eab-9c54-20c4b19ca967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc82d23-dadf-4053-acab-efd487bb0ca3",
        "cursor": {
          "ref": "9af6cabf-b721-4b27-891a-d7262350d0d4",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2e9d8599-542c-499b-88fc-80b4e6dbca6a"
        },
        "item": {
          "id": "0fc82d23-dadf-4053-acab-efd487bb0ca3",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "027e86ad-6aba-4c8d-a44b-c9104d864315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "528490f2-3ac1-4691-a029-d2a94e1ff97d",
        "cursor": {
          "ref": "259d1a28-5f32-4816-9a0b-04c2a8f6ce66",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c007b821-7fd3-4dbc-80a1-0d96460b45f3"
        },
        "item": {
          "id": "528490f2-3ac1-4691-a029-d2a94e1ff97d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "42276d95-cfa1-43f5-9081-25b3689b4559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "200d9ac9-adfa-427e-90a5-b456a9483062",
        "cursor": {
          "ref": "d0e64282-dc7a-46f1-89a4-59ab6d96b75a",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "3553acf5-b123-4cd7-8279-4f4769aa0639"
        },
        "item": {
          "id": "200d9ac9-adfa-427e-90a5-b456a9483062",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "51be01ca-72f6-48b5-8caa-8b1a521f3fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0976ae6f-19f9-4868-8cb0-d2120dc8f0ff",
        "cursor": {
          "ref": "6ad483e3-0b66-4b0f-a4b4-18996747f0ee",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "baf50310-3f63-440c-92f0-3ea6eeb9b178"
        },
        "item": {
          "id": "0976ae6f-19f9-4868-8cb0-d2120dc8f0ff",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6d7fcc4b-fd71-4aae-8344-90dd33185d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb323cf-ad41-4d0d-a442-f6351c72bf89",
        "cursor": {
          "ref": "2a881c1e-d3c9-47e8-b11e-670ec5a1ed7d",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2080a309-ccfa-44fd-b8b9-750c4fd5c722"
        },
        "item": {
          "id": "0cb323cf-ad41-4d0d-a442-f6351c72bf89",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1d525332-7211-4376-a0f8-a6e0ea2a01b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5739d073-9ac6-401c-b9df-dbae35b5b632",
        "cursor": {
          "ref": "04d0fb27-3dbc-472e-ab70-ccc342b7dcb7",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "77abaa80-ce2c-459a-988c-52dc4de2a8a8"
        },
        "item": {
          "id": "5739d073-9ac6-401c-b9df-dbae35b5b632",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c41576fc-c140-4fbf-a305-fb6045993ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21af94ea-d088-41e9-a92f-bfa4fe0c6544",
        "cursor": {
          "ref": "44e70bc1-09e2-4beb-98b5-5fc761c804a5",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "61012efd-926b-403f-bfd7-a43851354fb0"
        },
        "item": {
          "id": "21af94ea-d088-41e9-a92f-bfa4fe0c6544",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "27f8a506-4047-4e91-969d-cd4d6c60428b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb429588-f834-4eaf-9082-5c0c43979f3d",
        "cursor": {
          "ref": "e8e5ec13-fa09-464f-bbbb-9a555bd0e080",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7e9ef5b2-ffd6-49d6-8da9-b816321829bb"
        },
        "item": {
          "id": "bb429588-f834-4eaf-9082-5c0c43979f3d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "17170439-ecd3-4c76-99fd-8a4195fda0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bfc616e-de35-44f8-b4dd-08d76a435c6b",
        "cursor": {
          "ref": "d31332fd-c3ef-4935-b041-6bbeb00f71dc",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "57a8fab9-8cdd-4a77-8fe7-a48e07a2c62e"
        },
        "item": {
          "id": "2bfc616e-de35-44f8-b4dd-08d76a435c6b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9b78d2b4-b0e4-4d29-9cab-2094a66b62bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d0a5a2-913d-4c03-928c-f7bf32775d57",
        "cursor": {
          "ref": "75c997c4-8c2f-46c9-8222-777e06c2c52d",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1aa3b48a-d1f0-4419-b4a9-72fe642c0283"
        },
        "item": {
          "id": "f6d0a5a2-913d-4c03-928c-f7bf32775d57",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1240e641-4cf1-4f3c-81a4-ceaae0fb31e1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae35297-a5b2-46f9-a6ff-a7c1fd2a4fca",
        "cursor": {
          "ref": "7cd7cc9b-a0f8-43c6-98d7-f4b2ba0e2740",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "dd259a15-cfb0-4a29-bd73-a30c31c6666f"
        },
        "item": {
          "id": "7ae35297-a5b2-46f9-a6ff-a7c1fd2a4fca",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "40ee22fa-dd29-44a3-bbd5-e86f8be0a72c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 204,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3e3178-d2b4-4dc8-aef6-1b654c44ca1f",
        "cursor": {
          "ref": "b2869dcb-ade3-4140-bd2d-04eee78454f1",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "53c14c49-7923-453c-8363-5fc77f14de44"
        },
        "item": {
          "id": "cd3e3178-d2b4-4dc8-aef6-1b654c44ca1f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "bfeaa13e-abd3-459f-abc3-77ef3c3f2fe1",
          "status": "Created",
          "code": 201,
          "responseTime": 120,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "edea45fa-f9e5-4dbe-b7d7-a879cfcd5764",
        "cursor": {
          "ref": "563c8983-e9e5-49a7-817d-9e3bde144b7d",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6b434c65-5291-4200-a6d1-77fdd9da5f89"
        },
        "item": {
          "id": "edea45fa-f9e5-4dbe-b7d7-a879cfcd5764",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e328e1f7-99ff-4c7c-98f4-749ced75e8d7",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "873bc33c-ca6f-4bc6-a0ec-c007dfc41f3a",
        "cursor": {
          "ref": "8276021f-27ab-4bbb-b2d3-360bf495be78",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7d453011-450a-48d9-9cfe-3aad742bd3fc"
        },
        "item": {
          "id": "873bc33c-ca6f-4bc6-a0ec-c007dfc41f3a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b23565e0-1b38-4d8d-84a1-2c615e7ee448",
          "status": "Created",
          "code": 201,
          "responseTime": 86,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4547d5-c00b-42a2-9280-d62f37aa5412",
        "cursor": {
          "ref": "51b948d5-4fcc-44c2-b7fd-86f798ddf3c2",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9e6d7177-5655-4a37-96c8-5b394a0db53e"
        },
        "item": {
          "id": "7e4547d5-c00b-42a2-9280-d62f37aa5412",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "de4e9065-af7e-4e03-80ff-890e8bcf5953",
          "status": "Created",
          "code": 201,
          "responseTime": 84,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e55baf8-a4c9-4201-bb37-473f8436c649",
        "cursor": {
          "ref": "4c596401-8b7d-4ee4-b68c-6239becfa0dd",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ae986798-97af-4bb8-8149-96ef5d810925"
        },
        "item": {
          "id": "5e55baf8-a4c9-4201-bb37-473f8436c649",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "784b8ad4-6b5b-4831-96a3-4cdfde5c6708",
          "status": "Created",
          "code": 201,
          "responseTime": 80,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "63bacd68-98d7-4253-9791-81d6460cc18c",
        "cursor": {
          "ref": "a5cc97a3-eb63-414c-a30e-79d866d27b17",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "41ff3c9c-7fcd-4891-9674-81198c2e9035"
        },
        "item": {
          "id": "63bacd68-98d7-4253-9791-81d6460cc18c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "aa282430-6b77-4c16-96ca-2a2318a47160",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c222203d-586d-4116-8774-5d31ef65719b",
        "cursor": {
          "ref": "83ba407a-53bb-4d2a-a6e3-dc63f33b90c1",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "87c7094e-eb23-4235-a63b-e0b35caa3534"
        },
        "item": {
          "id": "c222203d-586d-4116-8774-5d31ef65719b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9bdcd507-c2c6-42a4-9af7-4a1f5271abd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c222203d-586d-4116-8774-5d31ef65719b",
        "cursor": {
          "ref": "83ba407a-53bb-4d2a-a6e3-dc63f33b90c1",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "87c7094e-eb23-4235-a63b-e0b35caa3534"
        },
        "item": {
          "id": "c222203d-586d-4116-8774-5d31ef65719b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9bdcd507-c2c6-42a4-9af7-4a1f5271abd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2779b33b-4b0e-474d-80eb-bcc91e4b2e0b",
        "cursor": {
          "ref": "7176691f-235e-4b95-a5ef-f6784e3bda7d",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b484a61c-3bad-49bd-968d-4bc7d0d21360"
        },
        "item": {
          "id": "2779b33b-4b0e-474d-80eb-bcc91e4b2e0b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "08c225c2-2e41-427d-93ed-16a9a941e585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a790429-0f12-459f-84e7-83ef8bc78517",
        "cursor": {
          "ref": "7019e9a1-abea-4098-ab58-7bf331769a1a",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "00c9f38d-0e39-4b3c-b497-ceba92416aac"
        },
        "item": {
          "id": "7a790429-0f12-459f-84e7-83ef8bc78517",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f1358b0f-405f-422e-bb9c-ccd63006ee33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0ece5b-accd-4dba-ab2e-18d7b06e7256",
        "cursor": {
          "ref": "c11296e5-1b11-406b-9213-6464f32066ef",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a4346f0a-beea-41c5-ac33-c513284ed313"
        },
        "item": {
          "id": "ca0ece5b-accd-4dba-ab2e-18d7b06e7256",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7dbb57e1-74fa-4733-a3ba-2f132347e6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53677b71-e248-4ba9-882c-f9701af12762",
        "cursor": {
          "ref": "509fd17a-d7a8-42fd-aae6-57187e4d8127",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "73aa53b7-b0fe-48f7-aafe-d16744a1b890"
        },
        "item": {
          "id": "53677b71-e248-4ba9-882c-f9701af12762",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "df110bf1-8d47-4139-8ac3-443b60c9a6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad93590-3301-4cef-b60d-bb37f530e884",
        "cursor": {
          "ref": "18ac7dbe-e4fc-4a2a-8719-20cef0ed79d8",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ad75f8cb-4b8e-48f1-9103-da26f93d42fb"
        },
        "item": {
          "id": "6ad93590-3301-4cef-b60d-bb37f530e884",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "64b1e172-2f5a-4008-9873-c17664f12648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61d180f-f550-4d2d-8d05-1d42ba045351",
        "cursor": {
          "ref": "8bc4c2a0-f797-422f-a53a-44c204b160ca",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e03e4692-8324-4910-8941-ddbe0b4d9f20"
        },
        "item": {
          "id": "f61d180f-f550-4d2d-8d05-1d42ba045351",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "526602de-b4df-42c3-aaf2-4e80a86381a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e489f3-60d7-45eb-8a76-ca3c88e443e3",
        "cursor": {
          "ref": "661f89eb-d3d7-4557-a8f6-a3c9e8c6a4c6",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1398dc10-82cb-4bb7-8d6a-0a5aea76831f"
        },
        "item": {
          "id": "33e489f3-60d7-45eb-8a76-ca3c88e443e3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "14ecd251-cc21-4ad5-8dfd-d6667a6507b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9376d8d-c7d3-4022-be3c-72235821bb79",
        "cursor": {
          "ref": "7a8fe786-1654-4389-a751-43a80dedf15a",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "aae67540-c476-4ec5-adea-13b9366e10e4"
        },
        "item": {
          "id": "d9376d8d-c7d3-4022-be3c-72235821bb79",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "05aec5e4-2b88-4091-8a0b-2e4f8067f8ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f4b464-abce-4f6d-84ef-67308c9af1d3",
        "cursor": {
          "ref": "65d3b4f9-d9fd-4ce9-b506-62b2b5d920b6",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1dbaa35b-fb70-43f2-9d6c-3b394a8ff34b"
        },
        "item": {
          "id": "78f4b464-abce-4f6d-84ef-67308c9af1d3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "993047f0-66f2-404e-a6ab-b770b306afc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c610a5a-ead3-4f0e-98fd-cf5890ba85ec",
        "cursor": {
          "ref": "d1e5a4e4-7bba-4d7b-baa4-0a34f59c5e8c",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a83ea673-8225-4bbb-ac5c-d659776697c1"
        },
        "item": {
          "id": "1c610a5a-ead3-4f0e-98fd-cf5890ba85ec",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "87bb2cf1-4807-4134-9851-002894cd60b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7899f5-1dae-4c03-9fa2-a8c371f2731f",
        "cursor": {
          "ref": "442ae69d-10c3-4038-83e3-a1545842f2d5",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f8faa256-8e20-42d7-84f1-24f117ce2b6c"
        },
        "item": {
          "id": "2b7899f5-1dae-4c03-9fa2-a8c371f2731f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "82d1ebb9-0c1f-47c7-aec6-f2f5b349d21e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dae4b17-7a85-4353-b6b0-eb6c758b1504",
        "cursor": {
          "ref": "8580ca49-43ac-4ec9-9a28-e1b5a93e91c9",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f82b52b8-e4ff-48b8-a632-033b07117553"
        },
        "item": {
          "id": "3dae4b17-7a85-4353-b6b0-eb6c758b1504",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "87afdf40-a814-4d74-9fa3-3d1c13d4132b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c913142-1cce-43b2-9d89-7a14b58304a6",
        "cursor": {
          "ref": "d5a13ca7-d965-4b43-89b6-fa761133a411",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d15e17e5-dd66-4207-a638-3d8026d41702"
        },
        "item": {
          "id": "2c913142-1cce-43b2-9d89-7a14b58304a6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5be2dc26-47de-4e87-b529-183862404b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0634924d-e2c3-44ba-8c0b-6b8ca98f970c",
        "cursor": {
          "ref": "c75dc5e9-0fb1-4768-846a-ff4da0680a1f",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e8d4d04d-07af-45f0-b62a-56a86cac7c1d"
        },
        "item": {
          "id": "0634924d-e2c3-44ba-8c0b-6b8ca98f970c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8c142d51-94d4-4dc8-91ed-7357a5dadd79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee3d285-3f2f-4b5a-a609-83a8f3e94dce",
        "cursor": {
          "ref": "b61fb8d6-7da0-4dd1-be94-cd51ee365e6c",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8df3fcff-25dc-42ac-a5ea-04c9934cbf12"
        },
        "item": {
          "id": "4ee3d285-3f2f-4b5a-a609-83a8f3e94dce",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f2d1540b-348f-441a-a879-15a5158390d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5bb09e3-f2ec-4422-aef9-223788bd09e0",
        "cursor": {
          "ref": "ad1b82b2-b8b6-486e-b5f0-5acf0eed8ad0",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4be19f39-c322-4c9c-9a9b-5a4922a364ad"
        },
        "item": {
          "id": "a5bb09e3-f2ec-4422-aef9-223788bd09e0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c3ecd249-cd72-4150-8a0b-8365f503efc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc4a99b-6470-4cb0-8f27-3e31522caaf1",
        "cursor": {
          "ref": "5f5034d7-9400-440d-a6f2-050793031d7a",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7f380abd-5da8-4cac-a02a-c060f475a58b"
        },
        "item": {
          "id": "fcc4a99b-6470-4cb0-8f27-3e31522caaf1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fff80676-81c1-4004-9c94-d87b31c23d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c527864-3b4e-4d0c-93bb-b34b3fa76173",
        "cursor": {
          "ref": "009fd79f-ef13-4fcf-a096-cde8e1d79960",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3422d186-1df0-408b-b3b1-38004f155016"
        },
        "item": {
          "id": "3c527864-3b4e-4d0c-93bb-b34b3fa76173",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fed24e86-6725-404e-a731-9d0cce4a839e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4f3ec8-b27b-45e6-b2d6-58b109ede69b",
        "cursor": {
          "ref": "6a49683b-75bd-4740-a083-63188e704bd5",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b6db5cbc-47da-45f7-984f-a326129cbd33"
        },
        "item": {
          "id": "ef4f3ec8-b27b-45e6-b2d6-58b109ede69b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c04fc77c-1423-4484-884b-a813f3a758d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b388f69-74a0-4517-9d6b-55798126bdbf",
        "cursor": {
          "ref": "da9582d9-3b44-4e12-998f-8ccd91b2d436",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "013aa8e6-901e-4cf1-bab8-2c4b7208afdf"
        },
        "item": {
          "id": "9b388f69-74a0-4517-9d6b-55798126bdbf",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "751b2f12-11de-44fc-a3a5-0e4f3456d2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4608ffd3-afda-4fe9-b029-36563bba3459",
        "cursor": {
          "ref": "6eb971cf-ff44-4fdd-bc57-ee45606c37b1",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a22637c7-c02f-4c67-bd4f-6ca09253f296"
        },
        "item": {
          "id": "4608ffd3-afda-4fe9-b029-36563bba3459",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "353c8564-eb0a-4c3d-8a2d-6f5325d84df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85feecaa-9817-4c75-9f96-b1f3aa838bf2",
        "cursor": {
          "ref": "684fe99c-e525-4935-a437-1710178d5fe9",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d86bc625-32c1-4ce8-b2e6-4f940fcb5610"
        },
        "item": {
          "id": "85feecaa-9817-4c75-9f96-b1f3aa838bf2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b8ba660e-5bd4-40b8-b5ac-e2d13d8a92db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b945ca07-3209-4401-b6ac-cb9023d01504",
        "cursor": {
          "ref": "6b76b997-c0df-4b88-8b43-370b67ba83fc",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "54e1b06d-abea-466a-af35-74cb628b6fac"
        },
        "item": {
          "id": "b945ca07-3209-4401-b6ac-cb9023d01504",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "db7eae33-cdad-4d13-af30-406ea4dda644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a40c9ce-a57e-4aab-800c-b4d7ec5707ae",
        "cursor": {
          "ref": "e1afc35f-f6f4-45ef-8f3d-f9345fca74b3",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1db3bf63-530c-4a1e-8f15-fe974bdef103"
        },
        "item": {
          "id": "5a40c9ce-a57e-4aab-800c-b4d7ec5707ae",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "14129732-8aa2-4470-a7ad-f1a31878e433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef73e8f-cb87-4d03-8452-a7afcfa35d36",
        "cursor": {
          "ref": "d976ded3-7e8e-4eab-92e1-d9b56599b7bd",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2e122238-1bf9-41f9-b673-0ec7e16dfee3"
        },
        "item": {
          "id": "6ef73e8f-cb87-4d03-8452-a7afcfa35d36",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fe7312c7-d55d-4625-9ea7-d10b66bdb833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f2b6d2-4b40-47dc-b878-4b57c77cd5a7",
        "cursor": {
          "ref": "ea1f7d7c-2f42-4d19-9b9f-564f79b03828",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "738f4873-ca19-4545-8343-23060fd380f6"
        },
        "item": {
          "id": "75f2b6d2-4b40-47dc-b878-4b57c77cd5a7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b077deb7-0051-4625-a0fc-b1aa4df84b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160bd2bb-82c1-4022-a53e-f1587f99b278",
        "cursor": {
          "ref": "7c857d28-4cc5-4915-956c-07bea661285e",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c5b61535-9173-4525-8bcd-539da1db18e5"
        },
        "item": {
          "id": "160bd2bb-82c1-4022-a53e-f1587f99b278",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b0cdad07-33fc-42d2-a520-816e9c6c2f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa9b3c2-45f2-46d8-8c37-f273c4392cdb",
        "cursor": {
          "ref": "c12731e7-f962-416d-a966-02086923fb3e",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "353807c3-a244-4dcb-80c9-a6c2979f824a"
        },
        "item": {
          "id": "efa9b3c2-45f2-46d8-8c37-f273c4392cdb",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "240bc348-de41-4142-8441-622903d3c08e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5479b4-0a4d-4ceb-8389-f17281c1e50d",
        "cursor": {
          "ref": "a490db1a-6c81-457e-a21a-14663a0edc37",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a20755e2-27a5-4c95-a2ec-72ec5d5729b3"
        },
        "item": {
          "id": "ea5479b4-0a4d-4ceb-8389-f17281c1e50d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "60651b6a-e4c3-465f-a26a-c399dfc42bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4383efd7-97f7-46ce-8408-4a67ecb9e643",
        "cursor": {
          "ref": "7327b143-a2c4-4711-ae43-c8cb4cc69033",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b272098f-609a-4677-a881-ff0e98cf54a6"
        },
        "item": {
          "id": "4383efd7-97f7-46ce-8408-4a67ecb9e643",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "93da59d3-61ee-4a03-a0f3-787650b406e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf6034b-6b00-4746-976d-63bf4bad9326",
        "cursor": {
          "ref": "76a40b32-deee-426b-a9ad-d39a23b18ec2",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "404834da-abae-47ec-b4a9-cc7aa16ac2a8"
        },
        "item": {
          "id": "3bf6034b-6b00-4746-976d-63bf4bad9326",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "867d4b9a-6a20-4ca8-a0d4-d0f2c681960f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da83803a-78bd-40af-a59f-adf539517a8c",
        "cursor": {
          "ref": "7a440a88-08d7-40a5-9020-1e7eaf1b0dd0",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "86de084f-3b6c-42a9-ad3d-ad3d75740853"
        },
        "item": {
          "id": "da83803a-78bd-40af-a59f-adf539517a8c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "43dc57c8-cfcb-45e2-a603-6e385cc5eb87",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7263cd2e-92a1-4e21-ad90-1a31074ce5da",
        "cursor": {
          "ref": "78b1d600-417d-4877-ae24-3db07e6bb2ae",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5189bf71-1f2b-4695-b09d-97ca34dd53b2"
        },
        "item": {
          "id": "7263cd2e-92a1-4e21-ad90-1a31074ce5da",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "0a3d93a3-f007-4d84-9c84-6ee1e886afbc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 64,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78fce15-abfc-4634-919b-feae66fb15b2",
        "cursor": {
          "ref": "829c5011-dc7d-4091-8331-00c513928027",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5dc9d3d5-d4dc-4f8b-a973-3cfe324fc48e"
        },
        "item": {
          "id": "b78fce15-abfc-4634-919b-feae66fb15b2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cabad488-0aa0-4ed0-9dea-42970dc1c0a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78fce15-abfc-4634-919b-feae66fb15b2",
        "cursor": {
          "ref": "829c5011-dc7d-4091-8331-00c513928027",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5dc9d3d5-d4dc-4f8b-a973-3cfe324fc48e"
        },
        "item": {
          "id": "b78fce15-abfc-4634-919b-feae66fb15b2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cabad488-0aa0-4ed0-9dea-42970dc1c0a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e9bb89-4b3a-49c5-9e16-7412922370d5",
        "cursor": {
          "ref": "38152db1-ecc2-4151-a12b-806d43f76d44",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7a1f4c73-60a0-4602-858f-240f93b97738"
        },
        "item": {
          "id": "c1e9bb89-4b3a-49c5-9e16-7412922370d5",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "dbbf4604-c535-4ff4-a078-d95af4d6033d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52f1187-d73a-41d5-9638-99202ed66f9e",
        "cursor": {
          "ref": "012e04c1-3807-475f-b920-72d2427d0334",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ac90fc4b-4350-4770-ad69-89d3f70a3ca9"
        },
        "item": {
          "id": "a52f1187-d73a-41d5-9638-99202ed66f9e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "13922af8-3689-4143-9540-a9fb96749214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be7e675-6c41-42a8-ba4e-e024762e67fd",
        "cursor": {
          "ref": "6c9a4780-5fab-42fd-a250-02f4ec6036d0",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a080c073-19fb-4ef6-aa27-e4510633086d"
        },
        "item": {
          "id": "0be7e675-6c41-42a8-ba4e-e024762e67fd",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9ddc2f52-7d6e-40c4-8a99-75069e331fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081d852d-7f23-4b44-b588-adc55eeb6f06",
        "cursor": {
          "ref": "62d13b21-061e-45df-97c5-d6a2979d23c0",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5b0026df-d477-495b-b562-9a9f0823c39e"
        },
        "item": {
          "id": "081d852d-7f23-4b44-b588-adc55eeb6f06",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a4fbfa72-eccf-453a-b247-713c5cec47d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0fb97ab-bf51-4c8b-b16f-e64154f6583e",
        "cursor": {
          "ref": "f6ebde68-a1d5-4365-965b-c674d5e586f4",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1dda75da-03a7-44b1-8234-5949c7b4f27d"
        },
        "item": {
          "id": "e0fb97ab-bf51-4c8b-b16f-e64154f6583e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "fae9ded3-b567-4bf8-a45c-39059f649da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7f0877-c276-408e-ab8f-82e8e15468a3",
        "cursor": {
          "ref": "fe03a06d-007e-42fc-b444-3145015ae80d",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f09c3c30-d873-4f9c-952f-706a8fe36522"
        },
        "item": {
          "id": "ad7f0877-c276-408e-ab8f-82e8e15468a3",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d36bd6f4-f790-4821-9d94-3d8de6dd2233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95fc9164-223f-4091-b39f-72902872ebb4",
        "cursor": {
          "ref": "907e7ac0-cdfa-4cfb-9741-851bc1464122",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4a18cab4-3740-4316-a7e8-ea4fbfe4b439"
        },
        "item": {
          "id": "95fc9164-223f-4091-b39f-72902872ebb4",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "98490b0d-22df-4b30-9fe1-38e3fe2e1c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df1cff5-072b-4e59-af41-03f4483ab889",
        "cursor": {
          "ref": "579878a7-5855-4eda-9280-35e3ab02cea1",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "580cfe1e-3895-487f-9e01-5b4c8c045e57"
        },
        "item": {
          "id": "1df1cff5-072b-4e59-af41-03f4483ab889",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "99146983-36bf-4ca9-8f44-3ad13cfbd4db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6afc044-9953-4e26-8479-0240c467ba3d",
        "cursor": {
          "ref": "9a1f4b5e-f374-42b8-bad7-466b311278d2",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "87386237-c740-4cc1-8c1c-b5c138d79460"
        },
        "item": {
          "id": "f6afc044-9953-4e26-8479-0240c467ba3d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "90125919-94b6-4905-9452-42a463f47ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713f797c-557a-4d86-9ea0-ccb3811b7014",
        "cursor": {
          "ref": "2cecda3d-7a68-4bab-ae30-c270c1d67ea1",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2e488c56-b8c5-4145-b521-9b2ca1dd1208"
        },
        "item": {
          "id": "713f797c-557a-4d86-9ea0-ccb3811b7014",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2e4dcfbb-7898-4933-8281-1b1083ffc725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b938417-5140-4c9b-84ea-e08a9c7d9a2e",
        "cursor": {
          "ref": "454f8222-207a-4b36-ae3a-d4bb8bed4214",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a0ad801b-a0b0-41e9-9abe-aa723f4b1421"
        },
        "item": {
          "id": "2b938417-5140-4c9b-84ea-e08a9c7d9a2e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b580c7b2-3294-43d6-8496-80c58b4b7e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ca2b90-25ad-4b40-a96e-9428668ec9e5",
        "cursor": {
          "ref": "6c64fcc3-2f0c-4a62-8806-8b2cf55ea73d",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b3c183e2-dc45-4e54-9298-c8a3e2a95287"
        },
        "item": {
          "id": "51ca2b90-25ad-4b40-a96e-9428668ec9e5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "98a41f70-f6c5-4986-b99f-88d5171b6751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef6ed85-2320-4f38-96ac-2531071554f0",
        "cursor": {
          "ref": "467224a9-b4c5-4a41-8280-825f33b6d5c3",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a3d40803-8c72-4bd5-84d7-5a9c58c7de45"
        },
        "item": {
          "id": "eef6ed85-2320-4f38-96ac-2531071554f0",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c0b7260a-126c-4b8d-8522-a5900cef8435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfbf0a43-c33a-4b47-84e1-09e52a1b99e2",
        "cursor": {
          "ref": "07595aa7-ed43-4d6e-ab58-5f9e5e10158a",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5c828618-c9e5-4f82-b7cf-3d7abad635c5"
        },
        "item": {
          "id": "dfbf0a43-c33a-4b47-84e1-09e52a1b99e2",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "24cc6878-f743-4b7a-9226-589702f9340f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c0c89c-6180-47dd-a4e9-95a07e939728",
        "cursor": {
          "ref": "17b71570-ab8b-4afc-a0d2-a9d5de5f834f",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ba977d9c-4a22-4b90-9b83-d5207b3f8f59"
        },
        "item": {
          "id": "83c0c89c-6180-47dd-a4e9-95a07e939728",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6406fae9-cf89-4c48-95ee-d01b68864071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d96f1538-2aee-441e-9047-8f98d70985b2",
        "cursor": {
          "ref": "fc5bb450-1282-458f-bd50-1644ce5b16c9",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2ec04cca-2ed8-4e27-82f4-ee793f66b11f"
        },
        "item": {
          "id": "d96f1538-2aee-441e-9047-8f98d70985b2",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "069652e7-9be3-4269-891b-e579e6f59fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd89f09d-9eb6-449e-9821-a5f7cc27a2bb",
        "cursor": {
          "ref": "981e81d8-8bab-47e4-9f2d-a79ce452fff1",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "fd8a0ac7-17c9-4c1f-b299-d4a9fa02c698"
        },
        "item": {
          "id": "bd89f09d-9eb6-449e-9821-a5f7cc27a2bb",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f507f06c-07b3-4326-9d45-28f3aac59d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63857159-0256-4dcb-9cd2-bda9b93d7eaf",
        "cursor": {
          "ref": "d8928a24-9423-4a02-a079-f5f40696985b",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5acbc6ca-6df4-4f1f-bfc8-bc43b051f7b0"
        },
        "item": {
          "id": "63857159-0256-4dcb-9cd2-bda9b93d7eaf",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3577e1fa-0fe4-4f8f-821a-2e55419c6c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7c6c70-32eb-4961-858d-f663b7c67ec3",
        "cursor": {
          "ref": "b83a1686-07ba-4f6e-b7e4-4e2c440126e4",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3f342f76-caf0-4dbc-9809-da44d5f786e8"
        },
        "item": {
          "id": "be7c6c70-32eb-4961-858d-f663b7c67ec3",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9bc8c863-12a7-4ab5-a55c-69ca331c11cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9483d7a-6620-4ef5-ab23-20a3e6b2e5b9",
        "cursor": {
          "ref": "667e01a8-fd17-48e2-9aca-41d778b1abcb",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0ece2525-a102-4be6-951c-620fbdaad53e"
        },
        "item": {
          "id": "c9483d7a-6620-4ef5-ab23-20a3e6b2e5b9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "abfcbe6d-fe59-4bd5-812a-7f6b2ad577e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "157c87ef-0173-4556-a6c8-17c08c277866",
        "cursor": {
          "ref": "d9844fcb-89de-4027-92fb-16260107fdcb",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "49e0772e-31d7-4be6-86ff-dc79f1c1a946"
        },
        "item": {
          "id": "157c87ef-0173-4556-a6c8-17c08c277866",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "edb62789-da7d-4820-b454-681f4e99778c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0999a64a-d487-421a-96c3-578be13f188a",
        "cursor": {
          "ref": "99428012-35e1-4f8f-bd8e-9b469c934bbf",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b1134333-4afe-4426-b9b6-f60b6ba0a462"
        },
        "item": {
          "id": "0999a64a-d487-421a-96c3-578be13f188a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "972ec9d5-b746-439e-8875-10cfa7c5d38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a6da14-14e2-49d4-b5d8-b4f4556d4588",
        "cursor": {
          "ref": "786d8b62-14fa-4709-828e-87cc0827d2dc",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2e7d57ec-54b2-4f5c-9511-5c54a180e795"
        },
        "item": {
          "id": "96a6da14-14e2-49d4-b5d8-b4f4556d4588",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "52b8f716-f5e4-46ed-a95f-c656a3e9fbca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be696dce-8199-40d9-b547-fcbe67dc4374",
        "cursor": {
          "ref": "ee5ecc90-9c0a-4944-96c4-48e165b87214",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2fe0394e-a9bb-4ad9-8a27-e1ec84d1b0a2"
        },
        "item": {
          "id": "be696dce-8199-40d9-b547-fcbe67dc4374",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9d890f44-4815-4558-9e03-ac4325f2702b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f8de9a-03e5-44e0-a894-41b0a19818da",
        "cursor": {
          "ref": "ce4d0f9b-4200-4f91-9ba4-dcf802aeebed",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f14fc095-14ea-42c6-bfcd-d984cfb4f0a8"
        },
        "item": {
          "id": "e9f8de9a-03e5-44e0-a894-41b0a19818da",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9c5341c2-8e16-45d3-a72c-74f909382308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c580258b-a55b-4b3e-94ed-de7d6072902f",
        "cursor": {
          "ref": "b8679166-c593-4078-a2ef-d9c67ac5de76",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ee76e7e6-aaae-416d-a48a-988b9f82de79"
        },
        "item": {
          "id": "c580258b-a55b-4b3e-94ed-de7d6072902f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3e47dffc-fdd2-4abf-9bc9-ad2c0bcd613c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bfe4c1f-be91-43ce-9926-67573c76f680",
        "cursor": {
          "ref": "778b794f-d60c-4c57-a8bd-f75b0117158d",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "35fc1a15-bdbe-432e-9d30-b171facb81ce"
        },
        "item": {
          "id": "1bfe4c1f-be91-43ce-9926-67573c76f680",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b336e1af-e307-419e-813d-be335950d7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b7a43b-e741-449f-93b5-7aaca1ec1d58",
        "cursor": {
          "ref": "e82ad0fe-5ee2-4166-9908-365e413817d2",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f7429eb5-a8dd-4bdd-9e28-865cd29dc314"
        },
        "item": {
          "id": "59b7a43b-e741-449f-93b5-7aaca1ec1d58",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "37797fc5-c08b-4270-8022-b4003ca27ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321efb74-1877-4095-801f-03b79a2e94c8",
        "cursor": {
          "ref": "004b932d-c007-42fc-b01a-e42e7fcb5b59",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1d0beff7-5120-404b-b47a-426380130480"
        },
        "item": {
          "id": "321efb74-1877-4095-801f-03b79a2e94c8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "927ac8fd-0b6b-469a-8e80-7708ae7475d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc905254-df4c-40a3-af63-897041ebebc4",
        "cursor": {
          "ref": "adfd42a8-5f2c-4b7d-b3df-47c5a1cc1ae9",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c3e396ff-a35b-4f08-a451-53f43ce8ccc3"
        },
        "item": {
          "id": "fc905254-df4c-40a3-af63-897041ebebc4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f37ae589-d5bf-4ea2-a5a8-02d8c346a7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f6bb1da-3ae4-428a-ab39-7c0e4ff9792d",
        "cursor": {
          "ref": "43915b3e-7101-4b9d-b4b9-6dcf08d71bd6",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4491ca30-da45-4113-8c2e-f7ce22d0c005"
        },
        "item": {
          "id": "8f6bb1da-3ae4-428a-ab39-7c0e4ff9792d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6e2a01b1-f02a-4680-a395-90b5376e2b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558babdf-1c90-4fb9-a6b0-2cc5f991f711",
        "cursor": {
          "ref": "bf946d03-a288-430f-941b-14250561983a",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a1bcdebc-0689-4b1f-b3fc-1a768ad9e21a"
        },
        "item": {
          "id": "558babdf-1c90-4fb9-a6b0-2cc5f991f711",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7d49d87e-ceaf-447c-87c1-7aeee37a67df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0e7496-39e1-4351-a13d-dfad86f1a613",
        "cursor": {
          "ref": "e6ac095c-ec31-465e-9c33-791871a6aa84",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c758c489-6979-4051-9af5-08b24d6bc29a"
        },
        "item": {
          "id": "3e0e7496-39e1-4351-a13d-dfad86f1a613",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9e7e06a5-4754-46f5-bdcf-43858c46ebf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348e8217-7751-499d-8d8f-5267d744fc9a",
        "cursor": {
          "ref": "a9aafc3c-b7e6-45bc-8422-5a8206e2a50d",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5288afa0-4597-44b1-8253-70c6aeb3541d"
        },
        "item": {
          "id": "348e8217-7751-499d-8d8f-5267d744fc9a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0ee3d89a-b785-447e-8255-c78957d85e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8344823-b989-4042-8a67-880178867af3",
        "cursor": {
          "ref": "d4619ace-8595-4e34-9b83-93bc9982531d",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "666be2ac-a302-40d3-8d59-a1c1542f82ea"
        },
        "item": {
          "id": "e8344823-b989-4042-8a67-880178867af3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4f403cdd-35fa-4d7b-b7f3-23edc48e3c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d20522-67c9-45d0-ace2-e2a77f300f53",
        "cursor": {
          "ref": "036c2d07-5e4c-49bd-b906-ffc132978420",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "357ca336-4649-4827-a7cb-4f6146796232"
        },
        "item": {
          "id": "d8d20522-67c9-45d0-ace2-e2a77f300f53",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8dbb0ea2-fb02-40fc-94a1-d1e784fc202f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d68560b-5bcd-480d-badc-3e897216272a",
        "cursor": {
          "ref": "765d07ea-4cb5-437b-a58c-4749b60f63f3",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8b57ac87-f573-4878-be81-d8d31f939a0d"
        },
        "item": {
          "id": "6d68560b-5bcd-480d-badc-3e897216272a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b1279a75-1f1e-41d3-a7d6-161d55af7d78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331f8120-e2c6-4d31-979a-c8283dae0cef",
        "cursor": {
          "ref": "b61fbbad-f595-4b48-a971-a93eed28f374",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "493e2e00-91ad-4706-80ce-0dfbeb74deb9"
        },
        "item": {
          "id": "331f8120-e2c6-4d31-979a-c8283dae0cef",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9ba1ce97-d4cf-460b-b3b2-e0287876628e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca12820-5acb-4bd4-bd6b-cd84231934f5",
        "cursor": {
          "ref": "da3d2750-824d-4be4-a3f0-34d58bb87bd9",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "77c5c939-75a9-4aef-8c76-e491cab2e462"
        },
        "item": {
          "id": "4ca12820-5acb-4bd4-bd6b-cd84231934f5",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ded2925d-ca71-4ab6-be09-3e8dda6290fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c261752d-2391-448f-bf00-f69259867c75",
        "cursor": {
          "ref": "bb94b43b-bf91-4ed7-a77f-cd4d5490a126",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7fd95d74-5c60-4c12-8b17-5d7acd8560ee"
        },
        "item": {
          "id": "c261752d-2391-448f-bf00-f69259867c75",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "73acfda8-3b5c-4afb-bbde-f1cb2db39855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9cb312-470a-414c-a4b5-9405d0c883ff",
        "cursor": {
          "ref": "633f8639-edfd-422b-b043-1bcb042b131c",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "09d95707-ac67-46e5-9120-54e8011b1698"
        },
        "item": {
          "id": "af9cb312-470a-414c-a4b5-9405d0c883ff",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c21ad797-a7b3-4033-bfb3-79e5c3b222c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e63f0c-aef5-456d-9bcf-7f2afdba5f65",
        "cursor": {
          "ref": "c3985a3e-3063-4ab5-889e-cdf5f6321401",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3a404e6f-da63-472d-a49a-3d63c1a7c3bf"
        },
        "item": {
          "id": "37e63f0c-aef5-456d-9bcf-7f2afdba5f65",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e549ee1c-33a5-4df5-93a7-988b2aa7fc7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63084c59-eb8e-4534-88fa-d1c46078e172",
        "cursor": {
          "ref": "24cfd8a8-7a00-46bf-9768-abb7673c30eb",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7de7801e-ee5a-44fe-8d26-58f6a869638f"
        },
        "item": {
          "id": "63084c59-eb8e-4534-88fa-d1c46078e172",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "faf04b8b-b52d-4bdc-87be-1681a2435cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d424e99-7e99-476b-bf78-954bf86f513c",
        "cursor": {
          "ref": "da2c1ed3-38b5-4938-9403-7842e2f35ed1",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7211de17-1927-4b0c-94c6-e13a53695085"
        },
        "item": {
          "id": "5d424e99-7e99-476b-bf78-954bf86f513c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "edcc4ca1-e759-45bd-9611-80069992a68c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c655cb90-eff9-4148-a7c6-000c86156e0a",
        "cursor": {
          "ref": "71943cd1-6cfc-4bb9-b707-d53246aa6a70",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "fa12ad98-7e86-456d-b344-abd5b9a5099f"
        },
        "item": {
          "id": "c655cb90-eff9-4148-a7c6-000c86156e0a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "20fea834-717b-4433-82aa-7c66c88d1987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d46a8d8-8deb-4f02-93ff-f1623970e50d",
        "cursor": {
          "ref": "37722f2b-583c-4885-ac66-59150e868ad1",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4dddf58b-3853-4dc5-be7f-14fa79e95dc0"
        },
        "item": {
          "id": "0d46a8d8-8deb-4f02-93ff-f1623970e50d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3bad8e27-9af1-4b3a-b2d7-1af769ff6ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cecb83-f54e-4689-b578-c3b3ef607a14",
        "cursor": {
          "ref": "1d879ba6-2d93-4fac-8386-a0a9634c5c53",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d404d50d-a79f-48af-a9d2-f62adc4554f4"
        },
        "item": {
          "id": "46cecb83-f54e-4689-b578-c3b3ef607a14",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "086ee242-1c68-4ba7-ab76-cfb70b95a29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5eb3ffa-328e-415c-b6ba-ad33d7a97c5f",
        "cursor": {
          "ref": "a3c7947a-cd91-48bd-a352-0029a4760a49",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "bef0014b-6e97-4894-9137-bf5b692c860e"
        },
        "item": {
          "id": "d5eb3ffa-328e-415c-b6ba-ad33d7a97c5f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b685b678-0735-4686-9923-8b50da8ac9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b32604-126d-41f5-8aca-58f6d5c953dd",
        "cursor": {
          "ref": "5137b81c-353e-46f9-857d-0c3637d52ec5",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1d77534e-3188-484f-a756-dc8f71b8ea7b"
        },
        "item": {
          "id": "42b32604-126d-41f5-8aca-58f6d5c953dd",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2bc2e6e3-b97b-4fcb-9f9f-db1340077b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e9638c-0cf7-4bcf-ba55-6606f2d32a06",
        "cursor": {
          "ref": "47ebf992-820d-4ca3-b07d-97c70fddfef0",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ef92f746-7cb2-4a9b-a52c-daac231923cc"
        },
        "item": {
          "id": "41e9638c-0cf7-4bcf-ba55-6606f2d32a06",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a0489f0d-d0bd-4f88-9b73-ebce15314e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce60cef-c101-49d8-9265-46234b227221",
        "cursor": {
          "ref": "35c289e5-e126-4225-920d-7d717a8eabbd",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "65631a65-05c0-4def-8666-415e57c1ce27"
        },
        "item": {
          "id": "bce60cef-c101-49d8-9265-46234b227221",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "49df7c0d-1553-4dea-a027-fee492c8496e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96cb8dd2-be5f-4f17-a906-651edcff1be4",
        "cursor": {
          "ref": "18fa69b4-cefe-41fe-84ed-7a538cd0c0ea",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "58cbdca9-985c-405a-9711-5dce3b8a8ee6"
        },
        "item": {
          "id": "96cb8dd2-be5f-4f17-a906-651edcff1be4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ba312aea-0559-4764-98df-02d3b47dee96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1903696a-ed01-4aa7-8486-9189d49b669d",
        "cursor": {
          "ref": "aa0d9c4f-7133-49b5-9c41-f1dff728110a",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c716eb2b-9e5e-4eec-a460-764c01b3c798"
        },
        "item": {
          "id": "1903696a-ed01-4aa7-8486-9189d49b669d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0f1ae316-d08c-4531-80ef-868a6adaa639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "605453ca-700e-42c2-b204-dab5993be727",
        "cursor": {
          "ref": "66087b0f-bb8c-43e2-9833-ae5288ffc562",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "1e8729e6-589e-4ab3-947a-9261da06bb46"
        },
        "item": {
          "id": "605453ca-700e-42c2-b204-dab5993be727",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "416b1ce3-0a22-4771-b368-aaa37e2c70d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4888ce-df5c-4faf-a155-2457746c05b9",
        "cursor": {
          "ref": "f613dfc4-e255-4045-860b-787e839742d3",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d8ffa4bc-4ad3-449f-8cbf-8e86389e25b0"
        },
        "item": {
          "id": "0f4888ce-df5c-4faf-a155-2457746c05b9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0067ea62-4dfc-460c-aec7-e893b2034acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb46898-f3ed-4d93-9ab8-f5db7b4f9a3f",
        "cursor": {
          "ref": "0d126b8a-d5c4-45c8-8f9d-8e9b9accdc31",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "aeecaaf0-de5c-43c3-9a73-880f9e5f7cf0"
        },
        "item": {
          "id": "4fb46898-f3ed-4d93-9ab8-f5db7b4f9a3f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "070d6a00-62d3-4e0f-8de0-c7fc696120e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9b9b8c-f6ac-4a32-b474-4317b55109e9",
        "cursor": {
          "ref": "0e28b96b-735e-4dca-be98-300310bdf982",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c0d34fb9-e20b-471e-b156-56233ab97936"
        },
        "item": {
          "id": "2d9b9b8c-f6ac-4a32-b474-4317b55109e9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b255d0d5-ac37-4dc0-863f-b0f36cc0027e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6c78c8-3a63-45aa-afba-5f8d473bb93a",
        "cursor": {
          "ref": "21c5e919-1ed4-4c63-a1fc-f7f2b5ca72f1",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "66380184-6015-41e5-9f5e-aee01f24ef37"
        },
        "item": {
          "id": "1a6c78c8-3a63-45aa-afba-5f8d473bb93a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "52a4ef90-610e-48ef-8d41-7a15da74e1a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9b183b-d484-413a-aa9b-7144164c7633",
        "cursor": {
          "ref": "c4cafe25-2b65-449d-be97-33a343954d76",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9fc44f65-0f43-41f1-a70f-bc99f9d8eb47"
        },
        "item": {
          "id": "3a9b183b-d484-413a-aa9b-7144164c7633",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "84057c69-4a16-42d6-880a-11b13bc2cc03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 226,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ab5db6-783f-448b-8425-20c9f415d335",
        "cursor": {
          "ref": "069fa2aa-a8d7-48bc-89a9-4acccc6f70e4",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6c794109-d32f-4723-af22-9eca084a2abd"
        },
        "item": {
          "id": "40ab5db6-783f-448b-8425-20c9f415d335",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "aef064ed-2549-437c-b072-bd9c95f46b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c55679-d941-49ef-93a0-37f06e772b7b",
        "cursor": {
          "ref": "252055b5-285d-4e11-8c36-d92e06381ac0",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a628ba97-c7eb-4d7b-bb84-e2bcc88135f5"
        },
        "item": {
          "id": "e7c55679-d941-49ef-93a0-37f06e772b7b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ca3a29a5-2f57-40b3-b17b-54b332a73795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6c0d53-cd10-4d91-a2f1-63551704cbfc",
        "cursor": {
          "ref": "2b24183a-54d9-4beb-b307-56e7fed08b1b",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e3829046-96dd-47c4-8985-2fd9cfd1b92f"
        },
        "item": {
          "id": "fd6c0d53-cd10-4d91-a2f1-63551704cbfc",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e8c2d934-f942-4a8d-8b1d-c995b4eb2d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4397c42e-46e1-4fff-90ae-8f62c8fcd496",
        "cursor": {
          "ref": "49e5602a-90cf-4884-851d-ddba5a8e15b3",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b8a13094-af9b-45ec-b10b-587bad59d7b9"
        },
        "item": {
          "id": "4397c42e-46e1-4fff-90ae-8f62c8fcd496",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ae2c863c-3b22-4c73-b96e-c6aa0ea4aeb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321fa73e-bb5e-40ed-8a48-9a22a34c5d68",
        "cursor": {
          "ref": "9feb249e-f393-465f-992b-de7579c8eb39",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6001d324-5a64-4b62-b411-f8121af591c4"
        },
        "item": {
          "id": "321fa73e-bb5e-40ed-8a48-9a22a34c5d68",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d0d509a6-4ba4-4dd6-abfa-634d6a62a484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f45e93-d6b9-4e21-8e4c-11d729ee26c9",
        "cursor": {
          "ref": "fd942c4a-a617-4ea8-827a-29e9624f08c3",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5cdcf62b-9c6c-4377-a22b-b88ddc7594e2"
        },
        "item": {
          "id": "a6f45e93-d6b9-4e21-8e4c-11d729ee26c9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4743ee7b-fdc6-4a8b-952a-0316ba3b97ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906a51af-4bdb-4545-979c-f60b52a4c292",
        "cursor": {
          "ref": "38bc2a02-44d7-4d65-8724-8e0791b953d1",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "45138181-f119-415f-a769-1259d4ee641b"
        },
        "item": {
          "id": "906a51af-4bdb-4545-979c-f60b52a4c292",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "08dab761-30b8-4272-ba9f-585c314c1c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c360058-32a0-48b7-9a1b-bbc6b58248a1",
        "cursor": {
          "ref": "78a58e12-8821-41cb-9d6a-61ef425e33fb",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "525c4eb6-49b5-4000-81c3-7dbe2f40bd5f"
        },
        "item": {
          "id": "1c360058-32a0-48b7-9a1b-bbc6b58248a1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6187b4e5-e531-438a-ac9f-7cd9c8008ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9083719-dacb-48f9-8d6b-3705e639f4b5",
        "cursor": {
          "ref": "55e5fc51-436e-420c-8497-df8f0426860a",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8797b71e-0df6-4183-bef3-6ce47d002035"
        },
        "item": {
          "id": "a9083719-dacb-48f9-8d6b-3705e639f4b5",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7f30805e-0b55-4c6d-a546-c0484f8f873f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f03d84d-a70c-4e85-8870-7fab17a36426",
        "cursor": {
          "ref": "b8711be2-3f2e-44c4-8f61-fd7619d383b6",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "417c2499-a611-4db2-98cf-3b7a2bf6d726"
        },
        "item": {
          "id": "8f03d84d-a70c-4e85-8870-7fab17a36426",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4d487e9b-6768-48e2-badb-6ed9cb03e3f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab964153-98a9-4170-afc4-5b98d7f61b07",
        "cursor": {
          "ref": "8f20d7fa-c905-43b9-b2a4-37198f3b04a6",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c1a31e04-07f8-4eab-9e94-adc2295ad11b"
        },
        "item": {
          "id": "ab964153-98a9-4170-afc4-5b98d7f61b07",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "09ce9ae5-0c24-4a77-9290-cbb459b78503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce99c63-6552-4146-9ffc-c24b5aaed0c1",
        "cursor": {
          "ref": "ec2dea6c-6020-4bb6-a049-5ecf52f3e74a",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b815c7fa-3a17-4b1d-876e-8ec087c30d4c"
        },
        "item": {
          "id": "8ce99c63-6552-4146-9ffc-c24b5aaed0c1",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a076d912-2683-45a5-9117-0630310777cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d226d9b9-f6c6-4a4b-bbaa-09336f00c539",
        "cursor": {
          "ref": "9be2b49d-e41b-4264-9037-79059e181b3d",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "927e795f-c501-4b9a-820f-e6292b802b92"
        },
        "item": {
          "id": "d226d9b9-f6c6-4a4b-bbaa-09336f00c539",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2ab86d84-d50e-438a-8927-5593efec8625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f665ad72-f8f0-45ad-8c2e-25e87fced689",
        "cursor": {
          "ref": "5df2df4b-1219-4555-b30d-3d272060b4bf",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "abb3c629-b3cd-4dc0-bcd3-e5bc4e3a47c0"
        },
        "item": {
          "id": "f665ad72-f8f0-45ad-8c2e-25e87fced689",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "745e780d-d765-4040-a084-d4a12e034ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d2def5-e211-4242-bf4c-1d8b91c7f560",
        "cursor": {
          "ref": "b3b9b65b-4487-4d42-9388-b2aba7e5ad3f",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d3b1b7ce-b14b-4fb5-ab33-c504c8c0ba57"
        },
        "item": {
          "id": "d5d2def5-e211-4242-bf4c-1d8b91c7f560",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a1a3e36e-79a7-46da-b7d8-358be831e8a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b229461-7970-44f5-be37-b6a3a436bb0f",
        "cursor": {
          "ref": "59228b1f-e158-4947-83f2-233f2c631f52",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d8ad3a8c-da2a-48e2-be42-588df409c2b4"
        },
        "item": {
          "id": "1b229461-7970-44f5-be37-b6a3a436bb0f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4d5a9b5f-b05d-4ad0-b0a2-b4a51e57d0f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2df0c28-98b0-4c08-9925-a79a3d4ebe96",
        "cursor": {
          "ref": "ebc0a3b3-87ef-4e6d-88c2-a32ccdbe4939",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4b6dd5f9-b52c-4abb-8617-6ee6d7ca7b53"
        },
        "item": {
          "id": "d2df0c28-98b0-4c08-9925-a79a3d4ebe96",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4430aad2-2cec-4260-b159-184d10937575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce30be6-0174-43ac-8618-ef60e48ee4d7",
        "cursor": {
          "ref": "8d010510-4688-4740-8906-3752c9eeafe3",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "882f001a-8944-4ed6-8ee5-ec36d3dfe2a2"
        },
        "item": {
          "id": "8ce30be6-0174-43ac-8618-ef60e48ee4d7",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4d252d4d-95ef-4cfe-aaaf-39bd25d6ebce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c27fa63-8f48-4bdc-95df-0a130a2935be",
        "cursor": {
          "ref": "78ab8a8f-5ee7-4bc1-ae42-086e561c95d2",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2eee6b23-004e-4d7e-b63d-c3806f526606"
        },
        "item": {
          "id": "1c27fa63-8f48-4bdc-95df-0a130a2935be",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "10774950-b034-4912-b4c1-7e0287066da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d41444c-9784-4912-ae1a-a93c8e8aa0d0",
        "cursor": {
          "ref": "4996db9b-7e32-4037-bc17-b993c6e25ab7",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "71f061eb-bc7c-4b8f-825f-a19a4cdc85ed"
        },
        "item": {
          "id": "9d41444c-9784-4912-ae1a-a93c8e8aa0d0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "30f39a88-3575-4f23-b42d-eabf5e95eba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072b83f3-a21a-429f-9f43-15cba4157243",
        "cursor": {
          "ref": "3ae31c82-525b-4213-b499-58d42019b5b4",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "231c8272-3184-420b-853a-728b72179ab0"
        },
        "item": {
          "id": "072b83f3-a21a-429f-9f43-15cba4157243",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c0f0a63f-a2e0-4868-b268-6fe613fc84fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f795a868-d7b0-444f-aff7-717edd1d4351",
        "cursor": {
          "ref": "40e2ee58-de9a-45be-9eb6-ff0117aa85ac",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ba177c92-1930-40d6-a679-24dd96eb7284"
        },
        "item": {
          "id": "f795a868-d7b0-444f-aff7-717edd1d4351",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "125c2c15-a0ab-4982-829f-ae8e134bd634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfb7483-9e3b-48e9-93fc-130579b4c1c0",
        "cursor": {
          "ref": "3ef31e94-8a48-4eb6-bd3c-e0bfaddb61f3",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6f8f22f7-ebd6-481e-80a1-ffcc8a13e4de"
        },
        "item": {
          "id": "6bfb7483-9e3b-48e9-93fc-130579b4c1c0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e69a9d02-bd2d-4d12-b239-4e2c579aeeb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c67dde-512c-40bd-abc5-9974e0f34528",
        "cursor": {
          "ref": "8e5bf3c0-c54f-4d4a-8769-757a0826c8f6",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d89da848-c740-404d-8ff8-8fb8083cb121"
        },
        "item": {
          "id": "f2c67dde-512c-40bd-abc5-9974e0f34528",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3b47aa23-feaa-4425-aa83-ed33cde3f44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0004a54d-349f-457f-8cc8-f71cdb64a7f6",
        "cursor": {
          "ref": "be094e61-2230-44dc-9ac5-1127d7fe6d1f",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "10226cf3-c6a8-4263-aa99-3149c9aa3f68"
        },
        "item": {
          "id": "0004a54d-349f-457f-8cc8-f71cdb64a7f6",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e12fb115-ff1c-428a-90bb-37b6ac008a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c29600e-12ff-4fa2-9ddb-f60ff3f377ae",
        "cursor": {
          "ref": "64a7bfbf-21d2-4918-bc86-93f43de5a95c",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d8135023-cebc-4b90-8bcd-40c5a6a0c968"
        },
        "item": {
          "id": "9c29600e-12ff-4fa2-9ddb-f60ff3f377ae",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "252b3bcd-5284-4a0d-bcfc-097dbd16dae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d362c299-03ae-426e-b4ea-ed1e97a5703a",
        "cursor": {
          "ref": "44533ad7-1774-4308-9b0c-a4633e681a23",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5485743f-ba9e-4eda-a26b-4bcaba3f5cfd"
        },
        "item": {
          "id": "d362c299-03ae-426e-b4ea-ed1e97a5703a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "74db3b10-efcf-4fe7-923d-d81aa91f83d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca4d56e-fc4e-4f21-992d-db908984063c",
        "cursor": {
          "ref": "57692b9d-a398-4d1c-9e01-09f282639f3b",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d1f75b62-a968-4996-80fd-05b505a8d10a"
        },
        "item": {
          "id": "0ca4d56e-fc4e-4f21-992d-db908984063c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "eb39132e-58a2-4a61-93db-11c5c766172c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0777310f-4287-44b1-9926-9a8ef2902c60",
        "cursor": {
          "ref": "f820aeb6-a933-44ec-a9f2-67e26be52e30",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8ecfa7d0-a689-444f-9b87-e995d9a27034"
        },
        "item": {
          "id": "0777310f-4287-44b1-9926-9a8ef2902c60",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "47c671bc-b13e-4eee-90a1-5b221361a71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7df2e8a-cc56-433e-b875-7c32b4f0bb88",
        "cursor": {
          "ref": "cf714ed9-dda5-4706-99a8-41e4cf395018",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e47c0dde-6dbe-4989-b4c5-582af9ad60f2"
        },
        "item": {
          "id": "a7df2e8a-cc56-433e-b875-7c32b4f0bb88",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "76d2eae2-783a-422f-bacd-3a598fc3d607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65dd737-44ca-4210-b4bd-00945600d306",
        "cursor": {
          "ref": "edee1629-0939-4e82-8848-5e2e8992f634",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ddc94b87-3873-45a4-9fdd-c5ea8c5e2cc5"
        },
        "item": {
          "id": "f65dd737-44ca-4210-b4bd-00945600d306",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c251e633-c34a-4fca-b13c-053adf1e962e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae0699b-32bb-4257-a475-a54d8a81f118",
        "cursor": {
          "ref": "29f503a8-c415-4682-a89a-9c292775f9ca",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0a1b0e1a-e882-4201-abd7-983063467e1e"
        },
        "item": {
          "id": "4ae0699b-32bb-4257-a475-a54d8a81f118",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b1ed111b-c480-4ab5-91a1-7b9a8b195985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c378c3c-dccc-467e-98e5-86572dea9510",
        "cursor": {
          "ref": "3f2800d4-c839-4471-a12e-635bfb90027d",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d4db5c29-5884-477a-9270-e194cee48b1f"
        },
        "item": {
          "id": "5c378c3c-dccc-467e-98e5-86572dea9510",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7f0caf38-445f-4196-a915-4fa541e2ff65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43c7712-c183-4e08-8fe2-6f2df7672fc8",
        "cursor": {
          "ref": "d383b9fe-5d7b-45d5-a39c-3401ae15ed58",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d686e6eb-88bb-429a-afae-0f2fa4019ee1"
        },
        "item": {
          "id": "c43c7712-c183-4e08-8fe2-6f2df7672fc8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "592c851c-4228-4d6d-9b44-9e8b31cab6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988105d2-e0d9-402c-a2df-4a51c1a641b5",
        "cursor": {
          "ref": "30887156-c816-41fe-a548-d827c838553f",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "fbee789d-7a55-4aee-b7b5-0bb0ee2d688c"
        },
        "item": {
          "id": "988105d2-e0d9-402c-a2df-4a51c1a641b5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9d35c682-6cd0-48e2-9876-e9ef73b5774d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1063bdcf-2749-4cef-b871-9b7c1f61f35f",
        "cursor": {
          "ref": "f7f68a6b-14ed-4d71-bf11-25224c421f08",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e4afaa8f-99c7-4dcd-a2e8-651d6660da57"
        },
        "item": {
          "id": "1063bdcf-2749-4cef-b871-9b7c1f61f35f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ebd85505-e9af-4ae2-9d3b-109f1b450295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6ae2e4-6dff-4617-a280-c920569bde72",
        "cursor": {
          "ref": "780f9438-a9fb-420a-bc37-070f051021ce",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2136ba4f-f7c2-45ff-9921-148336097ec8"
        },
        "item": {
          "id": "ac6ae2e4-6dff-4617-a280-c920569bde72",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4e99d5dd-7104-417d-9923-fd037a8bab8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac034ce-1414-4c7c-be07-fd6596390463",
        "cursor": {
          "ref": "47c7eaae-3023-4ac8-966b-ae3b5bf77af7",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a79d7a9e-cee3-4336-a112-631a7d632c7c"
        },
        "item": {
          "id": "8ac034ce-1414-4c7c-be07-fd6596390463",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "cae99892-a6b1-4d19-a825-d242dac1e565",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d42bea-6d26-4a55-ac33-833b9e2eda22",
        "cursor": {
          "ref": "7bb2b499-d485-46c4-9db4-1c05568ca062",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0d49744e-5d64-45f8-804b-e0c4c00d38ef"
        },
        "item": {
          "id": "d2d42bea-6d26-4a55-ac33-833b9e2eda22",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "f11677f3-d670-44c7-9f92-e1a28a12a07c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 64,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "688ab40c-619e-44fd-813d-9f37f5fdd237",
        "cursor": {
          "ref": "9c63dec6-76bc-40e5-ae00-f12eaa5d16bb",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9c4ca3f4-92f8-4ab5-a1be-892ff9af05b1"
        },
        "item": {
          "id": "688ab40c-619e-44fd-813d-9f37f5fdd237",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "26d3434e-f7a2-4e8e-926c-c30bcebd0300",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14b09db-0bcb-4484-9a9f-511f080c71b7",
        "cursor": {
          "ref": "b4d50ec2-94e3-463d-8de6-aaf35bf4541e",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "16239ba4-3eed-43fa-878a-ae237db67a5c"
        },
        "item": {
          "id": "b14b09db-0bcb-4484-9a9f-511f080c71b7",
          "name": "credentials_verify"
        },
        "response": {
          "id": "70038910-2dd1-4d4a-9a99-476814f69d23",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abb38d7-ae08-4661-88b2-0ec0897c073b",
        "cursor": {
          "ref": "1ef516eb-88f2-4406-bb56-f7d4aae39813",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "333f1a20-3976-4ebd-a558-d280194b5d3d"
        },
        "item": {
          "id": "4abb38d7-ae08-4661-88b2-0ec0897c073b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6b3a6757-ed91-4878-8cc1-655d08a99e44",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c147935-bb35-4497-9391-9c3258f6db65",
        "cursor": {
          "ref": "0d8ebb5f-498d-4f8a-b668-02139ff208f0",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7ef7f3b9-be86-4b94-85a9-0e6e69021703"
        },
        "item": {
          "id": "4c147935-bb35-4497-9391-9c3258f6db65",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3f8c26df-a6d0-4d1f-8ab9-415965b3bbf9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c147935-bb35-4497-9391-9c3258f6db65",
        "cursor": {
          "ref": "0d8ebb5f-498d-4f8a-b668-02139ff208f0",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7ef7f3b9-be86-4b94-85a9-0e6e69021703"
        },
        "item": {
          "id": "4c147935-bb35-4497-9391-9c3258f6db65",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3f8c26df-a6d0-4d1f-8ab9-415965b3bbf9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c147935-bb35-4497-9391-9c3258f6db65",
        "cursor": {
          "ref": "0d8ebb5f-498d-4f8a-b668-02139ff208f0",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7ef7f3b9-be86-4b94-85a9-0e6e69021703"
        },
        "item": {
          "id": "4c147935-bb35-4497-9391-9c3258f6db65",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3f8c26df-a6d0-4d1f-8ab9-415965b3bbf9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16078273-9a7d-4b57-9ced-eb4c7b97fbc4",
        "cursor": {
          "ref": "7fd07e43-74b9-4596-8dbf-fd8271c42896",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e3b4f32e-5ceb-4e42-962a-a534a2e33b99"
        },
        "item": {
          "id": "16078273-9a7d-4b57-9ced-eb4c7b97fbc4",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "aa4cae0e-908b-41f7-9e55-f3eaea453f91",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 64,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2853ed2e-cc80-417e-9437-9858554cd022",
        "cursor": {
          "ref": "b8401279-846f-4159-82b7-00d30a8a53a7",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a2d9772c-53f4-43d2-ac74-4f718fe76e40"
        },
        "item": {
          "id": "2853ed2e-cc80-417e-9437-9858554cd022",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5b7a34a0-8999-4154-b65b-9429ec0e44f2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2853ed2e-cc80-417e-9437-9858554cd022",
        "cursor": {
          "ref": "b8401279-846f-4159-82b7-00d30a8a53a7",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a2d9772c-53f4-43d2-ac74-4f718fe76e40"
        },
        "item": {
          "id": "2853ed2e-cc80-417e-9437-9858554cd022",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5b7a34a0-8999-4154-b65b-9429ec0e44f2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79337a65-ff9b-4cd7-98d3-962f849bef1a",
        "cursor": {
          "ref": "a76f5670-935f-4c4b-8886-9dede04bc1ff",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "72c1a5ad-5f18-4fde-81d3-c2c854716f45"
        },
        "item": {
          "id": "79337a65-ff9b-4cd7-98d3-962f849bef1a",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "2fa9c127-b931-49b1-ac18-e20427435cf5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 63,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0ee585-5d7f-4168-b603-a0abd5a092e8",
        "cursor": {
          "ref": "3d03eb0d-d526-4921-b824-8087b437bb4e",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "553721db-f70c-4ec0-8e76-6828cd0d0cbb"
        },
        "item": {
          "id": "8c0ee585-5d7f-4168-b603-a0abd5a092e8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "cc2dc483-e922-42ef-89f8-d5ccc46bdf6d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0ee585-5d7f-4168-b603-a0abd5a092e8",
        "cursor": {
          "ref": "3d03eb0d-d526-4921-b824-8087b437bb4e",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "553721db-f70c-4ec0-8e76-6828cd0d0cbb"
        },
        "item": {
          "id": "8c0ee585-5d7f-4168-b603-a0abd5a092e8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "cc2dc483-e922-42ef-89f8-d5ccc46bdf6d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e08e01-6a68-489a-8723-aae2653e79b0",
        "cursor": {
          "ref": "f90c9bc7-aef1-4b5a-a97c-d5daa671dee4",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "aaaa8667-7fed-4ccb-bdd4-92abf6c42b12"
        },
        "item": {
          "id": "c6e08e01-6a68-489a-8723-aae2653e79b0",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "f2178e4e-6892-48c3-89d5-c7c3bd3dd15e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 64,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}