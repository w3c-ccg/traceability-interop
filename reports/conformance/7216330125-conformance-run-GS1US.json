{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6e149761-5e79-4ecf-a4a6-a572b947895a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f408a008-1033-472d-ba58-4bdb46138876",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dd7f082f-b3fb-42cd-acac-303b233edc8c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "143852fb-c927-4e98-82dc-2dc1105c930a"
                }
              }
            ]
          },
          {
            "id": "cc0e1911-869d-444b-9e23-c85dae69d437",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "77cfdc1b-14a6-460e-85ed-fd4d2c267dd1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "627f989a-2ef6-46a2-87db-c8f15a44df2d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c29b41da-1686-4355-b11e-14722e3d747a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "bfbc3569-c99f-400f-a424-a254d335daa1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "827b1780-cd8d-4f82-b283-6c023565a75e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "28cbed53-10f9-493a-a722-68178fedfb77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eefa1758-4583-4825-9b10-18ce61a7404c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6b266854-8eff-48bd-8b16-5c2544bedd0b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "75ecc9cf-ec46-4008-a586-46fac6f888e4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8a5d1383-aa5a-42f4-bf2f-706391a0e016",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bc769bd7-f25e-4a38-90dc-7a79fcf98913"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f5f9412-d3c6-41a6-8f32-caacf1cacecb",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e26e484f-ef14-4c9a-af72-bbc242f99b11"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a566e515-6941-414e-bfd4-849dc1450308",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "542ebeff-6615-4726-ab4b-96583f05b15c"
            }
          }
        ]
      },
      {
        "id": "b47e1b35-6400-45d6-9e2b-ef80a9622878",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "016fb968-22c3-4a44-8b3c-b6bcc3cdda09",
            "name": "Negative Testing",
            "item": [
              {
                "id": "140303e6-b1a6-4783-95a6-99c4f0a8adf3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "61a2b616-e768-47fb-8e88-ff2ed0312c9c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6d4089-9dc0-4b6c-a1c7-a7c29208d6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4dc9a845-2c97-4892-91f1-2a0e7653a1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8807fd-dd07-42e5-84b8-8a245c52d33c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a05666-b6f3-4691-9249-e130d3cdd035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6eb9ff27-736a-4581-8334-7e5cb1dde637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557039ab-1021-40ec-9883-9f2b8c729349",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd759be-6b78-44e7-9431-2d31fdb6190c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8bbd7cbe-b35f-4f58-aace-08bde258f1d0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a0c0c48d-ae2c-437d-bf3b-76ff5494be9c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cacdd172-86fd-4a38-a220-82ad54951178",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6224ff5-4b92-4bca-aaa7-d78a13d486ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d539d0ae-d012-42b7-ba6b-3ad985faecb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ef85df-e9fa-4cfb-bb13-577ccad3a6e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16b42970-d7a9-4457-9e49-5a92477ec7ad"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f1ff0dab-6bf5-48e5-8dbe-85db12462bd6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1b78f194-bec1-420f-8186-0c4d7714b8db",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ffcd8dc2-cf5a-42a4-93f0-9cf442e2b69f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "418a54c3-aa21-42f7-8ea6-99a53c07f5da"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4f840e09-6002-49d4-92f9-769b88127141",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7058999c-2735-40e3-9f9c-22c17f27bf0e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "274971f1-c793-495c-9698-c8ed588015a6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e1174afb-9e4b-43e0-977a-7ed8991957f0"
            }
          }
        ]
      },
      {
        "id": "713d4f0b-f2cb-4ed8-8bcd-ce0494d6fb21",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e1bf1e6d-6fbc-4942-b7c7-76406e29d866",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d00dd4b7-8559-4e94-8043-0764f562322b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ce58d2d8-54b2-4d12-b045-a2e917f1a82e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88921b3-27d7-41c9-a27f-01f397f26475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c610533-3bd4-4692-81d2-781d9eedbccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19acf21e-9ff4-4bd5-a55e-721bc8af3546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83046c9a-f7c7-4c4a-ae8c-c2e91c6b42b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74784c9b-9055-4a10-be7c-dad58bcbdad6",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe605253-639d-4cb9-b1dc-37c294ba4e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a4b0ca-acdf-4336-8db2-20bf968185c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa94502-20bc-4ff5-9fb6-75b4753aebdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28ba1ef1-3897-432b-acdb-4b2b8b1f0d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbab02e-b18d-4f23-8c62-6a1824b2967e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9fe586-b4ff-447c-839b-1e51e3eea05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c32123-44a9-4e97-a38c-3ee8c9083dfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966c59d8-2fc6-4ef6-ab06-365275ba88a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4fa3650-0624-4fee-bbf5-dcc4218ce4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "991634ce-d8ef-4949-9b3d-bc36e8811839",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce01b9ed-b8ff-40ea-8613-9899c544433f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50548ad5-7fb4-4b0c-bd6a-605bb84189af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e09b29d-de77-4fce-8160-e37d725374d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f464b66-34c6-4651-be27-e987c77354e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "911f1323-9cc4-47f0-a789-d664297e1dbb",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8742d72a-1df8-44b8-b42d-b2fe3231a8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e476fa05-28ed-47a2-bc0c-7d6e5aef11a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875391e8-2b42-49ef-ae6a-7cc6b5920af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8e77d2c-4a77-421f-8941-93976499eb94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4aebd09-b27c-4dfc-acc9-c42510b28aca",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82871a9-526e-44aa-adf4-e71f457a6130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64fc9128-6186-4331-9e2a-93056616cb41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f105800c-a110-4dd2-9ec4-94f0d845749f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5b08bc1-3aff-4bc6-83c8-a593ee7fa6f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71e3dad-3197-47c6-b0c3-5b916a5f8bb0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ddec11-dfbb-4ebc-a495-ef84cf1823ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "097ed928-5de2-41ad-8271-cf7a5acc0906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16576b36-c4b7-4e7f-9032-6976e5e1fc78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1dd0201f-64b7-4949-b2af-7303587acc5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8a75bf-31ff-411a-aa55-c250199c70c8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b89505-3381-4ab6-8656-154776c27b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce6495d-e0f3-496f-bf65-f4d62cae4b49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cad6f36-2b65-4ac3-9c6c-5b2a870948d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8cfbf993-1790-468e-a19a-1baeb5aea2fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a2775d-bf7d-470f-87a9-64a165b7bd88",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c4bb800-5cb5-431e-9630-a47c4aac2936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "385e073a-90e7-4a63-8dba-ea241ca5fe69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56cdc432-10cb-4cab-ad14-771d8d305d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b523a623-8370-4a1a-908b-d00380c57370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd449058-5a55-4119-966b-72cef8bbe16d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa341370-266f-44b8-8c6d-47afecf9ce3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "872a3a5a-d6f3-4982-a6c0-2191ccf48fa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a79977f-7119-4556-8d88-f33f82b94a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df4e55d9-6203-4da6-aeb0-4c8832dfcae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3519eb4f-4de9-4f20-8479-aacadbcaf075",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0348bd8-8b7b-4a26-aab3-e001f9f5b8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beb4f902-bce6-4f13-9748-0f4242189f90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75174ec0-84c2-4443-8891-c3faaeacdd73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8589893e-6763-4a47-a218-237a6b85eb0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818ef6b2-98c2-4d93-8d73-5c69342e4e5c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c459196e-6bbc-4953-aabb-8d64ce69b2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74522cca-964b-4812-802e-f433777f6897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8dec88f-4ba8-4bb6-ace6-fdbf660c2b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1ee6b62-ffa3-4bd1-a22d-833f87a6da4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe8481b-398f-4d93-9cde-e91dfcb7cd19",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14e23e1-867d-4104-a23a-b7850cea95c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "563ace70-b513-4984-b61f-b1c3ebbec50c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554b1b5d-c47d-4db6-9d73-65f6e658f4d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa5805b4-2df0-47f8-9129-a2771f117dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1f3664-e128-4e0c-9398-ebc63ebab44a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5609359e-a7bb-4d1c-9916-3f5fc732f7a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d395f3e7-5d26-4550-a240-9945bef1e611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8053a65-138a-43ec-b6d0-ee98e9892b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8222275-eeb1-4c4f-939f-a1b5107504c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e658f36b-535a-4cbe-87ce-6aa2eae93a38",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86dc910-af6f-4368-b01a-d35c93f952e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "254cb70d-e8ff-4f7f-bd48-165e2bc4821f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03fe2b6f-f907-4bc6-8f75-e8ec5accfea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8593b167-6fcf-4c7e-873a-64749d7a2fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e1e389-57b3-47df-9126-ac46676640c4",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "455c373b-ab2a-4b11-9369-8e238e05fa84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d200a9-6cfc-459a-ae88-5b500657e5dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0aa06fd-4b89-49ea-bb45-785b2bb36e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "119e98d9-ec70-4e0a-992b-d524aa2729fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee309ae-c2a6-4f0b-89be-647796727e76",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "500e0334-a8ac-42fe-8de4-bd9df57c588b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fce9ad1-79b7-461c-975f-33fcbd7838f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9696520a-8b47-4f68-b5f8-83d732674b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7adb6ee9-69b9-4951-adcc-577927d49ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e1a056-89b5-47b4-869f-4575a1764759",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be763ae7-f7ce-4373-b12c-5699db33d0ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee5cf42-0305-4f68-b5d9-768b4142f860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfea5ee1-1781-4468-9024-b9a7cd5e3519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "024a8213-d9a5-434e-8e0b-c5a8e7478aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb71a830-aeb0-4224-837e-8d0684992869",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1acd275e-66d9-4f99-b060-3a9e8fc09a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54219843-a99b-4f4e-9b83-e0f11822fd37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b4d2e1-4c30-4dab-a5ba-e792de635e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9ae9d22-7226-4410-897a-6d01224cda83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e210139c-708d-4f23-9254-63f7b947d477",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec05567-40a8-4fe5-bf72-dff650a4ebcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf998ade-3a94-432e-b146-8af9972e23f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1aa6e8e-dfbc-4f77-aeac-5f08ddf2ad07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0a0aeef-d9e5-4f30-bfac-9a5846bea565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6245d70-f66f-49d5-8a06-084a3c14c91d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed98df1-1f0f-42ee-b06f-e6b35fd845ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68488b46-d890-4e4b-9c0d-1d1fc4dc78a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a14b123-2416-4358-92a2-b484773bc343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0c56e8f-9391-43c3-82e3-afc7d3619cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2a1b6e-9b92-4454-b69b-e96b4a9552a3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf44af3-2c84-4764-8f12-f46b2b5f5117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db8fef4e-32d8-4476-9b3c-8d7763d6880e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef806bb7-aa6b-4b35-93dd-a4d1dd026c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3eeec2ec-8d36-4d34-a5f1-0384f24222d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a81842c-317f-4144-b51b-09c3222e90a1",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f83ed6-9c94-4ddb-adc4-352e7d09a5eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1117b18-dde7-4dbf-9256-cbf3cefeb2c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44dcb56-b42d-4190-8d65-7858b2e69ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "be3888e8-43dd-4828-8b07-d21927819095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401e2b01-2d40-4d23-bb97-887b6564c6f4",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde4dfa5-e61f-4700-9f83-8fcaff6d435b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "120e90c9-1dcc-4bfe-b0b2-8dc1ac706338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166abc19-05ff-4189-afb4-ce7e421182a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "91b8327a-e11c-4ef9-852a-349b5123fc57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b0e2f0-e8bf-4ead-8b53-cdab697711cd",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "165dd6d6-1912-4e22-a1e5-4597f0d4efa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b737ffca-cea8-4ce1-96e1-14a4d84c19ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4db7b2-def2-4dc8-8a52-ce13e57abc4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "520bcfa8-c153-4346-891b-427e302bc536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b5501a-78d7-41ec-be07-8e789d058ef3",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "401f3878-134b-4a65-bdb3-20cec4ff041c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8fb1517-2a78-4c47-80b8-a8abb78ec66a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5311988c-6b06-4378-9b31-55ecffc9c733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fb687fd-014c-4918-a4b0-ebdc51532642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a53ea5f-d087-49ae-b0c3-1729b7fd3b41",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09c1e25-a71c-4bab-bf01-5a7801d0181d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be1d9050-8aa4-4dce-acd6-5b6574094504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce9dbc1-86b8-4c34-9919-496bdd58ca86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d23c9c2-f96d-4916-bd8d-8642aed07648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c288bf2-4814-4edc-bd8d-c94c12653aac",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da17b930-4db2-422d-b5d9-fe0e20187f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323655a9-4057-4d7b-a66d-c042aef0a32b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc54195-80c9-4afe-8a22-1397ee6ece58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0ee6f3f-cfb2-42cc-b830-5510151486a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3e9ecb-323a-43e5-b3ad-8bc414a7811e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e2491c-536b-4b2b-b90f-6054235d4eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5948dc79-1e67-4ae0-b750-9ae94ef7ad44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8a76dd-024e-4882-96c5-405472929915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0483a077-f21e-482b-9d57-70fe75c85ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d10712-7022-47b7-86d5-5a1bf5c0b082",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "629073eb-49a6-4f5e-8fa5-9d8f6893f5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "856da8dc-de08-4e7f-aa29-941f54800d02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed37da4-b86e-40ce-8770-cb17985bd3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fa63e3b-bd35-45cb-828e-934bed95f4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b75938-3a9b-43e9-9c08-f47e86b5ba08",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe34bf81-f835-4b05-b4d7-26e6e350b655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99012dfe-1354-46f2-924c-5f5ee5031cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5236294-1b3b-485d-952d-3f7c42a6d96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c60181fb-2284-48d1-8417-cae7aad01243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c39419-ee35-4fb3-8a7e-e7cf5a7eea2f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b143cb-4b4a-49da-9e10-09303f1669ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "724fe252-b53c-4a57-ba5e-c574b482f10c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e3ec93-6dca-4e1e-b30b-d68edd3a9c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "62e5c0f4-f900-4949-a3cb-9dee08d30f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a494400b-9ade-46be-9ed7-0afa5abef19d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1c541b-5e03-4c71-8921-c2ea865abce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69fdd124-3d26-47bb-9122-0e182743f5e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b32ca2-b41d-4d54-934c-fc09a1187b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "31a73faa-c349-4b9a-be7a-78b4df705d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d422b900-d8a0-44e0-8e18-d59d2722940b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "162236e1-5597-4930-99ff-e48df1e04be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "865b5a42-bfa9-4ed2-a23a-6364ab345e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7c6088-9e45-466c-8b5a-531d87a779ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b62c8c0-e345-4d74-aaf9-0476f56324b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afbf985c-4013-4cc0-97d0-2fb1425daf61",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "133ecd33-62a3-4fee-b3b9-91114cf756b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1734b19-d874-4e10-9b18-9474a04db36b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1836bb40-d365-4771-8773-c59fb14af716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1004ac2f-ea20-4a10-aba8-dbbd750b4546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "040c0d57-ed9e-4a01-9d9e-5f8db9e7825c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85ff80d-0176-43c6-92e8-55601bc7fb1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0eb7ccea-3aba-4a26-b00c-c25a645eb5b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814a2261-02ee-4f54-a664-6e3b0627c401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "26c72b82-639c-4135-9c47-1fe1ffeead0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93e578a-e1b0-42f0-9e4e-d46992e76ffc",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b136c1db-0bb0-41f9-8676-6c5917d5e937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc76c434-dc07-4d2e-8030-ac2f77c7891a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d2bc8a-d88b-40fc-a0ec-3be7522413ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d354918-35cd-4799-8b94-8368d0f8bb38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48ec196-4236-47f4-95d6-052b8df70a2f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f0c5668-8ff6-49c6-b9a7-add7a0f913e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53460f7e-c448-4e39-b7b5-9a75a6351e50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd33b49-83aa-4db0-b36b-fe00b699be76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3f47e45-e8c1-46b9-9ff6-4985c9adc987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa757257-203e-42e3-9176-e23a1cac56af",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6122b6-ca33-4df6-9a3d-b93f443c216f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97550708-92ee-4547-a008-c7536ac37dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c27d9a-103b-4abf-bb4f-37b19174e503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "74d26189-e3b4-421d-af2e-7a8b2e0ea5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6443c1-ca91-486b-9bf7-2c88e847df2a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97acad6-4de5-46b0-9a29-ae1748c1d97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf7b8c0-0b8a-4162-aeb3-5a072c22076b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4f26b2-9a21-45af-8bcc-53de744ce16a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "78e21ee3-2f67-4b71-ab44-e7b0482a464a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc401e95-c0f1-4cf0-89f2-f3a9a63e5169",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ca2c4c-9337-416b-9314-2f95afcc6b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7260f238-82a9-403b-8395-b0079fd4138f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077ebcfd-9f5d-45f6-a561-a89f2bc4b3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "beee88d1-b20e-43e5-8fbc-4789087f1edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b12ca3-5a0a-4233-906d-01dba1c108e8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1e888f-96c3-4e08-b879-f4332a8e8c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f789d7c9-2882-4d66-afa5-9b4f46bb630f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14606e61-f38d-4078-9c96-8115a56ca74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "146a89fc-4895-4fbe-96d6-7c92c6cca8b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442a0c47-b5da-4240-a604-c696c6685005",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d138305d-666d-4f4d-a910-4ac673cae32b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15537a55-e51d-4001-94a9-2767f97da2b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832b062f-86ea-4772-b82c-cfe16d815db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8dbbf7c9-1f12-4493-bf0a-4c0167638c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b29ddf4-1621-432c-869e-47b319dee29a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "941a48ff-4036-4bd1-b981-24f19ed5071b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c2283b-3be3-4b07-81ec-a861420cfe4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1bf81c-644c-4a91-bfcf-5aca4572ba70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a596a86-aec9-4a6f-b273-f254c4c2b8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "718b43bb-0525-49ef-835b-7ffe7d018359",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbad2246-abfc-4ac2-9ce8-e8d220decc07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b811a494-14ec-419b-b92c-62bd7303a01d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19788b9-f0c5-49b6-b86c-d1eac39deeac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d2df125-7eaa-4628-a692-f7c329d634b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9dd22c-98b4-4371-a313-9208192d5ede",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ed483a-848a-4274-95cc-50f4e02baba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e41738b-e2cf-4b7c-a5da-878a05c28537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f0b3d47-c741-4de8-8173-3a3762eafb83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3b2e467-fd2b-4366-b9b3-bedf9fed443c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85702dc5-f035-484a-b176-f72f6bfba215",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6048100-cd70-406a-b5e7-afd00125a6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "886b1bb1-1095-41bb-8873-dca703aa5cff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04cbb535-7aca-44ab-a928-ecbbaf347e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30d93349-552a-4b39-910b-1a89271a5250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d37fd4-d975-405b-9c82-5dd82db5e325",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9c6f05-1009-4ace-be76-61036e40aff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37cdef26-f2db-4f31-977c-f7e847dd04e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6d296a-ac5f-43e4-b08c-df14000a833d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dae36f2-3432-405c-bee2-e994d9876568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3adb7c1-e7ea-420c-b20f-b0307224409e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec1271f-ac62-40b1-977d-8bf21abf60f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8de5ec16-67ab-4e5a-88d4-30684b558177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0005af3d-abc5-490b-9592-032891e11c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e4143da-cb9b-42fe-8386-c30fb81a1dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a717cee1-77aa-4903-adbf-641253a359cd",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6fea51c-2241-4b5f-87c0-5627f67f8157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "415aa695-fdef-4220-ba31-1441d6d339f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a836a3-9481-4bb9-a9b1-cbd16a72e0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2651ffc1-e391-4228-84b9-ce5cb43e95e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "804f5267-41c7-4ce8-999a-84adea5547b2",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2080fd90-0226-418d-9183-f7d029e834f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8958fe7-9a07-4ac4-9cd0-10b858691276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdae461a-716a-414c-be77-6340ef792795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d900a58b-bcd2-4a3d-bf93-3d81ece376aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b7428e-8b58-45bc-9d2c-382ba9eccbc9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd5fbd9-fe64-40bd-b16c-60af3bfe365b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aacc12d-2af6-46a8-b3f4-b25e518e42de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7330d5-b609-4724-922b-ea35c7801f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "638b0da9-26c8-4b4b-99a0-68187ae84e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc43dc94-611d-4e8d-a9df-aab6f4b41eee",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19dcee80-1c6b-4707-9624-4383ff0d9ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dad7e4f-48a9-413c-8ae1-4d6974618603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18fef555-9d59-496c-91f7-30e761451ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f6f8045-2d60-428b-bd70-5a3ebeee8d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc0512b-119d-477f-ba4a-cfdd1915af93",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b02cbcd-e88b-4a3e-a608-24f1d1f69544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cd856a4-9c77-4ade-87af-3c058ff64ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee59d31-c4c0-466d-a365-0b341e831daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2aeaaae8-4dbb-4ba9-9c12-b92c8720ab3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4a231b-65a0-476e-908e-dafb2bef9f01",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b288c8ae-e696-4b08-93b7-9c8e7359f26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b9ba530-4e6e-4c24-8440-15d3220168c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb4cee6-f791-4819-a268-a7f56340ef30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc60d158-179e-49a0-8923-dc6584bc6119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a86283-f0f6-4cef-a8ec-85d9f0bd5c77",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e21a957-da43-42cc-a878-1db5289dc2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73f1e50b-1c7a-4828-b4e9-75096a47fcc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3859b6-ed6a-4d1c-8e17-9bf5dfdeaf65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "23ce81ab-9cef-4692-aa41-c4d728d1b2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a86d7737-6f73-429e-853a-9dfc14ba3a7a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "473cfd54-78bd-4643-8dc6-467fb8023d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f64e7d25-bd9e-46d8-807d-76e3f67036c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185a5fb3-c541-41e4-bf02-52ae1ebc160f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6aa1b4f-209b-4ded-a2d9-b7042df83fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b151a94a-2bde-4da5-b2b9-eecb939111a7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3d7ea8-3134-410f-9b17-ca0582217c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eb9b3a9-d253-4313-9d09-78c7d47facbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9ee832-d0dd-491d-a44e-4b1182a8ecce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a490c45c-4ed9-4d7e-9604-cf49dd51d114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8109802-7714-4a41-89b0-9dea0439466f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb99ee26-6333-42dc-8a4a-7669e19f0aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f2b3d34-ce71-4341-9a01-0b20d4443f76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92851933-ea5e-4dbd-86e3-7fad8a2de064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4859910f-350e-4071-81d0-f5e0e294d775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4712cbed-b9f4-432b-a3bf-2281596b1fc8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9bc6549-87d8-4a1c-b176-4ff1ac6816b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e91bce33-39ff-46eb-b93a-3f1479f0ad30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd07089-1385-44eb-be0f-e6715ed58b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "36dcf151-ff1a-4d58-bed9-c7c4c348d7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82020229-8d34-40ad-be76-907795aba3ed",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72b42c5-9b30-4d3c-b9ee-e17f4a6c381d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "418db54f-a098-405b-badc-15581f948472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b68326b-7fd6-4d6e-a262-5509a53890ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a7f93bf-cf2c-44bb-8e55-38ed3fdf17ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd6b547-cc0a-4e91-b3d4-aaee28dcfee6",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06bfe2b-34b4-4e20-b31a-38423ab49bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "448305c9-d8eb-4381-8fec-de757758cac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01db9098-3c38-4e89-9a62-345af082dc1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6d98119-a796-46f9-ae35-1677d62eb637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc415b4-5acf-4aa4-bed3-64cf51e5cc3a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "388a29d7-bd54-4c9c-aa2a-20c2b1a359ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e4c1f52-6546-4de7-ab87-4d6a8b142f59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c5db5e-2c00-4db4-92f4-d940d487fefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe001b4e-f3f5-444b-a8c5-639d779b3b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a306053a-39f2-4b69-8539-27493aebc7e3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7ba9e2-4b06-4159-a8d2-a5a197947442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9649fef2-ecfd-4055-b2f2-d73011a2073f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c6db9c-954e-4902-8df5-21481fa126d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca4fc4f-0d18-4560-a73f-dac798f28061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b5db13-eacf-4b1a-8db5-94420c37c112",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcff3cb6-dc47-4ba0-9a7e-663b93139428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b00c959a-f44d-4a65-84a8-2a69266cc69b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae32d47-4822-4479-8ec5-6290cd60cabd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce46b614-7b9d-4f06-8369-aafbb6c42fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "551ccf35-4bf4-486f-98f8-a5836554c412",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d266da83-b0a3-4f63-a892-ba429d0a7f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05fc6ad6-192d-4997-8c9e-31af88887de7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0988a77e-26d5-442b-9a06-3d938034af58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a62893f-186f-4a64-862f-de1ec1baaa97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6d136b-c6d2-47ae-a703-ae47719a76d2",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4373e75d-ded4-4bb8-8d01-b3e62a6ce3e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f852a47b-aa8f-421b-86f3-8c1f00cd5ee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64836ffc-a476-4fb6-bab1-5dbb5d9f6cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ea380a30-b1e9-4d8e-91fd-a92edf49d27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c107c4cd-8e6a-47e0-9707-f27e178d6128",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda2da57-c0d0-49c1-a8d6-c7cc292c4f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "169c7c7e-30cd-411e-bde1-811b571d2a66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c180f13-3581-43bb-8924-5a8cfd10eeec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc968a04-248c-4ef4-a170-77b5a9fbef1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47bd33d0-40e1-4355-ad27-dcdce475a637",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a759959a-c960-43c2-8788-9f1cd3a51662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e7a01b-8bb9-4385-9722-7841fa82a7f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd59b42-1ece-4a2f-bd6b-f4acb0dace25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4cd7873-59a4-4369-bbbd-23f1c8343200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44a0f8e-67dc-444d-83b1-122be4656d35",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6809bee3-5fe4-4bcb-853a-fa2a978099b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a66c5f30-d12c-4bae-8523-fff480bb5a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055dbcfa-7a9e-4410-95da-cc31ac071bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74d1fbc5-9c42-46a2-b9b8-f8b138731ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7812b4e-9a5f-44e3-a280-5c95647ca467",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb07391-6f29-490e-a393-5e1e62153cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19f5dca7-c8cf-4005-b6a4-53bbc15c3ebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca71058-fb1d-4e48-a7ee-4728677fd080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e663392-3c05-46cd-8c59-88508be312db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38b5f1c-6b51-4abf-a16f-7c1d8b6ecbea",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "642f47f5-748b-43a5-978c-5752be357c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "081c4dbc-3a9a-438e-a443-f11c04b24f64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f419b5e1-d34c-406c-8cee-8c15d4d4eeff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "87de743f-9cde-424d-a68d-bf87b3f4e954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61527877-e6d2-4495-838f-ea6bc7c4f3f6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69edf176-0faf-4514-817d-38f52f1678c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83c92f0e-6071-4f08-b010-8c22fe5d9482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc853253-6555-43ea-8231-27704872d345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "02b7a3eb-6b82-4c2c-bf03-0010b833df8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2a3b04-3c3b-4773-82a0-9d8b7ea16661",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "876e86ae-f809-418f-80da-61ba9342baa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eecbd1d-f08d-47db-8420-870e18ef2658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5bd266f-f139-45da-93e2-90520378dd33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0d23d9d8-6040-4ab1-9a34-fc5adf35abe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b844ea87-ae3c-4a0b-82cb-9d6991961c21",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b336e68-2574-40e4-870e-65f2c39cbd47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b23f287c-21cb-4484-945f-5725402515e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4e1ee8-d43c-4604-8f84-c85cd80ab21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a31c1c2f-32e2-44bc-9471-8a42b84ff16b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b626bc20-80dc-47bc-94a4-a516976506ee",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3637d2f3-35a7-484f-b5bc-7f13c6552dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c96e6d3-c8a0-41e8-a042-a1e438a29f6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb0238ab-de1f-49f8-b652-9b25c2d8f4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "821f1db1-593a-4181-a4ea-10fa632a761f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2261dcc-37d6-461a-8cac-0584f1ece424",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5fb2704-b3d2-43b2-94d7-2dcdc4921e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62549b79-bfd5-4721-aa90-61df4ebebe1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17306bd-d6c5-4997-9640-db50ace55fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5dfa70b-0fef-4060-8ed2-d0553385da73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60db48f0-2fd4-4997-8946-ce44075d84a1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b46db41-ecf5-43c1-b06f-70cc9d0b152b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9366340-d785-4a21-96c8-bb8efd6159a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0438ab2-f99d-4a4b-83c7-69d5837a063e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fae46b5a-550b-4116-8be0-1ab6b3cefdd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd1901c-d07f-42dc-b1ba-da32af5e4ed1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca95242c-65f7-4b85-b1d4-e9a7e317347e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c24312a4-f263-47df-8e8d-25c62ad4a901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37215aa2-dfa3-48be-9712-1eb5ff19358c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "20dd0735-38a0-4076-af44-de683939864c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68530e05-0354-4f12-b9a7-0f60bd830729",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8e9382-1d44-4729-8f92-69d7abfc3ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b47b8496-e0f7-426d-8073-ebf6f32a6632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79df9df9-4794-4843-bba1-15b920a86cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d1713ea-5a6e-41f1-a89d-f41a762b61fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e488bc7-7eb2-487c-a3ee-2b3a6dbf5e9a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4339b868-a65d-44de-b108-6fc0297a7d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beef30f8-8945-4857-bd25-373d0943c6a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ae013c-84ef-4e2c-a7a0-ac58dd798949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "560a4f28-2bfb-45c8-95a5-54608069465a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6fab7e-50e4-42ae-b298-e0a244ac6496",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb07a64-713e-4f59-9432-65351f2f1e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b109bf34-9bdd-4272-a6b2-c28bf598d014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e23f054-afe1-48c2-b14b-185b610bb297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24eb9c3d-77cf-4813-8636-243837d2fee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee51fb7d-ffbb-42c8-8ee3-6975817c85d7",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8442fa-e6d1-4782-a619-c8663b8aa1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62715f53-fdfb-4de5-8a8e-16d3e2ca31e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb665a64-2924-4cc1-b4e7-0c7ee7618090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aea25a00-b8c4-4410-a9c2-8cdd4d921ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d070b66f-3060-4d8e-bf8a-5437b68dacad",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b076f7b-8e4d-4793-adc3-d02c2df45b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e55cd8a4-95d9-4bd9-ac5c-64788f499932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f9b0b6-7167-497a-a4c7-3e1d4e5498e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8776e5a-a5f2-4e90-a599-485f4a058b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cfb0f07-45eb-40fb-b3aa-e8db005c1c67",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4abb9366-5b40-41f3-9951-6f8e7a7921f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b09b71bf-b2eb-47b2-b6ef-3975a3460ab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5816d7b-6195-4d1c-bcab-bc141466451a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "acfb3a7b-a54f-4db8-b472-e186c1fc2851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce9e51f-22e7-4a9a-816c-05f04c3c2b56",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10f50ca-f54e-4627-951c-17e201ad2e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44d84170-a8e9-4301-9f93-3a71a41592f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "541f4201-9986-44f1-ba03-4b132c3fe2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "716ce04b-8636-4d65-9329-8c80baf28e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e40b396-223f-4e14-a53e-72204a3e94a2",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85238463-39c8-4ef7-8b60-96c40e1d8a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349e3897-462b-41c9-bdf3-f81e61b31bef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8deeeaf7-50eb-4e96-8089-5610237df376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "87b002d9-8952-4163-8bb6-5d20d2ab509e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a95db4-4914-49a9-a4f9-d2c688104ba7",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "393b6a10-6109-4d56-9592-a299e8e44cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f4dbe2b-0b0f-46fe-a5bc-e2dce1474d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c519e4dd-2617-4a4d-b32e-dd70f174f40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8211ae6d-1c82-4b56-b668-2b9bd39d145c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a37088-4f27-45bb-8204-16cf55115e38",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41168a59-193b-4057-ac58-08d0e60b300c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "453d7687-f593-4aa6-8801-f70e9e52f754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b60c466-9992-4271-a39c-1091e5a97391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "553b3448-8f9f-4d1d-8311-e4fcdf247731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442e9d53-4682-43b3-b480-9ceee2762d67",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14e56c7-ace6-4d82-ae5b-ec4cacf4c1b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3fb138e-99ca-4474-8e6e-1522fba78ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83fb43a-f03e-4128-ac53-043b9279acae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b80ef77e-8ef1-482b-85e3-8fbee63f7d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372d9887-927c-421c-98c4-56e3de2f19ba",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf611bc-6ad8-4a97-9ee3-32496b6a14b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82cc7b20-708b-4daa-a0bc-329ae7c407d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae00357-eb4b-47a5-a08c-2ab97f84baa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ba87870-f17e-4016-b4b3-439f5e821480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27bd557-c7f4-47a1-9ff9-df2bbd203583",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6540ba-d0ec-4d34-becd-198beb9eae91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "807ca4cd-97ef-4ab9-95e5-2bf6abb15471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4862a3f3-d2a8-4239-b771-6e006796472c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "34d77982-7492-44e5-9f2d-bbbe4e6e3e01"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7ae6700c-c5f7-49fa-9534-10c15626e7d6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "242f7535-e23c-4654-8ac0-c10dbed4e82c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c24d59-d347-4089-ab68-1fff4602013b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6598af1d-9a46-4918-843f-28fd7fe0d8be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55354915-f0a1-4d26-b51f-0b4903bc5b87",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4c45c29-4d77-4a8f-940e-dfaa445089f4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9b8e5b1-2cb5-42b4-9585-5ad7f93409e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa0aefb1-d259-4495-a9e3-31bbc6b70ae2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d7640451-4c76-4694-b2c1-c2c1519616d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c98c5d3b-4dc7-425d-9e71-e0dfc528fced"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "08d263a3-c618-4d5b-b82f-7abaa3cb177b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d67a5834-3c1d-4a5b-b0d3-6758cdcb7582"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "34130c83-917d-46f0-8d41-b5e596651531",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "009c3717-c6e9-47fd-bfb7-a7a2f1733132"
                }
              }
            ]
          },
          {
            "id": "d4e13081-338c-466a-99c1-cb9dcf8e41e9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ff80e6be-a6a7-4ce3-bf08-ce686ad7f0ff",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "50b892c2-7330-4bfd-9877-5cb17edff3d5",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f56cb02-781f-4180-ae6b-d46349915a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f7304807-283d-49bb-bd72-02086e5736a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee88a05-cbd6-4ec7-b110-88ba6a92082b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03e83428-b45a-4872-864d-ea339e79912a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d7cfe432-c487-4f09-b953-b06dabee1091",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ebd75a9-6d99-4488-ab11-1633d7192e45",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d972039e-ed43-4f12-9a8e-78b34959e202"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5591a562-e0a4-4f2a-a8bd-72e980f190b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "93d1c4ad-e78c-4f67-a291-d5f711531fd8"
                    }
                  }
                ]
              },
              {
                "id": "82880a9d-c2ea-473e-ab93-925cc9ebebfb",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf3f2863-b203-441e-ab80-d71d4ca90d2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8d720c71-b1a1-473b-b178-a1c80e13ef1e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e21e1309-a423-41e8-8d63-8b1bf9666028",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d31dadb6-7c2e-4e8e-87f7-51f90b87fb24"
                    }
                  }
                ]
              },
              {
                "id": "941668db-f3cc-4037-b7ca-eed566c3c701",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26c23f74-0978-4577-93de-a542ee3e80c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "90b27dbf-aa02-46c9-8dd6-7fabab7352e0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5128e4b9-c2fc-4abb-a61b-8e0309bb41ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ef464f92-efda-47bf-93ad-b250d5abfffe"
                    }
                  }
                ]
              },
              {
                "id": "eeb9ffb9-aefe-45b1-905f-38d2a5052b5e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b74262f0-8ca7-4338-958a-1815a93b53a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d1dae466-4f83-445b-b4d2-d6b743a5b387"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6826192a-d3c7-4579-9294-03120f11173d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6dbe7069-a278-4e46-8e94-800e3b4cca1a"
                    }
                  }
                ]
              },
              {
                "id": "4f0c05b2-2ab0-481c-8098-53e38ae30734",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "425df567-76d9-4400-9078-d5ece7b3537e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "45847465-990f-429b-b053-a952584764e3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73f45da6-b2c9-4bed-86be-ba1c980d0ede",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0f069618-799c-4584-b008-b3c6d0370285"
                    }
                  }
                ]
              },
              {
                "id": "d9dedb05-638c-4833-936b-4db6d050947b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4b3d5ab-8e16-4a62-912d-379212974a0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e693eb32-2dce-45db-94cc-b93b8149fea5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "064ec410-e575-407a-b55a-182f828e9844",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2a0b2b3f-1f32-4723-802d-f9bdaecf5219"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "566ad74e-4a37-452d-9784-2711fa661b72",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0a1728ce-0a10-4112-8d9f-5b31665f4f58"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9a5e7157-8a99-4cf4-b892-d33df1e463fa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9dfd1bed-1058-4aab-b8bd-587c2c9afa42"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "241078d4-5350-42cd-a5bd-926c7fad320d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "361ac593-cade-4e46-9370-539d5043cd47"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "88b526cf-8087-4e07-b5cb-96b6ab8b32b7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1039ee7b-c6f6-4555-ac7a-c6b24a23c7ec"
            }
          }
        ]
      },
      {
        "id": "2190cafb-ed77-4019-90e0-4f61f4481e03",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "22e23b4e-214e-4fdb-b8e0-468264bbd639",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c22a2f72-ff95-4be1-986d-92533f305370",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bdb3cae2-5eba-4bc9-a3d8-abde30969089",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd25b31-8a1a-427e-a286-5e7f3a3d2261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12f94f6b-5bfe-4eed-b29e-204d24fb687a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1691fe-0842-4b27-99a4-2f8f3db89af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf507095-1ee1-46c3-aa7d-9a27fc636759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa295fc-a4b7-46f1-a700-4b67c5559698",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91dbdf22-1197-489c-a3f4-0bc657f63dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12059c39-e1e1-4375-a828-7f745abefe4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3141d81-7057-4c8a-94a9-f921c3c73adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d3adfa0-4069-4d0b-945b-b533b210dde2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4eb7882-07d6-4722-8b3e-0a07870dfeff",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bff6c5f-1bf4-4050-84f3-54e4814c1ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ea22e31-fede-4bd3-81e0-763ea5b3a518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42568ad-2fa4-4a30-95b9-eff4bbceef12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e029d0-bd68-45b3-8abf-91ce81271d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3309c25b-c558-4048-9e9f-83d03297ebb4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d99500a-3ac3-468d-b153-bf7fb4b85912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0121b852-cf7d-4ea9-a98e-2fc6393de399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78f5912-0a27-41fd-a4b5-c20a8f1d3093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2795f1a2-bf25-4163-9acd-4c18eaa00299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2dc6c0-9f0c-408c-b0fb-011a8b4e3a43",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b772609-0648-46ee-93b1-077d1b91b2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee0b8d3b-ef5e-4448-a660-41332d0d25ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c23ba4-17f6-419d-9df3-71534eba0066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "81902c15-7827-41ab-bcf1-1b038b73c692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b04793-7155-4b33-9612-7c31b325b7e1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca362ba0-a961-41aa-80ce-47d32082e646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "becef961-9268-4573-be5d-acc3f4214cc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a1cff7-c17a-4de9-a000-b24c7f246e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d36a89cf-5de0-410c-8ebe-d25dced9b2f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa48458c-bda4-4588-8298-119230f63b7c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb0ac5d-4e71-4d7a-83d2-42518fce003a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d38b07c-2c3e-4296-8a8b-2b6e1b83a87e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8713b98-acab-4f25-a24d-491deb6c016e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9c520d1-c546-4d16-9ee9-e848835fbae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad81af6-a4dc-427d-8a75-6065e9383f8f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22179fd5-4bf2-4e9f-b7d8-9d16d7bb934f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31206df5-e907-424a-a709-585c614dc36c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d962a2-f6b7-45cf-95b3-4986c9a55394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cbdac8c-e15e-4fb4-a3e2-377937f485ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca42dc1-7aba-4aed-91b8-564a1644d5e9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e75dae-0a0c-4dde-ac12-138f4d0e679f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc6fe3c6-8faa-421f-a541-2074ab9f60b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe4fb89-b6c5-47fb-8944-1349add01272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9981b51-c135-45e2-a7ce-bb5873bb37d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ca9838-c590-4ca7-a9a8-79575c4f3585",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b05e85-ab53-4215-b6b9-c8df346c8e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e77837-5ffc-4983-afd5-0722d71cd7bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff438a82-e57c-47d5-b427-a55d475ea6f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61f4fd31-fc11-4aa1-8ba7-ab022aa9b9b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a248a81-0ce2-47fa-af30-8b96ae277e5f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2e602c-2dcd-4334-bfcf-128445e9e7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f6d83e-1dd5-4d84-a82e-23db971cf1b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eaf9639-18ad-4075-b412-330ae2751ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2ffeb2d9-7d16-4d24-b40c-dc2eb320356f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c71e9f-3a73-415b-8e2b-b9028680f199",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f252a150-b8cb-40f7-819d-14efcc3fd7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "395e3650-597a-4477-9de0-dac012414a04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e051c5a-c549-47f5-bdc6-234206826731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e13a1774-485a-4c3c-a8f7-20be62aded83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e7072d-0f09-4190-9306-ae64217206c0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "035540e0-05a8-42f7-bef4-b08d3a367cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4018944-a704-4a7f-8194-aa0fd82d5045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbed154c-e4b6-4fda-b1f3-e1e00a43fe04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c775bc1e-021a-4634-b0ed-ef690df8cff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b0d252-0b74-4bd5-8912-955a2bcf3974",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96229bf-ec53-4cc0-8d4d-089b31cf7332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ffa7c71-ea1b-4561-8dae-c19ee2b2f4f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d264de44-8aae-46c8-9052-6c5708f3b341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "04e051f5-188f-4cfd-90bf-49a3c2fd8568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3eecbe9-17c9-44b3-9a29-5fad480a06c1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8aee323-420c-4126-ac2c-f1ab8e690f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6382e9f-c69f-43a2-b53c-1d506adb09a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137bec8a-7311-4d68-84fa-f2a2ce323ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "de594e63-e8af-45c4-b7db-9cee07336600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e3a50b-eee8-44eb-894d-462a1ec9f17f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0efc7984-f67c-4fc8-8c62-c02b23e95e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "156ca1ae-d020-4eef-a26d-36526da80bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16120e17-5742-48a7-ab1f-f741c1e552a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b4b87a3-cf38-47d8-b9d5-de5dd5c6fcb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe4337b-0f46-4f9f-b7e0-52692c0faec6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60bf667c-16cf-4480-b3a6-ad66619f7b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79835546-0ede-4f48-a024-785001f1ee8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d029da-7cdb-4ef0-a0ea-3e7970d49c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab9bfe16-a876-4240-99e0-0bc779a0d135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f646af-fe8a-4714-adbf-ac058ad6dbd5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a656d15f-6ef6-4f80-ae6a-b8c912ee5499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e79eb765-9579-4f80-8baf-aa8dda09070f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1fb992-9983-4234-8c4a-a7e09ac24c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "af844f7b-18ca-4e9a-8422-2960ece8ffd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6fde30d-903f-441e-aec4-612e62556ba1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2feb8692-6121-4e99-9224-fa3d6b4b8a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "198d17c3-5f2d-4429-8aaf-41777a43c996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04cdf300-b79a-467f-8b60-103204dcfa7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1b3c75a-46cc-43af-9c1b-ef14d9896dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c53e62-eca1-45ce-8d93-e6208a9c4a06",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1026cdba-f70f-469e-99e5-1ac7ca251778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b2a245f-2557-476b-abbc-de4660f1cae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8431b318-1901-46d8-8728-8ca0321a8132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2a4d278-6c64-476c-9a05-dc80c82e93be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699f0607-a7b6-43f0-9c44-0494af43b65c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c13b0ed-48b2-4a63-a976-a2c2c6f22ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4ae5f38-721e-4e08-834b-449f43193a09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f4b486-84da-49e2-873d-1f8bd9914477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce25ce31-ceb1-43db-87b1-4877eb5b6e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967014a9-3484-4c1d-b1ca-2c92a07927cf",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "103572d0-c62b-44b9-80ac-c913151b81d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56718010-1c56-4f4c-b3fb-a42cd0a00e79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11052a6b-7234-431d-bf93-f940223cbfb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "daff9ced-b442-4dbe-8ccd-eb119771e6b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26048712-7f4f-4214-9165-bc91449e00cb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "512a139d-174d-4add-a601-3ceddc93a42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0628c59f-16e5-48e2-80ad-bb74430e9a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6665a8-2b7f-406d-9b18-e1ad0574c9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a35ba0be-d0d2-4da0-8bf7-ea820c4cc3cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0c55d2-070e-423c-bbe5-c50f738d9746",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "269167c5-2b48-4d5b-9ab7-b05143a5f499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fa00140-e13c-461d-ae2b-4f7d6dd3905c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0629531-b71d-4359-adf7-e49e1fa1ba0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dccbed80-e910-4884-8d54-3e60e36d3d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772b8a35-0513-46e6-b974-08bd47003d0d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6023ce78-dbeb-42fd-be7e-7ec626ec98b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d8ea27a-26ec-4c6d-b2dd-081bd76297f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d6e202-c715-45b2-b10b-a5b77056fe4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0140bc9-1d8d-47a1-975c-b1fe2ce77256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8309f738-8c00-4e33-b448-c8b4e094c3c0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f20788-5cdb-4dec-ae0b-cb92a1968307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f229ccd2-8d68-4b50-a29d-5e8d8656a29a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "591e62a2-c777-406e-9eaa-4768b80c6534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "028d1916-0f88-4ab8-a270-8d46bff0b3d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3473ada-9831-4b97-9cbb-30aa76ff5e63",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "994bcdc5-0cb5-478e-996f-9a79b6970d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8de6e509-4766-497c-8821-1ae8608957a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a40161-c935-4192-a3b7-879637e82d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c5c0993-d7df-4583-8760-048df83bdfff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17966e51-bfb1-489e-b08f-2ca5635d523d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e3da6a-3a98-4f98-8de2-c98c749819c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0575230-803c-43f5-b9d7-b0dd3999f9a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deee011a-1c7b-4c2c-86d3-bf42f4e71054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89d4a8b6-3914-4560-b88c-79d91c24fc2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b34c58b-3651-45ae-9490-7eaea9a5ea27",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "534edc0e-c6be-4b2f-b417-7a509054433f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e05dbe06-256f-4026-bfaa-8673dea60fb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4645d6b-4e6d-4377-b885-150694f2a4fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad8c735a-2369-4c40-9ba5-21eee8125cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab246f9-1776-488c-852f-be741bc2f490",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8d4309-928a-4772-bf15-fa4ef4c5235a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e62321-cfb7-4b32-99ec-f466fa28b73c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b0e83e-926f-4b5a-9788-a602165dc924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c620dcbf-9127-48a1-b95d-5d1bfba3e883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5656753-9c1e-48c8-b17e-089424e69988",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0bb1fa4-1bbf-452d-a9ad-5f3029f2538d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d36ee9b-939b-4480-9991-96a612c0b957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814ab031-4e68-4047-8638-dace49eade02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80dfeef7-f9f5-468e-a496-45618ccbc6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a59a395-41ec-4121-b8d1-c4f3d4155561",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62fc51c-c3b1-40c7-8391-86364e966417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e574780-8f55-4a52-b0a1-a90cf903c8ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1615e35d-a44b-4ae9-a030-ab711fb3770b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80f44348-0406-4108-a595-52237020be1e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c9bbe964-5abb-437c-a64f-857c6d4e66fe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1e8a3a65-c781-4616-b800-935fe7f11db5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4c0dc3-52c8-4a5b-94ec-10fc41b365ce",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a374fe19-f060-4ac7-ad75-fe7d4a4d17da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b38e413-f052-46c2-abcf-3fb9c671a553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03c54d17-1175-41b5-bee0-967f53d4524b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd59c586-6b9e-4d6e-8082-4837bb2d2eec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e45119ef-0f51-4c97-a39e-c7409a7c8c5a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b01696d-e996-4ebf-8700-3f7a61f2aa18",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a3efb5e-76f4-4f54-a31c-7eeb60ca5a74"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a18f8475-44ef-462e-934e-09adbb1732b6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4d0eaa84-ef82-4311-bef8-8d68f01f16f9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "05f027ec-0b20-4528-be3d-3294fdcf37ce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca8d9cdf-8966-407d-8124-1b2ccbbba02a"
            }
          }
        ]
      },
      {
        "id": "f6ee9c2f-bcd5-43fd-820e-b6a0978124d0",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "8729f2e5-aac0-43cd-b648-3313c2e67cbe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d98ff729-6c5e-41fc-8d99-b421ed1d254a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f17b68b4-fb92-4e89-9f3f-09d0071f71ae",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3ed53c-49e3-4b51-b858-f5031509f12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4997bcff-7964-4c34-8945-18d7f2e69b97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309cab66-ed75-42fc-af4c-3de01dcdecda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e99a48b-f15d-425f-949a-343039ed26d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2a7c36-e570-4966-a23c-f619c8396738",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b7e267-a07e-454b-a50a-3586fc1c0661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bd52903-083c-4dde-a182-12fc6558ddb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef91d2bb-ffe7-412a-9f2e-17cb9b56ad1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "430898ee-d68d-4113-8c64-00d6c274392e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a56937-6c68-4aec-941a-e813f4516339",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f20ad132-ab7c-418b-82f2-af7e04e7e08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0baf068a-26c6-4cc6-b19c-ff523bb8bde1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c867ca0c-efdd-4820-83e3-d6c7275f26cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e725ca7e-f882-434a-acc8-24a3e7f14c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1880c736-3f9a-4ffc-9437-204914e18b52",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7719d2c-9f71-44d0-bf25-ae15f55f84fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a138cd2-173e-4aa5-a0d1-2f74cb3eeb9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c382c173-2710-4839-bb02-60077edc5e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "449fdf45-a8fe-4189-a534-3949bcbbabb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931a2209-4128-4fc9-b316-ff81307e201a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e44d8b-9cbc-4031-8d6e-a4b9a4be7667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b36c3d7-892d-4343-99b6-b2341947915c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0615c68-4ec8-428c-a8af-d6621737c203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0749af56-7461-498e-8970-b5446c9729b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76beabfc-f588-48ce-bcc6-16c6f52b966f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e4c782f-c6e0-4d03-9245-c34f55d4efaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ddc896d-bf65-433e-a51b-c87b7042f32e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa489b5-239d-492d-8d34-a8c4d2e5293f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b123554e-7900-451b-b96f-5db361ea547d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85302de-c79b-4d85-a09f-94a430f93e11",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18dd94f-d08e-4b78-a30f-78ec020587a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f46193b2-815f-4461-8225-88098262b461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ff71c5-230f-4bb2-aba6-3bd674afd816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b5d6eb1-846c-47ea-88c2-44c8f9d70722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d2a188-0d56-4b4b-87bc-843600039ab3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e82a06-756e-4eca-ac32-039637be9fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "181df153-f469-4c51-9364-fcdfbba0b1fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3813f8fa-b522-4520-939d-fe002fc8a1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e12ca0a7-60b8-4c14-abd0-50ffd050050f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0480af69-629c-4627-bd26-700c9d6c459d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb1ad88-83c3-488c-9b1c-f9aae6f47454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8460baf-a4ee-4faf-bf45-5fd50d58d967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf83cfc-252f-4b95-b502-f2ceb2508600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa2572d2-4533-4b97-8dd8-6f3e2246ca07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91ecc4f-b784-4743-852f-7be0dfb35058",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "133c582b-2066-45dd-ae04-5b2f534ab533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5614283a-4b37-45db-af87-b40adaf0db4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00df8a8-7e8e-4a55-85c7-0325b2531b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4800a1b-3e21-4016-a24e-5283cc31eb54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b009346d-2310-494b-b38b-8702ab5c9c16",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c2dfe2-8d01-488d-af34-92ac7b0070d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7af1849-8d5c-4cce-9304-c0c98bfd6487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a44fc35f-a5d6-4dcb-a857-464c7f9fffda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "14c1ccdc-e544-4e40-a3cf-f9b1ba742972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febcbcef-868b-4387-9a00-41b98b3d27f5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b080c0e-507e-40ce-8dea-ea328d8f3e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6e8e8a0-779d-49b8-b6b4-4c2956133242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473ba808-215a-4d6d-a222-ccb190f44eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "71e930c0-1565-455b-8b75-63a5f25b93a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a037344-6bba-47d3-b1b9-ec6f02058af4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aeac0d4-1d12-4cff-b855-5977c2af8f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5261f3b-665d-4fe0-a972-44abe7c8a260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e6d49f-ddaf-4d40-882d-378ad394bee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad309adf-b5ad-4f3e-a74d-27a3815f56f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e77a26f-9edb-4d86-939b-efd81bc0997f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35eaf01e-0254-40cb-a756-6875deff51bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73f95240-1951-4086-aaf1-bcde50ac83b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13da2202-ab11-4508-82a8-3f229973ecfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb46605d-da61-4b59-be6a-03c970c083c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71f2130-8321-4265-ac27-57021f3834ac",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c16dfc-13db-4386-8a98-b45b5d342df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d0a422-08f1-428f-b3df-0ea20b053fea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b9c90e-d651-4f4e-b8df-b69ae9496d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f46daef1-bbb9-4b43-abf6-821ab4439791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10088144-c9a5-4676-af8f-cbe4b736314d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "705ff46a-c131-4c79-88ca-3598a24f0e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87ed1f00-7142-4a15-bb4f-979be8c4f0d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd5ff87-1c35-4fc3-8f35-278ffef86e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "571b50df-e786-4b54-b814-9f766f813574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7da696-fb19-42be-8c0f-335b13d0cbc0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7176e26b-bc0e-4cb6-bd31-fd493ffc3285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91a64d68-5a3a-4c3a-9690-be17083c2e15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa78e31-8b08-4da9-ab5d-d24bdcec89dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b82ef99d-06d4-429d-af46-61b24e783691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13e9d98-3da7-4c90-b591-b790ce540b3c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0ef0b5-0c31-45a9-a4ff-c700cbf6797a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cf23168-fedf-49a8-accb-488db48078c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b994c0e-54c0-4961-9c9c-7c034e550067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "058dd3ef-2a87-40a3-b1f7-acb4076b5dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d18deb-5300-415d-b740-d9ab873eb780",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88495ed6-56b8-4acd-b99d-7f9d7c4cf6b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c718bf34-b8d5-4f0c-a108-263eaed446a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "973421ea-3ae6-4eec-bd64-678708919dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fd63eb0-76c5-4379-800d-168b72941311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62cca2f3-e898-4dfc-b6b8-09afc3bcf00c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f6bf25e-d563-42d0-a9e4-b81482abdfda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94390534-af60-4f32-8378-5a1d2d23be2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02cad39a-e9e0-4c23-8607-ccbc07a7fba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aaa33ded-8b0f-4791-a5f4-573924ad5a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c65439d-cde5-45d0-9bf9-16fac81d4a93",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baae31ba-f797-4ff4-99a2-b881d76d5e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d11637-a1fb-4a0d-832c-33c1c1bf2451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "275448a3-27a9-4ad6-a52e-673532ff2624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dcfff5c-3748-42ac-b4b7-e46b0463de99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5186013-8990-41f2-839d-2bcbecf0e8ea",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4a2927-48a4-460d-bfc8-40d7c14a3e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc8fb80a-ebed-45ce-ba25-4ba704f87272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0157c5e-6701-4ec6-a2d8-59a24c18d161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64aea257-abde-432b-9493-7f1b4286c10e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f5b4b7-6363-442b-87b8-8ea03f8908cb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc28126-46a8-4df4-8554-cac2a827fd84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71023fad-c961-4080-b1b3-bb82211aecc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635703a2-35cf-4d8d-aed0-6e9df8166997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10b3a0c6-89d6-41bd-9ccf-a1f40cad2d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c58cc15d-433f-4398-9a9c-797ab96fd98a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea70edbe-756f-47ed-bc9b-1e3e4ae0ec1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af43aac9-4222-4063-a362-284d0a09dbfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134ce3f2-2e4e-4d38-b656-16d9b81089ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5678e6b6-51e5-42ab-881e-a3fb8d22b91f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9eba1bb-2cce-469a-a6b7-87d4c8dde695",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e519a5-d803-4e24-92d1-da621912f06e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae24e7b3-0ef1-48a5-84f2-14c0dba9b667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e50bc83-aa16-412e-8c53-bb2232b321f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c6043c9-2926-4602-b155-26b81f0a415a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b326f0ed-effd-4b13-b574-19cf8b0e7e63",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c092a1-3162-412b-8dc5-d5fe7c80f136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de67ae9d-7129-4b52-9a2c-022af2dd8ceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a7e5f5-4ac5-4f00-97e9-ab37e81b09d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec9aff9a-313b-42ff-9a1a-dd96b2a5d365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de428792-1640-41b7-887f-c5f07925c36a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "362106bd-5cdb-4893-94bf-9b804d6004e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccbeda98-68ad-4364-b699-1f3b79f9efd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a89776-8d52-4efd-90e0-e978d0daa221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8974cf0-31b3-412a-8553-74919b750036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498b0563-1d66-4167-b630-316646945e66",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35565ef5-0cc0-4d91-88be-32d896daf230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a66891d3-4fce-4672-b2f3-6a3e7d86c4ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f9c5214-f051-4c1c-96c2-e1d56987d9dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8f749e0-eeb4-4065-8252-eb63273eda6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5082ca4-3d62-41ab-b88a-26302121c1dd",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e81890-9257-44ab-9157-8c3ae6a80d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0d72bd4-2b95-4c47-ae5f-d48e4293224d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dfe05e0-349c-4f37-83f2-99810434f94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26fd3795-31ad-451b-8d6d-37d31a17b1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1a65e4-1ec6-4075-8323-c926d37e67cc",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "badac7b7-48d2-410c-bd66-399b76556462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f91ff2f-67ff-4c30-baf6-227f3202f660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65dc9218-7b27-422f-bde9-5b8966f7f3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0839750d-abcf-413c-838f-4de41ae2c606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bada53c2-643d-446a-a940-08589ad15084",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1fcf9c5-f5fd-4cb5-beda-9ec0eaff80f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38b9a677-abdb-4894-a658-6d6271cbaff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef1f471-c68b-4895-990b-c4091983133e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddfe465b-ba61-4475-8c10-3a0bd15dce9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e16dc68-472e-4073-8444-963a832ec9cd",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c1dccb-f314-40e7-b053-c047b51fb311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "651a92e4-a665-4bc3-9026-277c6d7640c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932e28eb-5593-464c-9a30-792efd2681ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a68bd20-7c61-4c85-93dd-486a3cb36ae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf47974-1457-4961-bac4-1348060e4bee",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ff610b-b4eb-4862-ad38-57187420e22e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b88c0a5e-d1c1-4375-a070-39792066433d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3adcb0bb-74de-431c-97bc-fdace7ff6455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f098f67e-9eeb-4d25-97ae-1965a5dcdd2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9829fc-c7f4-420d-a249-803ff8c6d45a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9205a3-f38e-42e0-bfce-2a41f31d4b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39090e5d-941e-4047-861f-654c165d9f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf87d7e-2a56-4855-b01e-b03ee7cc5703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d28ce0ca-4e17-4dde-9fa7-02233d68c287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d8571b-fd87-411a-9f4a-248421b3da48",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87c96d0-38e3-431d-a855-69661ac1e14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cb76c4c-0be4-422e-b528-ca747a6345ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62fad514-2010-4e5a-bf3b-2c3ce3d94883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1b31578-de96-4f8a-a46b-6e71e1ab2cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de2f23da-b0b8-458a-9969-efdd88b04146",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89d2bb7-a930-478e-96a1-6c5dfa590bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c958ee6-68f0-4929-8229-128c8ee2efd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab2ddd4-46ed-42d1-a610-f39db7342d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97da20f4-472a-4ab5-acef-976edd41f24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02913d97-e35f-48d6-b5d4-0c09004c792a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd1609f-0b50-4fd2-90f6-693042c92abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f6d0be4-8f56-40e8-b934-738dc790ec53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "067dc8b1-f811-400f-92c5-78c969ab37c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "175a10b1-77fe-4049-8f5c-3310007ecb10"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6933daf1-fb45-4245-b04e-7eba42a60fb8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3ce287cb-cc4a-40d8-99e3-c4454c1dd496",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d1574a4-57fe-47c1-8261-55bcc871e0c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5e2df730-a96d-43e4-a945-97fc6e96f5d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68268bd1-b283-4414-aafd-08e41f040ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe0ef053-9710-4f57-bcec-d102219a3c7c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0bf7b381-d428-48cf-8ab1-dab32f936bfd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c01688f-4711-458d-9b5a-29758a42e6e1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cddaf0d7-3e28-42c6-9984-a760ad8c4670",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49549ecc-8380-4dbe-a9e2-a1a27a45e82b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "66631a22-d367-4d9a-af7a-5479126ff2b0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "770092e1-77b2-45da-82f8-5064dcfc8bef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2c43fe87-b2a5-4c92-8255-f0a003839031",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bc01ee54-e8aa-43a5-8ccc-8af46c9f7ff0"
            }
          }
        ]
      },
      {
        "id": "f97ad3ec-ff57-4832-b3af-0758a9188dd7",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9ca52391-86d8-44af-8898-b4bb4116b722",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8fedc720-bc86-4521-97fa-322ddae89e88",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8a190854-e41b-4c2d-b2a9-862483ea85f1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "452ddd98-c631-4055-9a95-af79e4846a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf9f1ae1-1411-4134-b7c8-b88acdc43c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45b5197-72b7-41d9-9383-d4fe218f72aa",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a17d77-5fd7-4f55-8ff5-e2f11a457ec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11696631-3bfa-4b2e-a5c1-234a9a621144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8e3341-2c31-4242-94dc-d93f059b70a1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ead58bd-c2b0-4fd0-b409-0ce0d0cf833c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "355aed47-9e94-4bba-854d-200edc8788ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca297f2-2ddb-4201-9d71-ae0be90da679",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb22b2d-5caa-4145-996d-9de4327a9478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb80001-0d00-4079-93c0-dc4fdfd908f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae9d780-6d69-4f09-a4ea-4bbdfee89dad",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d7949b-9ed0-450c-b191-4351fd3e3fa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ec16ec6-6a90-49bc-9798-1850e9fbe4d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c494ddb-6094-4071-9dd1-f6c0cd8886ae",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e4e6a4-e0a6-4a98-b5bb-59af2cba5801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e3850ed-657f-40d8-85d2-788db36312d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc77d41-fa87-4573-940f-41e8801d727a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57911229-6c01-4ded-adb8-d0578ae0cfb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24cdf8aa-d5ca-44f3-ae44-3abb79b801c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e6e5e2-6de2-4702-9e96-45060aee658d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "591c3213-1bae-4a26-9aa5-6a5eb89acf79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c861b0a-b022-4612-8820-7179b5c97af9",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd03f580-96f8-4ad6-9370-0a9e5208d27a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44dd81c5-c294-4dfc-8dc4-e14465695706"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "786af6b3-a446-44ea-857b-2c0d09181e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7542364-2596-4be7-ac7d-7c0fbb29e917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758d4fe1-9760-4703-ac5f-01796ec79837",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99353be7-1453-481b-9505-4667dc7b196f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd8d8859-cc70-4579-99d8-44f85363aab2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef8b809-dc73-4b60-b15a-b86c85b90de7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85448080-1585-422d-8900-c004a0e6c671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5226de8-e2f1-4a9d-8655-e7c54281cf92",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8796d47f-4d11-42ac-a9cd-3d060e7111df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f34d8b11-5510-401d-964f-936aad397200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f99a007-b37c-4d3e-9897-f773e8396f2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83f3120b-01f2-4648-981b-d07a9ea17f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53519d30-b11b-4878-b8ed-902becff17d8",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1cea27-d411-4325-beeb-e8792dadc79e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaa36255-9414-43b3-92c8-34856f1265df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "802658a2-a947-4aea-99aa-799e4dee1584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc6eeaf-effd-4959-9b04-b1bb81299591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed4384b-2432-409b-b1bb-5d84d1d0d6d9",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8a1639-dadd-49f1-962c-2a7583184d03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c016a35-b509-43fa-a7ca-4bfd34cfa009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "628bdd95-9f8c-46b8-b75d-02c0d47b982c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10577765-ab05-4bb3-b398-cca9e835500b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e079b0c1-593c-4657-b309-1d1cd3b88be4",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b5e955-5450-499a-929a-73cffdd3a9cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5af2e9a6-e14b-4dc3-8c9d-ed7c03b4a2db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2345dab4-f845-4dcb-a40b-305ec22c8d57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe74a4c-df0a-4aef-9fe0-477b3415e98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c69a7c-c3ef-4e01-815d-dfad5dda120d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a234efd-687d-41ab-967d-b46da4e5792b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dcdd0f6-944a-4f6a-b7c8-ae5cfa20ece3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6bc5d8-9afc-4c24-b55a-bb8fbfb1a7dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6af41c8-641b-4055-9e44-89f35acaa9fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e273977d-098c-4c4f-9129-2f7b58602447",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0cdfce3-0f0f-46e2-adaa-e9258b871aa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5646f90-0e8f-4bee-b208-4390ed4ad1d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b77a0e-aca5-4f18-b499-d1a3afd7eea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b04c6d00-f433-4d4f-9524-ac05548cc9e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d9a864-ddff-4e03-a8d8-9cea43f989a7",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a7cd69-cc42-4716-9f26-c2388e6cb71b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c04cb063-790f-4c1b-a327-a5b3537cd4c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9020197-d1c7-4046-9fbb-2727f9894ab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3593b4bc-8ac3-4163-a5b1-bbd5e5f9be13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d3d8688-1dbb-4bae-920e-81d7c7e96378",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dbb4e15-f488-4c6c-be8a-412863cf19ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9990efb-37e8-4c2f-93fb-fa7341824a30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad63bfd-b804-48c6-b1eb-2a7482dfcbb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab75615-6324-4791-8af8-35009c85812b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "228b8ba3-7aaf-4f51-8246-af2aa993af85",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50030c5f-fde6-4aa2-b7c8-c0d46318e102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f10ef1dd-47ad-4a13-861c-be80f884d76f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3c3422-5eaa-421e-b8a9-e090ff6c8580",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fe14193-396c-44c4-aa76-bb8255199bb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50afb01c-8bbf-4ef8-832d-be06cb545e4d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095f67ab-1a83-41fa-8494-322279884cb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84073485-de1c-4e47-900d-6d71041da127"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8738c0-b956-4319-a2c0-b270de7624e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1cf6f6d-a93e-42ee-b46d-14c8804615f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80dfc6df-6091-4016-af88-c437d6369e9f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151c6b41-0d20-43d6-bbee-798474172ead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d3296a-d9d9-43ed-bdc7-c04c6b14a216"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2572e8e1-f4fb-47fd-abe3-3b64ef7e8440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edac28f8-7e5b-4666-a637-f67067ac1a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0912a1-a54d-4aab-b4e2-964bfad17f27",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1801f8fe-95b6-45f3-9403-71d7d16aff7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9aec7aa-2742-4d65-83f0-859129f8976e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "140153b4-f2a9-466c-a587-a6f91ac54dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ac92913-ff81-4117-8f5b-7c5f398ce7b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24628f01-1da5-40f0-b952-78ea549b0e19",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20e027f-e14b-4536-8831-f7387726ffa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a87d0945-f7a5-4afd-a5f1-50f3396ca30f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "177f668e-3ea7-4e28-b40c-22b46d8cd9f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d135784b-4314-4fa4-830d-f8214bb2f81e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5eed05-07e8-488c-ad57-9a5a98e41a13",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d0853e-59d7-42f3-927a-921c44d4b8a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e3e39b-ad67-4f94-94e4-0a65750a9040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8d6a78-9345-4688-864a-2e5746c9902d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0375263-954f-454b-a140-c654fa38449c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627d4ce8-ba2a-443e-8301-1906db85eab0",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee975ae6-2716-43e5-a3f7-3fcf6f1d35a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e86dd2b-68c6-4ccb-b4ae-8099c37f09fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c90f6c-f6a7-4b5c-8b51-ad4f8aae671c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fc064c1-d448-410f-ae2b-1c2791065d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2105d9-127b-4748-8581-0efb3e459b5a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f34999-08b9-49ac-bc54-7d444eb14e66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0f9b510-36e4-43a9-b0b7-be33e0f5c376"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e16241-73d7-4e09-ae4d-775c65283c98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05003b0d-faa0-4262-85fd-c902fd31695c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25bc40c-4081-4f88-bc46-06be6dc20909",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2580d887-7b37-49d8-aa61-a0b337c7a5e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc92f508-d028-463c-872a-bc46b3428df2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b7b2a4-ef66-462b-b99f-02469a48d498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "969eb71f-3f77-4b71-baee-5c26dbde772b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca8aad3-c25c-41a2-92c4-db9e4a5c1667",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d624a4d-c997-4710-b8f3-0903f3e63848",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1f26be8-36a1-4ed9-884f-32d91cd0d454"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2992698f-57fe-4463-a6fd-4bf324dba3d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4bc35db-efc5-4bd0-b244-ab6f4804ceaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4afd42-4eb4-45e3-9b7d-3f5fc686689c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f1bb48-0a60-4638-9551-286bfda4c2be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e9dbc95-a436-414a-9365-8b278ba7465c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06d45ba-ff7f-408d-8aa2-a3d19ab9fbbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68333f24-e1d8-4ac0-8eee-d2650d6dfda5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb827c4-f38c-4960-9c3e-461a6cf6ccbe",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1f1a0a-c2b9-40d8-ae95-af0e9484fa32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2db7824-437e-445c-b3c4-7cce81d4f0ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c065c35c-9b13-4318-af61-31a3cb17634c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98ef98dd-17fe-49d7-9474-d8c0c26a38e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b445b5-303f-47bb-9cf5-c48c12a7ce1d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e57b14a-60d5-4cc1-bac6-5e0009f64e13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d33831e-a5ad-4e83-b885-26b7a0b3f3ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "051a1f5e-e56e-4bb0-a2b0-71ad45811ea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c0d2bf9-c5e4-47b1-9c4a-1f63e4dbedfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07ccd40-7e86-4e85-aaa8-020628e61ce7",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f3d224-da16-421b-905a-647281a2ebb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f658f2a-2f45-4365-ba12-65d19409a5f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1638a227-08e3-4fe6-9df7-a4bdb99a4b5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b536e9fc-55e3-44f2-b742-09fa97389b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166e088e-1b69-4b11-af0b-7689ce019ff4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee19cfb-2600-49d5-bfe3-62fe9def5a79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb3f93fb-7c76-47e8-93a2-dc890c03b73d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9fb97c1-9628-41a6-bd49-b6714a6d39bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96dbbfef-908d-4efd-a195-781058669db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ae2d33-2d98-45fb-b5d6-68d16327bbe4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdeff31b-30bf-422e-a333-69208ff044c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0ac7711-7fe8-4bcc-b111-ea77975be860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57744d82-9038-42de-9ae2-39f44648bb05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aab84879-1efb-41eb-81e9-3b564e4b3946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6095e61-eded-4afd-a74c-b6de4056cb4f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "540eb37b-5db0-4557-96e5-7edf6ffa860f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6903ae2f-f859-4100-a2ad-b3c71a2fafa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8575429f-86c1-452a-b04d-f1807da601de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a29bb56-e19d-49eb-8b67-2c275057d78a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76dea12c-68ca-4e78-ad33-abe213b49a28",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c02e3e5-30e9-4368-a8a6-888c7e21f6a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bd708af-1a62-4706-b94b-af9cee5cf403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9369c1a4-dd35-4108-b92a-41fb4f586c10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e80ad217-7475-4e03-9fcf-30682a972f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd91020-1500-405d-b234-b7fd6e610f1e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9eabde5-18ad-4543-abed-34ad7282c617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6cb4007-dcb8-4316-b0d2-93aafea638ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "add4543d-131a-43d3-a4bf-e4deb81dcc34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d045ffbc-353d-4239-b5c4-3b7993a0ff9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ab7a58-5bcf-4978-8335-d2750a2c4661",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af83b70f-e59d-4093-8324-af17dada7c3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52464eac-3ffc-42d6-a0ec-7bd1192f6b90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9b7842-8afd-426d-b949-99e02b9ead4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65754c66-15d5-4d1b-9383-a63454af6ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23064cb8-679e-4865-93e7-97ce92e780fe",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37838b76-64a0-4bc3-983f-96083b79ac29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd5e12ae-a5da-426e-a464-666786656f54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4260c9d6-8dd3-40f9-b879-370013500306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10809caf-9b0b-4257-be68-9a8a44852c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f99459f-5a58-473d-b824-4e81fffa3c27",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90136cdf-ec7e-428e-a634-cf28039ab711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90740b9c-4265-4c58-a402-6d231425f797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26320aa-de07-420b-a4fa-4d6da7b0e2e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb7c6ad5-5a76-4812-8f3a-7b37c5e9ac87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43703643-6a1e-40bc-b8fb-967583656888",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f2e96b-feb4-456d-bb99-5b306305b479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e040094-cf90-402b-9b07-a12b1583ac07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0bad04-17b0-4048-aa03-cc4b75254529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3284a2a0-a47e-4477-b91c-6b3c28653326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8edd181-4b73-40d4-93c3-7f784f886881",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a143f0b1-1eaa-468e-80f6-65580b4869c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e27ed53-0ecf-4bf2-8e1a-49312d852459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "854de80d-87bf-4624-9089-66cbabbc2a92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8271498b-dc57-4b18-8221-eb4b15ff156d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b70ad8-4d2f-48fc-8dca-ab3e49d09bc2",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c0f768-b50c-4a47-93ad-87a174342440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc5f225d-c3bc-4a74-bc88-3418071f401a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "705fadc7-34fb-49a7-9355-a3cf10377dd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7547ee3a-8a78-4a96-9b90-0734e2e5d902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc55d85-0ed2-42c6-b556-0c2adaf3ad75",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f893ff4-52ee-4f8a-9eb5-d4c6e1e904fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8cd5772-b746-4156-a769-1d52961a4f0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dacb082-9e21-472b-b2c3-da3bd5a5ffbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e514d0d5-6c29-401e-aa71-65edbe11fab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5499b2cd-0452-4fca-824e-47bd8fbf049a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b32b4e44-2337-404c-961f-f3b725448241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a88c1d0-b43b-4330-82ee-34f6b3762c3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6939c648-2c15-4e83-b269-1f5fe20c2d05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9678e9bb-cfec-40c8-95f3-baf5bc5c32da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72cb458-017a-4b4c-bdf9-aaf3f6681c57",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1b7b1e-c47b-4921-8598-79dea1c03c30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ee5f5c7-fbef-45ab-8058-52b9f0e6c087"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ed5972-7da4-4fc8-bb53-8cca50cd46f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ad1cf70-78cd-4ca6-a9fb-266e6cf37409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e30a04a-e97f-448a-8fdf-1cea32c02245",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d42a76-1ca6-4263-8e33-69f4ad9f85c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f4de58d-b111-4b71-8135-b8b04e7c633f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54afec1c-80e4-42e4-b0a8-9ff3008a8a97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c39275-8276-4ff4-92fb-2b095036f5ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a099e222-8714-40c1-882b-89fd98d9416e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e32b701-1e8a-4445-a811-f5f8a847a5c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3e885b0-5005-4622-ac8f-800279c4e9fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb415aba-2d3e-453c-90d6-0c04d2db74b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "626f9bcb-490b-40a2-bdec-eb4182fb7f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da7ac9f5-d83d-4bc6-a6dd-0cc226827c6f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fca1a15-ca3d-4e2a-ab9f-f9fb7f919140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6160e0b2-45e4-4fd8-9525-9510e529115b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c979f8-8fe7-4ab7-a9c1-f07d90c1bdf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "458aac62-301f-499e-a330-f0a14cabb9ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4448c6cf-2a2f-4832-b4b5-677f32e47e37",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205c94a7-3ee4-4610-9f83-6dcd376ffcf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89d64c32-5fab-4293-9c34-06a01a03d8fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ec3eaf-21bd-4517-a8a8-76e64ccbd4d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a7aa185-6cf7-48e5-8c5c-adab0e660519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501f875a-ecbe-464b-bbfc-c1717cc5a24e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd405f4-6092-4aa6-97fe-185371ad4e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe19489-dcde-4780-bda6-2fb9cd2198ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd12bf51-8c18-423a-8abd-6ab6fab0c0d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8c18a0c-f782-4d8f-ae8b-eb9aa6c3cf5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f927333-acb8-45d9-b35e-2fd9ad92b658",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e1db24-7230-47fa-8d3a-8060308a8527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88727b48-cb70-44a7-8ea4-df2fbf0b8b2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47dc8d4-4db0-4771-97a1-8de7c83ec190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dae9a59-4e7e-4e01-8d9d-0a71554e9cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e404f713-08f0-4a75-a1e6-fad17c72af57",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f641494-8008-4a90-9d7a-d7d1766faf48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11a44fa7-fb9e-48f6-ab6c-0dc9c5089eea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ffb2ca-4a4d-4f3f-b869-efa9c5eb621c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67db3000-36fc-4c98-bf4f-839ba69b339c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07317fa5-37a1-43ae-ad4d-96f32c0b28c8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5a4e72-1418-403f-ab96-1d1411104c55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "294ccc7d-a8d3-4202-b50f-6d42799cb4b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16464664-c931-4eac-83a4-0a87abc8412b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9d7c60b-cdaf-4668-8608-0939134af745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58cba614-9eb0-4332-80f3-59e124ff45a9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13aa35e3-a7e0-48b2-9b32-00aa076e63ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74829ecf-ed0e-488b-abe8-e0b2fa4c9604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb5f1ac2-953e-49b7-91d2-38a7e12b54fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17a1cdd5-b43e-4abe-a475-d0604ffcb478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd88fd46-9ca3-4a2b-a9a5-19a638467f87",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5e65de-0b45-4456-bdfb-8dfeec58121b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7ba1047-8c8c-4a20-a7b7-01e4c02c82ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8125063f-3a0e-44b8-8126-98d2de58deea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1865dadd-3479-4ffe-a5c7-985874ffafbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2f3ea3-5e05-415c-afcc-0d71c582f6a4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4816d189-01c8-42e5-8ce7-2a3e6090364e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5f5968e-7882-49b7-9182-2bd8b21fc5fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f04ba7-1a83-450c-9df1-1e29671335ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "227f510f-62f1-45b6-bc65-b4d05f157604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9af839-39d0-4a2d-9513-97cf995f9eab",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f05f91-df18-4dc2-9634-e5036ef7522e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "768d77b7-45f5-4d75-bca4-b2c0f5e0e57b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b96f603-00b5-45f1-9255-737c62da97bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48160aac-d338-44f9-a0a4-4e731b11accb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e310790-2af4-401e-97d0-7146bc878222",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa02aac2-1905-405f-895a-7db575888601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be1d2520-3406-46ab-b119-b6a542ad776d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa08c8b5-f09f-4717-a782-7a094fdbaada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44f2a161-dd27-440f-add0-97e7ce16f738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9daf852-863a-4c40-ab42-838b3ca1b1a6",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224de7fa-3a28-4515-a6cd-40e2941025f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eff1ff17-7d0c-4b7d-bfd6-f1bfe17ca005"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7005215-8bbf-4d11-9e58-ba50f33ddafd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8be1a93-80dc-49a2-97c4-656554385a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d8dd7e-2c9c-4744-b156-8b3c42c29729",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4346bed0-2237-4e19-aac1-0fbbc46b310b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3309c81c-54b6-4c6b-8e45-a7de97d0983e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9347501-30a7-4053-9b18-dc49d4b82a35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c88b5961-3a80-477e-baea-bf660357808a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3476e3da-966a-4b67-885a-00291ccb78a2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbab2939-af7c-4646-b307-a24a273de24d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8792269f-bdba-41ff-b022-130b4b72bdbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f6e0477-6ce0-464e-90e1-f9ad9182ba68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d36c64e-ada1-445d-9557-08072e4814b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca482f2-39a6-475d-b03e-fb6ade6b1efa",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1413b6bf-b33c-4fbc-b15d-026c410e1219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da532344-506a-4d82-aa26-7ef1bdaab565"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a2bd5b-454f-4482-a24e-f6e8b7f12653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccccddf0-f91b-4766-ab9e-6a9f2995ef83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891dbe10-0a58-48b6-8501-e3ad9a06977d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9dc4b40-bf38-4576-8574-b75196e941f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7df684aa-7b03-46c5-80e6-217af67e503e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf413c5-1cf1-4c3e-9ee4-9531173862cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e173d92-8fb3-4b1d-bc21-bb018545c962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ecccc0-79d6-47b8-8d96-6ac00488d812",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721abef5-d717-4881-be70-b9cc54239e5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49aabbad-5a56-4500-a9f9-66ad73b1d29a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4a9be3-4ca2-4b45-bac0-4e808cb7bb97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9140fab-8a47-4387-ba35-0a89e0c2330b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d357510-a94f-43cb-a61a-93328f5f71c0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb0ce9b-5df3-4111-97a3-db40931a9e66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f9796f1-7e54-4463-b21a-2b918bd9b7d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efeed6e0-28bf-4c34-a204-303cda0f3b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e162446a-25c9-4ae1-9289-c771edbd810c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca6e54e-8a63-4695-843d-7a54065d4f2d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec11b43-e2c3-49e2-afe5-a14017d81c68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab43671e-4659-45a7-a145-2443125824ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf9d0b3-9897-4879-b813-d3086446ae95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14f857ad-d36a-435b-83be-7eb690a3c4a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b397c2ba-4cd5-487a-ae01-31c941d2d332",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b780cf5-9f2d-46b8-b39a-dd22bbd763ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1fbdbfb-58a5-4f77-b4c5-c5cbaaa42a3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db590863-80c5-4d00-bf98-e7cf2c9893ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b423ed1f-3be1-414e-92c7-27fceb5d90ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e866ac9-0e50-456d-be4a-94a169beff46",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6ae573-5b9d-4826-8477-eaec3e9d153c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa842ded-96f3-4c68-a594-e423126d1717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e2e89f-09c1-4c4c-9e23-e07e28e7a266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfedb274-cc78-4cf8-9dc4-8810b68d5460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95377f15-3de8-45ba-83c6-b86ec4b81d4d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2805d2-61cb-4770-a294-32d7bb1037d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf131b59-2110-4f1d-9dc0-d58b12d3ed4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5229fbc2-6b0f-4723-b145-e4af0fd39eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb49efa-6b13-4a7f-985e-c0915a5662f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57bb45fb-9ea7-43fe-a92c-c35ef675123e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8576efde-a515-4d93-97e1-91d1c2555a92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21c8029e-623a-4d9c-8161-1389cd624894"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddfa5731-1a94-42f7-96c2-e225746b2e93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "531a8430-884c-410d-944b-d0ae6f22b3ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50de1da-35be-4aaa-8014-7c38ff18e43c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0974284-30c1-41b0-854a-007bee7ee436",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f943c29-5dab-496e-8cca-2d66aa9cb030"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d41a7b-e8e1-416d-b859-0581eeff88f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b685014-c955-454a-a29a-4a6289779e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1922ea86-19d1-4c52-a23e-fb5aac3f13fd",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b82021e9-774a-4256-9203-dcc7d4b46f68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1544896f-7671-4454-9519-9ea77ce11d9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32b6087-6193-4f6f-8d02-f1c03ca66aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3384c2b5-7ae0-4d12-a16b-2fcb7aa984c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6426584d-8023-43c8-adc1-40f547e1f72d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be53734-2082-4ede-b2cd-0ebd1de83dff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd300bcc-864d-40a4-8038-eef9d97c41e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d5012c-553b-4a8f-8096-3db1bea91b3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77f2d00b-b3d4-4dbf-be0a-b0e4a70f4274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5d22a8-4f41-41b4-9630-2d8882f648cf",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9a9c6a-1bd5-49af-8e23-83942370e8fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29cce40a-e70a-479f-a6e0-b942368eace5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f6bb22f-ae1c-4774-990e-610e1d700348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02931167-61e5-4329-9f61-5ae3b39879ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb36bef-fade-431c-b45a-746ab4f633d2",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b4b538-f00b-4484-9793-767c35641056",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "590971f9-1d14-427a-b347-9f0face4b40a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37df99a1-8615-4ee3-9aa2-6b73ddd89ade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c28f6b7-c332-48a1-8ca0-a1846dd0b2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c38d5978-24d8-4e1d-b35c-e1b1d245ef42",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040e96a8-32d4-428e-ba86-ec6c40ae0acf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1039c555-6587-4687-8be2-82887a902098"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e201dbe-845e-4fd6-a788-97da9db02e54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f88dc5a-a989-4952-b22c-a12ac5c5c304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b922fd-6e70-4314-9ec0-18c1a251fcde",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34f1576-e307-465c-bf27-5f071ab3194a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df780301-c12c-4b93-bde9-490ce5c04fb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d2e93d-9370-4746-915f-4964efa168eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbf72ce2-2c33-4c18-8a77-d1e1ade1524c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c33a1b3-2edb-4292-82e0-ae170f16425e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f21ba54c-a8ee-4e8a-9f0e-8a3603f1e189",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4caa51fa-67cc-43df-8860-1a612974540f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c726d7-6a8b-4f3d-b679-2718c18fbd3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c48eb2a3-3731-4a76-80b2-504b917e2627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50982ad-6b8b-4e70-ac91-76901738602d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a1950f-7ba7-4bd2-9c32-7ee42a64911c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "879482f9-fc78-4a31-a95c-ee7c43d08891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3586d5-d70a-42c1-981a-11d6f0f011c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3420ef2-6bfc-436d-b074-0ac1cd70f796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286b00c7-e471-4a51-9ca3-24c2b69d733e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de8f59ab-3e52-4ac7-8912-818b73e44612",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b671243-da7b-4303-9fe1-72f92fda7cf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c77cc9-7777-4443-b856-9afb9c4e337c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb542090-769e-4a2f-b48c-45be2a9c6993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b89fcb7-891a-4c2d-ab6a-9db4b27b6822",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f12e2d-2d06-4d03-86e4-9723867aff2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49f6ca7c-af39-4098-bc5e-d1ba97306712"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "612eb52e-739b-4205-bf47-5d1d129be064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c25a26e-4904-49ce-af33-c66c49e19c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94980382-2dfb-4835-8645-7880e77f0714",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d96ff441-c7cc-481c-9cc6-b0b72a6cc7b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "060b5df2-1b7c-4953-8d33-909bc917affc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9fd576f-dc47-4828-9e77-291fbe71573f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8da331c-6932-44af-894a-85749cdc4ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64af6bdc-a295-47bc-98ab-6de66d9e4db6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fec8450-21b0-4c70-9c4f-ab63d752ae22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec2b38d9-af6c-4d99-ab52-178dbf6bf6bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7eb49c4-6cbe-4b1c-9b4a-5f1d2614560c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d85647dc-2d38-4eac-be72-ad75bc118bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe580fd7-f8c0-4aaa-9453-b282abc821ed",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba34ef1-e4de-4b2f-9d50-01aa01d22505",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2335eea3-24ed-4bef-9814-8f38d6fffa94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2df5b6-c45c-4856-85ed-9bcd4cef3762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75cf23ae-a9b6-4157-91af-7de9a1ea81af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f143a222-5759-48f0-bc7d-b317d57c32f5",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c573d225-28a7-4f61-bcd0-3fb81779f02c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d567e96-ef5b-4e5d-9f0b-26e6596374da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94869937-aef7-4a6f-b9fb-820a091b789d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b25cc39-e279-4a22-8886-c0035c50ca90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6020188a-f00b-47f4-a687-78f55ca66e82",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc461a5-2aa8-4d0c-8350-d2093fdf4edd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3471308-4c2a-47c5-bd3a-6a92c45a3feb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4159563-4cb7-4c58-8422-a945c17af038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0297d635-b360-4263-88e8-1ebdc2e19ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc694ec5-5ae8-4bf6-959e-87a99cc2b17e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02272115-ab92-4bf6-aefd-e3888b3ee69d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4c30ca6-7031-4bdb-ad44-84e0b2f5213c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48ac9e6-4e87-4b1e-b901-0da02b4b0374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "984713f6-7fe5-4592-a2ef-a3746f4604dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f0c2a9-9173-4a12-b64f-731bb2957682",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e4a15f-b91e-4c93-bdf9-0df19da4532a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "424bf175-990b-4d70-a4dc-aa72d0cb7127"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f61507-1365-4bc2-901f-43f5bc631d02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f0fcb8e-790c-4b11-a550-7c95bdf04b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13937ad-47ca-41b5-955c-fab9868b7907",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aabc8b6-3cee-4307-a206-db22b714fc9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20c25243-b297-4869-b73b-27856d6832f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09e1a78-1bc8-4415-8c88-69b4c437f27d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e9f98e-3d09-4004-9c02-714ace6c0d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e630285a-096f-4dd2-acd4-d30949b5c58b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26311a75-e6c8-4e74-a818-e278e61301bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efa61692-2cdb-4141-951c-b3ec32a81bbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9dda43-5781-4648-a3e5-da93f2c4bf79",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5c67a73-c74a-4f8f-b18e-1d8f8512d401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086857c7-2d06-47da-82f9-6bee4564a1cd",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e747caae-22be-4258-a550-f6a963e327a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58401a82-a85a-4202-888f-e51b18832f0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c491185a-197c-434f-b9bb-b84a75a7f2df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d23582f8-dc02-4f52-b2e5-137ef42f0c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7dc8cf5-e0fb-4f45-99fb-9d7a5f6a27d3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b65657-aadd-4ef9-b1a6-8e8bc18216ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a1a367e-065a-4bd1-8f6d-43c64ea00ff4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "687aee0b-a438-4457-926b-1f159b992885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "886c77a7-1bca-4880-ab65-d3fe89634c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14589a8-8e86-44e4-8fa1-075d9fdc07ed",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa28b69c-9046-4a9e-bef2-30d56bb5f553",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e06d84a-458d-48f6-89d7-e428d718b90f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79268d16-9f6d-4d46-b009-22891d96c76d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a79340f4-7617-459b-a058-583ef8ef6f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289cb3cf-345a-4cf7-94a8-de46b4c6fea1",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb43d6c-6650-466d-885c-5265127debe0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f19c33c0-b964-43d4-ae0a-3780a9ac6621"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37e086a-1a79-4b60-b853-91f17e34cd22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13053d3a-3509-4860-8a73-922cba9ac71e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3f0404-fab4-4e9e-a98f-7eea64530607",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75944078-287c-4f51-b3b3-21e5a7495c92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1e1dd7e-ab92-4c34-890e-9f6a97336f45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af0017d-9765-4cf8-9fc4-ed2aac0e5170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20686bf2-2bc8-488c-84b2-822c6cf0d34b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6455e693-988b-4e24-99fd-98bd108d0832",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21208346-c04f-4de0-b5e4-b8c9b1194dee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e3781ae-26ad-4438-b46f-209eddb91578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9d156e-445b-45e3-b4ea-e6b27b53b7e0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8600bd4-8927-4a63-9ca4-4773e90de232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49f132f-beda-4fad-b53d-ce2bc06175da",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e37e40-6153-4b32-a7d3-c3b697745d2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f2642c8-55f9-4b11-9085-4a251cfa2895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94cb3451-b73c-42b7-8f7e-93b3220bb1f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "766cd402-b8da-4440-bcfd-21ff0fe1ab55"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bdaa517c-1369-4278-93ec-90d4d975d103",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b257f963-c584-4755-9c14-069eaa3c4a8c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d4ab6d8-8e44-44af-ba32-8280b5a6c118",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2f3c8e8b-118d-4587-875a-1fd11d8c3491"
                    }
                  }
                ]
              },
              {
                "id": "c4ecdf9e-b7c4-4560-a3f7-ec7f3d94c661",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4b2fc82f-6595-4242-a14b-d714c753fd2f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b58352e-066d-45e1-a46e-0b9052533201",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "79371e01-7594-46ca-9247-68f533fe6fa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e306a6-dee9-43b5-b609-81c3825997a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a74ffb78-df61-4ec7-89b8-4a00ea860b7a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e91a00b-f5ca-4ea5-99a1-7279a9f10c1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6994db91-2425-4a4c-bcb6-f0b58d2d0b8d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b4f28d6-2762-4c95-8a80-182fd0bcaba5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f619a5e-11e6-49ce-b6ce-5929513334d4"
                    }
                  }
                ]
              },
              {
                "id": "6db04778-d8ab-455a-a9bb-c93c9bb2cc3f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "bceac8d0-4721-4d88-95e8-7e914784492b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f54601-1775-43bb-ad24-6c5b69efc5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7bb15cd1-cc6e-4acd-97e4-57c902b994b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2007a9a5-3a94-4d93-ba7e-d938ca631528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcee276c-e471-42a0-97d7-babca399f7ab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0f18038a-9638-4664-92d1-37cd816023ca",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2e51a31a-16d4-4287-8b51-b2ba99df497c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c2ffe8e-f0f6-49e5-914c-394dec64ef1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e79eaabb-dfe8-4bb4-91d6-e2e75f02f490"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a046fea-545f-4fd8-be76-798e3ed56694",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8cb937f-befc-4b48-8627-c4cb656b627b"
                    }
                  }
                ]
              },
              {
                "id": "a73f648f-9c61-4fa6-a710-7bb169414b49",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0762f33-9dd6-4959-bc81-40486d96d0c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f8f69248-59f9-4cf1-8e8e-60c842cfdced"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d566d048-494a-4406-852c-1f75cab508b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ed744c1-c3e8-49e2-88af-244eb1457e9b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a04ee17-c3f0-4254-a50b-e78fef1421e7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c12e213b-456b-4145-9769-d0739b4537b5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8506b4b5-405c-45d8-9d0d-ab0b5357c165",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bdcc51fc-99e2-4e5d-a6cf-67efa5eabfc8"
            }
          }
        ]
      },
      {
        "id": "239162ba-723d-4ac8-aadf-e58a7d04eff0",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "cda8ecbb-9a44-4ae2-97e1-22d5e2b10d0c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c15525d7-a566-4455-9d47-a6782bf5daf3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1dd7a4c7-d25d-4a18-84ac-fd7cc94d5181",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f69c05-1c8b-491a-8908-3eab78438a27",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "08bb86e8-27f5-4c66-af5b-fa4f7d4aba04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d084347-b63a-49fd-943d-7050148fb4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d0426c4-a9f6-4fd8-8bb5-c640746b6400"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0417d3d4-4f75-485a-832d-0d9236b895c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb96a71e-24d8-480a-8f6a-11dadb5c5eda"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "db46fbfe-9be0-4ea3-85f6-d75ef3db846e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ce4b466-f548-442d-b5c0-24fb6eb38213"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6979fd5f-f913-4899-ba7d-b4b948c118ce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0f62d82e-63ef-41a6-a307-e0f6d8dde240"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ea2e5b7a-955e-477a-9fb2-fd78fafeac2f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9e1b199a-b775-46c3-a884-b158085ce466"
            }
          }
        ]
      },
      {
        "id": "acd5517b-86cb-4c5d-b7a2-d41719575000",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0f84fa63-b332-4453-bd1b-8e3d40a2f6f5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b4d7dd7f-f4bb-4286-9a5f-3fdd7db81542",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "86689194-9f60-46fa-873f-d9d543887b5e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c504a94e-cff1-4a10-9810-3a956308d74c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98b063a0-0b05-4e8e-ad5a-5973c7b178be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a079e6f6-f1b0-4192-a7d8-dc77c19307dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f4eaddf-b586-4a0c-a5cd-67c719fe3ce3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1976c20c-08a2-410c-b907-e872b8a45eb0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9a47ce9-4ebd-4896-b742-7cf04c48e998"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "69b8eee3-2e17-4c2d-a51c-cf31256ed817",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dec79643-3771-4b50-8ab0-58c614287681"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cf7fbb4d-4553-40e8-acec-74d3ded1bf8f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "44cb0c7e-4fc3-43c8-af92-d733d98d239f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "83f3ea1c-205d-425c-817e-2761a98545e9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c6b201ba-7dd9-4050-a120-879c69f1884f"
            }
          }
        ]
      },
      {
        "id": "822e0426-5d7d-421a-8320-0ebeae103af3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "19fa0ab3-9c2a-43ac-b6bf-4203ee24008e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "450360e3-b011-4e35-8b12-07288a79672b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "31f10f7c-a12d-4fb2-8740-75a51ac7a4f8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e40e97-73ce-45ce-b75d-0b68cc0ccc4b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7300b6c-57d5-4510-b22a-c90973309ade"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e771df0-6e73-4a44-8696-453aacc63d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "981d1c8f-f640-48d8-97ae-361c8b53380c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce772cb6-bfc5-42cd-ba69-efdb83c01a2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b67ffb74-5e32-4238-80ab-bf4b6a21ea1e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "49772bb4-e3c3-4436-ac95-a472d8c259a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70cfdcc4-30a4-4cff-b7ec-765f48a1849b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "897dc839-2caf-49d0-85a5-252b57b5e3dc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d70b6f1a-847c-4106-8e78-e8c8a4c83db4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "50b20a47-430d-4580-bcf0-d75ff5ad130c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1bddead7-29d7-4a9d-a908-c6f6e7035275"
            }
          }
        ]
      },
      {
        "id": "f685350c-9852-4882-8ce2-06ce1f88b7c8",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d4d57645-17d5-4786-ad24-dbb040198dab",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "add9a209-d81e-4ac9-a3fb-ea1baaf9e088",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "533291b5-4663-4d13-85c4-424f4a0219c3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ed3688a-ee66-47ba-b1ae-eaabd8bac17d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1f785b6e-8f5f-4ac5-8222-c4965d41e82c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 91.68771929824563,
      "responseMin": 5,
      "responseMax": 8112,
      "responseSd": 529.9065829854253,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1702600587037,
      "completed": 1702600622343
    },
    "executions": [
      {
        "id": "f408a008-1033-472d-ba58-4bdb46138876",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "32713bd0-2aaa-44b6-97ba-f386c6e0a78e",
          "httpRequestId": "18719ace-a57e-4314-8bd8-9572fed8bee9"
        },
        "item": {
          "id": "f408a008-1033-472d-ba58-4bdb46138876",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8e5601fa-0c90-497c-9b99-495707965375",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 0
        }
      },
      {
        "id": "cc0e1911-869d-444b-9e23-c85dae69d437",
        "cursor": {
          "ref": "89eb0eff-bc66-43ec-8fe6-623669cac85e",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "519292d2-a5ef-412f-8697-7e503f3305f6"
        },
        "item": {
          "id": "cc0e1911-869d-444b-9e23-c85dae69d437",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b4287276-c3fc-47bd-8eed-4ad9902cd297",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "827b1780-cd8d-4f82-b283-6c023565a75e",
        "cursor": {
          "ref": "7f02f723-46c3-42af-aad5-58a78bb2bd4e",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "42fbf589-3a37-478d-86cd-fa58d353b91d"
        },
        "item": {
          "id": "827b1780-cd8d-4f82-b283-6c023565a75e",
          "name": "did_json"
        },
        "response": {
          "id": "f6ebe8c4-adc9-40fc-9cbe-e6acade694d7",
          "status": "OK",
          "code": 200,
          "responseTime": 327,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a2b616-e768-47fb-8e88-ff2ed0312c9c",
        "cursor": {
          "ref": "6c3c0f51-fafe-4549-9054-39e5ce342ef9",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d5bf862b-7132-438e-8e29-0b2485df0128"
        },
        "item": {
          "id": "61a2b616-e768-47fb-8e88-ff2ed0312c9c",
          "name": "did:invalid"
        },
        "response": {
          "id": "48fe2b39-caba-46fc-a80e-9b5ad695bcf2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1007,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a2b616-e768-47fb-8e88-ff2ed0312c9c",
        "cursor": {
          "ref": "6c3c0f51-fafe-4549-9054-39e5ce342ef9",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d5bf862b-7132-438e-8e29-0b2485df0128"
        },
        "item": {
          "id": "61a2b616-e768-47fb-8e88-ff2ed0312c9c",
          "name": "did:invalid"
        },
        "response": {
          "id": "48fe2b39-caba-46fc-a80e-9b5ad695bcf2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1007,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8807fd-dd07-42e5-84b8-8a245c52d33c",
        "cursor": {
          "ref": "fd48f424-a367-4b99-9c69-cf69ae691071",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5432399c-9a37-491a-97c8-7c2a2e0405ec"
        },
        "item": {
          "id": "af8807fd-dd07-42e5-84b8-8a245c52d33c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6c15c703-790a-4114-90c5-85cbeff5c1b2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 116,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557039ab-1021-40ec-9883-9f2b8c729349",
        "cursor": {
          "ref": "c1bb0b8b-05f7-4a20-9522-7669456c2cb5",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "bf8b3fcd-87d3-4ff0-b5a3-ae05b34947c7"
        },
        "item": {
          "id": "557039ab-1021-40ec-9883-9f2b8c729349",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "18edeaf4-8f17-454b-b3fe-1ed695384e6c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 58,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacdd172-86fd-4a38-a220-82ad54951178",
        "cursor": {
          "ref": "7aad0763-59e1-446b-a43d-ba4b9344e46e",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "840d1194-c1a6-4d7c-b2f1-ba53afc20718"
        },
        "item": {
          "id": "cacdd172-86fd-4a38-a220-82ad54951178",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "10060975-b794-4c5b-87b7-56a34e316362",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b78f194-bec1-420f-8186-0c4d7714b8db",
        "cursor": {
          "ref": "4d00f110-8eeb-464e-982c-70d0efc8550f",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b7198cfc-e769-4ea5-9dde-266382a156f7"
        },
        "item": {
          "id": "1b78f194-bec1-420f-8186-0c4d7714b8db",
          "name": "identifiers"
        },
        "response": {
          "id": "5cfc4d15-719a-4b4d-bfed-dd18303de942",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce58d2d8-54b2-4d12-b045-a2e917f1a82e",
        "cursor": {
          "ref": "82fc50b1-9d30-4986-87c4-494d0ec8fac3",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8835dc04-bedf-484d-b499-7d7fb5025b97"
        },
        "item": {
          "id": "ce58d2d8-54b2-4d12-b045-a2e917f1a82e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8d032442-c495-4282-84e2-33c6715603b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74784c9b-9055-4a10-be7c-dad58bcbdad6",
        "cursor": {
          "ref": "8bcdc4f1-d92b-4d66-8e86-7a627b36991d",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9bc03824-2061-43c3-9ffe-6e7a343b2bd7"
        },
        "item": {
          "id": "74784c9b-9055-4a10-be7c-dad58bcbdad6",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f8d61bf3-6e20-4241-aae3-01b5a3ea41fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbab02e-b18d-4f23-8c62-6a1824b2967e",
        "cursor": {
          "ref": "7cf086ea-b838-4c1a-a761-08c13e1f13f1",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a3a8949b-98c0-44c8-86d6-cf41bac3b025"
        },
        "item": {
          "id": "5fbab02e-b18d-4f23-8c62-6a1824b2967e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "65dd9746-763e-44be-a204-f27e5b7329ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991634ce-d8ef-4949-9b3d-bc36e8811839",
        "cursor": {
          "ref": "cac5d92c-d977-4238-8d89-b286937bfee1",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8e627c1f-96e5-4b42-a529-bd35aa5c6b6f"
        },
        "item": {
          "id": "991634ce-d8ef-4949-9b3d-bc36e8811839",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7f7b7365-8578-4e6a-b4ea-7ec891838e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "911f1323-9cc4-47f0-a789-d664297e1dbb",
        "cursor": {
          "ref": "11abd97e-dd03-49b9-a547-541db16a360b",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "62a2c08e-6dd0-4f21-b469-92c0ab9cc8a7"
        },
        "item": {
          "id": "911f1323-9cc4-47f0-a789-d664297e1dbb",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "be434bd1-c4f0-44b7-b331-c58879d4ff48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4aebd09-b27c-4dfc-acc9-c42510b28aca",
        "cursor": {
          "ref": "d1fa4ca7-474e-4d87-8fa0-fd487d9e1cae",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "dec35088-ab7b-4dec-8b0d-5ffa44461d70"
        },
        "item": {
          "id": "a4aebd09-b27c-4dfc-acc9-c42510b28aca",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f084087b-4982-4af4-a360-22d8d46d8419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71e3dad-3197-47c6-b0c3-5b916a5f8bb0",
        "cursor": {
          "ref": "7e636f4b-fe5d-4240-8383-a7e1eeb9ddf2",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f5419910-6977-4569-8bc6-6ff27746f616"
        },
        "item": {
          "id": "a71e3dad-3197-47c6-b0c3-5b916a5f8bb0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2ebeb0d5-93bf-46e5-a2d6-54a99fd9067c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8a75bf-31ff-411a-aa55-c250199c70c8",
        "cursor": {
          "ref": "4ea1e163-b20a-4736-98a9-836652cba7aa",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a1c4877b-6462-4ace-9cc1-c1cacaf6cdb5"
        },
        "item": {
          "id": "ea8a75bf-31ff-411a-aa55-c250199c70c8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "560ea616-ed28-46ac-8086-f42d50d3b5f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a2775d-bf7d-470f-87a9-64a165b7bd88",
        "cursor": {
          "ref": "2e574630-f6f9-4efa-ba49-5323de0c3baa",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "676a3836-d76d-47b0-90b0-339245da5a93"
        },
        "item": {
          "id": "41a2775d-bf7d-470f-87a9-64a165b7bd88",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c08ddbbd-504c-42b1-9fd6-c65587c79d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd449058-5a55-4119-966b-72cef8bbe16d",
        "cursor": {
          "ref": "c9128b72-67ce-45a6-ba95-ed33ebd025a9",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e80822b9-0b9b-4ed7-91cf-f19d9daa0cf7"
        },
        "item": {
          "id": "fd449058-5a55-4119-966b-72cef8bbe16d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2e968ce2-0723-47c4-8a20-091b510ef652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3519eb4f-4de9-4f20-8479-aacadbcaf075",
        "cursor": {
          "ref": "f2b1e3f1-07af-4c3c-a24c-8d28904154ae",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "fe2468d0-bef5-439f-a5a7-8b55b635f056"
        },
        "item": {
          "id": "3519eb4f-4de9-4f20-8479-aacadbcaf075",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "18634fd2-2f26-4b30-97ff-237c9a4edf69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818ef6b2-98c2-4d93-8d73-5c69342e4e5c",
        "cursor": {
          "ref": "73fb2cb4-3c71-4398-b615-41ec35020e0f",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6ef4b309-c9e8-46bc-bbf9-3dd9dd0ad3f2"
        },
        "item": {
          "id": "818ef6b2-98c2-4d93-8d73-5c69342e4e5c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "179be7fc-7d8e-438d-aa55-84109a876a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe8481b-398f-4d93-9cde-e91dfcb7cd19",
        "cursor": {
          "ref": "49555585-24c1-4ffd-ad19-8b22ac5e0904",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8c1f01aa-b2a4-4ff2-895e-c9bf5d8ee7e8"
        },
        "item": {
          "id": "6fe8481b-398f-4d93-9cde-e91dfcb7cd19",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c7f6a2a2-f22f-40ac-8e0d-216b36cd4b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1f3664-e128-4e0c-9398-ebc63ebab44a",
        "cursor": {
          "ref": "5522a06b-1026-40c8-8d6f-9ac1d9c18537",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6cfec02e-853e-4212-b47b-05e7ea5ca98a"
        },
        "item": {
          "id": "5a1f3664-e128-4e0c-9398-ebc63ebab44a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "04c2f1a3-89e4-4a35-8cc9-550e397af86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e658f36b-535a-4cbe-87ce-6aa2eae93a38",
        "cursor": {
          "ref": "41239914-0a89-45a7-936f-572675c6a201",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "81c5d2fd-9768-4d51-ac3d-2278f054fb9f"
        },
        "item": {
          "id": "e658f36b-535a-4cbe-87ce-6aa2eae93a38",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "49e53842-f66c-4465-9c51-ac787d35512f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e1e389-57b3-47df-9126-ac46676640c4",
        "cursor": {
          "ref": "3dc2f2da-e586-4a94-9e50-3ec8dd7f6324",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d6421d96-02a6-4489-af7f-3871d2278d44"
        },
        "item": {
          "id": "59e1e389-57b3-47df-9126-ac46676640c4",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f1eedfcd-58ab-4577-8641-a1fac16f56a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee309ae-c2a6-4f0b-89be-647796727e76",
        "cursor": {
          "ref": "ecb57e65-8aa4-4460-bb62-fe1c3cac5157",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7d39d0aa-1343-46dd-b0a2-c16b79ebfc00"
        },
        "item": {
          "id": "3ee309ae-c2a6-4f0b-89be-647796727e76",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "199f4740-87f0-4b0b-a85c-48ac9cf212d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e1a056-89b5-47b4-869f-4575a1764759",
        "cursor": {
          "ref": "7e85c41d-b0b9-4bf5-914f-78750b434065",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e50590f8-cf26-4a48-b89f-496762c032f9"
        },
        "item": {
          "id": "b4e1a056-89b5-47b4-869f-4575a1764759",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "12492923-803e-4348-8351-7b92b11de1f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb71a830-aeb0-4224-837e-8d0684992869",
        "cursor": {
          "ref": "091c60e9-4f3b-44c4-a1cb-de8468909890",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0715926c-76ff-4f48-90a5-728a14bfd56e"
        },
        "item": {
          "id": "eb71a830-aeb0-4224-837e-8d0684992869",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a0ca0320-07ad-41d5-928e-785c11592958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e210139c-708d-4f23-9254-63f7b947d477",
        "cursor": {
          "ref": "0849c125-eadc-489d-a20b-fa2222d6039f",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "63c6ef80-2281-4d92-a200-cdf4009ea3ef"
        },
        "item": {
          "id": "e210139c-708d-4f23-9254-63f7b947d477",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "dfa3f279-36a0-40f1-a9f8-273eb3f34288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6245d70-f66f-49d5-8a06-084a3c14c91d",
        "cursor": {
          "ref": "1b24b594-bed5-4c53-9a92-01499d603333",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b617ca51-4849-47db-b757-3511093c8691"
        },
        "item": {
          "id": "e6245d70-f66f-49d5-8a06-084a3c14c91d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "bf6ade67-ebc6-40da-b58c-06109003273e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2a1b6e-9b92-4454-b69b-e96b4a9552a3",
        "cursor": {
          "ref": "e20f1530-2856-4e2c-8899-ed537ce03617",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4b568b84-1cce-47a6-9712-1ae7f5fc67f9"
        },
        "item": {
          "id": "1a2a1b6e-9b92-4454-b69b-e96b4a9552a3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f5c5f747-9e90-4d15-9403-511bc8dc2b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a81842c-317f-4144-b51b-09c3222e90a1",
        "cursor": {
          "ref": "611e23c0-9a32-4d40-bc41-bfde744f97f6",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "367f72fa-2899-4551-9d38-86f13d24e06a"
        },
        "item": {
          "id": "7a81842c-317f-4144-b51b-09c3222e90a1",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0d4d3b50-3ec2-416e-8109-0a4fd8f29355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401e2b01-2d40-4d23-bb97-887b6564c6f4",
        "cursor": {
          "ref": "086b23ea-bb07-45d7-aaa3-dacf2c9f4a8d",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7326aa5f-b60e-4361-a40c-c3f137d708f9"
        },
        "item": {
          "id": "401e2b01-2d40-4d23-bb97-887b6564c6f4",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1342d99a-ac9e-4230-81a3-277afc382a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b0e2f0-e8bf-4ead-8b53-cdab697711cd",
        "cursor": {
          "ref": "334b1c01-b82e-4697-8adb-174f71aa10f8",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "12c030ac-1ec0-4ee6-ae96-c3439f75176a"
        },
        "item": {
          "id": "89b0e2f0-e8bf-4ead-8b53-cdab697711cd",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d54494e6-6757-49c8-904f-c5a524c36d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b5501a-78d7-41ec-be07-8e789d058ef3",
        "cursor": {
          "ref": "f3c8aadb-d3f2-4a3b-9f98-95c6c8c890e9",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1d82ff07-c9da-4e40-98b0-dfd639db275f"
        },
        "item": {
          "id": "35b5501a-78d7-41ec-be07-8e789d058ef3",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ed2272b4-d1b5-42db-b6d9-8bd50b7ea27d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a53ea5f-d087-49ae-b0c3-1729b7fd3b41",
        "cursor": {
          "ref": "536d4ecf-2212-41a6-bb1d-77be6e8d0a5f",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "bb6cc853-90dd-4852-9d35-d769dbdffa83"
        },
        "item": {
          "id": "0a53ea5f-d087-49ae-b0c3-1729b7fd3b41",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2dc712d9-120b-4b6b-a0d2-3df972427384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c288bf2-4814-4edc-bd8d-c94c12653aac",
        "cursor": {
          "ref": "28164fcd-3cf9-4cfa-8f97-0eadb3f9646a",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "fd18eec4-bd8a-4110-8a2b-ca9c43cb40d6"
        },
        "item": {
          "id": "8c288bf2-4814-4edc-bd8d-c94c12653aac",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "18ff5f7e-4490-4d07-b56d-81e59b2b5067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3e9ecb-323a-43e5-b3ad-8bc414a7811e",
        "cursor": {
          "ref": "77110d6b-358e-4645-b415-466beb2f3d8f",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2be3ce0c-2838-4ace-be12-bc1f5545892a"
        },
        "item": {
          "id": "dc3e9ecb-323a-43e5-b3ad-8bc414a7811e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "07e28c21-c72b-4ed8-bb79-98acfb1ab6b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d10712-7022-47b7-86d5-5a1bf5c0b082",
        "cursor": {
          "ref": "70a61e3a-4d94-476b-8966-e32df2262ff2",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "00974643-f604-426c-9b9a-e5ae5f003fae"
        },
        "item": {
          "id": "d9d10712-7022-47b7-86d5-5a1bf5c0b082",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "92640e37-1c14-4dd1-8592-9f0891d3999b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b75938-3a9b-43e9-9c08-f47e86b5ba08",
        "cursor": {
          "ref": "970988f5-4a8f-4841-ba4d-efd3d8b0f1c2",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7876d927-7bbc-49fc-8974-e9a25caeb05c"
        },
        "item": {
          "id": "a8b75938-3a9b-43e9-9c08-f47e86b5ba08",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3ca902e6-1040-49fa-a476-966091a0e1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c39419-ee35-4fb3-8a7e-e7cf5a7eea2f",
        "cursor": {
          "ref": "c9c2b323-c826-4320-9ffc-83038a4477f1",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "fc9abe01-c959-49fa-b9da-a2eb28c072e2"
        },
        "item": {
          "id": "b6c39419-ee35-4fb3-8a7e-e7cf5a7eea2f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "12937aca-72a4-40ec-9cca-1a8cf1de8292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a494400b-9ade-46be-9ed7-0afa5abef19d",
        "cursor": {
          "ref": "174172ee-d91a-4875-a0ca-493a312a10bd",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "dc9fbcc6-30e8-451e-9476-eb144e23d0dc"
        },
        "item": {
          "id": "a494400b-9ade-46be-9ed7-0afa5abef19d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8694e655-2c6a-4570-ac39-cf463dfd8ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d422b900-d8a0-44e0-8e18-d59d2722940b",
        "cursor": {
          "ref": "b773cc20-abcd-4a8a-b5cc-b159eec78b1d",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "74467ae0-2b98-4ce2-9351-a6dfcd539407"
        },
        "item": {
          "id": "d422b900-d8a0-44e0-8e18-d59d2722940b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5811c44f-e5e4-4322-a9a9-bc0822afe456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afbf985c-4013-4cc0-97d0-2fb1425daf61",
        "cursor": {
          "ref": "d557a1ca-7e37-42d9-8df3-08307c24e019",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "85b82097-29b1-461e-b32f-349052d7d24f"
        },
        "item": {
          "id": "afbf985c-4013-4cc0-97d0-2fb1425daf61",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2b358c9b-21e3-42af-9a98-45da5b4d2c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "040c0d57-ed9e-4a01-9d9e-5f8db9e7825c",
        "cursor": {
          "ref": "54fdb3be-6d59-4161-8986-1a1fb7e6b35c",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "bf242d56-9ae4-462b-acb1-dab126c13274"
        },
        "item": {
          "id": "040c0d57-ed9e-4a01-9d9e-5f8db9e7825c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a1969bf4-c01e-40d5-ace4-366cb76cc004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93e578a-e1b0-42f0-9e4e-d46992e76ffc",
        "cursor": {
          "ref": "58b82b15-2c18-4f92-ad1e-68b8dba4ee87",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d94b04dc-bc6c-498b-abb3-c910a9c2d866"
        },
        "item": {
          "id": "b93e578a-e1b0-42f0-9e4e-d46992e76ffc",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c9e7d63c-3d79-4ac2-80d5-c4ef4b6ff4e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48ec196-4236-47f4-95d6-052b8df70a2f",
        "cursor": {
          "ref": "6a659800-9bd9-48ec-8c50-d991c9209f70",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "90a5c979-eea1-4100-9376-283b767b742a"
        },
        "item": {
          "id": "e48ec196-4236-47f4-95d6-052b8df70a2f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "4ec062af-82e9-4299-a128-47481cbbb740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa757257-203e-42e3-9176-e23a1cac56af",
        "cursor": {
          "ref": "5de14205-d928-4041-bdbb-3e1a64a22232",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "046fb4a2-81c6-4fd8-9f7b-c051cd08f48f"
        },
        "item": {
          "id": "aa757257-203e-42e3-9176-e23a1cac56af",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4316c77a-ee84-47ea-b6b0-c85a15f2745c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6443c1-ca91-486b-9bf7-2c88e847df2a",
        "cursor": {
          "ref": "b49a4ef4-0f84-4ec9-898b-5f6e4898290c",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "83c367ff-2df8-48e7-8d56-bd798082bf55"
        },
        "item": {
          "id": "6a6443c1-ca91-486b-9bf7-2c88e847df2a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2f11110e-7cc3-4032-ae3e-a2249c8791ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc401e95-c0f1-4cf0-89f2-f3a9a63e5169",
        "cursor": {
          "ref": "49e7ab74-c28a-4509-9d00-1e0a2646d66d",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d3e4e2ec-cdd0-4eec-b86f-7db0ac295ed5"
        },
        "item": {
          "id": "dc401e95-c0f1-4cf0-89f2-f3a9a63e5169",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7d1ddb21-34d8-4a90-9b49-c94e7bba1971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b12ca3-5a0a-4233-906d-01dba1c108e8",
        "cursor": {
          "ref": "dcc27861-afdc-4801-8317-2c0dbdbc204d",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2d8f8d35-a3b6-443f-9ec0-98bed19e1a1a"
        },
        "item": {
          "id": "05b12ca3-5a0a-4233-906d-01dba1c108e8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e455ac15-58d0-45ee-b2ea-41d65ac31baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442a0c47-b5da-4240-a604-c696c6685005",
        "cursor": {
          "ref": "1eaef910-e5bf-4e97-a2fb-b2f9a6bfd72c",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c683fd94-432b-4b18-94be-7583e42a749e"
        },
        "item": {
          "id": "442a0c47-b5da-4240-a604-c696c6685005",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "59bdb8ff-d2b1-4aec-ad58-9e801e92b67d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b29ddf4-1621-432c-869e-47b319dee29a",
        "cursor": {
          "ref": "a091d39c-2da4-46fb-87d7-523b9167cef5",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d7ccf2f2-8571-453e-94af-b33f8f142955"
        },
        "item": {
          "id": "5b29ddf4-1621-432c-869e-47b319dee29a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "506a29e1-0f50-4d80-88b1-678f18be23f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "718b43bb-0525-49ef-835b-7ffe7d018359",
        "cursor": {
          "ref": "a8935ebb-062e-40d0-b8fb-8916a2d0158c",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "60ec9018-27b9-401a-a5a1-2270236528df"
        },
        "item": {
          "id": "718b43bb-0525-49ef-835b-7ffe7d018359",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c4ffde23-917b-4b38-bbbe-b93cba781637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9dd22c-98b4-4371-a313-9208192d5ede",
        "cursor": {
          "ref": "d1099bb4-1d34-412f-87a0-115c0c89e33e",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1952868e-9a75-473a-a1e1-d97a6c71474f"
        },
        "item": {
          "id": "cf9dd22c-98b4-4371-a313-9208192d5ede",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b634ab52-3db7-47a2-b966-0aa56828bd6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85702dc5-f035-484a-b176-f72f6bfba215",
        "cursor": {
          "ref": "2e15d65e-4a56-4d0c-a5fe-b2758f9b1223",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "0a723b39-204b-4cbb-8aea-7c15ae1b33f5"
        },
        "item": {
          "id": "85702dc5-f035-484a-b176-f72f6bfba215",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5b150346-0647-439a-a28c-e1fc86b71b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d37fd4-d975-405b-9c82-5dd82db5e325",
        "cursor": {
          "ref": "4268ea9d-595c-41b2-8f31-8290e7f7d9ab",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1084e86b-c9be-4e66-b550-eb06e8425649"
        },
        "item": {
          "id": "a6d37fd4-d975-405b-9c82-5dd82db5e325",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a9c8e588-0818-4d31-82ac-cc555fc8edd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3adb7c1-e7ea-420c-b20f-b0307224409e",
        "cursor": {
          "ref": "d6cce59b-7308-42bd-b0c2-edc5e233d808",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "fdd03513-b643-446c-b1b7-f5ad76924e60"
        },
        "item": {
          "id": "c3adb7c1-e7ea-420c-b20f-b0307224409e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d8497f76-899a-4e42-b4d1-80ee980d83d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a717cee1-77aa-4903-adbf-641253a359cd",
        "cursor": {
          "ref": "97062035-a885-4542-86de-af40068c0c11",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "57577b18-bd7d-459c-984b-b579ba0c40b6"
        },
        "item": {
          "id": "a717cee1-77aa-4903-adbf-641253a359cd",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3d11c573-8439-4360-90d8-7087c469f5bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "804f5267-41c7-4ce8-999a-84adea5547b2",
        "cursor": {
          "ref": "ed4a38bf-2a7c-419b-82d1-230740dc4e89",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "99e1eefe-351c-4b57-9ac5-422eb7b5081f"
        },
        "item": {
          "id": "804f5267-41c7-4ce8-999a-84adea5547b2",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e4e80296-7333-47cd-99aa-f40f81115aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b7428e-8b58-45bc-9d2c-382ba9eccbc9",
        "cursor": {
          "ref": "ad3dbde8-ae03-46fd-9445-6cbfc25f387f",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "00e8836e-5120-46b4-9b56-3046cc174628"
        },
        "item": {
          "id": "b3b7428e-8b58-45bc-9d2c-382ba9eccbc9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c3f22caa-d719-4dfc-b466-18045cd06652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc43dc94-611d-4e8d-a9df-aab6f4b41eee",
        "cursor": {
          "ref": "ac83ffff-3db5-41cb-8ee7-d814dd5ea2b9",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "69ea8535-7cb8-46da-a472-6c2025190d16"
        },
        "item": {
          "id": "fc43dc94-611d-4e8d-a9df-aab6f4b41eee",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f4eec522-48a5-4365-93cf-c421cb901133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc0512b-119d-477f-ba4a-cfdd1915af93",
        "cursor": {
          "ref": "554f6f83-04e1-4c57-b398-974a666b6398",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ffefbb2e-f5e2-4c18-9783-df56fec09122"
        },
        "item": {
          "id": "3fc0512b-119d-477f-ba4a-cfdd1915af93",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c1d37260-e115-46d2-be05-13c84e246313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4a231b-65a0-476e-908e-dafb2bef9f01",
        "cursor": {
          "ref": "5a803884-e478-4c78-835e-fac36aa6d777",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a896f37e-bd78-4bb1-9bf7-4eaf99610b64"
        },
        "item": {
          "id": "ba4a231b-65a0-476e-908e-dafb2bef9f01",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "105b2555-76ea-4a6f-a330-7909c8aeb295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a86283-f0f6-4cef-a8ec-85d9f0bd5c77",
        "cursor": {
          "ref": "5b3e4158-e4cc-4b04-b222-6475dca7cbcd",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "adbc8644-8b14-47bd-8b08-abebde62e621"
        },
        "item": {
          "id": "20a86283-f0f6-4cef-a8ec-85d9f0bd5c77",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "23544785-ae6c-414a-848e-9a5330a1b5d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86d7737-6f73-429e-853a-9dfc14ba3a7a",
        "cursor": {
          "ref": "b0e1767f-d261-44b7-b3b1-7609a42b2887",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b3331084-952c-40b7-beec-68a67ab9b14e"
        },
        "item": {
          "id": "a86d7737-6f73-429e-853a-9dfc14ba3a7a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7217670e-62ec-4b13-9d97-80be937924b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b151a94a-2bde-4da5-b2b9-eecb939111a7",
        "cursor": {
          "ref": "5b81043d-221d-4f0d-9e8b-c335ff3a66b9",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e24980d9-a7cd-4d99-87a8-ac98147314ec"
        },
        "item": {
          "id": "b151a94a-2bde-4da5-b2b9-eecb939111a7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "bd4f7163-e1c4-4b42-997d-f334f0e69cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8109802-7714-4a41-89b0-9dea0439466f",
        "cursor": {
          "ref": "ac1bcc34-3755-42bb-a883-b53d2a8dc382",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "be852223-0836-4ad3-a072-044c8a46fd02"
        },
        "item": {
          "id": "c8109802-7714-4a41-89b0-9dea0439466f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e7d9c687-2564-4c7a-bca0-99bde27b4ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4712cbed-b9f4-432b-a3bf-2281596b1fc8",
        "cursor": {
          "ref": "89e7def8-7380-485e-8421-9c721a4150c5",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "481e73ea-8bd3-4419-96c4-3ae12291e1f0"
        },
        "item": {
          "id": "4712cbed-b9f4-432b-a3bf-2281596b1fc8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6be88405-7136-4ac9-a76b-188d49c1f19e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82020229-8d34-40ad-be76-907795aba3ed",
        "cursor": {
          "ref": "d6a72b68-495c-41b4-97b1-fdd8b6ca103f",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a5a8ae89-9f7c-4df3-b6dd-fa81fdeacd0b"
        },
        "item": {
          "id": "82020229-8d34-40ad-be76-907795aba3ed",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6668a738-2859-4360-8052-e7a839cf79a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd6b547-cc0a-4e91-b3d4-aaee28dcfee6",
        "cursor": {
          "ref": "31ae7328-6e30-4f5a-9798-08f4f52d42c2",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "af6f7c97-9b11-4950-9eef-2dcf19d1587c"
        },
        "item": {
          "id": "6fd6b547-cc0a-4e91-b3d4-aaee28dcfee6",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "16f9e32b-5b05-4906-b663-956b24db23b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc415b4-5acf-4aa4-bed3-64cf51e5cc3a",
        "cursor": {
          "ref": "54ce6593-7422-4d78-b755-7d54cb3473af",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5e22a7d2-79ef-4708-95f6-2ab5a1b99cf9"
        },
        "item": {
          "id": "6cc415b4-5acf-4aa4-bed3-64cf51e5cc3a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "20f36ea3-cfb4-4ae5-aead-1b10b28a07a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a306053a-39f2-4b69-8539-27493aebc7e3",
        "cursor": {
          "ref": "a90096fc-ef6c-4e76-b014-c62d5b12166a",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e2f36d6a-3812-4405-a41c-3cc95650c4b7"
        },
        "item": {
          "id": "a306053a-39f2-4b69-8539-27493aebc7e3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "24b81ef4-94fc-4f0b-9be4-698b791a9505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b5db13-eacf-4b1a-8db5-94420c37c112",
        "cursor": {
          "ref": "72235199-6fbf-468c-bf61-c815a0f2c266",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0145676a-a133-4c8b-bd7b-2acf4d252996"
        },
        "item": {
          "id": "21b5db13-eacf-4b1a-8db5-94420c37c112",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "eeb92190-a0e1-4dce-b2a3-c097e91ab3d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "551ccf35-4bf4-486f-98f8-a5836554c412",
        "cursor": {
          "ref": "2643b61f-5414-4b80-a73e-78169e714340",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1a023d9d-f553-4838-9926-e4eaa799e558"
        },
        "item": {
          "id": "551ccf35-4bf4-486f-98f8-a5836554c412",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "af192eb6-760d-4f40-98b9-7a04fa3b0687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6d136b-c6d2-47ae-a703-ae47719a76d2",
        "cursor": {
          "ref": "661743a9-9ed4-4ff2-a076-9059f221ba41",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "15e17ca6-7296-4431-8907-8404b0f66c17"
        },
        "item": {
          "id": "9d6d136b-c6d2-47ae-a703-ae47719a76d2",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "63337f29-22f1-4fe3-9c52-f043468194ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c107c4cd-8e6a-47e0-9707-f27e178d6128",
        "cursor": {
          "ref": "4ce89e03-0890-453e-b6a8-d4d433ff2445",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "af3026d3-9bec-4979-abef-f70316a7a6c7"
        },
        "item": {
          "id": "c107c4cd-8e6a-47e0-9707-f27e178d6128",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d5968101-699d-4432-a3ff-c593d667ad24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47bd33d0-40e1-4355-ad27-dcdce475a637",
        "cursor": {
          "ref": "7e9dbf19-a2bd-40b5-aff7-2da8880e5271",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a9b55257-1638-4e11-a1b7-de9a997a66d4"
        },
        "item": {
          "id": "47bd33d0-40e1-4355-ad27-dcdce475a637",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d72cb92a-1329-4df7-ad1d-9208a9a05576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44a0f8e-67dc-444d-83b1-122be4656d35",
        "cursor": {
          "ref": "feb0d705-7881-4ad3-bfe8-1ced12b6b6c3",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c93d6d36-c642-40b1-aa38-effe11d832d0"
        },
        "item": {
          "id": "d44a0f8e-67dc-444d-83b1-122be4656d35",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9ce0647c-b7be-4320-8838-ada8952d07fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7812b4e-9a5f-44e3-a280-5c95647ca467",
        "cursor": {
          "ref": "111e70b1-ec1e-4398-8c39-0bf9528fb356",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4e016ae3-8f1b-4358-95aa-95b374418095"
        },
        "item": {
          "id": "c7812b4e-9a5f-44e3-a280-5c95647ca467",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a68cbd5d-35ae-4241-b9de-42e4b9c66e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38b5f1c-6b51-4abf-a16f-7c1d8b6ecbea",
        "cursor": {
          "ref": "559556d0-2558-4e2a-9f68-3f155e1e54d2",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e9213084-b488-431b-a85b-532af9198b81"
        },
        "item": {
          "id": "f38b5f1c-6b51-4abf-a16f-7c1d8b6ecbea",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "561c6f00-7924-41c1-8e0f-d0f2ed6ba862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61527877-e6d2-4495-838f-ea6bc7c4f3f6",
        "cursor": {
          "ref": "edd8f210-092d-4019-8081-687c2882b698",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "43289d48-a5e9-4d7e-a202-92b155f85c5d"
        },
        "item": {
          "id": "61527877-e6d2-4495-838f-ea6bc7c4f3f6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ce7ef957-5d63-4d4a-8a7b-0126ed5408b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2a3b04-3c3b-4773-82a0-9d8b7ea16661",
        "cursor": {
          "ref": "c6f81002-93f5-4cc4-a24d-b426ec79b42a",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6ff6649d-0c11-4eed-8259-43e8d491dd9f"
        },
        "item": {
          "id": "4b2a3b04-3c3b-4773-82a0-9d8b7ea16661",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7240fd7a-52f6-4b57-8879-de0785af7349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b844ea87-ae3c-4a0b-82cb-9d6991961c21",
        "cursor": {
          "ref": "8e937606-f707-4b0b-b4ec-b46fdcc0fc87",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d51ee44a-66b6-4629-b2ba-1833cdb3af59"
        },
        "item": {
          "id": "b844ea87-ae3c-4a0b-82cb-9d6991961c21",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "74211a74-e883-4b06-a799-14d67b02c9ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b626bc20-80dc-47bc-94a4-a516976506ee",
        "cursor": {
          "ref": "e80fc396-b972-420d-a37d-7dc2c2113b99",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e9d6b86c-6cc4-4eff-88b4-0ad8d17834be"
        },
        "item": {
          "id": "b626bc20-80dc-47bc-94a4-a516976506ee",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "fc2f9d94-276a-40e6-ba92-8695d806a8b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2261dcc-37d6-461a-8cac-0584f1ece424",
        "cursor": {
          "ref": "0803674d-0aa5-45db-bc25-0b2ad35e0930",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4cb00b36-837d-4647-8317-45178961f629"
        },
        "item": {
          "id": "d2261dcc-37d6-461a-8cac-0584f1ece424",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "25ba2e53-fe0e-41ed-85d8-7a5152b5770d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60db48f0-2fd4-4997-8946-ce44075d84a1",
        "cursor": {
          "ref": "be7dfecf-d0cc-4b37-96c8-29c48e6b24fb",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7c8e5344-e435-4523-b3df-ff6439824f54"
        },
        "item": {
          "id": "60db48f0-2fd4-4997-8946-ce44075d84a1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2ceb0c9e-6950-4304-98c6-e38cb2e87583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd1901c-d07f-42dc-b1ba-da32af5e4ed1",
        "cursor": {
          "ref": "14f29035-0c49-443a-8d9f-0379446fd653",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2314cd80-fafc-4386-80a7-3bbdb445611b"
        },
        "item": {
          "id": "3bd1901c-d07f-42dc-b1ba-da32af5e4ed1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "963901c0-2300-4e84-a446-ad4cc0e5dd75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68530e05-0354-4f12-b9a7-0f60bd830729",
        "cursor": {
          "ref": "d1f61d89-75f0-429f-b0af-51575d956369",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0c481055-dfad-448f-b3ac-69327b21dfd8"
        },
        "item": {
          "id": "68530e05-0354-4f12-b9a7-0f60bd830729",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a6b1a912-47d7-455e-9cb0-58c56724f97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 191,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e488bc7-7eb2-487c-a3ee-2b3a6dbf5e9a",
        "cursor": {
          "ref": "365a0808-cb32-4643-a368-c87faaa4980c",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "925c5e59-5a7f-4f2b-a5bd-d85ae5e5ef1c"
        },
        "item": {
          "id": "4e488bc7-7eb2-487c-a3ee-2b3a6dbf5e9a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7d45444e-6e67-4d97-a001-49164397f9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6fab7e-50e4-42ae-b298-e0a244ac6496",
        "cursor": {
          "ref": "3c7110a6-b080-47a3-bed0-b9e7396858ff",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "db94b2e1-f2cb-4273-b2f4-2cd512dadde5"
        },
        "item": {
          "id": "da6fab7e-50e4-42ae-b298-e0a244ac6496",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3b8ab205-1b54-419e-bfef-3b716e0700db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee51fb7d-ffbb-42c8-8ee3-6975817c85d7",
        "cursor": {
          "ref": "7b00700b-c881-4fd0-933a-e379188d0702",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e87a8307-0afb-455e-a752-82e76efd4c77"
        },
        "item": {
          "id": "ee51fb7d-ffbb-42c8-8ee3-6975817c85d7",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4d34bc29-25a0-4358-85c9-bd25cc96638c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d070b66f-3060-4d8e-bf8a-5437b68dacad",
        "cursor": {
          "ref": "7547790d-a1e0-4f77-90de-4d5aed4a1b2f",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "52302e57-fbd5-48e0-b0bd-2196698ced10"
        },
        "item": {
          "id": "d070b66f-3060-4d8e-bf8a-5437b68dacad",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "6a654c2c-19cd-4ee8-b24b-c0cd4b518e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cfb0f07-45eb-40fb-b3aa-e8db005c1c67",
        "cursor": {
          "ref": "01fb8eab-61eb-493a-818b-9e4b3271c025",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "95505792-d69f-403a-bffb-1810909a7b77"
        },
        "item": {
          "id": "3cfb0f07-45eb-40fb-b3aa-e8db005c1c67",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8f3dbf6c-2c51-4507-a9f4-c04563913b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce9e51f-22e7-4a9a-816c-05f04c3c2b56",
        "cursor": {
          "ref": "0cfe0041-a15c-4e68-9380-819d0e2acd45",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a1b0f041-0ecb-46c5-b96d-2d37619e1091"
        },
        "item": {
          "id": "8ce9e51f-22e7-4a9a-816c-05f04c3c2b56",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "50a8be7e-ea35-466e-9477-6efc274c42b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e40b396-223f-4e14-a53e-72204a3e94a2",
        "cursor": {
          "ref": "d617bac1-eae4-4958-89b3-e5fd701711e3",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2c9d536d-a44d-4e52-a0c2-4abf1e2b1392"
        },
        "item": {
          "id": "7e40b396-223f-4e14-a53e-72204a3e94a2",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e7bb36be-860d-41b7-90e1-7a14305d0ccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a95db4-4914-49a9-a4f9-d2c688104ba7",
        "cursor": {
          "ref": "211fad88-2b69-486e-9297-b87153328058",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "53fe9095-c6ba-4498-b334-0b55a5db5461"
        },
        "item": {
          "id": "92a95db4-4914-49a9-a4f9-d2c688104ba7",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9143fcbf-82c4-42ea-9605-dacb32671ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a37088-4f27-45bb-8204-16cf55115e38",
        "cursor": {
          "ref": "26674875-99db-45b7-809f-f22975c67441",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4b436bf8-a985-479b-9122-758b35693dbd"
        },
        "item": {
          "id": "b5a37088-4f27-45bb-8204-16cf55115e38",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "04efbe13-57e6-4c42-9d95-3c1be0da8391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442e9d53-4682-43b3-b480-9ceee2762d67",
        "cursor": {
          "ref": "99e16d61-a027-477e-a9d8-003ad2d729a4",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "114e2bb1-81fa-44e7-80ec-a24b6d6a8641"
        },
        "item": {
          "id": "442e9d53-4682-43b3-b480-9ceee2762d67",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3ae9053d-9752-4ca4-a15c-3aa2ec68002f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372d9887-927c-421c-98c4-56e3de2f19ba",
        "cursor": {
          "ref": "40abf9c9-05fd-426c-b635-4328cc298353",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "97017b92-e365-4177-a482-e277020f3fb4"
        },
        "item": {
          "id": "372d9887-927c-421c-98c4-56e3de2f19ba",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "90dad012-b0c8-4191-96e4-c61b898c81c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27bd557-c7f4-47a1-9ff9-df2bbd203583",
        "cursor": {
          "ref": "1bce4f49-8852-4769-a2d5-f9b9624dc8c8",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "33ac94f5-9947-4e50-bd79-f0c3a21f3058"
        },
        "item": {
          "id": "b27bd557-c7f4-47a1-9ff9-df2bbd203583",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "97f92238-e940-4042-9608-dc8540028865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242f7535-e23c-4654-8ac0-c10dbed4e82c",
        "cursor": {
          "ref": "67b567f6-42bd-4267-895e-fa6f6895b2a8",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ec730857-8abf-4951-a8f3-3a52dffcb4ee"
        },
        "item": {
          "id": "242f7535-e23c-4654-8ac0-c10dbed4e82c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8fdd67bf-9379-4593-9281-7ac25e058f3d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b892c2-7330-4bfd-9877-5cb17edff3d5",
        "cursor": {
          "ref": "29748268-d4e0-462e-a93c-ad547cbbc2b7",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3615700d-b1f4-4e1f-9721-48092ed8ec56"
        },
        "item": {
          "id": "50b892c2-7330-4bfd-9877-5cb17edff3d5",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "2d5f5608-a07d-4fd0-b062-f27a64ba1644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "d7cfe432-c487-4f09-b953-b06dabee1091",
        "cursor": {
          "ref": "6dd167a2-b15a-4283-ad0f-cc600c3a06bf",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a655deed-202e-40a1-b38d-368652fc7e7e"
        },
        "item": {
          "id": "d7cfe432-c487-4f09-b953-b06dabee1091",
          "name": "credentials_issue"
        },
        "response": {
          "id": "32cba431-dd07-4187-a12a-cf4a117c124f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "82880a9d-c2ea-473e-ab93-925cc9ebebfb",
        "cursor": {
          "ref": "0ab11f46-c7c2-4688-9426-490a2104aa39",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "30b314e1-37d9-495a-869c-4e8118709fc6"
        },
        "item": {
          "id": "82880a9d-c2ea-473e-ab93-925cc9ebebfb",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a6cfac8a-09ec-4991-b0f7-ad2aaa067e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "941668db-f3cc-4037-b7ca-eed566c3c701",
        "cursor": {
          "ref": "3d35e8d0-c59b-4eb2-93a3-e1550070c65a",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "213053f8-b070-4958-b919-60d6c4732884"
        },
        "item": {
          "id": "941668db-f3cc-4037-b7ca-eed566c3c701",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0a65864c-f932-4d73-9ff0-54c00c820736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "eeb9ffb9-aefe-45b1-905f-38d2a5052b5e",
        "cursor": {
          "ref": "abe2bc37-3421-4a41-a155-ccf4270664f9",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1c25e2ea-cce7-45bf-9eac-445c91931db2"
        },
        "item": {
          "id": "eeb9ffb9-aefe-45b1-905f-38d2a5052b5e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b226a3de-7e60-4c1b-88fa-6f2dd6dcc293",
          "status": "Created",
          "code": 201,
          "responseTime": 8112,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0c05b2-2ab0-481c-8098-53e38ae30734",
        "cursor": {
          "ref": "32f39690-c8d8-48c0-86b8-aafacdfea10e",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "76dddc27-bd8a-4de2-aecd-872847484176"
        },
        "item": {
          "id": "4f0c05b2-2ab0-481c-8098-53e38ae30734",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9fd38e81-9575-46c0-b729-2c8d6fc2b975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "d9dedb05-638c-4833-936b-4db6d050947b",
        "cursor": {
          "ref": "68b9aebd-3b64-4241-8865-34164aea5488",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "620eaa48-e314-446d-a66c-948894b31993"
        },
        "item": {
          "id": "d9dedb05-638c-4833-936b-4db6d050947b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "42aed162-6411-421d-af83-65e712dd2b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "bdb3cae2-5eba-4bc9-a3d8-abde30969089",
        "cursor": {
          "ref": "67bf8aa0-e1e7-47b0-8d94-c64a40ad5925",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f0d5153c-7d4b-480c-9369-058bb891aa8f"
        },
        "item": {
          "id": "bdb3cae2-5eba-4bc9-a3d8-abde30969089",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "539e42f7-4528-4fd5-95a6-24d08daea5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa295fc-a4b7-46f1-a700-4b67c5559698",
        "cursor": {
          "ref": "4684feac-c116-499f-be54-08258ddc399d",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e5abcfae-6808-46b7-ac71-4a58140c980f"
        },
        "item": {
          "id": "3fa295fc-a4b7-46f1-a700-4b67c5559698",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e33f9347-f7a3-403e-9bf8-7c7ea1639dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4eb7882-07d6-4722-8b3e-0a07870dfeff",
        "cursor": {
          "ref": "4f278f7a-8c89-41ad-880e-624047168c90",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "aa0ee465-dc05-4ed7-9faf-6f14e93def12"
        },
        "item": {
          "id": "c4eb7882-07d6-4722-8b3e-0a07870dfeff",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b4ff3c61-0b20-4804-bc1e-1c69efd8bb83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3309c25b-c558-4048-9e9f-83d03297ebb4",
        "cursor": {
          "ref": "a80e1840-ae58-4167-b0ea-a87ef03fc281",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "05682a1f-a979-4352-89ba-e337d59ab405"
        },
        "item": {
          "id": "3309c25b-c558-4048-9e9f-83d03297ebb4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "de4ef3df-fa81-4f48-bb6e-0dda9a6199f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2dc6c0-9f0c-408c-b0fb-011a8b4e3a43",
        "cursor": {
          "ref": "9d3b445b-0bfe-4f93-94ec-2223dc3e6ef1",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7174dd52-3d94-4872-91b1-c455c2b117c1"
        },
        "item": {
          "id": "5d2dc6c0-9f0c-408c-b0fb-011a8b4e3a43",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2d7ead77-1b92-44f2-97fa-0c75a3be6c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b04793-7155-4b33-9612-7c31b325b7e1",
        "cursor": {
          "ref": "de33ea10-bc86-4839-991e-1d8f6011ba9b",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "659c727a-d2b4-4559-938c-a27c00eef329"
        },
        "item": {
          "id": "19b04793-7155-4b33-9612-7c31b325b7e1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "21150954-1195-429f-8f35-4544119ce9b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa48458c-bda4-4588-8298-119230f63b7c",
        "cursor": {
          "ref": "abdcede5-1053-467f-8217-ec1d9207f6c4",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "384f80e1-d0d8-4275-809d-fc541daf86b6"
        },
        "item": {
          "id": "aa48458c-bda4-4588-8298-119230f63b7c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "dd303b40-9b86-45af-a8dc-e60c6a292c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad81af6-a4dc-427d-8a75-6065e9383f8f",
        "cursor": {
          "ref": "20ceb3d1-f086-4edd-b887-daa63e8449ec",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "062c6f03-286c-4a49-a438-8ff3dacfe940"
        },
        "item": {
          "id": "0ad81af6-a4dc-427d-8a75-6065e9383f8f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8c1270b5-d6df-40b6-a4a2-0d9fd97ed5f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca42dc1-7aba-4aed-91b8-564a1644d5e9",
        "cursor": {
          "ref": "5a9a03f6-ce1e-4fba-80e6-8e871f78aa2f",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "248ed22d-bafe-40f6-a69b-083e078fed4d"
        },
        "item": {
          "id": "8ca42dc1-7aba-4aed-91b8-564a1644d5e9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bdcc2e68-16d2-4b48-b2f0-15e576b730a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ca9838-c590-4ca7-a9a8-79575c4f3585",
        "cursor": {
          "ref": "5035c349-c00a-47b1-b8ad-b8ab50a83357",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "11756e3f-068c-4819-a171-5fbd87727a6b"
        },
        "item": {
          "id": "b6ca9838-c590-4ca7-a9a8-79575c4f3585",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "df0a9760-2848-4917-aa8c-077f97d7b405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a248a81-0ce2-47fa-af30-8b96ae277e5f",
        "cursor": {
          "ref": "7839b20b-5ad5-4e7d-8911-aace806fd6b8",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "95687663-ca1b-4ecb-a5f8-a86b0e43efcb"
        },
        "item": {
          "id": "3a248a81-0ce2-47fa-af30-8b96ae277e5f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "662a8e63-eb82-4b63-9a2c-662a1a1310e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c71e9f-3a73-415b-8e2b-b9028680f199",
        "cursor": {
          "ref": "de6aa556-3fef-424b-a510-e8100a359440",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "41ca004d-ddb2-4f40-9a1c-aa286c7d14ac"
        },
        "item": {
          "id": "f0c71e9f-3a73-415b-8e2b-b9028680f199",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1cb0cc11-c84b-4a52-8400-b604f4070644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e7072d-0f09-4190-9306-ae64217206c0",
        "cursor": {
          "ref": "4c87a283-794d-4e87-aa52-6ddc284b0817",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e5c55545-1d68-4ce0-a509-f4ecad74bf4e"
        },
        "item": {
          "id": "01e7072d-0f09-4190-9306-ae64217206c0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "15996f11-343c-4caf-9ac9-5709eb86a5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b0d252-0b74-4bd5-8912-955a2bcf3974",
        "cursor": {
          "ref": "a9866a0e-3b74-41ed-b2ba-af7d0743bb1c",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5fbbaab4-ee8b-4c61-9f52-b5ee83c9a005"
        },
        "item": {
          "id": "e3b0d252-0b74-4bd5-8912-955a2bcf3974",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f4142631-76eb-4fc4-aa05-6e7218d7b56e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3eecbe9-17c9-44b3-9a29-5fad480a06c1",
        "cursor": {
          "ref": "65a314e5-2d4e-4890-99b1-709686d4403d",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "26fc718f-5801-45f3-a5c0-4a9119fca8ca"
        },
        "item": {
          "id": "f3eecbe9-17c9-44b3-9a29-5fad480a06c1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6c991d88-936e-4dbb-98ee-71429f18ae27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e3a50b-eee8-44eb-894d-462a1ec9f17f",
        "cursor": {
          "ref": "0f8a602f-9542-4ae5-87e0-bb81fc45adc2",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "59f5b4a4-aaeb-47d3-94fc-51f61ad785de"
        },
        "item": {
          "id": "f6e3a50b-eee8-44eb-894d-462a1ec9f17f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2b062010-bb0f-4e45-8b67-9ee6221dec2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe4337b-0f46-4f9f-b7e0-52692c0faec6",
        "cursor": {
          "ref": "1e385dab-8703-4da3-becc-55ef49490dd8",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "53623989-8e29-4ed0-8611-3ed69d17bc16"
        },
        "item": {
          "id": "2fe4337b-0f46-4f9f-b7e0-52692c0faec6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5cab142a-4f17-47e1-88d0-db2c18d9a627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f646af-fe8a-4714-adbf-ac058ad6dbd5",
        "cursor": {
          "ref": "850cb9a9-cefe-4c90-a111-af88f2953d68",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f1c5ae31-c897-412c-ad2c-01cd8e8e7b06"
        },
        "item": {
          "id": "a8f646af-fe8a-4714-adbf-ac058ad6dbd5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0f873e0c-dfbe-4703-8f4d-7683e1c31538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6fde30d-903f-441e-aec4-612e62556ba1",
        "cursor": {
          "ref": "d797311b-2492-4ec9-a5ae-e965a759c221",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2791ba0f-057f-4f72-9cbb-3cdfd497ae5e"
        },
        "item": {
          "id": "a6fde30d-903f-441e-aec4-612e62556ba1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cc1e6948-7872-4487-9c03-3d7cfd5a7841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c53e62-eca1-45ce-8d93-e6208a9c4a06",
        "cursor": {
          "ref": "dccae806-2840-4ab9-9210-ebbb39b1c712",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5766a3db-9577-4071-81d2-a28beb871cdc"
        },
        "item": {
          "id": "06c53e62-eca1-45ce-8d93-e6208a9c4a06",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fb9482a9-2084-4ad7-9ef7-7b32f12b0c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699f0607-a7b6-43f0-9c44-0494af43b65c",
        "cursor": {
          "ref": "42d3a73e-f159-4fbc-b7e6-0acb401e19f4",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4cb5369d-2eb7-481c-b53d-16f9741443bd"
        },
        "item": {
          "id": "699f0607-a7b6-43f0-9c44-0494af43b65c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5966a7bd-758b-42af-b048-cbfb8ea738a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967014a9-3484-4c1d-b1ca-2c92a07927cf",
        "cursor": {
          "ref": "1dd10f3d-cbbe-44b3-ba42-22b8d1c67e63",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "dcb8e30f-376d-4d6b-8c30-d614eacb5dd7"
        },
        "item": {
          "id": "967014a9-3484-4c1d-b1ca-2c92a07927cf",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "42307646-5527-4abd-8058-90b61cdb48e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26048712-7f4f-4214-9165-bc91449e00cb",
        "cursor": {
          "ref": "83e5eb31-c757-44ac-b244-237e7997f2db",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "27bddaa1-563e-4556-8406-ddea3ad18c20"
        },
        "item": {
          "id": "26048712-7f4f-4214-9165-bc91449e00cb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e38f0d35-09e6-4da5-b426-fdadcbc94fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0c55d2-070e-423c-bbe5-c50f738d9746",
        "cursor": {
          "ref": "c3416675-9cf4-4542-ae47-09f18b5838e8",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "826fb7c3-f706-456c-b6a7-03c243a39491"
        },
        "item": {
          "id": "9d0c55d2-070e-423c-bbe5-c50f738d9746",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c8d38a7a-e6af-4cf8-86cb-b20ca854112d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772b8a35-0513-46e6-b974-08bd47003d0d",
        "cursor": {
          "ref": "0a035ccb-c7ff-48e5-974e-5aacacea24ae",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a05203b3-7639-44cc-95e8-313e82f97da1"
        },
        "item": {
          "id": "772b8a35-0513-46e6-b974-08bd47003d0d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6d1f714c-f6bb-4544-8cbd-83a2f80eacbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8309f738-8c00-4e33-b448-c8b4e094c3c0",
        "cursor": {
          "ref": "c9d0645e-572f-41e2-b523-2b02f7764c9d",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "80d73c63-da4c-4e04-a1d2-28360db4afcf"
        },
        "item": {
          "id": "8309f738-8c00-4e33-b448-c8b4e094c3c0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cbfb3c0b-75c8-4715-9878-7543d1ebf19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3473ada-9831-4b97-9cbb-30aa76ff5e63",
        "cursor": {
          "ref": "5bce1a4e-8357-4471-913b-c3f08d1d2145",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "364ccfee-aaa6-444a-a0fa-f004bf265482"
        },
        "item": {
          "id": "a3473ada-9831-4b97-9cbb-30aa76ff5e63",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ca4a6c61-bac5-4222-848d-e6b5692be869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17966e51-bfb1-489e-b08f-2ca5635d523d",
        "cursor": {
          "ref": "baf31e63-14fc-490f-b651-7456a083e52b",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f7fa29fa-6dc9-4741-8242-480e578ab5a4"
        },
        "item": {
          "id": "17966e51-bfb1-489e-b08f-2ca5635d523d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "114b0e61-36b9-4165-b1eb-869577c494da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b34c58b-3651-45ae-9490-7eaea9a5ea27",
        "cursor": {
          "ref": "8c689518-3c8e-43bd-9ecd-6e901f1d0588",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "748eb39d-c472-43c4-a2b0-f76e36b8574f"
        },
        "item": {
          "id": "1b34c58b-3651-45ae-9490-7eaea9a5ea27",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1a4594dc-980d-44e4-94db-d604458b0771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab246f9-1776-488c-852f-be741bc2f490",
        "cursor": {
          "ref": "c81e9fb0-9aca-42e1-942b-e7eb60c7bf60",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "687bf794-f39b-4913-bb01-b52d1fb11fb8"
        },
        "item": {
          "id": "aab246f9-1776-488c-852f-be741bc2f490",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0f0a6e2e-86fb-4af1-b3f4-517c18efff17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5656753-9c1e-48c8-b17e-089424e69988",
        "cursor": {
          "ref": "0700515f-79e1-4d9c-92a3-3fc28b6a4489",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6d9b34bd-82e8-4030-aeb2-039b879b3464"
        },
        "item": {
          "id": "c5656753-9c1e-48c8-b17e-089424e69988",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1c3531d1-472d-48d1-a0f9-b0d31bb60496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a59a395-41ec-4121-b8d1-c4f3d4155561",
        "cursor": {
          "ref": "24d46b08-b0b7-4411-b014-9dfc0b9eedfb",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "865273be-a51f-4872-b7cd-c32dbc057b76"
        },
        "item": {
          "id": "8a59a395-41ec-4121-b8d1-c4f3d4155561",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "6b12fd0b-7c59-40ff-9115-779064f269d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8a3a65-c781-4616-b800-935fe7f11db5",
        "cursor": {
          "ref": "79179af4-b1e5-45ae-a757-496e44014633",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3738f00f-22e8-4d47-b813-7eeadd494f16"
        },
        "item": {
          "id": "1e8a3a65-c781-4616-b800-935fe7f11db5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3878998d-b861-4804-ad98-a8e2448d01f2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17b68b4-fb92-4e89-9f3f-09d0071f71ae",
        "cursor": {
          "ref": "2e28ccfe-1c3d-4b16-b2ae-257ee51a11c4",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c97d3af8-ed22-492e-88fa-4bbb1a41bf7f"
        },
        "item": {
          "id": "f17b68b4-fb92-4e89-9f3f-09d0071f71ae",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5144f29e-6b95-42a2-84f9-55859ade4b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2a7c36-e570-4966-a23c-f619c8396738",
        "cursor": {
          "ref": "1369a81e-dea9-4efb-8838-8c63ba99ec2e",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c6b379cf-055c-49f2-9010-f744ef715b56"
        },
        "item": {
          "id": "9c2a7c36-e570-4966-a23c-f619c8396738",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8eb4db87-dfd3-4e95-a174-cd4c94751b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a56937-6c68-4aec-941a-e813f4516339",
        "cursor": {
          "ref": "cc11966a-e8be-41ae-8b4f-0c155ef04517",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "355e3a69-f840-4e1c-a95f-16ff1bedbd42"
        },
        "item": {
          "id": "b3a56937-6c68-4aec-941a-e813f4516339",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b213f191-2868-4c7a-b755-8079b9226531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1880c736-3f9a-4ffc-9437-204914e18b52",
        "cursor": {
          "ref": "298a4718-8b2d-45a4-8b7e-a096afa41a5d",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e278f8af-2ad0-4472-ba49-5b53a4d07d09"
        },
        "item": {
          "id": "1880c736-3f9a-4ffc-9437-204914e18b52",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "09325fa6-cf19-4581-a319-de28cf737866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931a2209-4128-4fc9-b316-ff81307e201a",
        "cursor": {
          "ref": "7aafa7a2-34f4-44b7-a562-4e7da02861dc",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "fd451c1a-18ee-4cef-bf85-a8a18912c1ea"
        },
        "item": {
          "id": "931a2209-4128-4fc9-b316-ff81307e201a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3f8e0092-3592-4412-8763-111736c12875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76beabfc-f588-48ce-bcc6-16c6f52b966f",
        "cursor": {
          "ref": "9b2a9b6c-112e-448d-8f5b-6f1f24c09da6",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "946b6912-2100-43a1-841d-145b1585d1ba"
        },
        "item": {
          "id": "76beabfc-f588-48ce-bcc6-16c6f52b966f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0f16b794-aae9-4bf6-b6b4-c7e4edd2b7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85302de-c79b-4d85-a09f-94a430f93e11",
        "cursor": {
          "ref": "d5454f39-776d-46bb-8972-b3fe1ed5e165",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9f889aff-93b0-48fa-94ca-b69be5d1e717"
        },
        "item": {
          "id": "b85302de-c79b-4d85-a09f-94a430f93e11",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fb25ae9e-37d2-4fdc-9211-e34a07a2f62c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d2a188-0d56-4b4b-87bc-843600039ab3",
        "cursor": {
          "ref": "c315ae99-26f1-4a7e-acfe-94bf52d855e6",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b12249a3-a4f9-41bc-9074-7edad796770d"
        },
        "item": {
          "id": "b0d2a188-0d56-4b4b-87bc-843600039ab3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2960fc13-75c4-44ff-b134-f3ad0c05ca91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0480af69-629c-4627-bd26-700c9d6c459d",
        "cursor": {
          "ref": "6351cd92-c76a-4bbb-931a-1128f4514366",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c6cfc15c-042c-470c-b20d-604fb213b195"
        },
        "item": {
          "id": "0480af69-629c-4627-bd26-700c9d6c459d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e84bc554-db15-4f6b-afc4-3a7d7477330d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91ecc4f-b784-4743-852f-7be0dfb35058",
        "cursor": {
          "ref": "be0f8e68-bb73-4e81-8d35-bec1acc593e7",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e02e2fd5-8673-4427-8c94-0171af56aea2"
        },
        "item": {
          "id": "c91ecc4f-b784-4743-852f-7be0dfb35058",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "96f0918a-d72c-423f-81b7-e67207c75f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b009346d-2310-494b-b38b-8702ab5c9c16",
        "cursor": {
          "ref": "1f25a323-1954-44a5-abae-e598350f3a08",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "86471bc8-4f2a-4b2c-865d-4dbc9af3f67f"
        },
        "item": {
          "id": "b009346d-2310-494b-b38b-8702ab5c9c16",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "acd0d9a5-5fa7-4ce0-8007-71c819855cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febcbcef-868b-4387-9a00-41b98b3d27f5",
        "cursor": {
          "ref": "be26de0d-0f79-4eea-90ef-9cbaa2b5e513",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4d2f7a04-9ef1-468f-9f3b-1e98f801e0a4"
        },
        "item": {
          "id": "febcbcef-868b-4387-9a00-41b98b3d27f5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b790efc7-38b7-482e-916e-43b3d728848b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a037344-6bba-47d3-b1b9-ec6f02058af4",
        "cursor": {
          "ref": "1a3cd137-9859-4fcd-a737-b3355894d22c",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9e310469-6844-4f2a-97c2-2f6116d7144b"
        },
        "item": {
          "id": "4a037344-6bba-47d3-b1b9-ec6f02058af4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4f5ac45e-bc1b-4a8b-aa30-5ab2ca358c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e77a26f-9edb-4d86-939b-efd81bc0997f",
        "cursor": {
          "ref": "b8cd3ff0-8811-4b51-932f-08cc9f45f352",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4fd96c23-85cf-4a13-bd4c-09f26140e78c"
        },
        "item": {
          "id": "3e77a26f-9edb-4d86-939b-efd81bc0997f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e5905c94-dc68-40e6-a5e6-7e463373aca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71f2130-8321-4265-ac27-57021f3834ac",
        "cursor": {
          "ref": "2c0365d9-4d5c-4542-8b3d-e56a553cf0e5",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "182f3538-fd59-4489-81f2-a86bce29e8b7"
        },
        "item": {
          "id": "c71f2130-8321-4265-ac27-57021f3834ac",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5286c839-a7a8-4e1f-a187-884661a7b7ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10088144-c9a5-4676-af8f-cbe4b736314d",
        "cursor": {
          "ref": "b1b6e302-eb28-4723-b30a-f9221045b463",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0875d1dc-e901-4b85-a2c1-14d28e83a266"
        },
        "item": {
          "id": "10088144-c9a5-4676-af8f-cbe4b736314d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "88e06c99-5ccf-4486-b9e3-18dca1b293d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7da696-fb19-42be-8c0f-335b13d0cbc0",
        "cursor": {
          "ref": "24d79883-3655-455a-8af5-8da1084719fc",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0530bd4f-2676-4a38-beb1-60871637ce51"
        },
        "item": {
          "id": "5b7da696-fb19-42be-8c0f-335b13d0cbc0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5a8f8fb6-9405-41b8-9475-51f16b443716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13e9d98-3da7-4c90-b591-b790ce540b3c",
        "cursor": {
          "ref": "6b2c09e8-3ca0-4839-9c4a-54f7c7618a3e",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f6f6644d-6321-4761-83c8-e3782c1e457f"
        },
        "item": {
          "id": "f13e9d98-3da7-4c90-b591-b790ce540b3c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4ec62e23-df8c-4ef1-b3da-43ef681f3b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d18deb-5300-415d-b740-d9ab873eb780",
        "cursor": {
          "ref": "a0536a98-c267-4659-ab23-dcc109fb482e",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "04070de5-cae7-48db-87e9-6c3fb38038b4"
        },
        "item": {
          "id": "73d18deb-5300-415d-b740-d9ab873eb780",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "da38cbc6-0744-46e5-93f8-00db399a4551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62cca2f3-e898-4dfc-b6b8-09afc3bcf00c",
        "cursor": {
          "ref": "04a5052d-4509-4c96-bcca-a91c5a43d1b8",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a8c3d196-c610-41f6-9d8f-8fdefb47dd82"
        },
        "item": {
          "id": "62cca2f3-e898-4dfc-b6b8-09afc3bcf00c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "125e0221-4ead-4e7f-a94b-67f8f780a88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c65439d-cde5-45d0-9bf9-16fac81d4a93",
        "cursor": {
          "ref": "5433bdbb-3304-4c30-bbc3-c2c0eebeb100",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ddb2cea4-ec4c-405b-92e5-ffbfad1dd0c3"
        },
        "item": {
          "id": "2c65439d-cde5-45d0-9bf9-16fac81d4a93",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "28d5af92-bc66-4b50-808c-ef980a22a4a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5186013-8990-41f2-839d-2bcbecf0e8ea",
        "cursor": {
          "ref": "fe180363-47e3-43d3-8cd8-3e4143a20a84",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "25f40a64-d634-4832-b95a-e1f991ecedb5"
        },
        "item": {
          "id": "c5186013-8990-41f2-839d-2bcbecf0e8ea",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2c79a4d9-3412-4287-b661-dacaa4382629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f5b4b7-6363-442b-87b8-8ea03f8908cb",
        "cursor": {
          "ref": "3affe62c-2cf2-482a-ad5d-d2515bf3ce7b",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "43938d80-279b-4f13-89b6-66c3b8bd8e52"
        },
        "item": {
          "id": "93f5b4b7-6363-442b-87b8-8ea03f8908cb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "afb597ab-c18c-4998-a8df-b932a4812171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58cc15d-433f-4398-9a9c-797ab96fd98a",
        "cursor": {
          "ref": "a7d52fd5-fa22-4375-a777-6670e222467d",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e01dedbb-f51b-4cf8-b561-ccfab3914262"
        },
        "item": {
          "id": "c58cc15d-433f-4398-9a9c-797ab96fd98a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "732a15be-2d1a-4415-a7be-e16be88f2855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9eba1bb-2cce-469a-a6b7-87d4c8dde695",
        "cursor": {
          "ref": "10b1523e-c16d-4b92-8165-d8d0a185c81f",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f8e2a8e0-e09b-46f4-b11e-cf0b0ba911af"
        },
        "item": {
          "id": "e9eba1bb-2cce-469a-a6b7-87d4c8dde695",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "72c25575-fd44-471c-aff7-055c0098e764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b326f0ed-effd-4b13-b574-19cf8b0e7e63",
        "cursor": {
          "ref": "680ea4ab-508c-4ba9-be96-40938a723563",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "79b27957-58af-4d41-817d-e6cc9f308d63"
        },
        "item": {
          "id": "b326f0ed-effd-4b13-b574-19cf8b0e7e63",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "67726f5f-86e0-40da-bdcd-efa7f0e4d293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de428792-1640-41b7-887f-c5f07925c36a",
        "cursor": {
          "ref": "9856ffc9-1f5c-4b96-9710-575f63271d2b",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2a23d0d0-0157-48a5-8c87-ca39fc2c221d"
        },
        "item": {
          "id": "de428792-1640-41b7-887f-c5f07925c36a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7f30f2a3-efca-4f7c-a4e5-92d7f8ca3ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498b0563-1d66-4167-b630-316646945e66",
        "cursor": {
          "ref": "04bf108a-f729-4407-a2bf-8040e5f88a09",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a422dfbd-eeb5-4bb9-be6b-041a7d325570"
        },
        "item": {
          "id": "498b0563-1d66-4167-b630-316646945e66",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d0821924-7269-4098-b810-cd3894ab0d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5082ca4-3d62-41ab-b88a-26302121c1dd",
        "cursor": {
          "ref": "590fff09-a661-4f8e-aedf-376c3f2481f0",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c10846fb-0345-440e-8771-efd12faeec61"
        },
        "item": {
          "id": "d5082ca4-3d62-41ab-b88a-26302121c1dd",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2e389b91-3169-4527-8f12-34d516c0c1e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1a65e4-1ec6-4075-8323-c926d37e67cc",
        "cursor": {
          "ref": "31ecbb50-f591-43d2-bf5e-f621bc5f49ca",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e83036fc-f909-4fc6-b80a-7c67180a95af"
        },
        "item": {
          "id": "be1a65e4-1ec6-4075-8323-c926d37e67cc",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "366b5839-6a4c-400a-80cd-22e32be8cfdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bada53c2-643d-446a-a940-08589ad15084",
        "cursor": {
          "ref": "2e86a9a3-17c1-4523-97e7-11f29aab4aea",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "eb5eae92-a56b-414a-86d8-454ccf96727b"
        },
        "item": {
          "id": "bada53c2-643d-446a-a940-08589ad15084",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cf49fdd1-3270-40c9-9188-99417050afa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e16dc68-472e-4073-8444-963a832ec9cd",
        "cursor": {
          "ref": "d50a2593-610e-4271-9a78-041d1c2b9cf1",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "66606744-0409-4e78-93d1-eb0f849fe19d"
        },
        "item": {
          "id": "9e16dc68-472e-4073-8444-963a832ec9cd",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "a2ad7645-ee0d-4beb-a674-6eaaf121b3e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf47974-1457-4961-bac4-1348060e4bee",
        "cursor": {
          "ref": "f6eeadea-c6be-4104-a21a-e5eafe0f3c4c",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "556d0151-3fa8-4b48-873d-977e2e281386"
        },
        "item": {
          "id": "baf47974-1457-4961-bac4-1348060e4bee",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ae9ad915-96a2-4712-a216-379e637430ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9829fc-c7f4-420d-a249-803ff8c6d45a",
        "cursor": {
          "ref": "5a5a75ba-94af-4f6d-b261-4fb6c6e303be",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b5c0730c-c35b-4a4b-bef7-16b9acc93032"
        },
        "item": {
          "id": "7f9829fc-c7f4-420d-a249-803ff8c6d45a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "db5f063b-fea7-4e36-8f96-99f572590005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d8571b-fd87-411a-9f4a-248421b3da48",
        "cursor": {
          "ref": "c1f8df21-2e63-4734-ad57-a17e5126137d",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "cb4d2a1d-5d3f-4eb5-a6b8-f59beb1a9394"
        },
        "item": {
          "id": "85d8571b-fd87-411a-9f4a-248421b3da48",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "8e69142e-d11f-44e2-8a2e-4e8bad8f6d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2f23da-b0b8-458a-9969-efdd88b04146",
        "cursor": {
          "ref": "d8a90963-5126-45be-b3e2-749a14e5dbb7",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5d764d2b-866e-4905-9fe7-ffc5e9e2582c"
        },
        "item": {
          "id": "de2f23da-b0b8-458a-9969-efdd88b04146",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1cd20da7-dbf5-46e6-a72b-7ef21a6e50b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02913d97-e35f-48d6-b5d4-0c09004c792a",
        "cursor": {
          "ref": "92668cb9-aa06-4596-a166-f833854962a9",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9842f2d0-d229-4ea1-ac1b-1f25021de965"
        },
        "item": {
          "id": "02913d97-e35f-48d6-b5d4-0c09004c792a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "c219923a-73c9-43d4-8cc9-a9c2b848770f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce287cb-cc4a-40d8-99e3-c4454c1dd496",
        "cursor": {
          "ref": "4c67cc58-08ad-4d7c-985a-8bd7aad48ac0",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "0b2ccb17-42ee-4622-809f-755804e16378"
        },
        "item": {
          "id": "3ce287cb-cc4a-40d8-99e3-c4454c1dd496",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c13c42aa-f48d-45e0-8198-5cf8147c5739",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a190854-e41b-4c2d-b2a9-862483ea85f1",
        "cursor": {
          "ref": "9d06f315-cc77-4514-8f16-f9fa589f8107",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f997ddd2-4911-4e8f-b785-cd5273d2a32f"
        },
        "item": {
          "id": "8a190854-e41b-4c2d-b2a9-862483ea85f1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2389d8f4-0e30-4cb2-a794-b25632307a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45b5197-72b7-41d9-9383-d4fe218f72aa",
        "cursor": {
          "ref": "b6431942-327c-476a-8de1-2025badc3312",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "bd1b6bca-ad66-4443-9780-aea0777ad824"
        },
        "item": {
          "id": "b45b5197-72b7-41d9-9383-d4fe218f72aa",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9e974258-a6aa-4dab-9aa1-007cb1571acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8e3341-2c31-4242-94dc-d93f059b70a1",
        "cursor": {
          "ref": "a767f1f5-99e0-4186-98ae-ef98d7cf76b1",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ed43ce0a-c9a9-4d31-8eb7-b2eac1a52d43"
        },
        "item": {
          "id": "fd8e3341-2c31-4242-94dc-d93f059b70a1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3c81ebfc-614b-4f5e-a38f-bccdc0a39ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca297f2-2ddb-4201-9d71-ae0be90da679",
        "cursor": {
          "ref": "9bc9052e-c161-4a21-9736-a6fe4ac6c006",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7da19a15-6e7c-4ad4-8f4e-65505846cc2c"
        },
        "item": {
          "id": "dca297f2-2ddb-4201-9d71-ae0be90da679",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d6846f52-d8c8-45dd-911d-ff2a9b631216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae9d780-6d69-4f09-a4ea-4bbdfee89dad",
        "cursor": {
          "ref": "8557f503-c957-43cc-8cf9-df9600ea4ffe",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a8a0a946-4b4e-4a8e-a0b2-1046eddeae46"
        },
        "item": {
          "id": "dae9d780-6d69-4f09-a4ea-4bbdfee89dad",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "426d4c35-11db-42fe-aa05-00df61261622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c494ddb-6094-4071-9dd1-f6c0cd8886ae",
        "cursor": {
          "ref": "60d15f2d-7acd-4565-a5db-97f1eb4d4182",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "111d7ef7-84e8-4e81-9ef0-771cf7a93edd"
        },
        "item": {
          "id": "7c494ddb-6094-4071-9dd1-f6c0cd8886ae",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "715af6d0-ea0a-4eb9-9c61-1a4004dc87d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc77d41-fa87-4573-940f-41e8801d727a",
        "cursor": {
          "ref": "d49886d2-4328-47ad-a382-e8b2aa91299e",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "101f48c6-7fb3-440e-90ae-ec40e2aa7731"
        },
        "item": {
          "id": "6bc77d41-fa87-4573-940f-41e8801d727a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d1476c40-aab0-4be7-a839-3edaf0dbe955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c861b0a-b022-4612-8820-7179b5c97af9",
        "cursor": {
          "ref": "c80b2617-c9b0-4717-b3f2-4ba93715153f",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7e59acb0-f51c-46aa-ad22-11051732a5ee"
        },
        "item": {
          "id": "2c861b0a-b022-4612-8820-7179b5c97af9",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "70a29482-dcdc-4f9d-934a-e34dda1c2cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758d4fe1-9760-4703-ac5f-01796ec79837",
        "cursor": {
          "ref": "dd8ffdfe-8ac6-47e8-b58b-2670639d7ad5",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "73e9adc0-0d90-43ae-8253-0fe40112b49a"
        },
        "item": {
          "id": "758d4fe1-9760-4703-ac5f-01796ec79837",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "006788da-d224-4ab5-90a7-bd8e7e09af4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5226de8-e2f1-4a9d-8655-e7c54281cf92",
        "cursor": {
          "ref": "588476b5-47b4-4479-b0b6-39ea209a85c4",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "29d25cf5-3f4b-4abe-a99f-d312cbc87fae"
        },
        "item": {
          "id": "f5226de8-e2f1-4a9d-8655-e7c54281cf92",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "696ffa8a-b3c2-4408-a9c4-00c88dcf3ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53519d30-b11b-4878-b8ed-902becff17d8",
        "cursor": {
          "ref": "5153ac03-b775-4ebb-a373-718cad51175c",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2a12ccc3-3113-43fd-b2ad-5e718f6fcb6c"
        },
        "item": {
          "id": "53519d30-b11b-4878-b8ed-902becff17d8",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "4dbff23e-c400-491b-87c8-25a5d0c813b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed4384b-2432-409b-b1bb-5d84d1d0d6d9",
        "cursor": {
          "ref": "6941e75d-bf75-46dd-84b2-51289aa08dff",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9c99d099-cdbb-4ba0-a3e4-17f8ebad6b2f"
        },
        "item": {
          "id": "0ed4384b-2432-409b-b1bb-5d84d1d0d6d9",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "155552d2-953b-4410-83c1-42a1beeebf23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e079b0c1-593c-4657-b309-1d1cd3b88be4",
        "cursor": {
          "ref": "83c2a1e7-3364-4770-b3cf-4019337f3050",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "44cde490-70de-4d6c-bf0f-b752801754e9"
        },
        "item": {
          "id": "e079b0c1-593c-4657-b309-1d1cd3b88be4",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0902d5f8-078f-4803-ab1a-f75a2eb7ed56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c69a7c-c3ef-4e01-815d-dfad5dda120d",
        "cursor": {
          "ref": "45a3040c-1a23-48b5-a5d6-f7fe8e0e0297",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "8823e121-aabe-4b7d-b569-5380d2cdb64e"
        },
        "item": {
          "id": "83c69a7c-c3ef-4e01-815d-dfad5dda120d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "27b7a696-ca0b-4eee-8032-3f8f0841dd4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e273977d-098c-4c4f-9129-2f7b58602447",
        "cursor": {
          "ref": "3401b9e3-9803-4261-85f1-ea127d1571d2",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a331853d-473d-43ce-a6d9-e4c02e91836e"
        },
        "item": {
          "id": "e273977d-098c-4c4f-9129-2f7b58602447",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b8dbd5ea-3b89-4147-b502-203c80179f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d9a864-ddff-4e03-a8d8-9cea43f989a7",
        "cursor": {
          "ref": "fc843fea-ac1a-43d2-bffd-93c5de3f23c5",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "33422d31-bc93-4afd-ae69-b1698f82d7ee"
        },
        "item": {
          "id": "90d9a864-ddff-4e03-a8d8-9cea43f989a7",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3832f163-8356-41a4-a433-a8b351085198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d3d8688-1dbb-4bae-920e-81d7c7e96378",
        "cursor": {
          "ref": "ec4ad36b-0d7c-44ef-8d8b-a9a1fa255b91",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9f9cd23e-37ea-4fde-b078-f3b0d2839d6a"
        },
        "item": {
          "id": "7d3d8688-1dbb-4bae-920e-81d7c7e96378",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c3874dc5-faa4-40a9-8e20-f03487932620",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "228b8ba3-7aaf-4f51-8246-af2aa993af85",
        "cursor": {
          "ref": "9fe2dc48-2a98-4f66-afa8-b626109be4f1",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ba78c21a-6afa-45a5-b0ca-3748a26ede00"
        },
        "item": {
          "id": "228b8ba3-7aaf-4f51-8246-af2aa993af85",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "187a0272-98ba-4ea1-9085-af49bbd325a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50afb01c-8bbf-4ef8-832d-be06cb545e4d",
        "cursor": {
          "ref": "1c8030ea-b0fb-42b3-ad89-a5c38bd53ec4",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "98df4d9d-c7fc-414d-98df-69246461d7cf"
        },
        "item": {
          "id": "50afb01c-8bbf-4ef8-832d-be06cb545e4d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d7bf9194-efac-469c-9772-86ed67485cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80dfc6df-6091-4016-af88-c437d6369e9f",
        "cursor": {
          "ref": "58911b26-7d10-4795-97bb-8b1fbd9d665e",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "622f2bab-5aa3-48ec-8e57-17c0aa95075f"
        },
        "item": {
          "id": "80dfc6df-6091-4016-af88-c437d6369e9f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "eedaa5ea-dfab-41fc-b745-5085cfdc656e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0912a1-a54d-4aab-b4e2-964bfad17f27",
        "cursor": {
          "ref": "4b5c48be-2de1-4d39-ad37-3fd2ff6811a1",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "67d27f9e-aed2-457c-9c1f-650a1ebe4b3f"
        },
        "item": {
          "id": "8c0912a1-a54d-4aab-b4e2-964bfad17f27",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c67fa8c7-a249-4bf0-a0ad-1defbc9dea4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24628f01-1da5-40f0-b952-78ea549b0e19",
        "cursor": {
          "ref": "1e5057e7-1bf2-4265-9565-ff1f25524cc9",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "efb43eb4-4942-404a-a21f-1e24bedafd99"
        },
        "item": {
          "id": "24628f01-1da5-40f0-b952-78ea549b0e19",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ca513bdc-0528-43bb-8172-5146213b83a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5eed05-07e8-488c-ad57-9a5a98e41a13",
        "cursor": {
          "ref": "2646c78e-99b9-49ef-b996-9cb09040553b",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "aa47bbc0-77d3-4e18-b0ac-a5ee60706cb0"
        },
        "item": {
          "id": "0a5eed05-07e8-488c-ad57-9a5a98e41a13",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "702e12c1-4907-4d63-8eff-1b175570a956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627d4ce8-ba2a-443e-8301-1906db85eab0",
        "cursor": {
          "ref": "94d447fb-ee68-4416-9ccc-56caf36e80b1",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "95f3a64d-35f5-46ed-9548-9d0bad80d4ab"
        },
        "item": {
          "id": "627d4ce8-ba2a-443e-8301-1906db85eab0",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f3ffbb4a-e586-43d2-96e5-f4d77e717810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2105d9-127b-4748-8581-0efb3e459b5a",
        "cursor": {
          "ref": "3e290b12-f641-436b-aa32-c288326e519e",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e68ef0d6-98b6-4894-8dbb-a45dd7d9e7fa"
        },
        "item": {
          "id": "1e2105d9-127b-4748-8581-0efb3e459b5a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "dc02285b-c06b-4752-b119-3ed840c7f287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25bc40c-4081-4f88-bc46-06be6dc20909",
        "cursor": {
          "ref": "dfa8ff42-1234-46cc-9749-ba8cbbc65d5d",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6e1f628a-f111-4e82-bb9c-02bb23f0975a"
        },
        "item": {
          "id": "d25bc40c-4081-4f88-bc46-06be6dc20909",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1a9f3bba-4a1e-40a5-80e4-4e45834f7284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca8aad3-c25c-41a2-92c4-db9e4a5c1667",
        "cursor": {
          "ref": "a7360075-7661-4563-a3ee-c1cba3c0a299",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5223b2f9-7d7f-4be2-bef8-b3d58abca4c7"
        },
        "item": {
          "id": "8ca8aad3-c25c-41a2-92c4-db9e4a5c1667",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "297d7ead-526e-430f-96e5-1d3b849ca067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4afd42-4eb4-45e3-9b7d-3f5fc686689c",
        "cursor": {
          "ref": "3bba4ec9-b98c-4ded-838c-5cdf3b91ae05",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "28a46d13-49a0-4e1b-b689-f5c8a24fb485"
        },
        "item": {
          "id": "8e4afd42-4eb4-45e3-9b7d-3f5fc686689c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "76c26f15-480f-4271-bf61-938c97800114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb827c4-f38c-4960-9c3e-461a6cf6ccbe",
        "cursor": {
          "ref": "5c04b1b1-f86a-4b5d-bfdb-3e0a3b3fd96c",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "af79fdfa-8d94-4d55-a48c-2baa49c1889d"
        },
        "item": {
          "id": "abb827c4-f38c-4960-9c3e-461a6cf6ccbe",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0a258af2-dc89-462e-800a-16dbfb6f16a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b445b5-303f-47bb-9cf5-c48c12a7ce1d",
        "cursor": {
          "ref": "d8213dc1-b565-4f41-933a-65b5ca28ba74",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5983291d-6431-41e3-9995-08c3fdcc6fc6"
        },
        "item": {
          "id": "61b445b5-303f-47bb-9cf5-c48c12a7ce1d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "71692ff2-7886-4717-b38e-c49b1b3b5a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07ccd40-7e86-4e85-aaa8-020628e61ce7",
        "cursor": {
          "ref": "db2b4f7c-435d-4fe0-a40b-df20c628a5b2",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b61a32e1-3b5a-4d3d-84cb-01c74faa11f4"
        },
        "item": {
          "id": "e07ccd40-7e86-4e85-aaa8-020628e61ce7",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "fc024733-2025-494d-aa84-64dff4f4c4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166e088e-1b69-4b11-af0b-7689ce019ff4",
        "cursor": {
          "ref": "2c9967cc-ba0d-4d57-afb9-bd11918279e2",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d5a533e5-b717-47b2-b459-ec32591ba0db"
        },
        "item": {
          "id": "166e088e-1b69-4b11-af0b-7689ce019ff4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3d74827a-005c-483a-95c0-1fd15141a894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ae2d33-2d98-45fb-b5d6-68d16327bbe4",
        "cursor": {
          "ref": "685ef6be-c474-4c95-a037-f8271a3eda4c",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c28d37ff-c66a-4a13-969b-7723c8e836c6"
        },
        "item": {
          "id": "32ae2d33-2d98-45fb-b5d6-68d16327bbe4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f5e8e112-b73d-4215-b53f-20cdd41b30bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6095e61-eded-4afd-a74c-b6de4056cb4f",
        "cursor": {
          "ref": "48d602f2-cfee-4128-b476-2bb76757c1be",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "bc3bf408-c4e3-4064-b974-1b6c06078d74"
        },
        "item": {
          "id": "a6095e61-eded-4afd-a74c-b6de4056cb4f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "88e0876c-0f8b-4460-8b2a-c3a3238b829c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76dea12c-68ca-4e78-ad33-abe213b49a28",
        "cursor": {
          "ref": "34c992a4-4075-4f91-a29d-0b95829c8db9",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7257c0fe-eb9d-4b84-b99a-3b3417cd436c"
        },
        "item": {
          "id": "76dea12c-68ca-4e78-ad33-abe213b49a28",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5cce28be-2ec2-4533-bbbe-aba67e0fcc88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd91020-1500-405d-b234-b7fd6e610f1e",
        "cursor": {
          "ref": "e66de82c-6be8-4eb0-a997-9e30e3ab5de1",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2aeba302-8142-43cd-bef6-4b9883a0271c"
        },
        "item": {
          "id": "acd91020-1500-405d-b234-b7fd6e610f1e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "21ef0244-03cb-4ece-834e-8f20758547d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ab7a58-5bcf-4978-8335-d2750a2c4661",
        "cursor": {
          "ref": "424c1a97-e7d1-4ae8-98a1-c40d586c7391",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d3401735-3748-4d44-8bfb-48daf15b41b7"
        },
        "item": {
          "id": "c6ab7a58-5bcf-4978-8335-d2750a2c4661",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4941d263-b76f-4bfd-a72e-7262b984f1c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23064cb8-679e-4865-93e7-97ce92e780fe",
        "cursor": {
          "ref": "dce28d12-8f66-463d-af62-b0b4b02d6383",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "850baa13-3e00-471a-aa87-9e1276f35a9c"
        },
        "item": {
          "id": "23064cb8-679e-4865-93e7-97ce92e780fe",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4311295a-f3bc-4af9-97c8-36c5ae9f1dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f99459f-5a58-473d-b824-4e81fffa3c27",
        "cursor": {
          "ref": "9f28f944-eb62-4fe9-b41b-aa75acd35443",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "af94e1d9-edec-43f5-b4e2-1d86d40a94d5"
        },
        "item": {
          "id": "1f99459f-5a58-473d-b824-4e81fffa3c27",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "721b8bbb-ae14-49f2-8ab1-5a92d9e54cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43703643-6a1e-40bc-b8fb-967583656888",
        "cursor": {
          "ref": "15963956-6570-46de-9340-2277db22c568",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "506977c6-8c3f-4ee7-a05d-0d4fb272b6a1"
        },
        "item": {
          "id": "43703643-6a1e-40bc-b8fb-967583656888",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "dbf107d7-80b4-419b-ad29-b48351fc67d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8edd181-4b73-40d4-93c3-7f784f886881",
        "cursor": {
          "ref": "39632f99-ebbb-4428-bfda-818e61c7ae78",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "998e3f83-c94d-415c-ac43-51b529831567"
        },
        "item": {
          "id": "c8edd181-4b73-40d4-93c3-7f784f886881",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f8ec99d5-9f6c-4fd0-8844-06ae131a8862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b70ad8-4d2f-48fc-8dca-ab3e49d09bc2",
        "cursor": {
          "ref": "18beeeae-dcc2-410e-a768-41923e344ae2",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f42e66da-a0db-4a2b-9b2f-425f2cd5f8aa"
        },
        "item": {
          "id": "21b70ad8-4d2f-48fc-8dca-ab3e49d09bc2",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8a04e42b-610c-439b-bff2-9891af351116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc55d85-0ed2-42c6-b556-0c2adaf3ad75",
        "cursor": {
          "ref": "b590a840-07de-4749-8a1a-ff76c21e35b3",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "bd715b91-da2a-4238-9786-7f382cba12d1"
        },
        "item": {
          "id": "2bc55d85-0ed2-42c6-b556-0c2adaf3ad75",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "27f748c0-b700-41e4-89a3-b209da6c1252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5499b2cd-0452-4fca-824e-47bd8fbf049a",
        "cursor": {
          "ref": "5711c1d2-3d91-459d-8633-f8c5bc112989",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "cf4fbcc5-aae1-47c5-9690-177781df9405"
        },
        "item": {
          "id": "5499b2cd-0452-4fca-824e-47bd8fbf049a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f449b68a-8899-4a51-aecc-3c8287db95ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72cb458-017a-4b4c-bdf9-aaf3f6681c57",
        "cursor": {
          "ref": "e2bb4cff-3ca2-4041-b052-c519d371646e",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1643b037-6897-4bd5-af1b-cb8a33bd107f"
        },
        "item": {
          "id": "f72cb458-017a-4b4c-bdf9-aaf3f6681c57",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "48c99022-0f20-40a4-b9ca-c5548498e4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e30a04a-e97f-448a-8fdf-1cea32c02245",
        "cursor": {
          "ref": "96702d7a-db55-49e3-9006-0d17935a7a47",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "63a302c1-3952-482f-90c7-b650ec818e72"
        },
        "item": {
          "id": "4e30a04a-e97f-448a-8fdf-1cea32c02245",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5baf24f9-3efd-4bb5-86eb-10346c478c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a099e222-8714-40c1-882b-89fd98d9416e",
        "cursor": {
          "ref": "1fdfbce2-3008-4bda-bca1-1e5c94eb9d42",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d959fc92-61ab-49dc-a810-d51683c4343e"
        },
        "item": {
          "id": "a099e222-8714-40c1-882b-89fd98d9416e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "dabf030d-ae39-4604-9ec1-9c7b2c3cfc3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da7ac9f5-d83d-4bc6-a6dd-0cc226827c6f",
        "cursor": {
          "ref": "c5e4e1c4-7d2d-4062-b71f-1c0b9bffdfb8",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5463f7c0-343e-44fb-914e-026eb1b65d2e"
        },
        "item": {
          "id": "da7ac9f5-d83d-4bc6-a6dd-0cc226827c6f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "038226fa-1e66-429e-975e-0669873a64f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4448c6cf-2a2f-4832-b4b5-677f32e47e37",
        "cursor": {
          "ref": "6b8f4167-c072-4123-88c7-d9e0db40d5ad",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "777d6969-e551-4107-a7b7-7d5254649982"
        },
        "item": {
          "id": "4448c6cf-2a2f-4832-b4b5-677f32e47e37",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "337d0a0b-242f-4f36-93e2-a38d4bc95b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501f875a-ecbe-464b-bbfc-c1717cc5a24e",
        "cursor": {
          "ref": "cf12950f-32fc-4ebc-b303-c25f160a0ecc",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "10701afe-d4d2-4bdf-b287-d59eb0fa4aeb"
        },
        "item": {
          "id": "501f875a-ecbe-464b-bbfc-c1717cc5a24e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "41e04b91-967c-48c6-a59f-e761369a8087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f927333-acb8-45d9-b35e-2fd9ad92b658",
        "cursor": {
          "ref": "81d565d9-635e-4945-b7d6-83476225fc3c",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ef59788f-141f-4492-b4ee-e61142ca1661"
        },
        "item": {
          "id": "4f927333-acb8-45d9-b35e-2fd9ad92b658",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "822198c8-d60b-40a0-98d5-d274f8f0b0ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e404f713-08f0-4a75-a1e6-fad17c72af57",
        "cursor": {
          "ref": "7db2a75e-e701-45bb-b862-1611ad50f87d",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "23eeb63d-b6fc-4908-bf2d-44dc4c618e4c"
        },
        "item": {
          "id": "e404f713-08f0-4a75-a1e6-fad17c72af57",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8b862ce1-3e5f-4ab9-aca5-f88ea4a11a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07317fa5-37a1-43ae-ad4d-96f32c0b28c8",
        "cursor": {
          "ref": "9600714e-cf25-43b4-9e9a-679d7db7ef17",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0ac08e68-8ed4-4093-9fd4-56f176751f2a"
        },
        "item": {
          "id": "07317fa5-37a1-43ae-ad4d-96f32c0b28c8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9eb95a62-94d2-4a31-bcb5-271bf5b174b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58cba614-9eb0-4332-80f3-59e124ff45a9",
        "cursor": {
          "ref": "6cdc4c27-d869-4c6f-a1c2-0689f3d4d791",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2b0f53f6-1232-4862-b398-b67156c635b8"
        },
        "item": {
          "id": "58cba614-9eb0-4332-80f3-59e124ff45a9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "943ff985-cdd0-4fd5-a296-14d2139d9ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd88fd46-9ca3-4a2b-a9a5-19a638467f87",
        "cursor": {
          "ref": "9780271f-95f9-456e-9913-badde797455e",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "17c7234d-5499-4e56-8a64-36d2ed9adcd6"
        },
        "item": {
          "id": "dd88fd46-9ca3-4a2b-a9a5-19a638467f87",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e1e78ea0-8dbe-4e61-ab91-cb7a05df22f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2f3ea3-5e05-415c-afcc-0d71c582f6a4",
        "cursor": {
          "ref": "57e8f9f2-408b-45e0-a941-55d2530b16cb",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "56807bd7-7d89-4278-8259-dfc5f8ef3dce"
        },
        "item": {
          "id": "cf2f3ea3-5e05-415c-afcc-0d71c582f6a4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "1bdaeff7-7edd-4b6c-b449-f067a4f8b124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9af839-39d0-4a2d-9513-97cf995f9eab",
        "cursor": {
          "ref": "76e474a9-b1eb-4e71-a4ec-5e582503b9f6",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "de34a4f0-a64a-431f-b886-6ce795946387"
        },
        "item": {
          "id": "ba9af839-39d0-4a2d-9513-97cf995f9eab",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "26cf08e7-2ada-4901-a4f8-e8bb9a143d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e310790-2af4-401e-97d0-7146bc878222",
        "cursor": {
          "ref": "3a3d8bc5-c047-42cf-a0c2-d2c63992c480",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "069ad935-c4de-4032-97db-9747a719b257"
        },
        "item": {
          "id": "6e310790-2af4-401e-97d0-7146bc878222",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e71e61c9-f79a-4b80-bc10-7976cbc20e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9daf852-863a-4c40-ab42-838b3ca1b1a6",
        "cursor": {
          "ref": "b09981a8-0485-4fa6-adf8-0219978d75b1",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ee0c641d-d11a-4ccd-8987-d9c2cab45bc2"
        },
        "item": {
          "id": "c9daf852-863a-4c40-ab42-838b3ca1b1a6",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "847395a3-0a3a-45c9-a033-fdbfa8cd8040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d8dd7e-2c9c-4744-b156-8b3c42c29729",
        "cursor": {
          "ref": "432c0aed-add5-4d2b-b499-8a122030a976",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "785ba0d3-2d1d-4006-972b-bbb055479a4e"
        },
        "item": {
          "id": "83d8dd7e-2c9c-4744-b156-8b3c42c29729",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "10a71ca9-f249-4de4-b9da-e21fbcd76890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3476e3da-966a-4b67-885a-00291ccb78a2",
        "cursor": {
          "ref": "3f032fa7-1127-4599-bc5a-62a77f77675d",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "69dd6182-048c-4a47-9ec4-0c77cdef863b"
        },
        "item": {
          "id": "3476e3da-966a-4b67-885a-00291ccb78a2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "262ad336-679c-46ae-9ec4-d31452d9d95f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca482f2-39a6-475d-b03e-fb6ade6b1efa",
        "cursor": {
          "ref": "e7ac0652-3a1f-4f34-ae75-856d22e64852",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d3899ff3-49ef-4867-b650-c26ada4665a5"
        },
        "item": {
          "id": "cca482f2-39a6-475d-b03e-fb6ade6b1efa",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "495ef15a-fa7b-4d54-b2fc-d4cd50479c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891dbe10-0a58-48b6-8501-e3ad9a06977d",
        "cursor": {
          "ref": "1610596f-0cf3-4775-bf23-e7ff62b42708",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6408d2d4-5207-47ce-8a98-d6eac2121b75"
        },
        "item": {
          "id": "891dbe10-0a58-48b6-8501-e3ad9a06977d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "722779e2-c99c-427b-a699-d76f14f23749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ecccc0-79d6-47b8-8d96-6ac00488d812",
        "cursor": {
          "ref": "76b41ffa-2812-41bf-80c0-6f0ee5a5ca40",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "61307cd1-0058-42b3-8b3f-c657762b206d"
        },
        "item": {
          "id": "e1ecccc0-79d6-47b8-8d96-6ac00488d812",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "924fac9b-80a3-4919-b4d8-41a0a626c4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d357510-a94f-43cb-a61a-93328f5f71c0",
        "cursor": {
          "ref": "1f4378b4-d974-40f6-88dd-57259a7d74a5",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d9ea59ef-1e19-4b23-a6bb-f41beec4ba36"
        },
        "item": {
          "id": "1d357510-a94f-43cb-a61a-93328f5f71c0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2218b136-9d5a-406d-b31d-e7a78a58d1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca6e54e-8a63-4695-843d-7a54065d4f2d",
        "cursor": {
          "ref": "7c15d5c7-b17f-4351-ae2c-cdd749d6bc35",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4848859a-2eb1-464b-a27b-5eb517dd5cc9"
        },
        "item": {
          "id": "9ca6e54e-8a63-4695-843d-7a54065d4f2d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "312abc44-4688-4796-aa8f-182b055774e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b397c2ba-4cd5-487a-ae01-31c941d2d332",
        "cursor": {
          "ref": "8fb66fc3-a324-41ec-a0f3-8f5bc13f4dd1",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "157b74d6-555e-42b8-aca5-f501116ea8c0"
        },
        "item": {
          "id": "b397c2ba-4cd5-487a-ae01-31c941d2d332",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1890d657-c430-40a6-a16f-0583b8487672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e866ac9-0e50-456d-be4a-94a169beff46",
        "cursor": {
          "ref": "b824e621-8906-42ad-af6c-3c5a791d135a",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e5eaf258-4c79-4b8b-812c-203b37b8a29b"
        },
        "item": {
          "id": "1e866ac9-0e50-456d-be4a-94a169beff46",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "1ddbcb52-93ad-4e8e-b04c-63f67dc359cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95377f15-3de8-45ba-83c6-b86ec4b81d4d",
        "cursor": {
          "ref": "a00e1e24-3a72-497d-bbcf-b13cbaffff0d",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b80a3c4f-ee86-41d5-bc57-df4b1d363823"
        },
        "item": {
          "id": "95377f15-3de8-45ba-83c6-b86ec4b81d4d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "40c409c1-b953-45ff-a983-95b1edc2070c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57bb45fb-9ea7-43fe-a92c-c35ef675123e",
        "cursor": {
          "ref": "91d1483f-f0a0-4146-b54e-7ec7276a0105",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "815c8722-900b-4db6-8bb8-91db6f590bc8"
        },
        "item": {
          "id": "57bb45fb-9ea7-43fe-a92c-c35ef675123e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4d69ae44-6250-42aa-aa33-ea2ff260a437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50de1da-35be-4aaa-8014-7c38ff18e43c",
        "cursor": {
          "ref": "9fa2ebb2-954b-4df9-8757-c132719286fd",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e4febe6b-bdeb-4e6a-a2fd-c38bbe28750d"
        },
        "item": {
          "id": "f50de1da-35be-4aaa-8014-7c38ff18e43c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "22249e2b-0b60-47a3-961f-0d911e4f3c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1922ea86-19d1-4c52-a23e-fb5aac3f13fd",
        "cursor": {
          "ref": "fdc1ea4d-a860-4e2e-92c4-4c8e9cbf0675",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b5fa27e0-bc8c-4b07-addb-85bcc5a798b0"
        },
        "item": {
          "id": "1922ea86-19d1-4c52-a23e-fb5aac3f13fd",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7ad77a03-47bb-4d33-b303-53db31cc8efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6426584d-8023-43c8-adc1-40f547e1f72d",
        "cursor": {
          "ref": "a8f52256-5469-401f-8375-11746d8e000e",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "b52dc384-f1c0-4a5b-9cdc-223134646af5"
        },
        "item": {
          "id": "6426584d-8023-43c8-adc1-40f547e1f72d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ba1f45df-400f-402d-b381-ea531ebaf9e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5d22a8-4f41-41b4-9630-2d8882f648cf",
        "cursor": {
          "ref": "fcb0c349-1c49-4d47-8e5e-07a5ef344d4e",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "00756b91-d712-424c-a203-6cccb615c426"
        },
        "item": {
          "id": "cb5d22a8-4f41-41b4-9630-2d8882f648cf",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1495187f-0821-4fb3-84d1-c78a151d4781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb36bef-fade-431c-b45a-746ab4f633d2",
        "cursor": {
          "ref": "a4537b65-5198-4acd-9bef-00345970384a",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "121f2532-4614-43bb-8f73-847e40f13ab3"
        },
        "item": {
          "id": "beb36bef-fade-431c-b45a-746ab4f633d2",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "bd3f24d3-f9d3-41ef-a126-67414d5355ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c38d5978-24d8-4e1d-b35c-e1b1d245ef42",
        "cursor": {
          "ref": "321063e1-1717-460b-b58d-db94caebee5a",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "82db073e-7ef9-435f-9b70-78bb6cc74a96"
        },
        "item": {
          "id": "c38d5978-24d8-4e1d-b35c-e1b1d245ef42",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c1cf9a14-fd6f-4f28-838a-f00c6f5e1bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b922fd-6e70-4314-9ec0-18c1a251fcde",
        "cursor": {
          "ref": "2bbee8b2-3013-43d9-a3cb-c42c1acecf2d",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "da62a2e3-78d6-4306-a024-c44add267c07"
        },
        "item": {
          "id": "26b922fd-6e70-4314-9ec0-18c1a251fcde",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "62839093-a420-4f0f-85ef-5b0df9e3988f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c33a1b3-2edb-4292-82e0-ae170f16425e",
        "cursor": {
          "ref": "1373f926-f806-4943-94b3-b12e11245959",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "95d4967b-16bd-45ec-bf73-e387a2272b49"
        },
        "item": {
          "id": "6c33a1b3-2edb-4292-82e0-ae170f16425e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "89a6fd82-dd26-44ee-8042-6d6a018aa4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50982ad-6b8b-4e70-ac91-76901738602d",
        "cursor": {
          "ref": "6cd0e9da-7a17-483b-ae96-b224881904b2",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "236b494b-7355-447c-9d9f-ea733b92b035"
        },
        "item": {
          "id": "c50982ad-6b8b-4e70-ac91-76901738602d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ee67167d-feff-4440-8cad-8436c0c3bd4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286b00c7-e471-4a51-9ca3-24c2b69d733e",
        "cursor": {
          "ref": "cb620802-b7e0-48af-a21c-9b16a0f25b46",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "205a3f4c-09fa-4929-944d-3e3e918d10f2"
        },
        "item": {
          "id": "286b00c7-e471-4a51-9ca3-24c2b69d733e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9a845fa6-fb97-4195-8a3e-953f8dbb522e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b89fcb7-891a-4c2d-ab6a-9db4b27b6822",
        "cursor": {
          "ref": "cc3a5d0b-d8ba-4818-aec3-64286d424d09",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "3cbc4455-415e-4e59-b925-dae2849f57a9"
        },
        "item": {
          "id": "7b89fcb7-891a-4c2d-ab6a-9db4b27b6822",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2dd1d6dd-ecc9-4f8a-946e-7f6987831d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94980382-2dfb-4835-8645-7880e77f0714",
        "cursor": {
          "ref": "36b03aa2-a2ac-432c-9832-518946111942",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "506e7dca-0573-434a-bfc9-16224d7c2873"
        },
        "item": {
          "id": "94980382-2dfb-4835-8645-7880e77f0714",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "78248957-00d0-4813-9617-b9ab948f1e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64af6bdc-a295-47bc-98ab-6de66d9e4db6",
        "cursor": {
          "ref": "9b7cd916-c6eb-45c2-8525-17cfc1aa9c2e",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "675d2e65-d75d-4ab4-bf53-3292972a7921"
        },
        "item": {
          "id": "64af6bdc-a295-47bc-98ab-6de66d9e4db6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "667ccb12-b12b-4deb-99d2-d74b8e4a9aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe580fd7-f8c0-4aaa-9453-b282abc821ed",
        "cursor": {
          "ref": "be57ae0d-f624-4cf6-ab41-c24f99f8afd7",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "9ee1d308-a64d-4e07-a04c-3f019d9b712e"
        },
        "item": {
          "id": "fe580fd7-f8c0-4aaa-9453-b282abc821ed",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7fe02005-e723-4d0f-a518-0bf0f5832eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f143a222-5759-48f0-bc7d-b317d57c32f5",
        "cursor": {
          "ref": "0fe1f50c-a5c1-4989-8e6f-399a2941b902",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "d7c66fa5-3b1b-4577-8767-32a92b502d30"
        },
        "item": {
          "id": "f143a222-5759-48f0-bc7d-b317d57c32f5",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7f510efb-e032-4d44-be07-9666f699b02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6020188a-f00b-47f4-a687-78f55ca66e82",
        "cursor": {
          "ref": "c6202e0c-13c4-4666-b6ea-b26e80eeca6b",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "3974241c-8d2d-4aec-8f3a-02c8bacf0485"
        },
        "item": {
          "id": "6020188a-f00b-47f4-a687-78f55ca66e82",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e356201e-f053-4af5-b330-609d5bc476b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc694ec5-5ae8-4bf6-959e-87a99cc2b17e",
        "cursor": {
          "ref": "75450f43-b0d5-42cb-bb82-b607054612f7",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "b87a47e1-3934-4972-bc53-2ed32cd81387"
        },
        "item": {
          "id": "dc694ec5-5ae8-4bf6-959e-87a99cc2b17e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "79e8181a-8f93-46ee-821c-6cc3a47779ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f0c2a9-9173-4a12-b64f-731bb2957682",
        "cursor": {
          "ref": "88640d2c-06ab-479f-a5b4-6ecd04cead29",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "cf4debd2-eaf7-4e45-8c8e-8f561f9bd91d"
        },
        "item": {
          "id": "d1f0c2a9-9173-4a12-b64f-731bb2957682",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "94cb74b2-5fbd-4622-83b1-6dcf2ddf22c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13937ad-47ca-41b5-955c-fab9868b7907",
        "cursor": {
          "ref": "9d6050a8-6c64-4e7a-a89e-e06e6133c4e7",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "b63e21a5-cae5-4d2c-b709-a780148108b2"
        },
        "item": {
          "id": "e13937ad-47ca-41b5-955c-fab9868b7907",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d174d9fe-78a1-47ed-b654-f61e6d761d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e630285a-096f-4dd2-acd4-d30949b5c58b",
        "cursor": {
          "ref": "6ccf396a-e3fa-40d1-880b-dba1aea78639",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "257f377c-a393-44fc-b3cf-2684204a2c6d"
        },
        "item": {
          "id": "e630285a-096f-4dd2-acd4-d30949b5c58b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "23367c0c-a61d-45da-8b94-4402259ecc54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086857c7-2d06-47da-82f9-6bee4564a1cd",
        "cursor": {
          "ref": "78bb0b2b-1251-4b35-a1dc-7eded5111cea",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "ab70273c-55bd-49f6-935e-8673042b09ed"
        },
        "item": {
          "id": "086857c7-2d06-47da-82f9-6bee4564a1cd",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f0f7226b-1c0c-4792-a82c-7aa0bc5a90a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7dc8cf5-e0fb-4f45-99fb-9d7a5f6a27d3",
        "cursor": {
          "ref": "4cc1a677-b217-434f-8571-f81be1a3b71d",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "0027778b-b409-4df2-b8b1-1988056bb3a6"
        },
        "item": {
          "id": "f7dc8cf5-e0fb-4f45-99fb-9d7a5f6a27d3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "988cda61-f44a-478f-a44c-32fd7542d7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14589a8-8e86-44e4-8fa1-075d9fdc07ed",
        "cursor": {
          "ref": "af85b964-5aa2-4b39-9fb5-b762288d236e",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "2a7ffdc5-a587-420b-bfd8-91cf1ad50f0e"
        },
        "item": {
          "id": "c14589a8-8e86-44e4-8fa1-075d9fdc07ed",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9dccee4a-9675-43a9-b2e9-41d22cd3ae3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289cb3cf-345a-4cf7-94a8-de46b4c6fea1",
        "cursor": {
          "ref": "36dc62a8-6c82-4b70-986e-a168096b48d5",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "dd00ec8d-23a0-497d-93f8-72df916bbeaa"
        },
        "item": {
          "id": "289cb3cf-345a-4cf7-94a8-de46b4c6fea1",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d599ed37-d5e3-4df4-85ee-7b15f9941ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3f0404-fab4-4e9e-a98f-7eea64530607",
        "cursor": {
          "ref": "17c79d6f-8db4-4a3c-917d-dadf4b8f4881",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "e062d69f-daf0-4599-8e9e-ae427960796a"
        },
        "item": {
          "id": "4e3f0404-fab4-4e9e-a98f-7eea64530607",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b0a93059-b7a2-4e15-a6e8-554d4c9bfebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6455e693-988b-4e24-99fd-98bd108d0832",
        "cursor": {
          "ref": "775642ac-7f4c-411a-8e6b-622dea9c4407",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "d2d658bb-9c2d-45b5-a85c-cf67da773c35"
        },
        "item": {
          "id": "6455e693-988b-4e24-99fd-98bd108d0832",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e162ca22-39a4-4697-9b08-345fce8dd9b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49f132f-beda-4fad-b53d-ce2bc06175da",
        "cursor": {
          "ref": "d542d882-17fb-4390-bd6d-f8dc4cd8697a",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "957c283e-36c4-4859-8976-bb54b548c6f6"
        },
        "item": {
          "id": "b49f132f-beda-4fad-b53d-ce2bc06175da",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1be7784a-adbd-4bc6-a158-5d700ad5e480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2fc82f-6595-4242-a14b-d714c753fd2f",
        "cursor": {
          "ref": "81701e10-cdf4-47c8-910d-b348ed3ff8c3",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "695876ea-0535-45a9-b674-c065c4558e09"
        },
        "item": {
          "id": "4b2fc82f-6595-4242-a14b-d714c753fd2f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ae49620c-7f05-40c8-a85d-e391dc6e88a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bceac8d0-4721-4d88-95e8-7e914784492b",
        "cursor": {
          "ref": "6306168b-d626-4d65-997f-d67cb51fc549",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "6eb36091-040a-41ff-af92-4c3806b49b65"
        },
        "item": {
          "id": "bceac8d0-4721-4d88-95e8-7e914784492b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e5d41636-fc59-4757-b4c5-e010c0edf5ef",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e51a31a-16d4-4287-8b51-b2ba99df497c",
        "cursor": {
          "ref": "e850f0cd-ca5f-4adf-8343-ab3a4496e98d",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "04317f81-0e9e-4775-b1f3-3620a7a3945c"
        },
        "item": {
          "id": "2e51a31a-16d4-4287-8b51-b2ba99df497c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "16062cd4-7fb7-48ba-a63f-72a14616ada6",
          "status": "OK",
          "code": 200,
          "responseTime": 2211,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73f648f-9c61-4fa6-a710-7bb169414b49",
        "cursor": {
          "ref": "a1a2c94c-eaf0-4f6a-a35f-be976fbb38f8",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "edd19caa-16b6-40ea-986d-65d6227f51f7"
        },
        "item": {
          "id": "a73f648f-9c61-4fa6-a710-7bb169414b49",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f70fadd5-d629-4d54-932e-3c1a773cc262",
          "status": "OK",
          "code": 200,
          "responseTime": 2952,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd7a4c7-d25d-4a18-84ac-fd7cc94d5181",
        "cursor": {
          "ref": "f782b4dd-cabc-475a-ba42-d86c39ba7b02",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3632d862-ad48-4869-8b71-94eb326499b6"
        },
        "item": {
          "id": "1dd7a4c7-d25d-4a18-84ac-fd7cc94d5181",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c19cf10b-8080-43a4-a187-5f1eb8252d1f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd7a4c7-d25d-4a18-84ac-fd7cc94d5181",
        "cursor": {
          "ref": "f782b4dd-cabc-475a-ba42-d86c39ba7b02",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3632d862-ad48-4869-8b71-94eb326499b6"
        },
        "item": {
          "id": "1dd7a4c7-d25d-4a18-84ac-fd7cc94d5181",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c19cf10b-8080-43a4-a187-5f1eb8252d1f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86689194-9f60-46fa-873f-d9d543887b5e",
        "cursor": {
          "ref": "24af4d1f-6b12-4e5a-9c52-bdf96a01c067",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "99deda5b-0f9f-4c3e-9e57-4b07c6a72b9f"
        },
        "item": {
          "id": "86689194-9f60-46fa-873f-d9d543887b5e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3cdd9245-8254-45de-805c-e3c3424b35d4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f10f7c-a12d-4fb2-8740-75a51ac7a4f8",
        "cursor": {
          "ref": "dc068c46-0c59-4cee-a632-95f0df38ba79",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "eb81d60e-d161-43eb-b6ce-9a2d7d26ea7c"
        },
        "item": {
          "id": "31f10f7c-a12d-4fb2-8740-75a51ac7a4f8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "479d3ccd-2343-4a44-8e5c-726e585fa684",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}