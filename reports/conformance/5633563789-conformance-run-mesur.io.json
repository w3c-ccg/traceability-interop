{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "fea0c1ea-d82a-4305-895c-e82369995fba",
        "name": "Clear Cache",
        "item": [
          {
            "id": "96a8a779-fdf8-43ef-8144-b77e3994f178",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "421f6335-b063-4391-93cc-6fbbfc47100c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9f356817-6e41-4ac5-8f89-409a864827f4"
                }
              }
            ]
          },
          {
            "id": "e86eb480-4a2b-47c4-80fd-ceed79c7ae9c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "874916e0-44a6-4b91-9adc-e3698783389a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d253ec12-bc4c-4bbd-bb4c-01b74d2c59ee"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "51528951-12ba-4048-a14b-ef30c5d3d244",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "308fdf1c-345f-4bf3-a416-a1d45504e143",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a0f64302-f919-41da-ac6d-6d6863012450",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "46e01660-068f-41ff-a5de-34fcdef4f5a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "67e14bdf-a974-43ff-be13-acf98d23b586"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d23d3194-7e9c-4b66-9865-725c70d1cb6e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4e7da120-f7a2-4721-ad00-f6c8ebece61f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c7532bf3-8701-44c2-8e3b-77f6330e7853",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c0461570-7e1d-4cc8-9d67-936746e5d224"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e0abf86b-13a9-4c43-876a-6bed45555fce",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "59a23cf6-698f-48f2-86df-2395fe660cd3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e9895f01-ce1c-43fc-bcee-bb464608aba6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f12b3a5e-6058-47a8-b3c4-3c037e5fe57e"
            }
          }
        ]
      },
      {
        "id": "98a11a6b-b534-4555-b0dd-b4d4ebe19a74",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "097e1028-86f2-4583-88bf-71a4eb6c8af6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7fa4d8cc-3fe8-434b-80a6-c2e46f213573",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "64d7a953-c9c5-4a67-8857-fe2573ff7a99",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35373a07-514a-4264-b1dd-e85e6efc2662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71014b16-8cc4-4240-a952-f60ba46077ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77fb24b6-e4f3-4c98-8de3-e1d24957c5bb",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9807ec28-c96a-4b05-b354-19e91601d1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "61048b87-48f3-49c1-a13a-a89fa7ba5a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a196ef4-23e3-4a64-a6e9-c6a2bce6973e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "708bf8cf-9339-4dba-a7fa-bd82a89395ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f90c8688-6d24-43b6-bacd-9107f54a31b8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8139ce72-3e10-45e4-9362-620655a96c40",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3019bc26-2cc4-4e10-8e4f-dd8206b16b91",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60696b26-5bc6-44a7-8d4e-bb88bc4051ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2a6ccfc-279f-40c1-85e6-9e0815106fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e09785c-3632-44b0-a7db-d4f753f65928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd51ba10-a346-468d-ab67-862c1fe80a24"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c4e69784-68ef-4264-a8cb-ab01597fa2d8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "78f4f7b9-c67d-49cb-8e5b-f1c30f97706b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "530c49c6-c2d5-467d-8552-a14efa3d6753",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e32d7c2d-84b7-406d-8e58-7b29c66149ab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2e363bb9-0df0-40aa-9281-070ad72cfe1f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "9ca70386-3d9d-498f-9c6a-0bfaf29a389a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "477e645e-36ab-47dd-9e68-43b55f6b9386",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "81fbe217-f886-4975-8103-e8abc24a2d5d"
            }
          }
        ]
      },
      {
        "id": "0ad23fec-f1f2-4760-9abe-99487495f563",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f24bbf92-c741-4572-a922-ed3f6b8f3c7d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e9fdd432-7689-4976-a047-af15b8583aec",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ae0c6c81-d932-4c77-b40a-3bc0dff4c4fd",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ebd997d-bba4-4b3f-91a1-75cfe7df6456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd45278-5be1-4159-a9d7-ad3eb2080540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15da776-ed99-4e5d-8c4a-36909081618e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34986e2a-63db-4594-adf7-92a2551166a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a2f1e6-548e-4168-bad3-3a8694939b7a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "587585b1-ee83-499d-ab97-f2044af15451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea1c29e2-c0dc-46da-91c4-8dfe59937252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c75156-ceb4-4f94-9560-282c7935b6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40db1cf7-38fb-4215-bec5-950d52a8283e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdbba6ab-f178-48fa-afef-4c79f12b35a9",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a28328-50ab-4781-9bb8-c23f04cc82a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "159258af-27f0-46f8-94f1-05827cd8b51e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e332f9a-1501-4ed0-a816-8d01dbd81986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6466d73b-7ea2-41a5-b7a0-8f047b803506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ccd4f7-9ca0-4154-af51-335e6e8fbcac",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "477192eb-25b1-4d6f-bd76-f1291e68ef15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e67dfda-4ecc-477f-b65e-06da92921937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ddfbdc-a899-4992-916a-7f19d903198d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc28fce4-0597-4b76-bb40-1e3e356ac85d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e00d260-68ad-4b30-bf5c-9d321a413102",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac07fa4a-0157-459b-ad55-0aa9988ae731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b090721-0181-4830-9be6-fd19ac38c62e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b22dd13-a499-42f3-8e5e-c333e1efde3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2a64e12-0445-496a-aae0-27a9658f552c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251db36c-e93b-43f0-93da-6c6231ebb513",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de49e1df-8ae9-4a6a-b6a7-6da1018dadea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0125e6c5-8f4e-42c9-97a8-ecc8daf266e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0817f8c-483b-4a47-8ab6-e95536c302fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d778b3a-4097-4ded-9ca4-d2101771e70c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c634cb17-9248-475d-b5e1-fa8736df2722",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e08183a-1517-456a-a0f0-1312d0cbf442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "830b27b8-253a-434f-8c3b-c04de2548ab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35fad21-4f47-436b-bc67-0651a7b42b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ea4d221-1c08-49ea-9be9-220e42801ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04eb70c-9560-4500-9ad1-5cc73456875e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d5b46c-c76e-497c-8e37-8450f10490ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3fa269b-d10e-4ebc-b278-af27071a627f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78148fc7-6f94-408a-8155-731e934ddd7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7684511d-b355-4c06-845e-27802d2d170c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b0a2f1-ca4c-403e-a0ca-b71407fa674a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f57aa88a-76b7-402f-8ae1-cbabcd927872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e81bd8a1-110d-4728-9002-82f837981f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def984fd-441f-455d-817c-824d4cf54d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e20a0748-e0aa-41be-b5b1-6a553d0af14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591ca184-b63f-4541-8277-fb069665534d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06c514d-7829-4ca2-9384-2a47151a31a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "981e9701-ed4e-44f9-96cc-04855b1e1cc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea53d85a-519c-404b-afea-72bcf86d1354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef469a2c-0143-4e0b-9186-524bd8fb34a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d802ff-5aa0-44d8-99a4-89f497e1e366",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "653407cf-f747-49ff-a5ce-a020974fad19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f124e94e-a244-4a46-a576-3ba55cfc3a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68fc3f4-62f0-4a08-8608-ce931f1005d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28c973aa-7f3a-48ad-9f1e-7bc7825e674c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3331515-4dfe-444a-8cf6-2d6b0bd349d8",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7736a65f-4d35-45c2-84dc-0b8f77643607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8989e2a-b266-431f-83c3-20fa1ae501ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ac2507-925b-4c81-8dc3-9aea707eccd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f369fe7a-b664-4c51-a816-f97a398935f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e0bb29-b76b-4ff1-94cd-fd9f5be5e2bd",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab725447-032e-4818-a336-dc7b6c4c3a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6770c079-16ea-4bf3-a19c-bb517c313345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6871627b-4ee7-49a0-b838-5f3d72bc173d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b88d24e0-3bc8-47f0-ab79-e467c236e5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43480cde-b2e3-4615-bf62-7ae0ea3baeed",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb9835d0-c10f-416c-830a-f4aa8995b588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50cc9562-bceb-4610-b0ad-79f390985194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec7cfd30-a3e6-47a5-857f-e0b4e16a1643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc8b3751-16d3-4572-80a1-c7789de829ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d736e57c-78c3-4f10-8b2b-dcb5711e86c9",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21cf0fca-c45b-41a6-9723-d1c697e03055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "876f7f8a-8b71-49fd-a9ef-08baa9741d13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ae8b2f-dd50-41c2-888c-57bc86d640a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a893301e-285d-4368-a401-d32c8a8f11ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ad8112-1f06-4cd3-b006-6910d31f2b36",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c634469-0177-44bc-86c0-0f262421ba0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dde2288e-ce0b-401e-a0c3-42a2b797c54a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c145cad5-84cb-4e92-a49d-89b26e44ef18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a84de04-f684-48e1-a5d4-b1678718b8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86689a87-4ab6-4466-990e-5675520e5b4d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48e92de-483d-4052-80fc-34cad1bdfc59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "435bbb29-ee3a-4808-80f3-d8f10c8ef5da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4098028d-0e92-4942-9202-5f4ba1ce2060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb67ad4b-2f40-4105-a83b-78d9ebbaefa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784c3068-327f-448b-b652-ca739246ba4c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f9094a-4d7a-4bfc-9add-41d7d99e8c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aab4be82-0e94-434b-8e67-22f90515aeed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19fa5c3f-aa73-4d41-aded-1737259d057b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7486caa9-cd3e-4278-97a9-72c67f85fa35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf9c27f-5385-4b7b-97f2-31850950fc59",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b7906b-e1ed-42e7-9f62-3540a779f859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56cdf42f-f758-4664-88ec-0b8227928390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dba7a87-237d-46f1-ba92-c3f696885566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b5383a4-fc36-402e-afdd-b7c2b0675f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50dc9948-285b-4575-ab07-18801613708d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0e1edd-d947-4809-a331-674d71adc477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bcb18c7-495c-4a3f-87b9-7ff30e80e5a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9c135e-7c09-42d1-86a2-f48ff6a0905f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1f4a428-6c33-4ff6-a687-bf25f15b1092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e391003-66a9-4fae-9d7d-a8fd692df266",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd37017-1df7-4346-9a50-82b873b21299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f94c7204-1c8f-474e-8fad-a4f788a92040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b620ec3e-728e-4ebe-bb7d-25a16fb2aa1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "46c7faf1-2a5b-458b-8959-1349c8b98546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4454743d-9430-48c4-af2f-09f82d8aebe7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f22c52-5057-40d7-80b7-6d82b23a3bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "150b85ab-33a9-409e-ab78-1c20fafb6a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4f3939-25a1-42ad-b5db-d26bd4e34b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "11e55ae7-1f12-41c3-af61-47ccedfaa47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c744c49-0b32-415f-b26a-af323fb62057",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a1fe70-590a-48fe-a106-d05e87c01d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2761f9fd-2bee-4f5c-b5bd-0260f6535380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040f9f8f-52e5-4ec2-bab6-e16d0461e909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "830d7cfe-5496-4c7f-9807-16c00204c320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21c93be-f717-4498-a343-a908a0f896b0",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25330ec6-d407-4089-885c-e8175c72b742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a22e861d-9c41-44c7-a493-4ee93bf36793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9700679c-4438-4c02-a39d-31ff185bf1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c467350d-c86a-455d-81f9-3692919a5359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d087c5c4-c8ba-43cc-8a21-aa40884d0ae8",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea154147-5906-41d7-bb7e-5a0de68b221d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91b24f62-0e6c-4b93-ae9d-0d143300e1a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9279cc8-c134-4957-af51-d764fc2e969d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ad9a0b3-49b5-4783-b6e3-b40516691e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a359ba-a563-412c-aecd-1ef325daa9bb",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c895e7e-78a2-4844-8b45-7c060ce64a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12996d31-9f69-44c9-aacf-36a3a53d7a61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197d9eab-b965-44d6-aaf8-eb50fe1b1f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "09cc6f7b-254d-47e4-a5f1-a903c34f7b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca2334b-2464-474a-bdee-94b3d2f684c1",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0a1920-6b7e-4843-97e7-cf5501b46dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65db176a-efc7-491a-8c7c-bb6e224eecaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db856ced-1ee4-453f-9cdb-8b09c09589d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "28a0e967-302b-4236-b262-19ea9076ea47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e1c50a-8e78-4e10-b0a4-04b33e9ac665",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "489c90ed-b79b-4ccd-b2ea-01410404bc0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60656382-2917-4354-b2c0-b89b3e2d6659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09081c3-a314-4ae0-8773-a9a05546fa88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "97f804dc-c6b7-4d19-9ae0-493f979527a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "124b7d27-3603-43d2-92ae-ac87df0b9979",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "249eca79-de34-4640-8702-bf843da01ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9785ba21-d641-4e48-ad7a-59929c3b1f7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58f461b-bc80-47b4-b4c3-f9595dccefad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce52ac45-f892-4091-ac3e-5186607b4029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a934827e-ddf5-4502-ab7c-11855482e764",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d49ce95-2a22-46f6-a864-c9276c5c9fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae338e33-b48c-4b2e-b5ee-1173b06a3bb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34754c6a-81ae-4aa7-aefd-b8533ad25f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "56a7eb44-fa5b-4912-94b6-d48715da1a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f7735a-958e-4a00-8da0-35439e508f4d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea131ef-08a8-4db1-b1da-adc24f2e14e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "948dd959-3734-4799-984b-a36e6ce36b47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aff6ba0-ee10-4346-8841-00ca803242be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bf5ea7c-f466-4f65-8ba2-522371e5fb5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c87439b-10dc-4018-869d-a734d948f07a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "763e33a1-571e-4f00-81b7-64b07c61e2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ea47356-1c04-4e28-861c-cbcd8dcdb643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c05f1a-4537-458f-a318-d59f38993f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa960675-c126-4f99-b857-38bc8dc79c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eca9a73-577f-42f3-938c-7155dba3cc4e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a234cc5-bb37-4f80-9947-c1dfd5a00a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8bb2a45-491f-40ee-bc3c-91114fcfeeeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29cb6166-eef3-4377-86d6-71e7a31e033b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c4d03d0-f3af-42ed-913c-f3332e36f0bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c575420-e5db-4bf2-9656-32726f48bd91",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f644848-b138-4c21-98ab-581c3fc8a36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1f08285-2c58-4293-9dd3-77f0aa201925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c5996c-2f83-45fd-9c28-23e5a4dd7359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5957a8ce-fd79-45d8-8e56-91258c15c96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0101d44-3329-4645-b45e-377be5efb1fc",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79929f9-a172-4125-8d69-a533ec35efe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e09ef856-7984-4232-9a43-7b6038b712d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b8769e-8471-45bb-a73d-4f2cdcfc34bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6dee1282-5b72-441e-8fa9-a3ac9a434721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7339ba5c-1de6-43ec-bda0-fa9d95663d6a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9230943f-2b50-4f38-9ea4-322cb23d0c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7e5378b-2548-47cf-876e-4895aec72015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f007cd-a1b8-4791-81d9-10051c676393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8da9bd50-5d53-47dc-9f47-d6eb0df78a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543c6d0c-82da-40db-a3a6-bf05b3b6a0a8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af05521-5f18-47e8-bf60-1e1d6eb159f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "765b83b7-92c9-42d7-a4c1-15c8d1cd291b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7864bba-1f83-455a-ae3a-f64b48f56b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3a0bec6-a04f-40cd-bb75-20cc28e070a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828ef1a8-8923-4244-8fb1-0635dbbb342b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f269886a-f89c-46d6-b4fd-a03de073fbb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "149ef205-9344-489b-998b-cf45fba5fd27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e25450-a331-4ce0-9c5a-c65300381e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0360dc65-cd85-47da-9ec2-58a624006ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa415ac2-43a7-45ad-a547-f48d4b905e7f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc1beb4-d245-4f7f-abde-97824bc74e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ac419c8-cfe5-474b-8ba8-2a5aafb07f50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ee8edb-0364-4b64-a045-6b5686f827e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2953ec0b-2ee5-4b8c-892a-46cb1f4b36fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70513d5-5b20-45d0-bcba-15d3facd92ed",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3a86b4-5b35-430a-905f-95aa7994bd28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95789b77-efb5-402d-ac0e-66d12d8db1e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d875adf-4dc6-40ca-abf7-9440e19f9f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6849a670-d4e3-4b53-bd81-5cd1d99907fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fbeedad-b15d-4d22-9adf-528f37129bde",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e19ab1-cb00-46c4-b8e4-2af515fa1227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1100a54-f7a8-48f0-8a92-e7b3296bf600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a34e81-aa84-4cf2-ae1a-306b4fe6826a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb78e866-c30c-4e63-80df-efbf4ba1d269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df2e96c-1aa7-49fb-866f-e0e46c147224",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "456a6256-223b-4a4f-820f-f82397a5b6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f0896f4-2e8c-49bf-97ba-3316514ed81a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f54cd56-8f89-418e-8a1b-74c46a33f0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6b7a7839-4452-4833-a4bd-31112ace8fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51d9350-74d0-48f6-99fc-5e83d81553af",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0ad3bd-082b-49ec-9068-1682b5a1d71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee11e0fd-bac8-4e3d-baf0-0cf6258c542b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53807b31-fea5-4048-97da-ab135e9f818b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "eed9ab83-7110-4e84-9134-79aef5960a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df6f58af-a618-4013-b8f9-a594aac483b8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e5fd72d-b7f6-4d20-93d0-dba641eff0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d81efb29-cacd-464b-90fa-ce2b10e99900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c4442ca-8dd9-4b58-9a20-35147ea39e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8dcd81b-7469-494c-9121-f8058ff47b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ee0a2d-fe93-459d-8d79-00a44f46858a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c927d8d-d8c6-4906-abfd-596c27a0587d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0a49ad6-208b-4973-a9b2-6b1c90a34ad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c72fff8-43fb-4c10-8b87-3299c904590b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9123d413-137f-4f59-aeff-df3b9c102d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "579d85f3-e326-4ab2-a5f0-afdd658e754b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "865ff640-12a5-423e-b44f-14edf34b2331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2665c2a7-7a1e-476d-9ee0-4100317ec146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31691b8f-ebeb-472b-94f2-7de979cb7582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c6c7778-4156-4bff-8e7b-0bb0b72e6342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd3fc9b-8580-42b7-8211-6527a27db2a0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec74896-b2b8-48b4-b6b5-1c58bef37609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "720b151a-f661-425b-9a20-fd021eaf6f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451cc585-28d3-4884-b6c6-ce6ae40b8f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad6629bc-d0ff-4c91-a226-34f2dc129a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a993290-55a5-4877-a535-71bedebfe6a2",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bffdc52-932a-4d51-9af5-7eb5bf863553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c48f9ce0-1e71-4dec-96c4-d417e1b8c1de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7394dae9-d239-4972-9f47-ccfaffeb888d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6df0a486-d8df-4a25-b838-63a0a0c803be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1b8faf-3665-4425-8576-ffcc86808257",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2121f34d-81db-4ec1-93fc-5a7971d68713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea390a5-4828-425c-b9f4-effd03deb005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5aee634-7225-46f5-9a84-54a92fe90574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ecc5ec5e-4ecb-4f00-9a9c-c3dd3cbc5733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f04a5f3-1796-47b3-9af2-d92552af2e21",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25082691-55e3-4a63-9a03-2210d6841813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f00ca2eb-7d94-41cd-a18e-f2634b39ad0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbc1c42-dc18-4692-96b8-160d5605c8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "653a7a05-9ca2-456c-a054-10f68a253eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3936508-7f9e-4be4-aff3-ec23d0653186",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a916e38f-502c-40e7-abe5-dcd3f08bb26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8253d0c3-2429-49b0-b979-12515e43977c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7397c67d-583b-41fc-82f7-355f5c7cc21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d9929db-d023-4f98-8cfd-246139d4480f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e87719-e172-4e62-9843-42ba6a557ac9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45fe2f9a-fc44-416e-ad05-982bbac43344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5183cb21-5b60-42da-abfa-fbd545bd354a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a3e1f3-b3d9-429b-b3e0-22c884615fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b0d827c-ad22-4bff-98ca-ffa5e424bbda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4adb533-c881-4549-98b6-96ca982b36d4",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8bbc81d-942d-4178-bd23-ce1f158656ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef4318d6-0d66-4fbb-8776-bd357816fe3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd74670-2d51-48a9-a188-b4ce36a589d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "933f30dc-1838-48b3-a695-751cb8fd350a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91905a35-bb93-45c6-aa75-cd906245f403",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49dba0d-032d-4d68-8ef8-1d587512a338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2efb0e91-acaf-4253-a04f-dd662d137437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0afa24d8-5daf-4042-9e4c-d674d7b13765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b1cc07a-dad5-4999-8b67-22adff51d41d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb584b49-6c0e-48e9-accd-431d279528da",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ea9fe4-a54e-41d3-9f91-e60d485176f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8532ce17-453f-40e5-a576-88623a35052f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6019238a-a668-492e-b3af-e52254454a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65d2b627-7faa-46d8-8e82-4af91682d754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44979a9d-3547-4fbc-9840-536483a048c1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32711ee5-bb98-436d-9a16-fbeae38d6f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad37e7c-46a7-44a2-add8-c70bdf868c21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dddd31b8-09fb-40dc-b5af-410b0521a2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f0cbf3e6-b76e-4de9-9959-0acaee771d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6208331d-3393-4d00-8509-a202057fc415",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1acf1f-d21a-44d1-ace2-d7dc9afaa534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "affce9a5-1a97-44aa-80e7-0b2e732d13e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b92b597-bdda-4bf0-9e6b-16f2dd893776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c235bfc4-c016-486b-86c7-9210d9cfd8ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e1568c-2b93-4a05-8508-e261aa3caf8f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6885ac34-3520-49db-b87a-123e72a9a353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4819c2ae-e8db-4df6-9320-44d25a36c882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe67076-a665-4494-a6bd-dd8d795b72c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfb10706-e621-4bab-a8e9-3fa60276b51a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f0bef6-b973-42fd-8a6f-1916e8e9bfae",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba9e8c9-e248-4e60-937b-65e817863150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1334bf78-2b8c-47c8-9347-371a45dcf6c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75586d0a-02c4-47a1-aeb8-7aeeeddb54a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a95c23dc-f9cf-4291-9957-6c211ea73d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c128bab-8193-4fdb-b97f-c4fb0cc40701",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "996a09c9-051a-4a0d-ba33-e9124aaa5ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2067067b-8a7f-4eac-bb23-9041a24fd67c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4efc0f2a-092b-47db-bf21-de1c00a01f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9d6ba87-6c2a-4334-8433-6b44c0338656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f92095-8134-4f97-95a4-a40fdc387334",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0403fb1-828e-4a19-aeb3-e869b6405960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2595645b-ac1c-4ad9-be68-f59f0aa8750b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84723aa9-a186-4549-bab6-5fd349a8be1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2ee6580-02ee-47f4-9e04-c36c1aad6149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aca0aca-56ed-4463-bd94-047c4e76ce68",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f92ac0-446f-49c0-b322-cd0eae8ec258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d32a9fea-2fd5-446e-9a67-e2509d07912f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaafdab5-bf05-4455-96a8-3a120012771a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "809b498c-c85f-4ba1-bb5f-e4332aa65196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e1d47d7-0fb2-493a-adce-113ffea93c69",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99af02a2-c121-4d94-b95d-9a2c164cc1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b048e9d-5c28-482c-94f1-f62ee6f6d516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb614e0a-5bbc-4329-a552-ade251ebd274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea05446e-f3fa-40b8-a665-fe7c3f7427f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e16afb-8a5d-4841-85f3-4da91ac40459",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0110967a-a75d-4c46-8aec-2024e4dc6b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e29e158-e23d-4683-b819-95c03514c7f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9749a67-df41-4667-a96f-3211f21a7eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9f8cfb6-7fc2-46aa-a80f-b3f3f72f1f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120339b8-eddf-42b9-a743-3c71bd1879b3",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b89150b-89e1-4210-81ae-fc0db37b8a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6eb867c-a4f0-4b4a-a68a-2e48a2da53de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62aaa17a-80f0-4c71-907a-d6d5cca90cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5526483-68b9-4de1-b13d-a5af0795a18f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7675f2b-a5c4-4b01-89ba-619a4c19c684",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20ffac2-213f-4fa5-b247-68daa30566b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a876660-64bc-4560-8749-1872cb4e8d4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf525185-755e-461b-af49-b7e232455fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a059ef83-d092-4dcf-9e5d-2e85b11f7fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b89fcb-4e29-4a76-add4-a6203f52a4a7",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc35b503-96ad-4d10-8359-85068e5731ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2db9f502-f0c0-4804-b569-d9d16a266c1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d80e63-f192-4b6c-b028-d7809cd75890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ca0dfd54-2a41-4c7a-84f4-811a795d2eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b8152c9-54ee-46f0-8f4b-4dbe0d448bfb",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eef7e73-5118-438d-9219-06358d1f0a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2904b97a-d929-4b2d-ba62-77049e581c8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2421ef1-fb87-4608-9f3b-ab4d074a77ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8345c012-90a6-4e56-b434-b4cfcf31d8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ddff7e5-6f65-4a18-bb6b-8618adf2cb7d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad83955c-6e53-4c97-960a-cb8db3435896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e651cbaf-b599-4600-a5d0-fafff2b91e6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9d5ba8-07eb-4d4f-b960-5165d0cb8981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a12d8ed-f32e-41e4-b5c0-87d7d11e2ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63cc24e8-8c2b-4c47-b167-190c0f1b2732",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb691d66-5e5b-4aa0-933d-f8553139eb15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8fce2c2-33ba-4930-8837-1170a84663b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac8d877-5811-4ea5-88a4-5f8afe687cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4d76798-34b5-4589-889c-0ed27e3cd1bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46695c0-b100-45ff-a5ea-23892e6093d2",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c897daa-416d-4fcb-9443-2ea0b4851b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68eb12b4-57db-4e70-a249-737fc5903b93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd18795-2774-42ae-a9e1-4bc011c55025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f3b5f47-cb99-4636-b8f5-16f381a856bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25458f05-9e6e-4cf4-adf9-92e3479b799b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ebd8e4-2a6b-4846-a685-121238fb2c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d87300-4280-43e0-9a5d-226e20c2438e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0a13aa-d375-4ef2-9e39-a6dd1d3b32fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "abce75fa-f7bd-41e6-a923-00629bf38c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e24697-5b5d-40a7-87c6-e5a78452ea86",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ef0fd2-727a-476b-b24a-ae48cf4d3e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43c8f031-2dbf-4b10-b321-eef4b7363ec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e512ea7-78eb-4ee8-8e6b-6e5c42edfc2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "11622207-6c99-408b-a27a-04e3bef284a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e02327-5adf-4e44-ac21-9fcd72c0e568",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8514a073-57f9-4d00-8611-ce5c33bf6a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a6d496-7cc6-4bf2-9c67-ddc56ac9f0dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25913af6-2ecc-440e-a059-7f488ac0ecf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d86f4d8e-8943-4bba-8125-af70673379c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7496590c-3c7b-44b7-b709-e56a6593c44d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea59dcd-3637-4dff-9320-eb04409dc06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38df7ea4-2aa1-4c20-a647-70bd57cdbfa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550c167e-60e1-4735-9af9-863e54cb0d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e885cf4a-f876-4dde-b6ff-b5af533e5e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "969a59e8-d5ba-4e14-91c6-66bc6616a488",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34dad1c2-01dd-4907-808e-c6936e32bab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "645107e4-90e7-4ecb-94cb-d54a4741ea38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7bc771a-5b69-488f-9014-51ab505f5d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3397415f-a5d5-4b11-b72d-7d10a385eab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab449bb7-deb6-43c5-a037-56986360cac6",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e6e0f4-2049-4d16-b349-e8ae4341ecfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20200ee9-6d63-4b88-b2e1-2ae375edf8b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e12f86-f5e2-42a0-a7d1-98500449a072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "789adec3-8a9c-4f91-953d-40b43621285a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15fddebc-4387-4632-9d1c-7721934609df",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bcc644d-17df-43a7-871d-375aa2a11294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b704dd7-99bb-40b9-94e9-b50f834411a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3722792a-b88f-4213-87aa-7f6723810d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6e1285f-9e2a-4038-a00f-8f6bd9522bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a50adbc-1323-48fd-a35d-faa5878c1a93",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef325a25-6706-4926-9126-6f73ba9d9ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06c892b6-8198-4775-a6c7-8f5785335cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b633dd-50a6-4b6a-8f36-a831489c723d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4e9c956-c760-465f-8487-af56082ea1cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a53df93-d04d-43b6-b87c-5a99cc87ce39",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "477e32e3-8344-4d17-825a-fc9f868cfeea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09512969-4950-4b35-a00d-41bc2977f8b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51ceae2-6bdf-40b2-a696-cca97f32252c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b1c32ebe-2434-4eff-a451-9ebab0f29cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb261e44-f56f-454c-91bb-3810eae2099a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0236950c-7b48-45cf-9f73-d309123bbe43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0219c0bf-040d-4bcc-9af9-9f27c185a657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f6d94d6-6aeb-43ad-8bf0-eeb658ed1f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "badba818-7499-4009-a05d-cd42276ac851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29866ab8-bd6d-4906-b232-64fce4d638ba",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e28d52-7946-4d23-8259-beef10809339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad79ee94-9981-468c-ac39-f566a1636f18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44d8a65-bf83-45fe-98f6-ceca5dbf7918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4ba6745-a335-4cd4-9985-a5a5194b1e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b20c41-db52-4d99-9a43-cbe47b42f29b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15cbf1b6-b581-4726-bbbc-8c35925ea767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "666b0a54-ee2f-4e69-983f-62ed48f72f86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063f5a97-97bc-4a32-8460-384c9e4b4df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a1c3416-3de8-42ec-9645-63da2862a159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06fa22c3-db0c-44e9-9dc1-47c2d8ce68dc",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f581ff-0cfa-404a-ba4c-192c4ae6180c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "504b6ef5-e8a8-4033-914d-82775fc3fc89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82d1c71-55c4-4474-af27-8eb5364b2ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4953c50-67b7-4ff1-8c2f-526dad35c4e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0188859e-e840-40ec-9681-d5c0699fb570",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "336d4aed-06e4-4584-ae64-9ef3462b2320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a37d4bc-c07a-4ac5-a0ae-5dbabc830aa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7515c5ed-0856-48e8-9f98-5608b6c1c704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fc8e0cca-8b38-4346-9006-01dd9ef0e67d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03616112-b5b5-4091-ba89-7ac75d9abd7f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb70a7fd-ff9e-4818-8fd4-6884f9370fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "222b719f-755b-4e2e-a9ff-ae8bc8f73f77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4cbc6e2-498a-4b6a-8e43-ae0b10ccc75b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3166199-6bb1-4962-993a-0a628640362c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765ca9e5-8526-40ec-9768-55b799e62d03",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d72764d-ec71-4e44-8c41-7da77f7ba4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3c496b4-bb2b-4576-a92e-450322a5681f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b7fba8-9c7b-4f06-854a-e7865cfdf21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d226dfdd-f5a7-4090-a43e-8687b11e272d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6a8cf2-c6cf-4b5b-9b10-bd4b4e7f7144",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3174e8d-612d-41d3-9ef1-32cdfa7130cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8414344-62ac-4aed-b512-ffb5580401e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c1e2c8-c9ed-488b-bfb0-ec5ef58240c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3459c745-1670-45f3-814a-bd31f21df2eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84beaf1d-c36f-4f6c-b7ce-849188aebeb4",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30aface-ed59-435d-baf6-cf6427361258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7585517c-3467-4350-978f-e8fdfc333d26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f387cbd-8512-4f64-ad05-029e423a00a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "73621a54-817c-4553-b01d-7819066452ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb2e695-af90-4582-a457-874ef34d4afd",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c4ada8-f2b2-41b6-af53-bb874b68d358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "334d0428-9622-4c74-880b-dfd3506747c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6760e2-2e77-4f30-8c9a-b59a1ad32b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f600e05e-ac1c-4324-98a4-9401aba6379a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2b80b7-9551-4ce2-a3f1-48fbc3ddd285",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb2028a-ee3f-46e8-b45b-6b0dee75946f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6559ff8f-634b-4c5b-96e4-ed169d7e172d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c68afd0-7dcb-4bbd-b746-7a07ac5b4b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "34329527-0455-4278-9b3a-537ff1f1a478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5caa56b-a0e5-4578-b802-f7d9199bb75a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07015d88-6921-4479-9ea0-36b2adfc7485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f21a0783-3b66-4839-add7-d0e58ddf8e6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ff0b9b-772b-4899-8481-b46a9da1e70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a5ddb37-0b65-4a47-9c55-2123bb8415d8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6e72dee3-f5af-442a-ba6b-904be0bdd80d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "00df5633-d196-471c-b1a7-e2dfc426f14f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d6283d6-982a-4f94-8c19-b67415d88293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "689bd486-c5bd-446d-bce0-0900c97a8c3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2882a359-d7d3-4a93-acc5-0f70bd8e4619",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff6a7cdb-b622-45a5-995d-3e51cbca6c4d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1847390c-5b32-4ac1-8cff-edd52fbf2737",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7792e8c4-012a-4c97-9b05-5fdff27f0b33"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6129bd88-8223-45dc-a38b-35b5993f9082",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "192d0000-6bf0-4573-a432-8abc97d27c0c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e1222394-0f8f-473a-ab9d-92d8ac5af97f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4cdfc1ac-aa46-4b78-ab78-a280172bcee0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "144ad5a7-a26a-489e-b19b-47f20f0a48cd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8b7bd0a8-0286-4745-b487-dbb657ba929a"
                }
              }
            ]
          },
          {
            "id": "ee7fc6ff-7cb6-4374-9778-8fb28d0192ac",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6067fee6-f29c-4269-ac58-ffd0fea564e7",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "51397a20-bd3a-44bd-86fd-0f4b9baf99ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ff2a5ae5-db34-4c90-81d6-0c951b8673e0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a84ce57-d1e4-4a01-8659-902f7d88c3bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dc84b706-7889-4248-ba51-0d71fedaafe6"
                    }
                  }
                ]
              },
              {
                "id": "5dfd0921-b4f2-4a53-8916-9f06e9dcc759",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc01e13b-25aa-4055-a71f-5809f79288c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7555d411-6c6b-4496-8a30-d84fe8e2818d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0fa74f89-73c3-444c-9d6a-d5b1f1d7b7bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b9568cb2-9ec1-425d-8684-ea62c4310836"
                    }
                  }
                ]
              },
              {
                "id": "4f4f36e8-6dac-4d63-a0a1-37485eb0a7e5",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cab94fb5-0ec6-45b2-9727-7c80084d1879",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c2fd62dc-29de-46bb-8b05-5ec220edb5ef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8bc1074f-ae62-4bdc-8b53-4ea41981ae74",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4fc8b217-2c64-47f4-81d8-d4ecb1f9580d"
                    }
                  }
                ]
              },
              {
                "id": "cc06a094-3e5f-4655-b29a-4fb2b596b574",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "72145c8f-dc12-4ad7-8d0e-0a8ca20273fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f19388d-bb89-4fad-a7b3-806c49aedfbc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1e786e7-7f9b-4bc2-9e8c-e5aed90ac91a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "713a5d40-f124-4d9b-82e9-e6b524806fb1"
                    }
                  }
                ]
              },
              {
                "id": "5970d947-2b92-4eca-b2ee-caf0223ee144",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f389cd4a-cf74-441c-a594-62c57fb9b007",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6e59090d-8911-4be3-9d31-4cb918595fab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ad12bc6-f752-4564-a6da-aeb92c56628c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8937de6c-14e4-4ec3-8df9-2d988b3aa9fa"
                    }
                  }
                ]
              },
              {
                "id": "64176eca-4f5a-487d-b0e1-5689de66b47b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "216f2814-2c97-41df-bf5c-b053e2d60f81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "424b3164-24f6-47bb-9dc6-23b87bc91a91"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52b2baab-ab0a-4348-a151-bfe58ee13b36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7623ed69-210f-4792-ab35-f2aea13edd05"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d209deea-5fc1-4fac-8931-b7e9f52a1bdb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "31522056-4bdd-47ea-8be9-4c3a68c4de0a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4e0114a4-4e57-43cc-a012-e5f853cc281b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fdb52ff4-86b2-4980-86c3-f695b0d63ab3"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "13803d37-f12c-4c8b-b238-b3c78d693399",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e837bc51-c941-4f8e-9518-24e5c696cdc9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f673976-c1ec-4d8a-814e-a3a28c74576d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ee3416ce-7424-4873-b14c-55bb39a261ac"
            }
          }
        ]
      },
      {
        "id": "ecca32fb-2051-485e-9560-1613d014b645",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f2fef237-9da9-41c5-8688-69f4efe9082c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "75db4e30-9d2b-4953-a71b-ac39da45049c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "28a0b4ab-e328-4561-a0bd-b398ae250482",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2d922f-dcea-4723-bec8-99a87f8feab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7edbb0ed-6504-4868-97e6-a183ac1442cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b5093e-8017-4588-9af2-293fc67b65f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "21bf0b28-b405-49bc-8d20-9d444f90c44b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0372a2-1c67-427b-b17b-b1eface2cdf6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8dfcca-2c8c-421a-8f13-e418bc13d095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96fb4226-2251-40cf-a91a-e0bc6c9bd682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873cea0f-176c-4be4-96c3-524d16692731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "963c2932-cbd0-4de2-af31-6104dcbb19f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a988bd-fc3f-40d1-9bab-480b2ebbfbbc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee63ea9a-720a-49a0-9f30-b0ab71d7669d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e13d42b1-5dfb-4562-a831-eaad50bb42dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c70962d-4034-474a-8660-6bef17fc5ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "27299b29-c675-4e3f-bb8b-2814f3160549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7e8891-bdad-4b35-a110-501a9ff13293",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "493db4da-8a1c-4503-8b9f-188b4c16f073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57e2de64-6fd2-42d5-96c3-659cb222f97b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eae327e-96d6-494e-bca6-e641125b20ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "14c8778b-e292-4c6d-a1f4-20481647c763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffcc1b46-b772-477f-8518-9a465a19b9e2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c824ed-a57d-48ca-8079-50bc03018eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca134d8a-f400-40ee-aeb3-e860d3ea9c71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ab5dfa-f147-4b38-9ec5-10f66ed16f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1d38357-bea4-4d34-aa67-bfed0685110a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "552bc6be-4e99-40b7-98db-8ef7297b05d9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe6ba12-2777-40a0-bcf0-d27aed23369c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ffbcc3b-142a-47f5-9290-e001a443f0f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfcb86c-7780-46d0-83a2-b8b67ae1f6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "54e925cd-baa0-4a53-a987-4f0e2653a44d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41043a99-2b53-4a15-9f8a-76af5a3389fc",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b011723-0e2a-4a05-9238-3f595e51a919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b240e387-114e-479a-beb1-2dcae35e997b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1e87f4-582f-437f-be67-88e3147679d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fad2dc91-4380-48ed-9e74-c68f2b2cd9ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e285f9b0-fe00-40ea-b96f-5c2a74d7a655",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "640f8ee2-2439-4002-89f0-8f26891fed99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e8097e-0034-40ac-840e-21ff9e52afdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ea95d6-4d9c-4c09-b3db-6ac8a612f8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b1fcf35-191e-43a2-8aaf-6b79eea98bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abecf14f-0c75-4c13-97dd-fa88ba9fa166",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "706369d3-b119-4a0f-b8f0-e9a44ee8630c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a6e5ab1-7a69-4a2b-88fa-c24e7719b791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc64e996-9539-40a2-99c6-460b0867a6f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0cf1ddd-ab0d-4b53-a3af-88888f674759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6429a1-c3eb-439d-9c73-a272715571e6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f81ea8-8431-4aee-ad8a-d827f0ad60f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c7c79a-f69f-4391-a890-7da1970f73c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6270de80-8ed8-43e2-a182-6aeba18352cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da31f79c-66d4-4563-9aeb-2fa32e7613dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c21925-57a1-476c-8419-2283d4985339",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c259d32-38f4-4484-b9fe-f6d1dcf272bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b2e5d2f-4f22-4a83-b760-86154df9e99d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f59f797d-9b46-4362-b2f2-2d7ca2436ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "dedef8a9-c5be-494f-9492-d1ccb25fecf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd9a430-6bdd-4ac4-b49c-d9067ed7c917",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1522cb7a-28ca-4828-ba42-616207cca640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c7ac700-20e2-4407-a71e-44f85d5ebd3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c34a76-2ada-4c99-b69e-f1aff0c2dcc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d19e5d9e-6233-4f4f-873f-afc767ae00fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08de5c5c-490b-4038-9ded-e1ec0a495047",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee51963-a719-4ae0-86f8-8860b3044c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b065f5e-98ee-41f8-9758-d13a7e514692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60d9426-849c-44ee-ae84-c37af66a8b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ccdc2f7-c6df-44b1-8acf-6a61a47096f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58216520-b847-4565-977c-85d03e666096",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d917f6d-8727-4683-8f1a-5418c27d7a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9beb7a47-de6a-4b47-82dc-c0ed5bc647be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d23d27-3bee-4677-a4b8-da4bf0b9a4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e12b5b1-74f4-4323-a1e8-a97ff365a5d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57bdcc41-8515-480a-8817-04b12833c2e0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d373f95f-ece8-4311-8413-434b81136d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e850cb5e-4583-4b7d-91cf-dda631ae9592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48a740b-906c-4b2a-8607-9fb36b124b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7ed2d25-d93a-4a60-988f-6c9011c34eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c280f52b-633f-4167-ae57-c311c39f2851",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b278f62-ecf1-4b46-9783-edff1fa77fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b551ca4b-182f-46a4-8460-38975a5a246b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa35d68-61a2-4dc9-b165-28e6b5417bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8349ec13-db82-4d1d-9390-8baaa31e641d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c9bf33-b55c-4e76-9d11-919a9408c13d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11381405-40c4-4e0f-bf97-7131abd2b913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ade79e47-003d-4df2-90d9-847831526d33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40e24ef-88f4-486e-b71d-61b9610aeb19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "62829674-60ff-49d2-8522-e52d5b961bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420b4c44-038f-4224-abaf-d13a4ed8eb9c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa3294d-6186-4afa-98ac-f97632e30cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "675fcf6c-9f66-4ca2-881b-4d25398a24ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11aba2ab-b547-43f8-9c81-6245c71ebcfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "08e3379b-2a71-446b-b59e-e3601d3b080a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c194f4-47ef-4002-afd6-6d9e5bd561c2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da236d1-a5ce-4114-88cb-6f2bb454b304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "006611e6-8f93-4d6a-aded-8a892d4dab85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc86b770-dea7-47ca-a160-eca38b83273f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec165892-f52c-439d-851a-ca69e182f557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968a171f-96b9-4f2e-b0ca-d48bf913986b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "122d84d4-4efd-4e4f-8e86-01b0bd193da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0929231-9f5c-4688-8464-cc8142cdcc6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5924968f-bbdf-4b75-be42-9fa2bb66fdf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b05207d3-3084-4c80-97bd-6f23ff5380e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fdc687e-26de-4d59-a9d7-641871f52fd1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc61c13-f00b-44d1-829f-0c0f38b83722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0758cc47-5536-4954-8b02-6124e7343f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "194d808a-2edb-46cd-8c31-695535024c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e59675a2-d00b-4fd2-bbd8-b9fff12b959b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b40636-6f9d-425d-abaa-1f94b3353812",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34372e3f-e642-4a22-b27a-187fbc7d61a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "703d93d3-bdd1-4cf7-9b1b-4e55bb06efb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8cffd3-9e44-40dc-873a-1530cbbbd308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f841f004-5eca-4ed4-8bfc-87a7aecb9683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c40ca2e8-fc52-460a-8bc8-55d35c486dde",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9eb6192-d10e-4821-99b6-baed343ac663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "398282dd-64ce-4935-b653-88c6b65516ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b664ceab-cf65-44e9-b326-1d56d6db79b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fdaafd2-dec9-493b-80ff-db19a605274e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623d8e9c-da05-4365-bb1f-4d1c1ce7521d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2793371-8036-4fa5-b720-ebce2f5f7ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a7cff92-2c26-4773-83ac-eccc01e9208f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b1e0adb-546b-458c-8658-254881d61f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b7e4478-5ed5-44a5-9cbf-14e269e44a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d31e6f5-b17f-47bf-9390-54ee85d04433",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe4921b-140d-4da9-9bd1-6f16f839f22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db2099b4-3bff-43ef-b855-b1fc6e826e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b91fc4-1b08-4a1e-a3f7-aa2629fb7c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80b01e12-7289-4a5b-bfc8-8ab8cb10f918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c96fa9a-f2be-446e-87c2-cf1d6e06d122",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "330e0359-1bb7-4587-a65a-c55599030f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2289bddf-3c23-40aa-b246-2d38da8e319e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cdcf796-ecfd-48be-a0e3-9a10393eff12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba165a9f-526f-47ad-b4ae-10b51be03fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b47c28-78e0-42ec-9f6c-5ed2648782e2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "410b112e-efe3-4727-92bd-d6c4da734535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b721e8-cc15-4fe1-ad28-e6ed5abae4f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec8d3a2-711a-41fe-be62-372bedb835c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c8a25c4-ba9e-4602-bab7-245483040474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e841b43-6e40-4bff-b4a1-edf6446b7ef9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1086710-5a5c-4422-868a-9f29300961c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dc58241-cb0f-4258-bb92-b59ed7ac4d14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21fc2f53-2e94-4542-8bd3-3350aa1fcd00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63bdf00f-4078-4d03-ac8f-bd972cb6ff81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9359c8ab-b51d-4dfe-bc6d-cbddcc53d220",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa6129b-3e90-4967-ae0d-2c7834fcd03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "082fab0e-cee5-4c33-b1bc-9945b55bc891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4463d1bb-aee6-4f22-a816-6ad0f5ab9c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41929d81-cafd-4404-bd20-0b25a347d381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1418414d-8b30-4d7b-96b6-54d322ebd5f3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb917322-505c-4b2a-a41d-cb6a25f14326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0db3f7a9-a148-4575-9878-9771cfb96822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48129ca-7f91-4b5e-ab9e-944b78a2547b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bc0e78e-a037-449d-ad00-3773588c638a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c64747c-51db-4636-b170-98db649567a7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada60fc4-f948-4a75-a44d-e4e07c673fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d20ccc5e-e106-45ee-8fbc-467732f93995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15da471-039e-40d0-a200-3bc082f0156d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9e8669c-16c2-4fbe-bafe-86f38b20cd09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abff6058-0723-4c78-bf08-da9aa5d8b72d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbcba72f-0701-4ba3-8a32-5b0e88e8bae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe95658a-e6ff-4aef-8a19-6973259dc503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba88cb4-c989-49a4-bdf8-9e8512f3f8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa90b69a-022b-4e14-acb4-67fb7a25e075"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d1d5a24e-c42d-4a74-b602-0503ba9e2f77",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c89e3351-347e-46b4-b2ec-1e4c57038c41",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01797f97-e1f8-4851-9963-da5266cfd96d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ef6c569e-ab1f-486a-8422-108d8db16a9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "705560c9-7299-47c2-8ced-656cffff8ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b18906cc-3fc9-47eb-b081-2fe73ee11395"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cae0bae7-f175-4167-9286-3630ab53312b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1f2710a-3bbc-4e63-909b-8fdd899fdc37"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ddd5c84e-d1ac-42a4-a9f2-a12b750dbfe7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8b6cf8d-bdd8-4ca9-a9ab-27a80ee90ccd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a8f0684-a4a8-4828-9eb4-cd66c50eb03a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d8ce9b50-0993-4e06-8b57-9c95829337d9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8dd574d6-98f6-41ef-9bbc-c9aae2436380",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4d1b07f7-7346-430d-9a7f-95586348af0d"
            }
          }
        ]
      },
      {
        "id": "1d53ffe7-6ebf-4579-b103-22c0d3628136",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "1d1c3d08-7962-4b7a-bf38-d9d181d95969",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f74bbfd6-c403-4d77-bfc6-08c364d7741a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "66d9b742-9ec4-4afc-bccf-30115a4d93d2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2113a514-ef6f-4131-b857-b6e4ff4b97a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad7dbba3-cdf4-4ea1-94a7-8a27be7c9b7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d77a2d-366d-4dea-bfab-5bb9c4928d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce0b27bb-ad9e-4411-b4e7-480cedbd02c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d3ca2f-0f4c-40fb-a637-9cfda9d3afba",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3959c120-1a60-423b-9266-fb842e52e5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9def3833-a9ec-438d-9bff-14f33a30bddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508d712d-df01-428e-acc7-efeb91e07a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cae236d-4a47-4fb1-a7b5-dee080db5884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3cddc92-985d-4a86-93cb-2605dca4de25",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3e42c1-625e-4469-89df-ad8e3bac8ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a4659c6-b260-4576-82d3-0a0de6143c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd28e87f-8e8c-485b-b81d-8b6328a4694f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f96268ad-d9f4-47e2-8104-0ba9575c035a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1816a3e-c4f6-4d7b-b572-94a0404cab78",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf7a363-8294-4a98-9a97-53c9e5eb8a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9db3972-9100-44db-bbe9-9a4cb87a7a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe8c727-04ee-4355-adda-edb31212bfaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04a55e69-bf53-4d7f-b893-3b29e73eb8d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d4cd0a-364d-4335-94f3-1b02540712bb",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d39eeb6-35d6-4911-9a50-31e14ed48e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddb51857-8d93-460c-8da6-c0f59e60983c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc30708-3e7f-40b8-b6b6-d89f9303babd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78b32bb5-0761-4d2e-98be-37207bbf6f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7eb99c-ba52-4d2f-8e4a-28bd00a28757",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf1ee2a-fe05-4c0a-9705-333585f94377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaf8ccba-d8b7-42f3-9be3-9f8bc7ccfba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b73929-7221-4b5f-92d0-612ae744ab9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "28241588-47e6-40b8-bdcf-efdc225859ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5fbf74e-dd0c-4cc8-893f-40e43093dfcb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61a206d-522a-40a6-a2d5-865ea7201a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "921510a0-b6a2-4f21-90f3-a5fe2da3f66f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3822a6e8-003c-4908-8272-e099f0c0d4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d796aa1-d13d-4a05-ac01-358ee7533d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b5f0f3-0528-4270-b921-7ee1acd217c6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c476991-38db-4b5c-92a2-838e2e4945f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ef9597-f699-4b52-aebf-181006670674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4968dbc-d6e6-4866-9ed6-fbb92b6f32d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "377aef9a-c238-4252-8977-945c26accb9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c6ee1ad-4fe4-42f8-8982-7f86be817c57",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2beebb6-9846-46c1-ae1b-fc843fc9e70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cdba0fd-a213-441e-9f16-fe3ef9193156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5787eae9-b18d-4900-9f66-4c706c9879d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2da0d08f-2eed-4441-8db2-0206063a3637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cfc36c0-a083-41d8-ad17-640ba9f1a24e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d95192-fe50-4451-9ccf-300cdf47b03e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7cf1360-5632-47a6-9b1e-82148a302f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e1dedf-9abe-4c82-bbd0-8000fe970be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "415d177f-580d-46fd-be19-f8f088db947e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1bb62e-d503-45ac-bd05-5657206b578a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35bd91e3-d50d-4bad-b411-8bb4d53280e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3ab12c0-aa09-4700-ac5d-d38685d0a772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6b8be4-921e-4b68-bec2-2b8b71b58641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "13108eb0-b942-4e2e-98c2-bb692034fceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa6fdfa-72ed-445f-a421-fcd1a084d09a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e416c0f5-a353-4a4f-855a-66c7608b4e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5e155e3-383d-44f4-a8bb-9ed2809365e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e5b958-2115-42e8-956c-538b391af36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "37bcf2f3-6ff9-474b-b6f9-b89ebc22b041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb091c6d-726e-4bd8-91cc-1274d2c90a0e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1f998d-7af6-4ca9-a9b4-c04aee46a774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b54cd1-b231-4dfe-8bed-8e73f6cc311c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5fef131-da20-4ab6-ad04-40e8da3116c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9debfa7d-e4c2-4d9e-ae5e-b25fe960c946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ded40ef-1a24-433f-a71f-d70b5cc3aecf",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ce5e14-0cd4-4eb1-8307-f0c9a6f04807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a46cff-02a2-4f6c-891d-5cf3fa2476a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d54c222-4c63-4bd5-b576-95d07e0a6b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f2c9c98-02c8-4a6b-8105-a9e04eaa4a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736bd8dc-29c1-4ec4-8c4a-4b7fb0c33107",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f6e869-f838-4265-aaf2-ece46c153000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81e8fe44-38c6-4ee1-8dd8-f31930807c23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80ba482-4699-4a49-aa72-7d1edf17f76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "483f751c-1f6a-4684-b61f-bd619e21efe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4dd2979-7f5e-418f-a6ad-5908a940cf0f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d672195-7e27-4e8f-8e67-717e6af521f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf69e5a1-0324-4397-9241-853308b41745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda18a67-9203-418b-b0d7-22940fee0d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4d4b097-cb0e-4a7b-b173-c7148020d36a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d09f290-9aab-49ce-948e-f62709c22f4f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2274f48a-067c-4132-81bd-1962beb2918b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eedb9aa-dbe2-464d-899a-4bc229cf5535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca39d43-7de2-4f79-8804-75ff07e8de4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "63da1512-af92-47b1-83fa-ce9521aef26c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512abb8c-e459-455c-92d9-b4dd4b99d417",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "047ac696-22d4-412a-be86-35619341a8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fc787e4-5e5e-46a8-9a2d-a56e7bea1802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0bb133-1287-4546-8833-7babc9fd1508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "57a6cd05-e9f9-4015-9a00-79082217df5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ecbfb5-a977-4bda-a89d-87a5bb3e69e1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3338c187-4ec5-4717-a7d7-b05a33c0327d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5a5e6c9-f5cc-47d8-b957-0a230a248cdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d36c19-e869-498a-b0c7-91cd5a76a579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e07d3b0f-3ce5-432b-9223-db1b44289e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1909a51-f401-4ab2-8d90-55483f5ed12c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4d32b5-e7cc-40d1-b43f-54788af9c0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3d00cfa-82a2-4789-bde2-8a6dd97b14ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1134c511-8d18-43d2-94f9-1a7816966fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f26646d3-750d-4157-b83f-3f5b345a5671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8996c7bd-a794-423d-b276-edb7b4287180",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f865640e-dbe0-4c6a-8be8-bd1b6a89039e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "540b6f9d-ba3e-4a83-b1db-8daa12a11d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ab9774-86d1-4657-9c14-4a657bcc802a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41e95f78-959d-4b3a-8248-4e51dde5d7f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3866da1f-34a4-424d-9738-9fd2776bc557",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28702782-82b0-4585-9320-beb52ba71dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "061f0f5f-0e90-4f1b-bc06-2ff5e7875dc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9427abf6-90f5-4669-ad61-9ccc76cabc3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c04f2c8-e1ad-4e96-b0a0-9257b152f97a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36949ad-e773-4f92-ae63-899dfb5d6cf5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9902a9-8482-43fa-96cf-480c4ac891bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7865c3ee-5e0c-4c6d-b118-f9a78b3c96d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c545bee3-7619-4df3-b34a-a11f6976ebf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "879a6061-fb7f-46cf-9b21-0c5413d9499a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36caab5a-49f9-45fa-946a-392114b260fd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f7d33d-57ee-4e9f-8806-9355904563a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e68e9e-979e-4669-8073-5c3b64267416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7093b3-578c-4327-82c4-800ec2841fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c661cf8d-73b0-4d7d-8cc9-b17f53a11358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c42fb59-1459-4e56-9465-1c6469fa0432",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff396afb-284b-479a-93a6-8863fda57409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5b49089-c075-4abe-839a-03c95c3703bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67550dd6-8867-482e-b45d-d523c49234bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fb3c083-0b34-4205-8554-85b4036f8f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3bdf02d-ff53-4a0e-b79a-e3680d993ff2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d399b90d-a29b-4742-9809-a8a66fb875df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff634e1c-60fc-482c-af74-4d536d3e69d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e9ac1b-f7a2-49ab-805a-f1f39cf94d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b8421bc-9a33-442f-b4c1-7a1d6216ebfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a25743-3729-499a-8a7c-1cbc2187952a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87730eac-b51e-4bd6-a115-0e87a1f60522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ced66c1e-c14a-4834-88bf-9dbc7e22e2d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b4c460-019f-4c4b-acd8-d46da21d01e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f12c835c-88fe-4f66-bcfe-b05fd47e78d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659274c9-b59e-4b0c-b16a-bb677a1a0ce0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c79d650-b47a-426d-b7ad-d6749c77c7ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8331cd9-afec-4c8d-badd-e913e9c6df68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02bd83ae-3d8e-4a8d-a946-1f8c8430d409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffd11484-4f56-4046-89f6-49cac9524878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b685f3-8649-4c8d-add6-80e5009ace3b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee617e82-0c4f-46f7-813b-237d3775e8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c1b657-aae0-42b2-bbe8-6d94332799f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a22a593c-c2f0-4a93-9105-80b750f04eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96d2a148-ae3d-427c-9135-0070abd8c3de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36a4b7b-d47d-4491-aa92-5775bbc63080",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b051b7b-38b7-4c9b-9bd4-aaad1d3f837e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42075dd2-a761-4532-b792-3d28a1abac39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c84993-0656-4879-a3cf-70acd3ecb684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "501a94de-99cc-4de2-aa2a-34a46fde0a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d245c0c6-3ad9-4ac5-8554-76171b29400c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "182d9f15-cdbd-4c03-97c3-02dd37326f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9c45d8-8205-489a-865b-b4e6cd31c024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ee081d-0d8e-4371-9915-b0a4a6f945c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d77206c-3557-4da8-b274-075bd28885e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4f5305-6d83-4280-b099-8c447492a9eb",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8071d212-b903-4d15-a757-963ba8f39b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4532a4d-2346-4bec-ab8f-85e37153a186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "363b8739-8c21-4fda-a8ca-f50b6eea492e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a210c41d-42f9-4df1-838d-340a0e93ef39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb0a80f0-00c4-4f8f-9d6e-4d0a7f3128be",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "356b0fea-2f66-4e37-81b4-dc4490a6a4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "798a0196-db9d-4854-8274-677082d2b99e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63988e9e-a98e-4539-affc-be5848d18c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbad9f90-ff9e-4d72-a99b-ae9477f150ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32cc4fed-73c4-40bc-97c2-42ea18b466ff",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b0f82b-f7aa-43e5-b4ce-b5aa5084c933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1bc7af4-aa2b-464c-90a6-18b8fe7879cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7692b33d-fd74-4d4d-b682-4960fb450a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47578fb8-0afb-4ffa-8aaf-b376dc988f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f17fcb-f68a-497d-8642-71ef048234ab",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "521f2c7b-3259-4d96-b0e4-1f56532ae16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36819e26-fcf3-4f17-a834-8d6af51a1a69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804dade7-fe38-424f-b79e-87dbe2bdfc9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "656208b6-4ef6-4f89-b994-60f0a9fdda24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9049a077-64b4-4032-9b59-7fff9642af82",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5d599b-6798-44a7-8370-f0ccea4dbfcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63aba64a-1a04-4198-ae5d-815d7630196a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fdcd1f5-b8dc-4e92-89a6-08560fc4e039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e307d1c-8732-4b1c-bca2-86d8b47bf95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8561fadb-13fc-4628-962e-376e21daacf2",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2669f87c-6116-4547-a85e-4a002e1fdb93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232b67c8-9095-4511-b1cd-5b3efb16a296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85fdac0e-c1ab-4c29-ba27-86e0ebd7ad21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc98219-111c-4af2-b004-30181e287556"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "eaffc851-d0c1-4aa2-8092-470f85804673",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2a704615-2683-4c51-a5c4-36dd6d431a01",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f608538-134c-4109-9069-f1c22fe4a605",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b3867a9a-993c-4c1b-9a4c-f7087757963e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6505606-c64f-4ed6-b954-c3d034cc497e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d4ff7390-6d03-4ebe-a1a2-f055be4c607f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8cc1e26f-c219-4f7d-af88-3af434620f50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f30ee6b-9e1f-40ea-b88a-5c553468b26a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b08068b-8fd5-4344-8eae-ff421db4d273",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38a9de14-ff53-4b00-927b-b0410298be97"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "06441236-6f23-4b8a-b9fe-17bf27c0aa60",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "43c69894-629f-4ca9-8f14-11d4eff16129"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "83af448f-2b8a-4744-9c01-b7a5b2f1ae9d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "82c0989e-4876-4e7f-b998-ff230c0bf733"
            }
          }
        ]
      },
      {
        "id": "88cf7020-e1fc-4298-8d79-4f035158ef8e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "03f948cd-8ce9-4a96-b058-885c0eca32f1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bcb71a07-32c3-4e9a-a549-e99e0e4fad65",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d7c43f7f-ef57-4048-a9a2-7f9261b21172",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3829baf1-1c16-4d83-9466-e338caa2a6fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ca8622-7438-4d13-a616-53e35ca1533f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b717ccb4-fe1c-49ab-ba39-98ed0039cd5a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f3adc9-d971-4ac8-8055-6ab9e850c82d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16e9a845-7578-40d1-af26-694cc659aab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dee752c-6507-42b8-9f8a-1f73b586f1f5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2f4a9c-9a1a-4f50-88c0-f3c00ec5853b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e41d26a-e1ab-4d30-b34b-41c49d5cd047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f958df5d-76cd-43ae-afc5-b4cc8128d716",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05d4c2e-4d71-4d46-865d-398f23b91f90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88d43c9c-bfc8-4d0f-8c0d-387d2cf8d607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f7be60-19e0-464d-80f0-10f08ae2491d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35239e07-fd62-480a-b4ed-69df71bc83c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e789a7e-de22-4d0c-a3b0-8abd15d2faa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d43de0-3c03-4361-b277-8a07e09f3e95",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "969c4ee1-22ad-456e-a4a8-21779e0d13d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb44c67-b3ba-4109-97bd-86261dc23b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4d7eab-caed-4134-bfda-fe32c70ce285",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac61d39-0e79-4259-9c17-9a20a3e28e50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6880565-49e7-411d-a0bf-89b2908024f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f94304-7351-4627-8e78-ed1ed1b2bafe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9430aa9-f141-4f03-b2c0-aa4762f522f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57cf3fad-7e6d-4d70-8779-85bcae672b90",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755a4d91-75f5-4ab4-95c4-5ae99fa35a9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "931afeea-c326-4c99-9974-de909b8a3a10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2da5d6e-c4ea-4d28-b8c6-bd3ee6474dbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdbea387-791b-4a7c-940f-bab06e2c3de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a6142a-3d7f-4e36-9348-77c1df6bcab2",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1959b518-9486-4422-bf46-2bdd18508054",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4df1ff36-04fe-4419-b8d4-e97b773c6dac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d11f8eb-f8ab-48c4-8c1d-320fd936f3b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4994bf2-f265-42e3-963c-5b7cbe0b86b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13096813-3a89-46d1-aae0-c012ba37a0ee",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4184681d-ec99-457d-b091-35871c0c8359",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bcffeca-9b0f-43c5-aa04-4ba070d2b68d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "246913f1-f09f-443f-bd36-615019e4b55f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55a980e5-a943-4ab0-b5c9-a780aaa0173c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe17f1b-b261-47bd-ba79-d0f1883e1943",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41eae5f5-293d-4e07-bb0a-7cb7683afc49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29cd97ca-9d45-475c-8c0d-dec896bc2f05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89bda99c-d3a6-4fb8-8663-74995ec1043f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88ff3c5d-1f2a-434f-8e3a-8196528adcde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2102dd5-82bf-41c4-b8e5-ee9e6c453307",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5493f859-bcae-46bc-9c3b-2b920ca7b757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "214187e7-5434-4da8-be2b-8bd2cd242bef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92e68b5-76b5-48df-97df-82f31821faca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "439a584d-e45b-4ab2-a072-8b0798440515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa21779-5f4b-4a0f-bcb4-d656ea833f15",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c543e573-a3d9-4fa5-9b40-4f3d5e68cfb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1afbe425-b5da-4adf-a91d-41498c892533"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93093b3e-d7fa-4856-9c86-91466bd5e842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc9cfb05-df0c-45d6-83ee-1c4adbf47698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f78b0d56-d862-49f7-8d55-155dfb3eda90",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd2fcdf-fdd8-492d-971c-2dcbfeee7dab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5398f31-f301-464a-864c-b23c8221aa3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0510de-90bc-49e5-931c-c98842c0d811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdf1c49a-c030-4328-ada3-4b58d26f6864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b47b24-37ff-4448-8481-2de9ba2434cf",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8ebb29-1437-4a3d-979a-43072e42b246",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc5745da-4b11-4e57-8a67-47479a805ce1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faafc775-c76d-4b73-89d8-0ba3cca3df6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6ed966e-2dcc-4f34-8ff6-3a0f9113bced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312fc3b3-e9a9-4557-ba07-64c5c831ddf2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b47d457-0949-4a4f-a493-6fae3847b176",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c57c86c0-6d54-407b-a299-050f712c22b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5104808-c374-4a8e-aeea-fa4a3a7e7f37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d097bc-c755-474f-b429-f65a33c2a488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80fbae0f-a50b-473f-8fc6-9cd7d4629d2e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627eba72-bc05-410b-9d44-79abfe146430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19a169c2-a1e4-48fc-b997-5d1995e6b2df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef11463-83cd-42f1-8774-a400da26ea04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9bd7c7d-a724-4427-9993-718fb66be7ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65769bd8-010c-4564-986e-88d88bd8f085",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe45856-590b-4a71-b35e-3b189a7f1bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6128a419-2bd1-4b84-a9d8-94bf73dfdac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "411836aa-ecb2-4e70-b434-24736dad001a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6853bb6d-5c8e-499e-ae4f-4229d1cd6f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57f5c69-2dba-41e6-9cf8-67dd857fef28",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613975f0-b2f1-4f80-809d-2f48e52f3bd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90c79a71-29c8-443a-b9e7-062887f0f497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37337c7b-8757-4a0d-86fe-1dcdc22932c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74ffd8e0-9ea0-44b7-8d72-2f5f7e62cb9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0239d82e-f204-4823-8e86-f714a2712539",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f1fde8-e080-4a1d-8bd3-89f1811640b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b9ac68-282b-46c4-b62c-6c55c5e0dad8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a71362c-8dbb-471b-b917-690d748550a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea2e1884-c588-4bf8-9eaf-2f5a8687c1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834005c5-79c8-4ed1-8a2c-74d10ac652ab",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745a5302-3a39-4723-90c6-38a7b598195f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32343fdb-805b-46e8-bf8f-f2a70f674811"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53056b37-a68c-449e-ad1e-1cb697636af8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "016bfb6b-18c3-424e-bc4e-9bf95c8ebbf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431d7490-f10e-4704-b9aa-a1243379b890",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d89e2f29-e21e-47c8-a078-c1cc5b51af48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca90c5fe-d463-44d0-8c4c-847e73c63273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e3df99-090b-4959-b967-751bc20040e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c61864ce-fb7a-4fe1-b1cd-469503bd1cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad698cfe-74f9-481e-a843-c37a11d82db3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caba86ac-3e51-4dda-aaff-b5c005a90d8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "251bc8c6-dd96-44a1-9efd-8dafd464b224"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1d0a1a-3fa7-4df3-ba77-5da25620da09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bea8dcd8-030d-42f2-bcdc-fcf935bafe05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb43c82-3743-4119-a19c-b06cc4d32dba",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae504b31-016c-4788-a615-a89633a1d937",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1108a40e-e734-4446-845b-c8daba6f7c00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13511f69-81f2-4fcb-9cf2-91e225e0cb0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "382ac6d3-7065-49fc-b4ce-c95e0f669e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d325d1ce-4295-4b62-af6f-30c884b3edd0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5539df6-1c68-42f3-a1a1-f0938d113e40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4479b0e-f6cb-4e5b-88de-c1a692c8db69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "627503ff-fefd-4056-8ec2-891fc6da313f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd4219ae-33b9-4edf-b372-10e323c4f7bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c58fb76-b527-4626-b454-8683ef7e36f4",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b7de6e-4055-4804-9c6b-328b63dca19e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fc21940-e949-4605-87b6-3f9ac0d62e51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce3411a-560d-475d-b8c8-19abb4928a35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aad7f57f-ecf8-4702-891d-2460ffa1af6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41fdda6-0fec-42f3-9117-36c2e6a14e07",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26539f6-de56-45a1-9534-c66d82e8e598",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04444072-634e-4a57-97d0-9fe542c38af7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5041ffd-39ce-4ce1-9a0d-7830f70589e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85fa3003-6194-4f93-87b4-a732c922adbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c200448f-e667-4b9d-b9b0-e1ff417c2cc8",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff1ff869-d64e-4c49-a7b1-6da697a25789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16a0eb9c-3f89-4c21-b4b8-e9ceac383c22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d6be55-01e8-4bf8-8edc-8c00877bc664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "305a6c67-3730-47ea-bb10-df84f02d7495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb7598e-a5e5-4bb3-a531-17431bb321c0",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e2dce5-549c-43fc-891a-3f8fb3d0440f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19908b5e-cbf9-4fb9-b719-ad77ce192805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2464b9e-73c9-40f9-8e7a-ecb3b81cf129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af372b22-644c-491a-9901-976e6cb8f260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "944a5477-6f5f-479d-a591-f6c2716cd49a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a832f3f0-c8f9-4502-8dec-5144d55e2fc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "458ba859-08f3-4203-8167-d27ade2c2bbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ef5a48-6537-4791-a675-92a6c7ec1838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c1de62f-129b-49be-9eae-18e885f8f8cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273d162c-c194-410b-82f7-27cde4985954",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d2ea33-be13-4553-baf9-9b0c399635ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3482de62-d522-4d62-ab23-922d5314c2e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14a499a-6716-4846-93e9-1f70526e4088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46cd3349-3e4a-42c4-aa93-a8544ef5c98c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ede86c6-4a5e-4cbe-bf48-def866f3929d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31e51dc-f8ca-4686-a62c-61704c8319bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0de4370-ca04-4147-989d-b793f0343aa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b1299a-3579-4605-9974-bf039ca9c3ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e57f63cb-898b-48d7-986f-cfac6b435657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a16fc1-d13b-40a0-90c2-ee26079b3b5b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05bdaec4-c610-4178-a66f-0b8f9cea2c93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3cdf119-7d19-4861-bb97-5b00a3b38fa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92870f00-a3ea-47ca-bb95-0a5d60ef9912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "579fa090-587d-499b-925f-c1656e2fbf20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9900d38a-0921-452d-8145-fcb8b6af06fe",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065e6473-6edb-4b8c-8c11-d2e19be958b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "594af47f-0ab9-471e-8108-e6a5c546f62a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c46ff1-645a-40cc-ab79-d61509f334a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee76d8b3-3cab-4b17-aebf-67d9828ce406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3060447a-13de-4fe0-866a-916323c9aa4d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64a38bc-e242-4573-a29a-64215c53d02a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e2a4235-0f78-4850-a003-538cbd9b6e05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da4d7e4-3f17-46ba-adc0-b313527d53ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b040533b-021d-4a67-8750-869317b1fb5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d138edc-0b28-4da6-937c-f4861e743d81",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba3be263-2e97-460a-bb1b-2929ce537ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2391f4f7-eeab-4544-8052-23ace6234adc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6919437-c203-4f3b-89fc-74aa28e6190c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f87ce97-157e-4f1b-bc37-748d4143eda1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df43fac9-ac4f-4226-ae83-ed9f0a2ee656",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0ebaff-33e9-4428-a60d-56ec4014183f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2acc78c2-60fa-4c75-822e-945221902213"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabb5b47-1e25-4c12-884c-d9424173c405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c89b398d-ba0d-421c-9b2c-e600535ec438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d189ef-185c-4148-9db9-85218fdbfd79",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd2aa82-5ba9-45ff-98ba-ed8179b7b448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0a54745-2805-4eee-a977-0232445071aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2582aa94-f9fc-430f-9323-0c254abc1253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db9b74ab-9c35-4de4-b028-bd49cda27a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51816cde-7387-49d4-a1c8-df07d84c789a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8b8102-af20-4436-83ed-1e53ed8e9747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c909cb54-e567-47f8-b2bc-569fd161a993"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84494222-9fb4-417c-904e-0917da764cfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ca32689-5e17-4802-946d-2d479f2a98e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2083eb7-a8bf-49d1-9a34-d61fc5b0df42",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8289ed-04a6-4f82-b344-8179816c32ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55d87c63-ab02-4bdf-aaf0-5e7cb0b1efea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d225a5-4834-474c-aa95-cab0d9769213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a41de0e7-61b2-48a5-ab5f-519c8852731c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "832d7e68-905e-46c0-8e30-fea83fc7b2b9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5624798-190e-4e39-96c1-69c5cce8ef38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9d3e055-a62e-4c7b-a6c4-a53e0a792539"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1154332-ce01-43c9-a66a-3f16d5d82bda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2946663-a2e3-4836-bb08-4ef5ec707df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4cee90a-580c-4317-a0d5-11e6dd8c1e1f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a4ae78-bab5-447b-9e95-3f1d4ea418b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00242dcb-1485-4e63-bc75-bbd36e47e921"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43f6d6b-db8a-43c3-b34d-6fa597840edb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d703e23-d5f2-4a28-adfc-08f3874e115b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a583829-b4da-4d6c-a7d2-a1bb58f9a82e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73eaa0a4-eefc-42f6-a5bb-4b79900d58df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bfbda5e-333d-4a7a-b2b1-f2be887b0da0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ad8325-071a-4878-80dd-0875c3acf541",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba772c1-52ba-4a77-a04f-68c1c6ecc806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95cb83ac-63a2-4888-9a2e-35dfbc7d9f95",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b29d956-8004-4c20-a68d-ef24cb5bf45b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed630d38-5358-4e2e-bc89-73634b1f97df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97fdea77-fc81-41e1-94b9-ec663085d894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "928e894d-7757-47d7-93b1-84c54f596785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3adfc39-ea2b-49ef-8a67-ec6bc8de79a0",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e6d3cd-70da-4bf7-9598-04fc845605f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35d44031-f504-4609-a9b8-29044c4e76e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92da2d5-520f-41f0-9d68-3fb820448005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c01fca2f-9b64-410e-b022-8e80db4cce64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d6024e-aa52-427d-81c6-28f412f9c943",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376ec351-d5ca-4a89-8870-5150db13be35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e465861-4d1a-4e2f-8ac3-4135fb6027f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd8f87f-0592-41f5-b7ca-00eebfcbb1d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c26721c-5248-4a3f-b520-2acb6c404021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563d2795-8f02-460f-b00f-daca28160c16",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de623128-5991-4fba-a06a-1b0d835622d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4fa1625-fe16-4b49-b3fd-6f42af34d33c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a46a617-e36e-4963-bf36-be4a76b817bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "373bbe91-2771-4756-8cc5-d6316ea5fcac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a081a8bf-4d58-4ce6-a00e-588160215911",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f622d0-cb5b-4704-a8ce-54481524f3be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50708157-ef0a-4362-a52b-cc701064a781"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58c7769-8ffa-45cd-9b23-c90ba0c9af1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ee248cd-34aa-4637-9de4-8bd7fa9c59fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ae0835-87f8-42c5-bf97-61797e3577f5",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed04130-c81c-43bc-a069-0cbdd65e28a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f7a9f31-81af-4a08-b1ae-cff080d422d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00759a8-0917-4c36-a812-c1960eeff8a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aab1b55e-b432-43ab-9666-4648ffa8ad59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a5261c-9e87-473d-b3df-8cee3fb1a32d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18bec81b-eff3-4fd1-a945-5a0e84233ad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0fa87b3-d74b-4763-b8e5-2aa5d693df2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ae0d43-b7a4-4888-8347-200eec1e081f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e69c37e-a101-4c9a-9edf-d1c00c3e6d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62094631-4d7f-47c1-8299-61cb2dd24a97",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08b782b-273a-4d02-b5b4-ee8e2367edbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ee5840-c6fb-4434-a826-03436d3389b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79166698-fe5b-4c15-b231-9451da99edf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a46680b-cd8a-4ee2-8c7e-953fb645472a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eadfe97-f9f8-4f70-9a42-61914e732397",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d67c5d-5d0f-4edd-b5a4-b23452432c8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc10f551-35a2-477a-8d64-92d26e478fd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "260367d9-a244-4c1e-ba16-f3a48a957248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e6440f0-6b83-4947-9edc-ac63b41bcbba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18fa8ad1-e850-4a0e-a3b4-3142bfe63aef",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d1203a-d0c7-4c4f-b134-97634323bd89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec28f6ac-4753-4e52-804d-4391cea455f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8dfb6f-f8ee-4ac5-ba6c-f12230cec273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac1a6208-3d5e-44bc-ac05-0aaca2af5cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a40333fa-fe52-4684-b37f-09bb653ca2d9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e080143-6359-4c89-b5c5-15268a742d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbbda52f-b85e-4c73-b16c-a8334ccd26b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2e7970-cb7d-4840-95eb-74db6cfd0049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc8cf1b4-e018-490f-b0de-9ca096e9157f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5258757c-00a0-427c-9bb4-2f0ca1b3272b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68106f1d-9f02-4234-9b58-33aa335cfe8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90ef8134-5d0e-4faf-a4e1-37c279c53477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9655b024-a739-4bd4-991e-ead940630bf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5a42cb-8515-47bd-80c8-8c369050e4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70bbcb13-c890-4e30-a582-4e9ff95064ec",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a929ee25-51d2-4d26-92ec-0e7fcb3b3346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c6bcdc3-0c26-4a72-902c-f61006596eec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80116c9d-0751-404b-b825-62b702c40b02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f4f1b52-b6b6-4eca-acfe-c55878fe328b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b1fe1c-2edd-4e96-804b-e1c5cddb0afa",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5046be41-098c-4d4d-bc27-50ef402703a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b2c1e9a-ccba-407f-8344-7d9bc48871ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c5228fe-0e0c-420d-9f7e-0ebd3395733a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf6a4b10-d764-43bf-a098-98d2d1465cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34865c0c-2183-44ac-a00f-eb41f9398a66",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e351ac5-0f75-46ec-94b6-dd6a1c49d748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91131d2f-6c98-4c58-848d-df0148ac7761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfde1af0-1905-4def-81ef-ff699729c98c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "137b1f29-6ae0-4667-992a-625fa1a71ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f262d11-f82a-4dc5-af08-bab3939ddde6",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed4ff6b-ce9d-469b-ae50-f54194e107c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa1ff50d-a37a-43af-99db-cc831a13bdf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3035b284-ae1c-4829-8049-842de022eac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32918570-d4ee-43ba-be6a-1f3acbe307d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4fa856-b4b8-4283-b566-4ba10f779c4b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4faf9039-b7f7-498e-8a64-b4b2c7f31ad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc7015a-68e9-4f50-b66e-9eff920dc193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "419ec047-ffdc-43b7-8318-d21f0c2e8a77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0de8e533-5343-4c5c-b9f3-979a18e2f807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac781aa7-b395-429a-a9eb-d3924c1c92ae",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2a9f73-fb96-4b8a-804a-430ce880fbe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8346a77b-6255-4b42-b9f1-bdec11e8fde8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "105dedf0-ee66-48ed-8417-ea253eb4fe9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eead76f4-b152-4991-966c-08301a1abf2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87fda0bd-312c-4e88-85f9-2cb005f48d11",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492e7f1b-8e0a-4262-93b0-290a8618680a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20d8ce89-514e-41da-8323-8e25699cb209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d624114-be0b-4368-acd3-68a999f14a40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cedba420-17fc-4992-b412-8ea198f4ab88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e74e09a-96fa-488a-bb7c-4469abce5dd2",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044d3836-9011-4bc6-b7e9-46051b5831f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "937e81ee-0aed-418b-a1dc-330821724717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c77f41e2-7bf1-42d2-ace4-08c7ea5df84e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b2f4574-2ad4-4475-ab28-284b44c9c764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b070ef-2c34-4fe6-bb6b-b1f0a94f98da",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea916b31-2347-40f4-b647-a7d80f446f61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53383b54-c3b3-4b57-87af-7a19957ba8d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef951117-f5a9-4462-8e9a-fb993a63b285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf0057a-84fc-46cd-94e6-2be28c44d0d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdbb2325-1881-4863-926d-9c591640d73b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c74cba-486f-4699-b306-22385b91b656",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4b3d488-c0d7-4f92-b248-8bdd0c0a9ae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5d1fc7-2534-46a9-b35b-db7b07709b6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ef14fb-fd54-4a07-8e9c-1ed6892bf796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adaae912-4618-4c1f-a92b-9948f4fc49a4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77fb46b6-88c5-4f68-83bc-8e9e6b73ef76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cae53ae-82d9-4edf-86a0-b5bf5eb147a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f27c894-98da-4ced-bc82-fa36386f8e44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3804ccb9-d96f-4ba1-b346-f5aea7e69ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8ee487-2946-49a4-8fa2-019c673b43c6",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e2caa06-5534-48ff-b4f2-1096e613c475",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8947bd2b-a649-47da-a0c7-ad37b370bb9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1789a593-4e5b-4f17-bf7c-0223d714a854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d7fa5d6-f714-49e2-8d44-a97ce2efb887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9bb99df-531a-42aa-a141-e59cf14ac92e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5670e4-30f3-4876-963c-5e56226c8118",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fe39123-8011-4d5a-8b3f-56a7461d989f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b21fa09-aa07-457d-b8ec-1dacf72f0fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bfc04c8-f4b0-432b-8f84-f55fad92268f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6911c74-d3dc-49ca-a767-69dbe8cfca16",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d72b9ee-c843-41be-a236-87f8b8f39d7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c57bf47d-8063-4c82-813f-9b66e8f37158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b18308d-c3aa-448c-b2e8-1d80fc7d77ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6771da26-d58b-47a0-ab37-c16dde5dfaba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88458922-3f73-4bec-b1b7-a64bd68f6913",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46dfef8-6f44-4306-9551-5874b1b69d04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d29d7d13-c336-4fcb-a575-355bdf0f9fe6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7fe3f6-3c50-4272-9f82-d152b82fa54c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52fda7b9-340e-466b-842c-1778c7d0a12a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a0a33c-ab89-4193-a421-74665615f6c2",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2ab0c9-9740-4d37-8446-3977a50aa94e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11bc36a2-31a3-44a9-964b-aacece246ef0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d765403-cde7-4041-baf1-5e73c81af222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a5f1f16-8558-4a77-910a-ecbca672d4d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb0c0f09-5a68-4055-acb4-7918a162ef1f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5381a98e-1270-4602-b336-8eda4082e66e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d4b39b1-4eeb-4a6f-b37b-ee932b7641aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25437ab-a904-4633-89f6-2f32fbd134fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8bf2052-10c7-43bb-94de-39e8b0a263bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0bc3d0-54e0-4bd8-8ace-2bbb49b8dad7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b15a847-b516-45c6-a836-0dbccde626b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ea59d27-6c03-48fb-93c4-7f4e61244426"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b25c77e-b3b4-4596-93fc-20763f2dc9be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "874b1daf-d013-43bf-9634-aaa133955fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27560f5e-570a-4117-bbc3-a731614c8f96",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8046546d-41e3-4e1c-8186-47c97ce48317",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87c464a7-2df8-47f2-9a75-72b5ce1aa6e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "741f1df1-02a1-43b9-b56c-a32c4dd0daaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7faaa9c-0a62-4617-8b0c-389b9ad8ea8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af447fd-d881-43ff-a07e-1ff3f909bf78",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7359de66-9fff-429d-b625-404da9ed357e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f83cee3-9fa5-4ca6-a6ab-ed3140b816a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d64c04f-eea2-4127-a708-022264d7f34f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede4ce8b-669c-4326-8a52-63781ba6c33f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5f7ee8-ff28-411c-95a5-a039df7ef065",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b7586c-2186-4ccf-b83b-4e672d0fd9ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cc1e495-5f2e-4843-aeb0-ee4ebc918d4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6f197a-8201-4d96-9c1d-a1a31390a8e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54b43525-ab6b-49ec-9063-e954bd5b43e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e367e332-fe23-4836-9937-91f8d1016cc1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c92065-4c89-4471-a85c-c57fa1477a3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "391e5cb4-60c8-485e-9b63-87f10c540fcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2291cb85-5fd4-461b-bfef-c7f12bf3e5f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a2f29e6-8ae5-46c5-8b68-15838cbb3354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4816a4eb-0114-4a04-9af4-a9397ca8e973",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2653488-29df-4c66-aaec-aae1ce5c4799",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13f3c873-27b5-4d1e-8b4b-2ce847be3fc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21bb2078-ce9d-45e3-865c-3cae329907fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe8a9636-e53f-4e4c-81a1-aadb6d71dfe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dcc5fc8-8671-4ddd-80ef-acc6b7dc8188",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982da4fd-3d5a-4d39-8f8b-3fe99baa2821",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14470e45-15db-48b4-aa2d-d44f1a341938"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0450b80-fc7f-4a2d-8ae4-d6769c68175a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "016cad10-c0e9-4a43-9fca-fe6635527661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6112e24a-22df-4bbc-944a-4bdf604e6e78",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6cfdfa1-f6ce-44ff-b6da-da6516f31802",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b36d6a1-1cf5-49fe-adfc-ba5001509605"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca0860c-e488-4617-a3ac-712b7ec48e9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ab51fad-196b-42f8-b011-232bc172aca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5bd28d1-d158-44cd-aa79-c1194141e2a4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0acebc17-7740-40c3-876f-5b8487211a4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e6f25a1-81b9-4308-a00e-cab15af4e1af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "255be870-f72e-4da5-9af5-960869e75d34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dda0048a-cef4-49f7-af0c-04accde5eec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba11b98-f692-4b74-aeca-fbf5cd662f09",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7840bac-64a6-4c3a-82c6-671d56e83b12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ad371f9-b567-4b7a-bde4-a515ce51ad62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ade1f68-c16f-4444-95ee-2bdb8c1a913b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b73ad707-3b0a-4f59-91f8-038293ad53c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b825ff-829a-46ad-9cf3-61bc423ea0a8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0410ded6-ab57-468b-a070-c3073149a79d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfc83b1e-22c5-4158-b42f-767d5f02afb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2e5161-0ea3-4566-a85d-642777a366b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a93ea934-be1c-41e3-90aa-bc39e85d8ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e9b11f6-1afe-4773-a19c-9e414eb13abb",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b20f23bc-422a-44a0-ba34-cd5a2eebfdea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb2432f2-899c-4784-8be8-e893b6fe956e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b4efa4-e362-4fe2-abe3-150046c6b78b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fabe9a7-f78b-4da7-bcb5-767a65993e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb2b1b3-f7dd-4ef8-979a-c00b73071151",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86436490-1380-4c01-87c3-6b3a1f983b22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c39b230-52ad-4141-9606-b80cfb9809cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd341ad-3f8e-4583-bb4b-ae9e486cede1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45c0a4de-04eb-4f8b-a4e6-1d28be1b368e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d875ea05-0a87-4bea-81df-f40c8ee63dc8",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a590ed5-fa0d-4246-a4e3-9f9ec1cffd88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47ad001f-b50f-4c2c-9375-41c957f0d31f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66584606-2e6b-4506-80a8-7a75d555ed75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "783f3fd3-c6f3-4d04-b536-d9dd297a37fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78572cf0-8330-4cfa-bae5-9760548553e2",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab70f63-8673-468d-a1ea-125fb9dfaf67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a3c3f3e-8dcf-4d4d-99f5-8cea3e545ba2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d11a830-3980-4152-a88b-de31e244ae60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deee86cb-dff0-4010-90d1-268627a0b2ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8407e135-a229-41a9-a6cc-33efafb9d37d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4cfc8c-052e-4ca4-aa7c-0df02a1780cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f7db9a3-5b6c-41a2-8892-811a792629e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad844d98-55cf-47e0-98fd-69aadb5a61e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee4ba62-7575-44a0-89e1-bc2fadfb9795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5705c9-1c36-4e4b-95a7-db90c392acb4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36bbdb88-cb70-4343-b02a-501c140a3c70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd7c0bba-141c-4adf-a6e0-759dc2b9c064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e38743b4-ebd5-4871-95d4-79d4f9c70c54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c22be3d-2a7f-498e-96d3-ea2280c75622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d85138-7eba-4345-8ee7-b4a485924b1d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c553d83-3ca7-4269-97e9-0ad9dddce485",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "343e2685-b78f-41bf-9f37-a895e555853a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee7811e-753d-4443-ae96-993aee212f12",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d76c8cb-40ec-486d-bd54-2741db0b2f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e668019-ea9c-4459-b88f-5eeee5ed8fa9",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a0d77f-4fbe-4271-95f9-d76e16720abf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19af049b-d28a-4b64-aeca-7fef7e718e5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25529b4d-397e-4703-9e88-a91eeb49c3c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bdc5724-70e0-4197-8c5a-606b98078cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7d72c2-b8a7-4792-b13a-7737084b41a6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6b1b3e-a393-4878-abed-aaa4449c7916",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c65908c9-161c-40a4-a47d-23f103870399"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b10b66-5791-4dfb-925e-2998b907d804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b886dd03-f936-43d0-b4de-f5436d9f10c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be3d321-f781-4584-a2b6-0359d5a406b0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb326e6-18b7-416c-83c5-d26e4fe045b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28f042d7-1cca-40bf-b92a-3108cb29092e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7459900d-799c-460c-9920-6bc43fffed6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04bfeb52-d982-4f5c-9076-7796e3eba3e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44af3a21-5154-4816-af96-d6ab12533914",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6538276f-a58a-4126-89e5-668d67292805",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4384ddd8-ed88-4278-a926-ef34dd667d88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59190267-da40-400b-9e61-43b3584c9c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fe43c23-5ae9-4d52-9a5e-d58cd3437956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a66d078-331f-43a8-9a4b-2db4ecf9d983",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49cdb56e-8456-42ae-813a-f4f78cd2d4b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "334fad03-b9a3-4522-bc8e-09d8301b201c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9f383b-c42d-47c9-9bdb-8aff4760824c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15f95178-8cdc-40b2-970a-8865dfd2dd8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5444d8-cfdc-4c9d-85e0-c23089f743e5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dcc2599-f79f-43af-b979-8b17534b5ee7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5cc19ea-9f69-40a4-9b9e-9405ed37dc49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7425b1e6-db7c-41db-9ee4-3626ab7ab111",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dbb4e48-e2c8-4f85-a716-3e17fce13fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66eea362-7505-4a5b-a19e-f727ee69cee6",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c737fb-e5ee-4494-a692-62916d18e970",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f12b41d-a482-4c3a-bc09-1eaed4b7d853"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5ef370-83c8-4873-bb4d-e63b3e2eb221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3f65a62-4bd9-4905-8ea6-66c07d223b23"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce9b392f-9e21-4c70-a6e0-0f9cd42aa677",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ba90753-8694-494b-a665-28a7a1451727"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e7cde67-51bf-42ac-ae76-ff26206441ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ae0bdcce-0aa9-4962-8b79-1248af162558"
                    }
                  }
                ]
              },
              {
                "id": "ba80d1d7-ad3b-488f-8800-cbc834da13bd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ba7e82c8-236b-4d42-bd4b-9a15715523f1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89162a7d-76fd-4e36-bcfb-c73b980ca87f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ec10291a-121b-4829-8b22-dd9792a1c41a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "892a9750-dc22-4226-b170-109c67bbc640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99aff003-e30e-4ce0-a59e-05ab5c0a4fa5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd06cdca-456d-46eb-b6cc-a52c38640d47",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c5603ec-f848-4c1e-9dfd-4415b6543cd5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bdf153e-c21a-47fe-a5ff-9e03dc7ddaa1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2577c961-7b41-46f9-914c-bbb56921c006"
                    }
                  }
                ]
              },
              {
                "id": "5053c726-b32c-4e2b-a736-451141f3d0f3",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "aa90fff1-afb6-4b51-874a-245ea80c6918",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be006bd0-d3c3-4e1b-a09c-9c7eccb1828a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ab034f8b-21e9-4e24-aa4e-70a9295042f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad5c7ca-cd0f-4188-90ae-cc76dc8fff69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dd2acb0-0b82-42af-ac43-e5497e91fa0d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "270ad56f-1aca-4412-b0cf-422d87f8ad66",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7b2a6b06-6a33-479b-8c25-a4c003197f43",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37eb3250-fccc-49be-9cc1-db0482fe2b7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2c2ec862-e5e0-48b2-8767-90ffb6600f4e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f9bc1a1-6266-4c68-9bce-35d16080787f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "227a4bb8-4c04-46a8-a626-e32a4a34c438"
                    }
                  }
                ]
              },
              {
                "id": "f667a01a-d037-42eb-beda-52979d96eb57",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "56b24904-10f1-4910-8eab-28588f23e3e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fcb3a601-7765-4d86-bd0a-a6e5a18aa029"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09b56a89-713c-4bcd-927f-e7d0971ba6dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1bf1b9b-a69d-422e-b791-19a244e55738"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f2a6f51d-752e-4b28-986b-d01cf2e41e8c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "86e2318e-64d2-40d7-a962-160838582532"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b8c79657-e9e9-43c2-a4c5-1c86f7c6db70",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "31273205-0320-4a1e-b309-56a49e00d02d"
            }
          }
        ]
      },
      {
        "id": "baf76203-07ae-41f6-ba72-8e30f64d2a56",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2f87bab7-1530-4533-bfcc-2e50ef92c3f7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ead961d2-8d85-4bdc-b2c5-aa17e2a0825a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3b6c332d-13b1-4aa6-8e41-41ba8e929b62",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83547dcc-b9e6-4697-b305-9e5325b7b0be",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c25502ae-3ce4-4925-a1c0-10aaeca2577e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9616ed39-f5df-47fd-ba2b-ae7e79af03d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e26c23a7-98a6-4452-8509-d43864212155"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80ab934b-1633-4299-bbcc-494a9c68a354",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa1225e8-972a-4eb3-bbc5-c697d3d7eb59"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5be0f5d-73a3-49fd-bc5e-5fba64a69378",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4cd713e1-b737-42f5-903a-7086c0b6f2d4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a2a9386a-eb82-40f1-a701-632ec2b47aab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "cc5912d3-b066-408e-ae98-6813a51bfd19"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "efa4f097-80d0-4c41-8d02-647851db6a8b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4f3b873-adfc-43fa-8fda-7e4d8307fb4a"
            }
          }
        ]
      },
      {
        "id": "9f46e9e2-4564-4ce2-9e09-e23b65c07476",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5535bb8a-228a-4e8b-bfee-4846ba192ab5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c61c74a5-ccd7-47b9-bd13-248a0791d82d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7ecdf4d6-f601-4429-b955-a4c3801f8a15",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba4c159-2073-434e-9baf-ec87a5da1ad4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9acb47a-e76b-4af9-8025-c3183a324273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a92ac3f-4617-40c7-924f-81d1ef74626a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a5bd09c4-5b42-4508-b0b4-102c1899a230"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "375d264b-aa27-4287-bdb0-e0de68420571",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3700ed5-9ed0-4448-8b6a-7fbb4746dd0d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e35362d4-c0e1-4316-865c-bc5f9d4cf1d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da0edab5-e62e-49bc-9abf-f9eaba388777"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b2226d38-c07e-44a4-bd0e-a7c144df8fb7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e6360fc3-3d7a-4c9a-bb9e-5a8db639f01b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "480449e5-37fa-45d7-bba2-ead77518eae9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d2de48fb-b5ef-4d2d-8f4c-72e62183b172"
            }
          }
        ]
      },
      {
        "id": "db3a6484-30e3-452e-b9d9-5a500dbd313d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e3f8238d-eec2-4457-91c2-45a070bb0f9d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d79a1ecb-bc8f-4466-ad18-05ea9830a89c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db1f67e1-223a-4196-b014-c835a8563248",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e84ab5-8fae-4467-99dc-137124eaafbb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f7584cc-23d9-4892-892e-f7b2b3831092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6586d26-8d02-4bc8-b0da-7f25022808d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7a53be8-9913-468d-aa7f-f5defc83e393"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26b02c04-6fd0-4f6a-b3fa-adf3db209acf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0d06d6e-7197-4280-8693-4347806115a8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba773681-671d-4862-aa92-815bf7814daf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c21b5257-dc39-4e1c-8438-ec822b15c64b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "afefb239-22a4-44d8-888a-01ee8821a544",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a7faa223-beac-4920-b7ff-39176d68d5c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1654882b-cdda-4819-8387-dde1b3b28136",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f7c43943-bf7e-4c4b-a00d-b0834dd786d2"
            }
          }
        ]
      },
      {
        "id": "6a5e55ec-b045-463c-86ea-5c1a00e55f03",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c203805-26f3-404e-ba6c-03d7d6575167",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9bb82787-5e67-4eff-8741-0b1773de0efe",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "32f9c077-310e-4905-a9c1-f1146dd527d7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "21c0a598-44f1-4d85-8517-97236cb3c968",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7dc882b4-32ee-4a6f-8c5f-51fb878e9b70",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 34.83450704225353,
      "responseMin": 12,
      "responseMax": 316,
      "responseSd": 26.492439914894927,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1690073032711,
      "completed": 1690073053680
    },
    "executions": [
      {
        "id": "96a8a779-fdf8-43ef-8144-b77e3994f178",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "326307e7-75f8-45c4-bc45-a0f62fc4866c",
          "httpRequestId": "a5816e20-5ada-48c7-a447-563e4ad03731"
        },
        "item": {
          "id": "96a8a779-fdf8-43ef-8144-b77e3994f178",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "90c8beb8-236c-42c7-94a2-7f0c2a84cbb5",
          "status": "OK",
          "code": 200,
          "responseTime": 121,
          "responseSize": 0
        }
      },
      {
        "id": "e86eb480-4a2b-47c4-80fd-ceed79c7ae9c",
        "cursor": {
          "ref": "624ea0c8-646d-4c6e-a62e-e9f9e460e80d",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f38bd562-a733-41e4-b23b-95258e77c4f4"
        },
        "item": {
          "id": "e86eb480-4a2b-47c4-80fd-ceed79c7ae9c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0c6ea687-e07a-4d0e-90b5-b0703e5da5d6",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 0
        }
      },
      {
        "id": "a0f64302-f919-41da-ac6d-6d6863012450",
        "cursor": {
          "ref": "6107ec61-9cd6-4d71-8be5-8fa911247013",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a415ecfd-649d-41be-80a6-95ddf827976c"
        },
        "item": {
          "id": "a0f64302-f919-41da-ac6d-6d6863012450",
          "name": "did_json"
        },
        "response": {
          "id": "9f92571c-a2ea-4a0b-8f8e-3029641704d1",
          "status": "OK",
          "code": 200,
          "responseTime": 244,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d7a953-c9c5-4a67-8857-fe2573ff7a99",
        "cursor": {
          "ref": "1d7468f4-37c1-46f0-b749-02f5bad354ef",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cc7c4e38-b7d5-4fbe-bf94-e77c44f64904"
        },
        "item": {
          "id": "64d7a953-c9c5-4a67-8857-fe2573ff7a99",
          "name": "did:invalid"
        },
        "response": {
          "id": "b4cbad56-0575-4f2a-84aa-75031d61941a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d7a953-c9c5-4a67-8857-fe2573ff7a99",
        "cursor": {
          "ref": "1d7468f4-37c1-46f0-b749-02f5bad354ef",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cc7c4e38-b7d5-4fbe-bf94-e77c44f64904"
        },
        "item": {
          "id": "64d7a953-c9c5-4a67-8857-fe2573ff7a99",
          "name": "did:invalid"
        },
        "response": {
          "id": "b4cbad56-0575-4f2a-84aa-75031d61941a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77fb24b6-e4f3-4c98-8de3-e1d24957c5bb",
        "cursor": {
          "ref": "2478e115-5e11-4660-b714-eb3c3312e959",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4f59b61b-e495-4ee8-bae4-a2543eaa5324"
        },
        "item": {
          "id": "77fb24b6-e4f3-4c98-8de3-e1d24957c5bb",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4e840c90-8044-4024-843c-96238b7af180",
          "status": "Not Found",
          "code": 404,
          "responseTime": 71,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a196ef4-23e3-4a64-a6e9-c6a2bce6973e",
        "cursor": {
          "ref": "ae031431-64f9-4883-9a59-aa7d9b1f81b1",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "04ff82b8-c79e-4785-8e3f-932104975611"
        },
        "item": {
          "id": "4a196ef4-23e3-4a64-a6e9-c6a2bce6973e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4f2f15c1-7c0d-46a7-8cbb-4c43797be7cc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3019bc26-2cc4-4e10-8e4f-dd8206b16b91",
        "cursor": {
          "ref": "d7a6fb6f-2dd8-43e1-bc39-1e40525dbbe7",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ad7b8f5a-e7f9-4638-8c41-3ef365f98a46"
        },
        "item": {
          "id": "3019bc26-2cc4-4e10-8e4f-dd8206b16b91",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e79cbaec-79b9-4a33-b295-cba70db6a360",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f4f7b9-c67d-49cb-8e5b-f1c30f97706b",
        "cursor": {
          "ref": "b87d441d-b507-4698-bf76-dd70772c8810",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b5db90bc-3aa2-4faf-a836-3879d1d00f32"
        },
        "item": {
          "id": "78f4f7b9-c67d-49cb-8e5b-f1c30f97706b",
          "name": "identifiers"
        },
        "response": {
          "id": "e0755506-6905-4bde-b42a-b347f50dd688",
          "status": "OK",
          "code": 200,
          "responseTime": 234,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0c6c81-d932-4c77-b40a-3bc0dff4c4fd",
        "cursor": {
          "ref": "9725aa6d-784d-45e4-bb6c-0ac9bf84e52e",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f5ffe27a-8b1c-4fa0-8371-80f8456ff4e5"
        },
        "item": {
          "id": "ae0c6c81-d932-4c77-b40a-3bc0dff4c4fd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e6f9d9d0-ae9d-4a32-a989-b5d3951aef13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a2f1e6-548e-4168-bad3-3a8694939b7a",
        "cursor": {
          "ref": "4221434a-f821-4e62-8c93-19537c4ee138",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "80273172-96ce-407b-9226-0ecad12f3eaa"
        },
        "item": {
          "id": "71a2f1e6-548e-4168-bad3-3a8694939b7a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b4084b5c-0243-4bdf-a47c-6f01bc996035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdbba6ab-f178-48fa-afef-4c79f12b35a9",
        "cursor": {
          "ref": "df041146-7abb-42bd-99cc-79dfde78969b",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1f8e6442-518a-4231-bf70-6942aa4acb62"
        },
        "item": {
          "id": "cdbba6ab-f178-48fa-afef-4c79f12b35a9",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1b71c6f5-7e42-42e1-8279-5978389ed7fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ccd4f7-9ca0-4154-af51-335e6e8fbcac",
        "cursor": {
          "ref": "4f6afb27-8552-4b77-95c8-9b3a68b27aa8",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4ac8a3ee-1814-4639-8c53-d818d881c2d0"
        },
        "item": {
          "id": "e3ccd4f7-9ca0-4154-af51-335e6e8fbcac",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0fbf0ee2-a394-40a9-bd35-a8651ad7ff4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e00d260-68ad-4b30-bf5c-9d321a413102",
        "cursor": {
          "ref": "337e7c43-2673-4237-a597-93e670fcfbd1",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "cb44022e-10de-49bc-a31b-63102bf08b93"
        },
        "item": {
          "id": "1e00d260-68ad-4b30-bf5c-9d321a413102",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e532069b-abe7-4c47-8097-dbb0b3c5690d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251db36c-e93b-43f0-93da-6c6231ebb513",
        "cursor": {
          "ref": "fa473f37-7cf4-42ce-a4a6-7474c7f77fe6",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "057bc76c-f6f9-4ed0-9665-34d3d77c95b8"
        },
        "item": {
          "id": "251db36c-e93b-43f0-93da-6c6231ebb513",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c90be5d7-c700-4146-b51f-5f79512be924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c634cb17-9248-475d-b5e1-fa8736df2722",
        "cursor": {
          "ref": "357a61df-98b5-4e6e-962e-805bd6097322",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "fb367211-78e6-4d59-a64e-2b5833b82f7e"
        },
        "item": {
          "id": "c634cb17-9248-475d-b5e1-fa8736df2722",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "96455dfd-dc60-47ec-9535-55cf0494ddf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04eb70c-9560-4500-9ad1-5cc73456875e",
        "cursor": {
          "ref": "9f7a718b-d2b7-40bb-a715-16e5afe60742",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4cda12ed-a6fd-4170-9d54-bf4b38473b8c"
        },
        "item": {
          "id": "c04eb70c-9560-4500-9ad1-5cc73456875e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "fbf42a72-c311-4d7e-8d2b-492cdf2d9d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b0a2f1-ca4c-403e-a0ca-b71407fa674a",
        "cursor": {
          "ref": "6a0924c5-4292-4cc7-8164-d86ba4144d27",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "516b930e-080d-43b2-9b3a-542b687fc3b2"
        },
        "item": {
          "id": "f0b0a2f1-ca4c-403e-a0ca-b71407fa674a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c3d4a196-3813-4dee-934c-52414a79bb8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591ca184-b63f-4541-8277-fb069665534d",
        "cursor": {
          "ref": "889310d5-8709-431d-a84f-e386da2bebf2",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "259f25c4-df36-4e0f-9e45-13d1d70dce89"
        },
        "item": {
          "id": "591ca184-b63f-4541-8277-fb069665534d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b8e5a946-811e-40b5-a717-f4c98e2ceedf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d802ff-5aa0-44d8-99a4-89f497e1e366",
        "cursor": {
          "ref": "df369ab1-d7ac-4926-8262-9f9f027f7b83",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5532fbb9-ae51-41f8-8707-2d3bf79a981e"
        },
        "item": {
          "id": "45d802ff-5aa0-44d8-99a4-89f497e1e366",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1b8bbe11-eb03-419f-ae5b-5624b2cd5f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3331515-4dfe-444a-8cf6-2d6b0bd349d8",
        "cursor": {
          "ref": "a032ec41-e17b-4218-b2ca-5d2103c7787e",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b4616a22-0d22-4309-b9bf-9816e8377560"
        },
        "item": {
          "id": "e3331515-4dfe-444a-8cf6-2d6b0bd349d8",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "959f4e95-6fa7-4749-a831-70ae9b380cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e0bb29-b76b-4ff1-94cd-fd9f5be5e2bd",
        "cursor": {
          "ref": "c37a9845-8e41-45a2-917c-f760f8af45be",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "cb9b23b8-0fb7-4ce8-9291-820491aac227"
        },
        "item": {
          "id": "a7e0bb29-b76b-4ff1-94cd-fd9f5be5e2bd",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "369e187c-fc24-41b9-9b8a-2f442110612d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43480cde-b2e3-4615-bf62-7ae0ea3baeed",
        "cursor": {
          "ref": "6781eb69-c677-4674-9bdd-79ac9d27a129",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "541a769a-bfbe-4f6d-9d50-f69b7b954545"
        },
        "item": {
          "id": "43480cde-b2e3-4615-bf62-7ae0ea3baeed",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0540c533-2f80-4548-94eb-09b367a20eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d736e57c-78c3-4f10-8b2b-dcb5711e86c9",
        "cursor": {
          "ref": "9a679f3a-a176-4376-8b3b-69f0dc9bfbf4",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f0c1142b-bd8b-49c4-8aad-207c4967337e"
        },
        "item": {
          "id": "d736e57c-78c3-4f10-8b2b-dcb5711e86c9",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b2e2ade8-b685-4eca-b7c6-b72d7216c66a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ad8112-1f06-4cd3-b006-6910d31f2b36",
        "cursor": {
          "ref": "cf0c451d-5908-4c62-8d07-307df4fe3296",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4d8f4263-bf90-4f55-bb98-b765304a4474"
        },
        "item": {
          "id": "71ad8112-1f06-4cd3-b006-6910d31f2b36",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "98c58e19-73ba-4103-889d-76b7cc911ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86689a87-4ab6-4466-990e-5675520e5b4d",
        "cursor": {
          "ref": "f1e9e3e2-f20f-45a3-b29e-41af87a763a5",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b32fb524-5f38-4225-867f-9821c5a7eb6c"
        },
        "item": {
          "id": "86689a87-4ab6-4466-990e-5675520e5b4d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "77e5b356-ea2e-457a-bf8b-759d69285664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784c3068-327f-448b-b652-ca739246ba4c",
        "cursor": {
          "ref": "d8c60769-57af-470f-817c-53522c34ee60",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5d409f70-97a9-4d94-95e8-501d30a53082"
        },
        "item": {
          "id": "784c3068-327f-448b-b652-ca739246ba4c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "314f47f5-d0b9-4f33-b4a8-862ed1adaa7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf9c27f-5385-4b7b-97f2-31850950fc59",
        "cursor": {
          "ref": "6d7110bd-58ce-426b-9085-0ad27e49f223",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "48839073-3367-45aa-b766-e0d2782e0759"
        },
        "item": {
          "id": "8bf9c27f-5385-4b7b-97f2-31850950fc59",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7e690abf-da6e-437c-b307-b5485514d28f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50dc9948-285b-4575-ab07-18801613708d",
        "cursor": {
          "ref": "0ec91848-0ed1-4e10-b5c7-6c27a23d636f",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "cb2cf863-5bf9-4c30-a1d8-5908c67b0990"
        },
        "item": {
          "id": "50dc9948-285b-4575-ab07-18801613708d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "019e1df3-7040-40d0-8cce-f06f451fae7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e391003-66a9-4fae-9d7d-a8fd692df266",
        "cursor": {
          "ref": "38d6b706-fe28-45f9-919e-45e99a567b6f",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b43ed526-0009-4a89-93b2-7f6ab6bc1b4b"
        },
        "item": {
          "id": "7e391003-66a9-4fae-9d7d-a8fd692df266",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2c7796a7-64b7-4051-b205-8dfb4e735329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4454743d-9430-48c4-af2f-09f82d8aebe7",
        "cursor": {
          "ref": "bc68e514-2e75-45ae-b68e-c2fce8a0f139",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "36e91112-d124-4eb2-be9a-350a1ad4451f"
        },
        "item": {
          "id": "4454743d-9430-48c4-af2f-09f82d8aebe7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "408b14d9-8d2c-45c6-afd5-9467fa874c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c744c49-0b32-415f-b26a-af323fb62057",
        "cursor": {
          "ref": "70203fc1-1d64-404d-8b4b-179453670b12",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a2c4b68a-288c-48bc-b28d-2a7bb30ec682"
        },
        "item": {
          "id": "5c744c49-0b32-415f-b26a-af323fb62057",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a99fe855-79bf-47f9-a544-3100a0efec35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21c93be-f717-4498-a343-a908a0f896b0",
        "cursor": {
          "ref": "af378245-fa63-4144-8016-11fc02a9c45f",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d44bd85b-0f68-416f-9e02-89cd1cf1380f"
        },
        "item": {
          "id": "a21c93be-f717-4498-a343-a908a0f896b0",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "887ee304-0242-4908-8247-8ead270e4274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d087c5c4-c8ba-43cc-8a21-aa40884d0ae8",
        "cursor": {
          "ref": "ffae8749-508a-417f-800a-0308e32bed9c",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2464c355-517f-4480-8d3d-83fe8fc3e70a"
        },
        "item": {
          "id": "d087c5c4-c8ba-43cc-8a21-aa40884d0ae8",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1e1fb7a8-f507-4ffa-90c6-025c1bd1866d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a359ba-a563-412c-aecd-1ef325daa9bb",
        "cursor": {
          "ref": "4507772c-1dea-4dbd-b78f-051b69705026",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "08273626-cbb7-4d93-ac0f-fd37dd56faa1"
        },
        "item": {
          "id": "a2a359ba-a563-412c-aecd-1ef325daa9bb",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0dd84a8d-5f69-4049-9cf3-f9be1c683b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca2334b-2464-474a-bdee-94b3d2f684c1",
        "cursor": {
          "ref": "aa442eab-25c3-4f4c-9052-f42bb256e0b3",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9b1982a8-584d-4910-8bba-2633e7c3de3a"
        },
        "item": {
          "id": "1ca2334b-2464-474a-bdee-94b3d2f684c1",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ddfb1508-d91b-46a3-9194-09056f1dcb22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e1c50a-8e78-4e10-b0a4-04b33e9ac665",
        "cursor": {
          "ref": "2322a8a5-60b4-44ac-83d2-bfdc27e260f3",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "307a176a-48a2-4956-969b-14e10d390097"
        },
        "item": {
          "id": "c5e1c50a-8e78-4e10-b0a4-04b33e9ac665",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "dd3e7185-2611-41a8-8c89-26eb1b24f6c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "124b7d27-3603-43d2-92ae-ac87df0b9979",
        "cursor": {
          "ref": "b20613bf-1eae-4e8f-8210-773a86fbf921",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f1102736-0730-4519-a2c2-fb56637f0fb6"
        },
        "item": {
          "id": "124b7d27-3603-43d2-92ae-ac87df0b9979",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "669d38d3-880f-4518-aee3-ef36b3b155cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a934827e-ddf5-4502-ab7c-11855482e764",
        "cursor": {
          "ref": "d160d878-3e2c-4451-8583-cf1f2655f85c",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "74af3a69-a401-4f5e-ab6f-acb17ac99352"
        },
        "item": {
          "id": "a934827e-ddf5-4502-ab7c-11855482e764",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4f818a41-a196-40b2-bed5-7ddafc22d091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f7735a-958e-4a00-8da0-35439e508f4d",
        "cursor": {
          "ref": "dce31243-3ccd-46ee-a960-6b62ab0c802f",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "aacadb24-1656-4b73-a921-255ec8255d83"
        },
        "item": {
          "id": "c9f7735a-958e-4a00-8da0-35439e508f4d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0e42a89b-1e08-4d1e-9317-1bcafc6cec2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c87439b-10dc-4018-869d-a734d948f07a",
        "cursor": {
          "ref": "ad620e1f-3b2c-4d5d-8a22-e21cd3dce4aa",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "13491dbf-d9de-4dbb-a907-cdcfa817057b"
        },
        "item": {
          "id": "0c87439b-10dc-4018-869d-a734d948f07a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e327d6e9-32b7-4f04-a9dc-62730a9ff0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eca9a73-577f-42f3-938c-7155dba3cc4e",
        "cursor": {
          "ref": "64d7551d-58cd-4949-8f76-d7393f71aada",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "db306bbd-72eb-4c20-8972-269add6bf30b"
        },
        "item": {
          "id": "5eca9a73-577f-42f3-938c-7155dba3cc4e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3b54ebd4-c8ed-40d5-a563-1f80e2943ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c575420-e5db-4bf2-9656-32726f48bd91",
        "cursor": {
          "ref": "17c698c4-8441-4ddf-9ccd-746859ea02eb",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "99e05fe2-b760-46e3-8fc7-22eb7e4ed0bd"
        },
        "item": {
          "id": "4c575420-e5db-4bf2-9656-32726f48bd91",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7dabd5ba-0c51-4ef2-af90-60d087e07030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0101d44-3329-4645-b45e-377be5efb1fc",
        "cursor": {
          "ref": "1f4e3247-2edb-48c5-a5ca-f5f09146a808",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3cdc2ef1-48f4-4522-a067-a9d1cb693456"
        },
        "item": {
          "id": "c0101d44-3329-4645-b45e-377be5efb1fc",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9bf9fdac-e322-4a34-85f0-6dca4e24e777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7339ba5c-1de6-43ec-bda0-fa9d95663d6a",
        "cursor": {
          "ref": "9c527b11-f90d-4ed7-a8f1-ff7ea282c76e",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "48443514-8901-453b-97ba-8364690848b0"
        },
        "item": {
          "id": "7339ba5c-1de6-43ec-bda0-fa9d95663d6a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d27ac1c5-ab2a-4085-ac25-05a6b970e9e3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 38,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543c6d0c-82da-40db-a3a6-bf05b3b6a0a8",
        "cursor": {
          "ref": "e00f2425-d7c9-4134-b1f3-cceac9fc10ad",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "42303da5-7445-4e81-a475-5bb3c352be3f"
        },
        "item": {
          "id": "543c6d0c-82da-40db-a3a6-bf05b3b6a0a8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0217df7f-9efc-4e65-8509-bcf505ae77d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828ef1a8-8923-4244-8fb1-0635dbbb342b",
        "cursor": {
          "ref": "4b2c07b6-3bc3-4f7e-9c9b-b1514dc5dd1c",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8b51a55a-89bd-467d-b361-9890e7d00c6b"
        },
        "item": {
          "id": "828ef1a8-8923-4244-8fb1-0635dbbb342b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "67a20b7b-66b2-404f-bfa9-1c35c3aec565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa415ac2-43a7-45ad-a547-f48d4b905e7f",
        "cursor": {
          "ref": "4d53e96e-744c-4b19-9581-96638f3b59e1",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "03486b83-f836-40e2-a4bb-b3f85331cdc8"
        },
        "item": {
          "id": "aa415ac2-43a7-45ad-a547-f48d4b905e7f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "df8d187e-dcf1-40fc-90b8-bb035bdf7164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70513d5-5b20-45d0-bcba-15d3facd92ed",
        "cursor": {
          "ref": "04e77aeb-8e77-434b-a6ba-cad9e039cebf",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d7d5ea42-6036-4f78-b9b7-8d089c9c21b7"
        },
        "item": {
          "id": "d70513d5-5b20-45d0-bcba-15d3facd92ed",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "29926bd3-2fa6-42b0-b320-cb24942a7846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fbeedad-b15d-4d22-9adf-528f37129bde",
        "cursor": {
          "ref": "29fe4432-3c8d-4b91-818f-3a5f808c0792",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "dcd60948-1069-4fbc-af5d-67e8ade0e5d3"
        },
        "item": {
          "id": "1fbeedad-b15d-4d22-9adf-528f37129bde",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1702a492-88b4-40e8-a2d9-0ca4fc9dced0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df2e96c-1aa7-49fb-866f-e0e46c147224",
        "cursor": {
          "ref": "0a5a379f-7e4f-4a48-986f-7cefe3f1ef8d",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a0f2612b-62af-4bc6-b37b-61688525eab0"
        },
        "item": {
          "id": "2df2e96c-1aa7-49fb-866f-e0e46c147224",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5f55c27c-beca-4756-a108-f1702d6e02f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51d9350-74d0-48f6-99fc-5e83d81553af",
        "cursor": {
          "ref": "5f533bfe-ba97-4aa4-8f48-f81c59c273d6",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6635f7f8-acd7-4ef5-9df0-a13ef54ea6f9"
        },
        "item": {
          "id": "f51d9350-74d0-48f6-99fc-5e83d81553af",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "334a2701-5525-4a08-8751-8baf57dccbef",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 39,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6f58af-a618-4013-b8f9-a594aac483b8",
        "cursor": {
          "ref": "4d0689d1-93c6-4456-b6e3-71b6a5a88f73",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e087a79a-3317-44dd-b5dd-eb28a3deb89e"
        },
        "item": {
          "id": "df6f58af-a618-4013-b8f9-a594aac483b8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0ab91796-0678-4db0-a9c1-d503f38cd4d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ee0a2d-fe93-459d-8d79-00a44f46858a",
        "cursor": {
          "ref": "fd246214-69c1-4241-8362-fa37406f4d4b",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "73681227-274a-479c-bcf6-9d212b9888f3"
        },
        "item": {
          "id": "51ee0a2d-fe93-459d-8d79-00a44f46858a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "bc4268c7-cad5-4553-9ca5-371212996334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "579d85f3-e326-4ab2-a5f0-afdd658e754b",
        "cursor": {
          "ref": "22f7c7f2-f231-4bbe-a9fd-ef2a63c598d8",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d2677b37-e44f-4549-870e-e02e898fe140"
        },
        "item": {
          "id": "579d85f3-e326-4ab2-a5f0-afdd658e754b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "52328dcc-9fe4-4b41-8677-a00855e7a05a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd3fc9b-8580-42b7-8211-6527a27db2a0",
        "cursor": {
          "ref": "63544015-e973-462b-abc9-8adea7ea86d1",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "bd873182-f629-42f2-bfc9-e17f1903f792"
        },
        "item": {
          "id": "3dd3fc9b-8580-42b7-8211-6527a27db2a0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b768a587-6dda-42c9-87b1-3aadbf0a09bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a993290-55a5-4877-a535-71bedebfe6a2",
        "cursor": {
          "ref": "31b78fd8-f49b-444d-90f9-40652f3b350d",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2c55e91a-99e9-4a88-99ad-a8cb306c8641"
        },
        "item": {
          "id": "5a993290-55a5-4877-a535-71bedebfe6a2",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "87bc64eb-c0cd-4f81-b1f5-b0302439e26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1b8faf-3665-4425-8576-ffcc86808257",
        "cursor": {
          "ref": "d726f44e-b114-4355-b14f-5568b6c3a4f1",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "678cb2a4-e315-41d4-9c78-2526ecf3b0e0"
        },
        "item": {
          "id": "df1b8faf-3665-4425-8576-ffcc86808257",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "359b66dd-550f-4bb5-bbd0-da018816c0f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f04a5f3-1796-47b3-9af2-d92552af2e21",
        "cursor": {
          "ref": "02e1db1b-9cfd-4930-af2a-1fb2e6a2db52",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ff47edba-49bd-4144-a492-22c0e52faebd"
        },
        "item": {
          "id": "5f04a5f3-1796-47b3-9af2-d92552af2e21",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "dbe547a7-7f18-42fe-8f13-e571ac1097b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3936508-7f9e-4be4-aff3-ec23d0653186",
        "cursor": {
          "ref": "3537c20a-a5e4-4954-8e85-9f65af4aa8fd",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "17f73a2f-28a8-4d06-8f90-6ddb197a2cf9"
        },
        "item": {
          "id": "a3936508-7f9e-4be4-aff3-ec23d0653186",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1ff22352-00a4-42ad-a43d-88dcd1520bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e87719-e172-4e62-9843-42ba6a557ac9",
        "cursor": {
          "ref": "9faa557b-7388-441a-aee9-5e76b9b447f6",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2574baa0-2a5f-432c-b2b1-7583479631d0"
        },
        "item": {
          "id": "11e87719-e172-4e62-9843-42ba6a557ac9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1207adc0-995d-48ff-9bb9-327fcb514614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4adb533-c881-4549-98b6-96ca982b36d4",
        "cursor": {
          "ref": "be94465f-42cb-4608-af62-25aac1389e60",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0e8fd673-08de-4364-b0ec-ace92a1389b3"
        },
        "item": {
          "id": "e4adb533-c881-4549-98b6-96ca982b36d4",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d4020ad1-e940-4eda-89ff-d6fbe9d7a01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91905a35-bb93-45c6-aa75-cd906245f403",
        "cursor": {
          "ref": "94796c80-c7c8-4896-851c-99a441f4927d",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6e0fa156-a8a5-474d-9dd0-df7492deac72"
        },
        "item": {
          "id": "91905a35-bb93-45c6-aa75-cd906245f403",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "35721bd2-2ee4-45bf-a422-94d14655fee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb584b49-6c0e-48e9-accd-431d279528da",
        "cursor": {
          "ref": "222ab416-2a7c-48ff-8d94-d3f5fcb632ef",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "15d34efd-7883-4fac-b6c7-bae3e225afde"
        },
        "item": {
          "id": "cb584b49-6c0e-48e9-accd-431d279528da",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2802b1e1-8821-4baa-8cdd-aeddb24ad231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44979a9d-3547-4fbc-9840-536483a048c1",
        "cursor": {
          "ref": "a27c7483-733a-4342-bbba-f1ac6b1c1b2e",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c1638d1a-a3f4-4623-b2f2-f1b1f7b11a39"
        },
        "item": {
          "id": "44979a9d-3547-4fbc-9840-536483a048c1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "adcab840-c2e5-4068-a7dc-74058fc06ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6208331d-3393-4d00-8509-a202057fc415",
        "cursor": {
          "ref": "bfb7ca10-8b3b-4636-9eee-47dcc8100f78",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9b3b78f7-9b2e-4a8a-87ee-97ff70b5f04a"
        },
        "item": {
          "id": "6208331d-3393-4d00-8509-a202057fc415",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0b532ad6-50bf-4d30-9824-c8eceaa3b8e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e1568c-2b93-4a05-8508-e261aa3caf8f",
        "cursor": {
          "ref": "b2f7e735-1fcc-47b5-980e-3926e6619e0d",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a23466e9-a551-463a-b0ed-9ed681c658b2"
        },
        "item": {
          "id": "e0e1568c-2b93-4a05-8508-e261aa3caf8f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "70abd756-a012-4f0b-9b9f-0d9dfae49404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f0bef6-b973-42fd-8a6f-1916e8e9bfae",
        "cursor": {
          "ref": "839548b8-0d82-49f5-a077-c18ad0adf76f",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8d765cc3-3eb0-422a-b5a7-50ac23f1130b"
        },
        "item": {
          "id": "c0f0bef6-b973-42fd-8a6f-1916e8e9bfae",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "75fb4c71-53cc-4f08-af65-fcca1773c5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c128bab-8193-4fdb-b97f-c4fb0cc40701",
        "cursor": {
          "ref": "b9cfd080-54f1-418d-b3f1-c123a750f40c",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "93c894e7-54de-4540-96be-a7e0fddbbcc8"
        },
        "item": {
          "id": "0c128bab-8193-4fdb-b97f-c4fb0cc40701",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "880ab304-505b-4133-817a-bce128430ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f92095-8134-4f97-95a4-a40fdc387334",
        "cursor": {
          "ref": "1eabbdc4-c47e-4177-88f1-b47f6f71df31",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4700bfb5-819a-4c2f-bb11-af924f4e72ec"
        },
        "item": {
          "id": "36f92095-8134-4f97-95a4-a40fdc387334",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "eca690a9-d202-4ac7-b0f3-6055e9eb778b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aca0aca-56ed-4463-bd94-047c4e76ce68",
        "cursor": {
          "ref": "910db1ea-9ccb-4fce-adbc-6d21043ec6b2",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "561976d7-bda6-4685-ba14-937d3d011ed4"
        },
        "item": {
          "id": "0aca0aca-56ed-4463-bd94-047c4e76ce68",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6781de9d-d3c3-4a99-94d3-65a736af9515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1d47d7-0fb2-493a-adce-113ffea93c69",
        "cursor": {
          "ref": "3191fe0e-c6b0-4487-8013-a34887cfa4da",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "aaee8ddc-bad2-41d7-b2cf-5bbe7fa497e6"
        },
        "item": {
          "id": "8e1d47d7-0fb2-493a-adce-113ffea93c69",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "22bb6b23-e69a-4537-bb39-4efdbc8c004e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e16afb-8a5d-4841-85f3-4da91ac40459",
        "cursor": {
          "ref": "044da5f1-0e24-4729-852b-be9d7af83ea6",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "09504447-0c6a-4c17-9497-0dcb03309cf4"
        },
        "item": {
          "id": "e6e16afb-8a5d-4841-85f3-4da91ac40459",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9ea07dc5-8d85-4c9f-99f1-4dd900818fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120339b8-eddf-42b9-a743-3c71bd1879b3",
        "cursor": {
          "ref": "76557ae7-1355-463f-9ecf-d1f5f7d5992b",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a2c1145c-4f26-429d-bda2-973d3b1ac943"
        },
        "item": {
          "id": "120339b8-eddf-42b9-a743-3c71bd1879b3",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "81d19a0e-b760-4767-970f-145999be7adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7675f2b-a5c4-4b01-89ba-619a4c19c684",
        "cursor": {
          "ref": "f4b1507c-74c3-4e9b-bdf6-65b448c13f47",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9a28801b-e0ea-4bf4-b125-c7b1e3cc3a0c"
        },
        "item": {
          "id": "c7675f2b-a5c4-4b01-89ba-619a4c19c684",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "aa96db9d-0285-4bee-a5b9-f0df28888f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b89fcb-4e29-4a76-add4-a6203f52a4a7",
        "cursor": {
          "ref": "0766e17f-c6ab-441b-ad80-3836d2920ded",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "74778f6d-af7b-4e83-8f2f-71e94c13cd66"
        },
        "item": {
          "id": "28b89fcb-4e29-4a76-add4-a6203f52a4a7",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d91054c5-db0d-47cf-aec2-9228a2ceab65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b8152c9-54ee-46f0-8f4b-4dbe0d448bfb",
        "cursor": {
          "ref": "9cb7e483-1047-4206-9b8b-bebb1b5a94d2",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "aa2f35d7-233d-446c-bf82-082a69d960c8"
        },
        "item": {
          "id": "0b8152c9-54ee-46f0-8f4b-4dbe0d448bfb",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "827b1c92-59e4-42bc-a05f-184fec8bb830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ddff7e5-6f65-4a18-bb6b-8618adf2cb7d",
        "cursor": {
          "ref": "710da468-2219-4b23-8514-d9341dc52756",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3f6eb51e-1828-4b12-8159-64c85f8ae4ed"
        },
        "item": {
          "id": "4ddff7e5-6f65-4a18-bb6b-8618adf2cb7d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "74e71689-b53c-47e5-94d4-00e46f53fe08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63cc24e8-8c2b-4c47-b167-190c0f1b2732",
        "cursor": {
          "ref": "410cb7bd-4e2a-4997-82d6-8246809a85f7",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "72310229-7fe6-4f41-944b-26f77870c696"
        },
        "item": {
          "id": "63cc24e8-8c2b-4c47-b167-190c0f1b2732",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d2bfa84b-99c7-46b2-8023-2cf5edf4f05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46695c0-b100-45ff-a5ea-23892e6093d2",
        "cursor": {
          "ref": "820138f3-b547-4f58-b3dd-7defe4ab0d42",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "7453fbbf-2ac1-4b32-9c93-41bbde54537f"
        },
        "item": {
          "id": "b46695c0-b100-45ff-a5ea-23892e6093d2",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e68a13bb-d735-42e4-be81-4d2f99848f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25458f05-9e6e-4cf4-adf9-92e3479b799b",
        "cursor": {
          "ref": "e2d784a2-1cbd-4700-b9f9-2772dcfc989b",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "76f9fbc2-dd99-4a90-9a6a-f37d01762414"
        },
        "item": {
          "id": "25458f05-9e6e-4cf4-adf9-92e3479b799b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "61727573-84b4-44ca-88ed-4db9b529de4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e24697-5b5d-40a7-87c6-e5a78452ea86",
        "cursor": {
          "ref": "b238e8d1-ea2c-4588-b218-9f752ae5a578",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ad47f616-2e1b-4e63-bca2-0582f8503f7b"
        },
        "item": {
          "id": "63e24697-5b5d-40a7-87c6-e5a78452ea86",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6c45b930-769a-48b7-8126-18455f7c7bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e02327-5adf-4e44-ac21-9fcd72c0e568",
        "cursor": {
          "ref": "46d1c3bd-a5f4-49cb-8c81-1ae903ee2d66",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "65faacae-f61e-4969-9a31-d6ce7baa6586"
        },
        "item": {
          "id": "23e02327-5adf-4e44-ac21-9fcd72c0e568",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "df4a738e-c348-4947-b80c-f7158c95124e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7496590c-3c7b-44b7-b709-e56a6593c44d",
        "cursor": {
          "ref": "36b9d9e6-818e-4e80-9d2b-d243cd6a8681",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "053c802e-f0c2-4f01-8633-215e1e7d8360"
        },
        "item": {
          "id": "7496590c-3c7b-44b7-b709-e56a6593c44d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9d2d1a68-90c9-458f-a28f-2005009968d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969a59e8-d5ba-4e14-91c6-66bc6616a488",
        "cursor": {
          "ref": "8d5c029d-0c59-4464-a032-5f3fc4592cb0",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "37198f34-f136-4aba-a4d8-5b54dfd55502"
        },
        "item": {
          "id": "969a59e8-d5ba-4e14-91c6-66bc6616a488",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e714bae1-d416-4b8e-9851-743ff98e8550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab449bb7-deb6-43c5-a037-56986360cac6",
        "cursor": {
          "ref": "43cdeb39-75e9-428b-82a2-4876a199c0ae",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1ab47759-5806-4261-959c-6d01cc82b1b5"
        },
        "item": {
          "id": "ab449bb7-deb6-43c5-a037-56986360cac6",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "292d319d-7925-4e96-9557-777190224d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15fddebc-4387-4632-9d1c-7721934609df",
        "cursor": {
          "ref": "e45aab58-6dfe-4532-8861-db61c26ae0dd",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6ae333d5-eb0f-4f73-a13b-8a44a03d133f"
        },
        "item": {
          "id": "15fddebc-4387-4632-9d1c-7721934609df",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "7c57d22e-e023-4a92-bafe-4a14aa1e0ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a50adbc-1323-48fd-a35d-faa5878c1a93",
        "cursor": {
          "ref": "2b5150bd-bd56-4e5c-a4b1-12228199fa44",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e7e9f0ad-4d35-4bac-9d57-3f1b9a5307e7"
        },
        "item": {
          "id": "4a50adbc-1323-48fd-a35d-faa5878c1a93",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "97f50344-57ad-4560-8200-596fe1eb0bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a53df93-d04d-43b6-b87c-5a99cc87ce39",
        "cursor": {
          "ref": "918d2f8b-7e4e-4e48-a2f7-a233d12bc08b",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d48c9df0-b840-40a9-8820-fab013be304f"
        },
        "item": {
          "id": "1a53df93-d04d-43b6-b87c-5a99cc87ce39",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e62cf206-958d-43aa-9e32-4d80bb19872a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb261e44-f56f-454c-91bb-3810eae2099a",
        "cursor": {
          "ref": "34c206be-3cf2-4eb6-aa79-a895a43d0643",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "82776c24-951d-4bea-9e14-b714cc95c05b"
        },
        "item": {
          "id": "eb261e44-f56f-454c-91bb-3810eae2099a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "bec9ba0b-de0c-40fa-8e29-6c2c457cdb65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29866ab8-bd6d-4906-b232-64fce4d638ba",
        "cursor": {
          "ref": "200aff84-464e-4ef5-81de-23c2ca567039",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "cfeecdfb-0902-483c-a818-05f51f49e093"
        },
        "item": {
          "id": "29866ab8-bd6d-4906-b232-64fce4d638ba",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "01b1e215-0599-4822-9319-8165a6eb04e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b20c41-db52-4d99-9a43-cbe47b42f29b",
        "cursor": {
          "ref": "098f5e90-f16b-4140-9830-43388b8fbf85",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "12de8363-a7d3-4149-ad3e-aab245b54191"
        },
        "item": {
          "id": "09b20c41-db52-4d99-9a43-cbe47b42f29b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a3e5748a-d259-4a0a-b65e-bd75c8c1049b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06fa22c3-db0c-44e9-9dc1-47c2d8ce68dc",
        "cursor": {
          "ref": "7e905848-0a8a-42a8-9b69-2319031a5b3a",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d24fc928-8231-41c3-b3b7-384af975ef0b"
        },
        "item": {
          "id": "06fa22c3-db0c-44e9-9dc1-47c2d8ce68dc",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "973787b0-e790-4a73-b7ca-19d1cccdde00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0188859e-e840-40ec-9681-d5c0699fb570",
        "cursor": {
          "ref": "77f84d95-9d0d-498c-8d49-9c1409d2df79",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0ad86793-249c-4a2b-8a5b-6b156aada082"
        },
        "item": {
          "id": "0188859e-e840-40ec-9681-d5c0699fb570",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a67e3bad-54eb-4183-9534-9ca9feb6f6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03616112-b5b5-4091-ba89-7ac75d9abd7f",
        "cursor": {
          "ref": "e20124d5-1f67-4ea2-a978-29f808ffd3c3",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "cd65d279-01f4-4774-8246-e0c6b035d831"
        },
        "item": {
          "id": "03616112-b5b5-4091-ba89-7ac75d9abd7f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5e350f63-c004-47f4-8b16-0c6a60e0c8f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765ca9e5-8526-40ec-9768-55b799e62d03",
        "cursor": {
          "ref": "e4024320-144b-4b32-aa59-bb5f386e1808",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "27f63f2c-77a5-4aa3-9e6f-48594bd4b548"
        },
        "item": {
          "id": "765ca9e5-8526-40ec-9768-55b799e62d03",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c70fdf3f-4cb8-4efd-95dd-2dc7b83aa80e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6a8cf2-c6cf-4b5b-9b10-bd4b4e7f7144",
        "cursor": {
          "ref": "fef23dae-42fa-4abc-921b-693beaf471aa",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c331a15c-c775-462d-8621-42679a438d4f"
        },
        "item": {
          "id": "3c6a8cf2-c6cf-4b5b-9b10-bd4b4e7f7144",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8df33f1f-36a1-466c-96a3-89f485c03b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84beaf1d-c36f-4f6c-b7ce-849188aebeb4",
        "cursor": {
          "ref": "4287a5ab-3c92-4189-a44c-c4694d80a0dc",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "fa73dd25-868c-43d6-bb59-74442ba7e544"
        },
        "item": {
          "id": "84beaf1d-c36f-4f6c-b7ce-849188aebeb4",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "34056fc4-92e1-4f65-9c29-82a3bc4a57e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb2e695-af90-4582-a457-874ef34d4afd",
        "cursor": {
          "ref": "5678d892-f1b4-4261-8c9f-b4c8e740633b",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6f9672be-c7b3-4024-92c5-f3e693c431a1"
        },
        "item": {
          "id": "fcb2e695-af90-4582-a457-874ef34d4afd",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8f9afa08-127c-47a0-8b0a-b732da75cf65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2b80b7-9551-4ce2-a3f1-48fbc3ddd285",
        "cursor": {
          "ref": "1f78e0cc-d764-4b9b-88d7-c137897c3916",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5cb554bc-cc14-4dcb-868b-b8d9f07450a5"
        },
        "item": {
          "id": "6a2b80b7-9551-4ce2-a3f1-48fbc3ddd285",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0fd6a870-909b-4173-bd34-3cb02fafc860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5caa56b-a0e5-4578-b802-f7d9199bb75a",
        "cursor": {
          "ref": "1d597916-b03b-4ee7-9174-893788fa6fa2",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "77f35b72-1d85-4cc8-bc6d-5a0cde6725fe"
        },
        "item": {
          "id": "d5caa56b-a0e5-4578-b802-f7d9199bb75a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "bc04f953-3ef5-4d32-aba0-449c01277c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00df5633-d196-471c-b1a7-e2dfc426f14f",
        "cursor": {
          "ref": "c30bf8b0-e27f-4e30-b7bf-5bb38ab48924",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "049bbb28-4e86-41dd-b4fd-31cbdc81288a"
        },
        "item": {
          "id": "00df5633-d196-471c-b1a7-e2dfc426f14f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "fcc4b0bc-c854-44b4-af4d-13bf340a2430",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6067fee6-f29c-4269-ac58-ffd0fea564e7",
        "cursor": {
          "ref": "69baf6b1-e0f6-4181-83e6-7f364cb78ce2",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d1d6c714-eaad-41f0-b1c8-c96631754d98"
        },
        "item": {
          "id": "6067fee6-f29c-4269-ac58-ffd0fea564e7",
          "name": "credentials_issue"
        },
        "response": {
          "id": "79c4d798-5192-44c2-92f2-ecb6d7b02dc6",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dfd0921-b4f2-4a53-8916-9f06e9dcc759",
        "cursor": {
          "ref": "a46a2422-a821-498e-b6b2-337c232f52e8",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f866256e-7cc3-4df4-9535-c008ad9b5755"
        },
        "item": {
          "id": "5dfd0921-b4f2-4a53-8916-9f06e9dcc759",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e3d45ed4-21a5-4c2f-97e4-3cb38ad7d451",
          "status": "Created",
          "code": 201,
          "responseTime": 162,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4f36e8-6dac-4d63-a0a1-37485eb0a7e5",
        "cursor": {
          "ref": "44582783-cc0b-4759-9501-1ba6b007b492",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "05bdc6b4-4ee0-4fee-b2ee-1fc923025fe5"
        },
        "item": {
          "id": "4f4f36e8-6dac-4d63-a0a1-37485eb0a7e5",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4c3498cc-6a06-4479-91f5-ce8a58572873",
          "status": "Created",
          "code": 201,
          "responseTime": 70,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc06a094-3e5f-4655-b29a-4fb2b596b574",
        "cursor": {
          "ref": "4cba397f-55ed-4177-b975-256bc31a9c7a",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2ac44e95-82cb-47df-9d25-b699229a3755"
        },
        "item": {
          "id": "cc06a094-3e5f-4655-b29a-4fb2b596b574",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "80128d3f-ccea-4a46-a4a6-a2416b7f4b99",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5970d947-2b92-4eca-b2ee-caf0223ee144",
        "cursor": {
          "ref": "3a4ffefa-1ac0-4440-8f9e-ef1dd69033af",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1e1157bf-16b7-49a5-a8f8-ef254614cd90"
        },
        "item": {
          "id": "5970d947-2b92-4eca-b2ee-caf0223ee144",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4c787bc3-2e96-477d-a666-82a13f31ef21",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "64176eca-4f5a-487d-b0e1-5689de66b47b",
        "cursor": {
          "ref": "bedf56c6-d569-46e8-a213-3c7d862fc85e",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "2016d6f7-2007-408b-bf65-de39e7f7b0fc"
        },
        "item": {
          "id": "64176eca-4f5a-487d-b0e1-5689de66b47b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5128ef3f-b9e2-49f5-9d90-8185c30822bb",
          "status": "Created",
          "code": 201,
          "responseTime": 48,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a0b4ab-e328-4561-a0bd-b398ae250482",
        "cursor": {
          "ref": "f790b4e5-75c3-433f-a807-8c14f9643c0e",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a733f80e-7e3e-4c20-82df-f53c50fc918b"
        },
        "item": {
          "id": "28a0b4ab-e328-4561-a0bd-b398ae250482",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "343ee259-ef28-46c0-8a42-9473aef72eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0372a2-1c67-427b-b17b-b1eface2cdf6",
        "cursor": {
          "ref": "998f308a-5271-4d1e-baa1-56e629574b2b",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "90bf45e3-f7eb-42b8-9b46-75d3fd863631"
        },
        "item": {
          "id": "db0372a2-1c67-427b-b17b-b1eface2cdf6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6785e5d5-7093-4a1c-93cb-7453a61ad22b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a988bd-fc3f-40d1-9bab-480b2ebbfbbc",
        "cursor": {
          "ref": "d11aed18-5602-4387-9d53-3bb9111dddf4",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c1f077f4-9afc-4a13-91d1-69857899f062"
        },
        "item": {
          "id": "c0a988bd-fc3f-40d1-9bab-480b2ebbfbbc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "941513e2-287a-4a1f-aa7a-5b6209f4971b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7e8891-bdad-4b35-a110-501a9ff13293",
        "cursor": {
          "ref": "13880e26-0074-4a38-8907-4c287e8300ef",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "00c4de40-b870-45bb-9a66-f1a5332c2b6c"
        },
        "item": {
          "id": "2b7e8891-bdad-4b35-a110-501a9ff13293",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "47e86687-07e0-443d-8de5-756e06f9ddee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffcc1b46-b772-477f-8518-9a465a19b9e2",
        "cursor": {
          "ref": "6198a599-9ca0-4a65-95cc-44c0d4bf0e08",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "fb572fa4-38a1-4305-8ad1-e5dbbf410fd8"
        },
        "item": {
          "id": "ffcc1b46-b772-477f-8518-9a465a19b9e2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8ff0746c-10af-4904-96bd-83bbc4e76aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552bc6be-4e99-40b7-98db-8ef7297b05d9",
        "cursor": {
          "ref": "e6582c61-8eea-4533-9741-03d2a3363fa0",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b7f87af1-0ca7-4fc9-93eb-1b1146189763"
        },
        "item": {
          "id": "552bc6be-4e99-40b7-98db-8ef7297b05d9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "97652a2c-bf71-413c-becd-5c496cc9852d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41043a99-2b53-4a15-9f8a-76af5a3389fc",
        "cursor": {
          "ref": "af4748e3-4de3-44de-8a82-9025d5f47b6f",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ecff86c6-c892-464c-b2d8-1c9f4a490dd2"
        },
        "item": {
          "id": "41043a99-2b53-4a15-9f8a-76af5a3389fc",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d5cfdd30-0d29-4c2d-9735-f6d86ebfe21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e285f9b0-fe00-40ea-b96f-5c2a74d7a655",
        "cursor": {
          "ref": "7a1eac6c-7f0e-4298-bd9e-0fe2d2e6d8d4",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e6418d3c-f695-41ba-a7d8-a5409b494b85"
        },
        "item": {
          "id": "e285f9b0-fe00-40ea-b96f-5c2a74d7a655",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f7b972b5-aaab-4ab4-83f8-1fe1328e2bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abecf14f-0c75-4c13-97dd-fa88ba9fa166",
        "cursor": {
          "ref": "e132a1f5-19ed-4a05-9496-d3afb73866bf",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "52af2aa9-e523-4f40-915f-81ed769e838c"
        },
        "item": {
          "id": "abecf14f-0c75-4c13-97dd-fa88ba9fa166",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0eb07416-01a5-486c-b058-91dd69e007cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6429a1-c3eb-439d-9c73-a272715571e6",
        "cursor": {
          "ref": "dade1d9d-391f-4ae0-8350-293449be2b1c",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d842905a-cea6-47c4-a9d1-6c895308d41f"
        },
        "item": {
          "id": "6a6429a1-c3eb-439d-9c73-a272715571e6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "158737f6-c73d-4ca0-8a25-e00d2800d302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c21925-57a1-476c-8419-2283d4985339",
        "cursor": {
          "ref": "eb47b7e7-b3fd-44b0-803b-5d224a460839",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2e7222b2-d55a-41f4-8e46-1bcce40dbdf6"
        },
        "item": {
          "id": "88c21925-57a1-476c-8419-2283d4985339",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8c2f9d24-99d7-4a12-aab9-7f67c5375d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd9a430-6bdd-4ac4-b49c-d9067ed7c917",
        "cursor": {
          "ref": "21c7ce6f-6ef9-4980-a3ea-adc98f8bb934",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "59e0cf6f-ad93-4359-879b-8db25c0ae92a"
        },
        "item": {
          "id": "ccd9a430-6bdd-4ac4-b49c-d9067ed7c917",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "21cd37dd-7d9c-47d4-8af0-b7dd1477a482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08de5c5c-490b-4038-9ded-e1ec0a495047",
        "cursor": {
          "ref": "9fe90808-3075-4756-a5f4-c8364d3ddf16",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "bc296dde-6aef-4519-aaa5-ba7fe525d28d"
        },
        "item": {
          "id": "08de5c5c-490b-4038-9ded-e1ec0a495047",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4bc8317e-20d7-425d-af07-f82b0f51f7e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58216520-b847-4565-977c-85d03e666096",
        "cursor": {
          "ref": "6d6e1499-5d97-4c73-9d48-ab5443141e49",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "55ca5f6f-1b20-47b0-878f-313b2ec4b108"
        },
        "item": {
          "id": "58216520-b847-4565-977c-85d03e666096",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1d519496-f450-4239-9ec0-99a5ffe9535d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57bdcc41-8515-480a-8817-04b12833c2e0",
        "cursor": {
          "ref": "fba2054f-f84e-4768-87ad-a1144f02501a",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "534659df-5cb1-46e6-885e-7f3256a81a7c"
        },
        "item": {
          "id": "57bdcc41-8515-480a-8817-04b12833c2e0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "746e306d-5370-486b-a60d-a0fe01f63c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c280f52b-633f-4167-ae57-c311c39f2851",
        "cursor": {
          "ref": "c14cdcd4-e910-49ae-a05a-7c0e8236f7d1",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6a642766-8144-4175-80f1-32d06beb0def"
        },
        "item": {
          "id": "c280f52b-633f-4167-ae57-c311c39f2851",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2e6f4419-bde8-48e6-9c14-e63c51b05f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c9bf33-b55c-4e76-9d11-919a9408c13d",
        "cursor": {
          "ref": "f0b67352-703f-4ade-89da-d767c62dc244",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d6b3a053-0d77-427d-a72b-4fb0bd17019a"
        },
        "item": {
          "id": "b6c9bf33-b55c-4e76-9d11-919a9408c13d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "92f90709-215b-4a6e-a5ac-3d819114f19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420b4c44-038f-4224-abaf-d13a4ed8eb9c",
        "cursor": {
          "ref": "44e71914-ec36-4a05-9111-4fdd009b1f39",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "47fd0c5b-74d6-4703-a3a0-886bda8aec25"
        },
        "item": {
          "id": "420b4c44-038f-4224-abaf-d13a4ed8eb9c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "327144c0-c45b-4e72-bdbd-c9db421b1187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c194f4-47ef-4002-afd6-6d9e5bd561c2",
        "cursor": {
          "ref": "1d52af77-6a85-4599-b5df-5d0a450df734",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "24f60687-8df8-456a-8270-987401ec724a"
        },
        "item": {
          "id": "c3c194f4-47ef-4002-afd6-6d9e5bd561c2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ab841afb-8844-4299-9f73-f7537f84e995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968a171f-96b9-4f2e-b0ca-d48bf913986b",
        "cursor": {
          "ref": "975bc9c9-5a67-4887-9308-ccbe4d50dbad",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "de8120d7-288b-4caa-8bbf-e59952b7f6e6"
        },
        "item": {
          "id": "968a171f-96b9-4f2e-b0ca-d48bf913986b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a77d764d-ceab-4c7f-845d-6715796dc8ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fdc687e-26de-4d59-a9d7-641871f52fd1",
        "cursor": {
          "ref": "d5fad0ed-1d52-4714-9dbd-c66a3d897777",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "00c2e993-25df-449d-a1f6-0e644e4c6384"
        },
        "item": {
          "id": "7fdc687e-26de-4d59-a9d7-641871f52fd1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "81a9e868-ee01-4730-902b-7f4b76127af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b40636-6f9d-425d-abaa-1f94b3353812",
        "cursor": {
          "ref": "a23144fa-180e-4c08-9a78-a1fc7273362a",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5b0cf72c-0c62-47df-bac0-46701cece279"
        },
        "item": {
          "id": "23b40636-6f9d-425d-abaa-1f94b3353812",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "866783c4-171a-42e6-ada4-31ca05ef8287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c40ca2e8-fc52-460a-8bc8-55d35c486dde",
        "cursor": {
          "ref": "e2d878b9-c2b8-4229-89a2-832b4651691a",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2ae6c1c5-1cc3-453e-b7ea-a069ab07ee12"
        },
        "item": {
          "id": "c40ca2e8-fc52-460a-8bc8-55d35c486dde",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cc01fd3f-3c65-43eb-8178-bd6b171317b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623d8e9c-da05-4365-bb1f-4d1c1ce7521d",
        "cursor": {
          "ref": "1707bb28-1227-42fe-aede-fc1de50899ba",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "148d5252-0ff5-47e0-a70a-4ae67ce9f033"
        },
        "item": {
          "id": "623d8e9c-da05-4365-bb1f-4d1c1ce7521d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e5e7a891-8ece-4719-9767-3fd8204e73f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d31e6f5-b17f-47bf-9390-54ee85d04433",
        "cursor": {
          "ref": "af5d2e1a-e32b-4d10-a1e5-eb495a48fbbc",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "64d6d3a3-328b-4d23-bbd0-c0be21281fa0"
        },
        "item": {
          "id": "1d31e6f5-b17f-47bf-9390-54ee85d04433",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "dbde305a-8868-4762-8d10-121c554de3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c96fa9a-f2be-446e-87c2-cf1d6e06d122",
        "cursor": {
          "ref": "c678a27d-3658-4f0f-b562-6dad12b72d7f",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "192cd035-27c0-4668-9ba1-86697023589e"
        },
        "item": {
          "id": "6c96fa9a-f2be-446e-87c2-cf1d6e06d122",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f22d59d9-05bf-4492-8390-d34f415d7c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b47c28-78e0-42ec-9f6c-5ed2648782e2",
        "cursor": {
          "ref": "95c9ac52-5a1a-4653-b3a5-054acd206a1e",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "24bb9677-938c-4d04-a597-ca4de5d7fd01"
        },
        "item": {
          "id": "73b47c28-78e0-42ec-9f6c-5ed2648782e2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "922c5008-cff0-437d-975f-ac369a6f3807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e841b43-6e40-4bff-b4a1-edf6446b7ef9",
        "cursor": {
          "ref": "312a779b-b9fd-44ce-909e-3c69d0718aab",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6b2c39e7-672b-4e90-bf1b-d6ea7a258ff5"
        },
        "item": {
          "id": "0e841b43-6e40-4bff-b4a1-edf6446b7ef9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "81112acd-8e87-4cfb-9eef-12016e5489e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9359c8ab-b51d-4dfe-bc6d-cbddcc53d220",
        "cursor": {
          "ref": "e65d54cb-8e70-4404-93c8-210878f9cc28",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4d427d1e-1315-4ef3-aa59-ee2daa7732a9"
        },
        "item": {
          "id": "9359c8ab-b51d-4dfe-bc6d-cbddcc53d220",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a21c8838-4992-401b-94bf-2ad24836bf9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1418414d-8b30-4d7b-96b6-54d322ebd5f3",
        "cursor": {
          "ref": "87e3fecc-2e12-41e0-b46e-72e07c6c83fb",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "583dfd5d-a76a-4b70-9f9a-d5569388b3dd"
        },
        "item": {
          "id": "1418414d-8b30-4d7b-96b6-54d322ebd5f3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "33e1cb0d-dcc8-4b87-8ef9-f5e8554f23a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c64747c-51db-4636-b170-98db649567a7",
        "cursor": {
          "ref": "aa3b5351-1101-41b5-845b-18bbfd8ed19c",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0fd0310f-969f-4364-b665-9742481678ee"
        },
        "item": {
          "id": "4c64747c-51db-4636-b170-98db649567a7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6823179e-183f-4daf-aded-63513472a848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abff6058-0723-4c78-bf08-da9aa5d8b72d",
        "cursor": {
          "ref": "4a8bf459-b76e-42a0-9803-fff5c9feb0f1",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c3d5e831-7b42-458d-89bc-670a8b707df9"
        },
        "item": {
          "id": "abff6058-0723-4c78-bf08-da9aa5d8b72d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c5796d54-6e4e-4693-a2da-b28dc33e06cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89e3351-347e-46b4-b2ec-1e4c57038c41",
        "cursor": {
          "ref": "07cc7aed-eb9e-411e-8c36-3ea5538bba49",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1bdc7f7f-80e1-4476-b93d-b748c66a62bc"
        },
        "item": {
          "id": "c89e3351-347e-46b4-b2ec-1e4c57038c41",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ef72ed7a-c36f-43d0-9fca-54510fd5b739",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d9b742-9ec4-4afc-bccf-30115a4d93d2",
        "cursor": {
          "ref": "9a6a928a-e277-4cea-8e7f-c6a5f17675c2",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8fa99094-4db9-47f9-b925-9b8e3de0f5fa"
        },
        "item": {
          "id": "66d9b742-9ec4-4afc-bccf-30115a4d93d2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f74b4fe9-26c5-4edc-bd62-c77d00425939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d3ca2f-0f4c-40fb-a637-9cfda9d3afba",
        "cursor": {
          "ref": "5534ce61-35cf-4a8d-ae56-7b28cc47d0d4",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "94d27279-214b-4f3a-83fd-17855efc7f3c"
        },
        "item": {
          "id": "78d3ca2f-0f4c-40fb-a637-9cfda9d3afba",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "adce9cfc-eded-41ab-ae59-caf9932da074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3cddc92-985d-4a86-93cb-2605dca4de25",
        "cursor": {
          "ref": "5142a63b-5264-4759-a876-61dcf5dd2763",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a2505989-d5a8-4198-a941-23cdc2733ab9"
        },
        "item": {
          "id": "a3cddc92-985d-4a86-93cb-2605dca4de25",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "40c7c299-05d2-4d8e-b74c-dfb064b49055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1816a3e-c4f6-4d7b-b572-94a0404cab78",
        "cursor": {
          "ref": "694367c7-6e99-45e2-a3c1-fde343cfdc15",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "27a4d911-500a-44b3-88e9-37074afe246d"
        },
        "item": {
          "id": "c1816a3e-c4f6-4d7b-b572-94a0404cab78",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "62b54e5c-4f5b-4c1c-835b-315d6c34f033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d4cd0a-364d-4335-94f3-1b02540712bb",
        "cursor": {
          "ref": "a4c0a481-294b-4384-b15e-226c286b2aa8",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ef5fa1de-5c2c-4876-b5b2-bc2183bfa9f2"
        },
        "item": {
          "id": "75d4cd0a-364d-4335-94f3-1b02540712bb",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "60a96b52-3502-4315-8f92-58f4fd4306c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7eb99c-ba52-4d2f-8e4a-28bd00a28757",
        "cursor": {
          "ref": "a4fe7cbc-faae-4aff-b307-84006e8a9ed6",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "03d66017-1f05-4b5f-a047-a193b5340923"
        },
        "item": {
          "id": "5d7eb99c-ba52-4d2f-8e4a-28bd00a28757",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "932e4fc6-3341-4697-b566-dd3c450afefa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5fbf74e-dd0c-4cc8-893f-40e43093dfcb",
        "cursor": {
          "ref": "b464febb-5398-4791-a18d-42d41503661a",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ec6c312c-67d6-435e-92d4-fdec355307f8"
        },
        "item": {
          "id": "e5fbf74e-dd0c-4cc8-893f-40e43093dfcb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "64561483-867c-420a-8a76-5740b751be56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b5f0f3-0528-4270-b921-7ee1acd217c6",
        "cursor": {
          "ref": "99cf5bec-fd7a-4330-88b1-9b06e9f81d69",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "de964db9-22ec-45c7-87ee-70171831ec1d"
        },
        "item": {
          "id": "23b5f0f3-0528-4270-b921-7ee1acd217c6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "82ff2c05-4941-4f92-b075-d5595caa1de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6ee1ad-4fe4-42f8-8982-7f86be817c57",
        "cursor": {
          "ref": "73783030-dfe3-4b4d-9a6d-9f36007e9221",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e068becb-2e95-4717-a0ec-8b36fe565474"
        },
        "item": {
          "id": "7c6ee1ad-4fe4-42f8-8982-7f86be817c57",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a365334b-c8ce-4bbc-889d-f4ce8757caa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cfc36c0-a083-41d8-ad17-640ba9f1a24e",
        "cursor": {
          "ref": "4f57ba28-913c-4386-a445-9665a5db6e81",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "cfd2831d-26a4-4c41-8170-5c9b89b25d18"
        },
        "item": {
          "id": "6cfc36c0-a083-41d8-ad17-640ba9f1a24e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d0f76697-3a30-48c0-975b-ad237741e87f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1bb62e-d503-45ac-bd05-5657206b578a",
        "cursor": {
          "ref": "1adc05fc-be3b-4659-a1f7-7844e959b316",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "657fb7a3-caa6-44a6-84fe-4c0fe56df615"
        },
        "item": {
          "id": "8d1bb62e-d503-45ac-bd05-5657206b578a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "98b68e78-d968-47c4-9547-de3fe10c218c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa6fdfa-72ed-445f-a421-fcd1a084d09a",
        "cursor": {
          "ref": "f54b0926-225a-44d2-9783-bc74aa1d4321",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "531c7b8e-8d90-4414-bc37-11f7dbcab97f"
        },
        "item": {
          "id": "1aa6fdfa-72ed-445f-a421-fcd1a084d09a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b4e2a242-51b7-486b-94fc-565b12d990ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb091c6d-726e-4bd8-91cc-1274d2c90a0e",
        "cursor": {
          "ref": "aa5f6c68-95ca-4d5a-8626-5945550da43d",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "48fe07e0-6bcd-4f9d-985b-ffd82bb0cb01"
        },
        "item": {
          "id": "bb091c6d-726e-4bd8-91cc-1274d2c90a0e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "26dba07f-f194-4fd2-9c8e-60045fc1b3c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ded40ef-1a24-433f-a71f-d70b5cc3aecf",
        "cursor": {
          "ref": "210352f8-ba56-4c35-a439-f031d5fb3788",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "12fe4db9-b98b-4f6c-8337-7df4c1ac1a70"
        },
        "item": {
          "id": "8ded40ef-1a24-433f-a71f-d70b5cc3aecf",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a5f871d7-d06d-4043-9823-d23ae9bfe4b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736bd8dc-29c1-4ec4-8c4a-4b7fb0c33107",
        "cursor": {
          "ref": "b7194c0a-e23c-43c4-bddb-98e124df4a15",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a2c3986a-3361-47cf-8e60-f119ad6bc323"
        },
        "item": {
          "id": "736bd8dc-29c1-4ec4-8c4a-4b7fb0c33107",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4332973a-3ace-40e9-bafb-914a0e1f1508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4dd2979-7f5e-418f-a6ad-5908a940cf0f",
        "cursor": {
          "ref": "27118a64-9592-4b2f-9866-684df17cf6b1",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4f13bc43-f66c-47c4-803d-d779937d00f0"
        },
        "item": {
          "id": "b4dd2979-7f5e-418f-a6ad-5908a940cf0f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "42275d75-7a00-4a34-a2c4-e74714b37968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d09f290-9aab-49ce-948e-f62709c22f4f",
        "cursor": {
          "ref": "e538561a-9f03-4b16-8838-42afdd243fc3",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "37b08b1c-9d58-49c2-8bb7-e5dc30e845b0"
        },
        "item": {
          "id": "0d09f290-9aab-49ce-948e-f62709c22f4f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "96a72650-e00f-4872-9bc0-249e3908fc49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512abb8c-e459-455c-92d9-b4dd4b99d417",
        "cursor": {
          "ref": "8b587fc1-eac9-4174-bb89-f662ace22dfa",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "89ffa697-c30e-4159-9349-fe47aeaf9d60"
        },
        "item": {
          "id": "512abb8c-e459-455c-92d9-b4dd4b99d417",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9ef7e4c4-b65f-48ed-8159-34c636c8025c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ecbfb5-a977-4bda-a89d-87a5bb3e69e1",
        "cursor": {
          "ref": "c586206b-18ad-43a6-b83c-b67800d613aa",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b90f013d-3ca1-4c2b-8c85-c1914055ca9e"
        },
        "item": {
          "id": "46ecbfb5-a977-4bda-a89d-87a5bb3e69e1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "62f1fc25-cd9d-42c1-9c56-0695959a609c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1909a51-f401-4ab2-8d90-55483f5ed12c",
        "cursor": {
          "ref": "b4e74b17-61c8-4752-8df4-2b93d551dd54",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8497992f-b450-4f67-b101-1f93d913b942"
        },
        "item": {
          "id": "d1909a51-f401-4ab2-8d90-55483f5ed12c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "95d2aca3-f961-4487-95f2-45d1cfa4a90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8996c7bd-a794-423d-b276-edb7b4287180",
        "cursor": {
          "ref": "52f51712-ef4d-45d0-aa8d-3ab611a0d453",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "51cf542d-42d5-4d4c-b0ac-4ab600341547"
        },
        "item": {
          "id": "8996c7bd-a794-423d-b276-edb7b4287180",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ffd39155-a3ae-4e24-a486-0e5ea66e2ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3866da1f-34a4-424d-9738-9fd2776bc557",
        "cursor": {
          "ref": "3a850f41-1397-47fa-ab6c-50bc22e392fb",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "23c09ac6-bf6c-49ff-b855-ac009e9f5ef8"
        },
        "item": {
          "id": "3866da1f-34a4-424d-9738-9fd2776bc557",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ecf5402d-45a7-4d44-9a18-8ba4bcb715d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36949ad-e773-4f92-ae63-899dfb5d6cf5",
        "cursor": {
          "ref": "7935002c-4c76-4b98-88cf-ac431ac27a40",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8c0f45aa-e271-4c6f-b228-e94d3453ddfc"
        },
        "item": {
          "id": "e36949ad-e773-4f92-ae63-899dfb5d6cf5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d42629f5-0cd6-4554-8f41-cbade8592d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36caab5a-49f9-45fa-946a-392114b260fd",
        "cursor": {
          "ref": "89cdaf1f-763c-4bd9-a877-681e1c9c3217",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "60cd5b26-4eff-4cea-964b-554cb5b201e1"
        },
        "item": {
          "id": "36caab5a-49f9-45fa-946a-392114b260fd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1d98fd91-6a75-4e1c-9987-3d61eff5c9b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c42fb59-1459-4e56-9465-1c6469fa0432",
        "cursor": {
          "ref": "17f66480-2ea9-4fd3-9da2-498c43c376c7",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "bf71c449-f02b-4bdb-80f4-60611dbd8c9d"
        },
        "item": {
          "id": "3c42fb59-1459-4e56-9465-1c6469fa0432",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ce91168e-b65c-4ba1-81bf-8c595395498a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3bdf02d-ff53-4a0e-b79a-e3680d993ff2",
        "cursor": {
          "ref": "10c79637-6cfb-4b8f-8bae-3fbf4e5b054a",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8d87d164-49fd-415f-bfb5-e102609b0684"
        },
        "item": {
          "id": "a3bdf02d-ff53-4a0e-b79a-e3680d993ff2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a78b6458-d50d-48d7-9d54-9214fa650b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a25743-3729-499a-8a7c-1cbc2187952a",
        "cursor": {
          "ref": "d62fcf4e-8cce-4c7e-8eee-2ffd86021d09",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "56b4915c-ed03-40a0-80fa-4025292ee4dd"
        },
        "item": {
          "id": "e7a25743-3729-499a-8a7c-1cbc2187952a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e1de314a-70e4-4c99-9132-8cff8d1640eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659274c9-b59e-4b0c-b16a-bb677a1a0ce0",
        "cursor": {
          "ref": "d519254b-221e-40a9-843b-c4107a1d0449",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d45ab8c3-1f06-4c07-ac67-c07df6081164"
        },
        "item": {
          "id": "659274c9-b59e-4b0c-b16a-bb677a1a0ce0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9f469abf-5419-4aa2-8b27-de9308a6b9b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b685f3-8649-4c8d-add6-80e5009ace3b",
        "cursor": {
          "ref": "ac83c58c-5482-4809-9789-9bfe97f84958",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b0f30759-9391-4600-8a6e-e6b755e79c21"
        },
        "item": {
          "id": "55b685f3-8649-4c8d-add6-80e5009ace3b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cf7269de-1948-41ad-9c89-3febe24a2a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36a4b7b-d47d-4491-aa92-5775bbc63080",
        "cursor": {
          "ref": "9beb0fa5-95a3-4c0b-b202-d601a01b2c7e",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ff4e679b-bb33-4c1c-8c7a-14208d3188e0"
        },
        "item": {
          "id": "b36a4b7b-d47d-4491-aa92-5775bbc63080",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ff3ec8ee-9343-48f5-85fb-8ae51f4619cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d245c0c6-3ad9-4ac5-8554-76171b29400c",
        "cursor": {
          "ref": "d3f6c75d-434f-4ed5-be98-67fc39c0747d",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "97c7d580-49db-4b17-a2dd-fef340dd3efb"
        },
        "item": {
          "id": "d245c0c6-3ad9-4ac5-8554-76171b29400c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6922943c-aed2-47d2-b44b-5cab9b1c574c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4f5305-6d83-4280-b099-8c447492a9eb",
        "cursor": {
          "ref": "01ab5d2a-2e1a-4e93-a45f-ea0bed4349c2",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c081ce93-92ac-4a0d-9a01-18321925e913"
        },
        "item": {
          "id": "0b4f5305-6d83-4280-b099-8c447492a9eb",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "3815842a-52ea-43b9-a0a1-3cdd722a0756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb0a80f0-00c4-4f8f-9d6e-4d0a7f3128be",
        "cursor": {
          "ref": "459df9e7-9262-41af-8c92-b90176f66e7e",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "69b0ae80-db1a-44ba-b4c4-ae6358f994fb"
        },
        "item": {
          "id": "cb0a80f0-00c4-4f8f-9d6e-4d0a7f3128be",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "550498ce-99b3-4bff-a52b-d926beab03b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32cc4fed-73c4-40bc-97c2-42ea18b466ff",
        "cursor": {
          "ref": "7c94be90-c8b2-4728-96f4-d9013e2533f7",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7da01bfb-50d0-490f-b0c3-4366c59bd4c1"
        },
        "item": {
          "id": "32cc4fed-73c4-40bc-97c2-42ea18b466ff",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "36ec376d-ba6e-434a-989a-98d64f5b5a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f17fcb-f68a-497d-8642-71ef048234ab",
        "cursor": {
          "ref": "cafe6357-2ff6-44a2-beec-20032321227a",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "52ff2a9a-c186-4284-a6b0-1673b7c66d0f"
        },
        "item": {
          "id": "17f17fcb-f68a-497d-8642-71ef048234ab",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "2b84c78d-0d2e-413d-bd7b-aa1ac2eb8240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9049a077-64b4-4032-9b59-7fff9642af82",
        "cursor": {
          "ref": "f3039eb6-5a83-48ad-9961-33c4eacc71a4",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "434b817c-43f3-4598-8d5b-b1a8e27ba90f"
        },
        "item": {
          "id": "9049a077-64b4-4032-9b59-7fff9642af82",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "da045964-8058-4655-9530-e946cb5cabd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8561fadb-13fc-4628-962e-376e21daacf2",
        "cursor": {
          "ref": "ea2db41c-b942-483a-b2f4-5fb95baebb3c",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f0ba4459-9ce0-4136-917f-e14c0e5f562c"
        },
        "item": {
          "id": "8561fadb-13fc-4628-962e-376e21daacf2",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a9c97be8-fee2-48ac-a148-4041fe7f4960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a704615-2683-4c51-a5c4-36dd6d431a01",
        "cursor": {
          "ref": "35bbaec9-8df3-4355-831e-40df21f6a931",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ac612e7a-215c-4b7d-b6cc-2d8b9a1510d2"
        },
        "item": {
          "id": "2a704615-2683-4c51-a5c4-36dd6d431a01",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e92ef8ba-baea-465c-833f-f7983e0ab750",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c43f7f-ef57-4048-a9a2-7f9261b21172",
        "cursor": {
          "ref": "f301ce0a-27eb-4ad2-8068-32b843987e05",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "81559cb2-1d6a-4948-b8bd-49414c01f24c"
        },
        "item": {
          "id": "d7c43f7f-ef57-4048-a9a2-7f9261b21172",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "91237e81-0d0f-40bc-a2dc-10a67b5b6ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b717ccb4-fe1c-49ab-ba39-98ed0039cd5a",
        "cursor": {
          "ref": "a7387020-2d5e-48c7-8efb-76cbb7761c76",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "bbdd552f-a051-4ed6-849f-3ab0474e9208"
        },
        "item": {
          "id": "b717ccb4-fe1c-49ab-ba39-98ed0039cd5a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "637b4fbc-204e-4aa9-a1da-e5075fac3ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dee752c-6507-42b8-9f8a-1f73b586f1f5",
        "cursor": {
          "ref": "c017ae6f-a3e6-491c-97a6-367ad2549f1d",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6bf88ad4-2218-4b00-80c4-8ae52acc789a"
        },
        "item": {
          "id": "2dee752c-6507-42b8-9f8a-1f73b586f1f5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2e98b3fb-6ee7-4659-8a35-b0291815080c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f958df5d-76cd-43ae-afc5-b4cc8128d716",
        "cursor": {
          "ref": "70950dc9-25be-4c78-a43f-0ef7ef73e49f",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "52a70f38-5791-4a6b-a779-f8343e4e371b"
        },
        "item": {
          "id": "f958df5d-76cd-43ae-afc5-b4cc8128d716",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4b3850d1-0932-4737-81ea-4382c17a0f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f7be60-19e0-464d-80f0-10f08ae2491d",
        "cursor": {
          "ref": "ec983a8b-6020-4328-8dcf-5dbd74343879",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8fbbaafd-5747-468b-bb4f-a27aedf3ea55"
        },
        "item": {
          "id": "d8f7be60-19e0-464d-80f0-10f08ae2491d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d324c319-2d88-473e-8daf-f6534a10f411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d43de0-3c03-4361-b277-8a07e09f3e95",
        "cursor": {
          "ref": "6daad191-083c-4b5f-98e1-3ae06032b643",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1eef4e0d-36f0-4bb0-86b4-a59b56dfeeae"
        },
        "item": {
          "id": "16d43de0-3c03-4361-b277-8a07e09f3e95",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7194071d-db61-4f54-ba8e-3cec0b8c2d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4d7eab-caed-4134-bfda-fe32c70ce285",
        "cursor": {
          "ref": "6e861af3-089a-463e-bd05-d641516ec9d8",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "acce13f0-fe62-4252-ba3a-d080584934e5"
        },
        "item": {
          "id": "3f4d7eab-caed-4134-bfda-fe32c70ce285",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4e92afa1-c964-4d4b-860f-71e56001b5b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57cf3fad-7e6d-4d70-8779-85bcae672b90",
        "cursor": {
          "ref": "c484855c-d2a0-49d4-802b-836c93979bc8",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3ab60bc2-3745-422c-a31b-e5790d285168"
        },
        "item": {
          "id": "57cf3fad-7e6d-4d70-8779-85bcae672b90",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "aaddc926-7b64-4657-9ac4-7849ec1a04e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a6142a-3d7f-4e36-9348-77c1df6bcab2",
        "cursor": {
          "ref": "a53eab05-54ec-4409-89f3-08370dbb46e9",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c4cf1e4d-f845-4096-a6fb-f8f43cb03ce4"
        },
        "item": {
          "id": "e1a6142a-3d7f-4e36-9348-77c1df6bcab2",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a48b3f7c-c471-43b7-951f-8ef29fc69097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13096813-3a89-46d1-aae0-c012ba37a0ee",
        "cursor": {
          "ref": "f032950a-ae3a-4d03-80ed-eefed627f28d",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d5c0401c-28f9-48bc-89ac-ee7107c1972b"
        },
        "item": {
          "id": "13096813-3a89-46d1-aae0-c012ba37a0ee",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "eaee469f-54ee-4cc6-8778-20f45ddbaaaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe17f1b-b261-47bd-ba79-d0f1883e1943",
        "cursor": {
          "ref": "e535d5ca-f077-4dfe-b2eb-c8d3c4b5beba",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "63064fa4-5e8d-400f-a759-f5c66dfa2cae"
        },
        "item": {
          "id": "afe17f1b-b261-47bd-ba79-d0f1883e1943",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f79a648b-8b34-40b7-a42a-c95c8fdb4a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2102dd5-82bf-41c4-b8e5-ee9e6c453307",
        "cursor": {
          "ref": "135a8711-13e8-4521-8a19-d6e5896e2aaa",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "37604f76-743f-4a1a-aefc-84b741b3ea10"
        },
        "item": {
          "id": "e2102dd5-82bf-41c4-b8e5-ee9e6c453307",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "cb8fa8c4-1ab5-4bdd-8dda-bf484ab83615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa21779-5f4b-4a0f-bcb4-d656ea833f15",
        "cursor": {
          "ref": "7e9605cf-4996-4ac4-b82f-b71121e2d279",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "616e110d-7ae3-4f99-b876-b9d50246f3fc"
        },
        "item": {
          "id": "1aa21779-5f4b-4a0f-bcb4-d656ea833f15",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "be9b6616-007e-4d4a-ad15-27538295fe14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78b0d56-d862-49f7-8d55-155dfb3eda90",
        "cursor": {
          "ref": "ad1a7fe9-e5d1-4737-99e6-77b6f94f94f5",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c46da8e0-f9f5-4030-a691-10308be03979"
        },
        "item": {
          "id": "f78b0d56-d862-49f7-8d55-155dfb3eda90",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e5b417d6-3d1e-48fe-938b-5f551436e437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b47b24-37ff-4448-8481-2de9ba2434cf",
        "cursor": {
          "ref": "6ad18634-4df9-4758-bf26-8e9b17c39c4b",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "216a9f1c-5153-49cd-9af7-989fb80cf1b7"
        },
        "item": {
          "id": "b1b47b24-37ff-4448-8481-2de9ba2434cf",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "14443491-9c04-433f-a71b-04d1e802d314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312fc3b3-e9a9-4557-ba07-64c5c831ddf2",
        "cursor": {
          "ref": "9e471ef8-4f35-4d98-bf44-9d605716450c",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ea46b9c0-79a5-4394-801d-608e3471f5e4"
        },
        "item": {
          "id": "312fc3b3-e9a9-4557-ba07-64c5c831ddf2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b44b4e19-9f5f-49e7-b514-2d0512113aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80fbae0f-a50b-473f-8fc6-9cd7d4629d2e",
        "cursor": {
          "ref": "9e342e5e-ea14-4c92-9804-e056d797aaa5",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "2325abad-3fc0-44d9-841b-940acc087b69"
        },
        "item": {
          "id": "80fbae0f-a50b-473f-8fc6-9cd7d4629d2e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a6b349e9-f2ef-4b7b-8432-3ca9a2b41617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65769bd8-010c-4564-986e-88d88bd8f085",
        "cursor": {
          "ref": "a4ce363f-7162-495d-a51d-44da970a14b0",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f1e043a0-0ab5-47c0-bd62-b72f841d0417"
        },
        "item": {
          "id": "65769bd8-010c-4564-986e-88d88bd8f085",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "85946cfe-2fee-4355-8e2b-246e50a75955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57f5c69-2dba-41e6-9cf8-67dd857fef28",
        "cursor": {
          "ref": "acbb22c2-e83b-4489-9569-de0c37187f53",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "37a3f515-c616-43fa-bc48-0a8f9c3c9bbe"
        },
        "item": {
          "id": "b57f5c69-2dba-41e6-9cf8-67dd857fef28",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6d1df00c-66b3-4b58-a63e-b7609f3e2fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0239d82e-f204-4823-8e86-f714a2712539",
        "cursor": {
          "ref": "41a99526-4569-4753-b35a-f9f4da30b544",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ff0e3c29-9434-4bec-81df-6ead410c9230"
        },
        "item": {
          "id": "0239d82e-f204-4823-8e86-f714a2712539",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8f7525c4-689a-4d1b-88f6-38d757727c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834005c5-79c8-4ed1-8a2c-74d10ac652ab",
        "cursor": {
          "ref": "c663329f-cf1e-47b1-a755-f1794b04ff95",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "54aa05c4-0d1c-44a9-b2a8-05d243d3d0ff"
        },
        "item": {
          "id": "834005c5-79c8-4ed1-8a2c-74d10ac652ab",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f1fddac5-79f3-467f-9569-0c6d7b6e8dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431d7490-f10e-4704-b9aa-a1243379b890",
        "cursor": {
          "ref": "b1bdcea9-6fb4-471d-b8b1-f9cfe0fd730f",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c0ba856b-eda4-4d7e-beca-5916ef073538"
        },
        "item": {
          "id": "431d7490-f10e-4704-b9aa-a1243379b890",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a9491cbf-73bc-488e-ba18-5024e4e6acf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad698cfe-74f9-481e-a843-c37a11d82db3",
        "cursor": {
          "ref": "b77fd4db-8f32-4f66-8145-bbcc32129c26",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "fd5b328c-93ad-476a-b672-53169db63f21"
        },
        "item": {
          "id": "ad698cfe-74f9-481e-a843-c37a11d82db3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a456a7fa-ed88-4d60-bb9f-ce3af5c9575e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb43c82-3743-4119-a19c-b06cc4d32dba",
        "cursor": {
          "ref": "e0505df5-b62f-4f48-a38a-01ce3b4fff9f",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "80819e1b-f301-4dcb-a04f-ed0c30a69e7d"
        },
        "item": {
          "id": "6fb43c82-3743-4119-a19c-b06cc4d32dba",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "48c98992-f9fe-463b-8359-64493cce3af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d325d1ce-4295-4b62-af6f-30c884b3edd0",
        "cursor": {
          "ref": "4f70025d-7883-461b-85d9-da2f5a47f3c7",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8cdf4188-c408-4858-ab3f-701e4052db1e"
        },
        "item": {
          "id": "d325d1ce-4295-4b62-af6f-30c884b3edd0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d221b89c-96ff-4d21-acc8-1d542dfc7623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c58fb76-b527-4626-b454-8683ef7e36f4",
        "cursor": {
          "ref": "8f25ad94-9182-4948-9b59-e9dfacbe86c0",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0d5efade-56f2-4d48-a3a1-7d196ff81233"
        },
        "item": {
          "id": "0c58fb76-b527-4626-b454-8683ef7e36f4",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b084f9be-6332-46f3-8fcf-2727ef046a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41fdda6-0fec-42f3-9117-36c2e6a14e07",
        "cursor": {
          "ref": "0ccad05b-0d89-4737-a8b5-249f2bc6b645",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3a3e7a9d-5f9b-4a78-baa3-f94ec34842ca"
        },
        "item": {
          "id": "b41fdda6-0fec-42f3-9117-36c2e6a14e07",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "bb1db01b-f637-406d-85ac-5dbcdc14693c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c200448f-e667-4b9d-b9b0-e1ff417c2cc8",
        "cursor": {
          "ref": "cfd2a5ac-c8f3-4a7c-8139-bd0b3627afac",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e5c77e75-6ab2-4496-bb9d-51d4bdc0dbbd"
        },
        "item": {
          "id": "c200448f-e667-4b9d-b9b0-e1ff417c2cc8",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8a648c91-3be1-4ca1-a89a-16cdb5f8b68e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb7598e-a5e5-4bb3-a531-17431bb321c0",
        "cursor": {
          "ref": "fdfd0fae-0826-4867-bdda-0baa6c6235b1",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d62e6944-46a3-4bd3-8378-73c0a70f1936"
        },
        "item": {
          "id": "9bb7598e-a5e5-4bb3-a531-17431bb321c0",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0c227966-bd5e-41bf-9aa9-a1994a0da626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "944a5477-6f5f-479d-a591-f6c2716cd49a",
        "cursor": {
          "ref": "76e31c06-f15d-4b0b-bbb5-65ea750dc23d",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "397d920b-75b1-42e8-a577-71983276ca30"
        },
        "item": {
          "id": "944a5477-6f5f-479d-a591-f6c2716cd49a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "be7612f5-6994-425b-86ef-fa0654c309f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273d162c-c194-410b-82f7-27cde4985954",
        "cursor": {
          "ref": "debf2906-65e6-4f55-b89a-802354ea75c6",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3dfad850-2205-4354-b1e1-780292ccdee0"
        },
        "item": {
          "id": "273d162c-c194-410b-82f7-27cde4985954",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a603b254-c0ce-4ce6-8d06-0483026df588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ede86c6-4a5e-4cbe-bf48-def866f3929d",
        "cursor": {
          "ref": "3ee4c78c-9efe-45c5-8daa-65ae909e3470",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3bde616d-41f5-4544-96a7-fa1259357f69"
        },
        "item": {
          "id": "4ede86c6-4a5e-4cbe-bf48-def866f3929d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "97f8d634-f56b-4be2-9826-5f6eb2027430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a16fc1-d13b-40a0-90c2-ee26079b3b5b",
        "cursor": {
          "ref": "93f62229-3788-4f02-ab8a-bdbf2d7d5846",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "537dd070-0190-4080-874f-9bdc1e06887e"
        },
        "item": {
          "id": "58a16fc1-d13b-40a0-90c2-ee26079b3b5b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0330656c-af87-4d4a-907e-f27a2ae48af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9900d38a-0921-452d-8145-fcb8b6af06fe",
        "cursor": {
          "ref": "176b29a9-f809-4cde-8db4-951f3c60f240",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b55f3c7d-b2a9-420b-81d3-ca9e542f7fe4"
        },
        "item": {
          "id": "9900d38a-0921-452d-8145-fcb8b6af06fe",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "54acf260-f706-40d2-a3d0-4b64b960ea65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3060447a-13de-4fe0-866a-916323c9aa4d",
        "cursor": {
          "ref": "ff5bacd5-5d3a-43b9-936f-6ec9799bf912",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "22667b9d-a675-43a7-9b7b-0224f214e67e"
        },
        "item": {
          "id": "3060447a-13de-4fe0-866a-916323c9aa4d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3885346a-950b-4574-96ac-e0c7ac3bd76c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d138edc-0b28-4da6-937c-f4861e743d81",
        "cursor": {
          "ref": "ed07f6a1-825d-4d5f-9d7c-7adb5153b0d7",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d679d1a9-e3c0-41ca-82b9-f9a6eedefbd7"
        },
        "item": {
          "id": "6d138edc-0b28-4da6-937c-f4861e743d81",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ddc73ffa-d55b-451a-9152-e5d95b632ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df43fac9-ac4f-4226-ae83-ed9f0a2ee656",
        "cursor": {
          "ref": "bddacd35-22d3-446a-89a4-1be98adeea25",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2c9e0152-4eda-4a8c-8272-a44329a7bbf4"
        },
        "item": {
          "id": "df43fac9-ac4f-4226-ae83-ed9f0a2ee656",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e9befdf6-0925-4b12-8ab7-09304cbb1a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d189ef-185c-4148-9db9-85218fdbfd79",
        "cursor": {
          "ref": "8427ddb5-b57c-480e-92cd-644e15f5342a",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "924f4d4f-f59f-40f5-adcb-2ea555a85b62"
        },
        "item": {
          "id": "a3d189ef-185c-4148-9db9-85218fdbfd79",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4bc53fae-f3b5-4047-b7e8-adfe02ed578f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51816cde-7387-49d4-a1c8-df07d84c789a",
        "cursor": {
          "ref": "85d63981-fb7d-43ea-be6c-e3af297e2c66",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d0dd03af-5ce7-47ed-b185-1ec6c4da7fff"
        },
        "item": {
          "id": "51816cde-7387-49d4-a1c8-df07d84c789a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "bbc02c27-1c7e-489e-89c3-f0954a85f653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2083eb7-a8bf-49d1-9a34-d61fc5b0df42",
        "cursor": {
          "ref": "1b3f4fb4-2136-4ea4-a963-5b7dcfc25c43",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0c59f50b-19c3-4479-a089-3a225f4a2d1c"
        },
        "item": {
          "id": "b2083eb7-a8bf-49d1-9a34-d61fc5b0df42",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5656b16b-577c-4be9-bd47-c61bc4615b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832d7e68-905e-46c0-8e30-fea83fc7b2b9",
        "cursor": {
          "ref": "4dbc0bec-83e7-451e-a092-de0e49211ade",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8d26c037-ea21-40fc-9ed0-17ee85188afa"
        },
        "item": {
          "id": "832d7e68-905e-46c0-8e30-fea83fc7b2b9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5e703d15-a50e-4c57-be26-acce8ccf09b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4cee90a-580c-4317-a0d5-11e6dd8c1e1f",
        "cursor": {
          "ref": "d8be3a26-c2bf-46c4-af47-be48a9836812",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d036a205-a5d6-44c3-9415-c71977d90399"
        },
        "item": {
          "id": "d4cee90a-580c-4317-a0d5-11e6dd8c1e1f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d3d18f5e-5037-4f61-8967-6e73a58c4b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a583829-b4da-4d6c-a7d2-a1bb58f9a82e",
        "cursor": {
          "ref": "f174207d-f81b-43a3-81dc-7f982913327a",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a34f6fc8-053c-4679-a0cb-c0425c4a0173"
        },
        "item": {
          "id": "3a583829-b4da-4d6c-a7d2-a1bb58f9a82e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "99fc400c-d86a-4a0e-a945-97be29fc83dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95cb83ac-63a2-4888-9a2e-35dfbc7d9f95",
        "cursor": {
          "ref": "5763814e-a213-4c35-8e9a-41eb4946097c",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "88a9f823-e97f-43d0-a1cf-6787dd06a0c4"
        },
        "item": {
          "id": "95cb83ac-63a2-4888-9a2e-35dfbc7d9f95",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "275f6b24-4b23-4fdf-91fb-9cc762470388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3adfc39-ea2b-49ef-8a67-ec6bc8de79a0",
        "cursor": {
          "ref": "10c4d504-09f3-4ef4-8393-46baf7aef64e",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "7e704e13-9dfe-4579-8acc-440c9899943b"
        },
        "item": {
          "id": "a3adfc39-ea2b-49ef-8a67-ec6bc8de79a0",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f3efa969-3f26-4d00-b83b-5cf54c41d31b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d6024e-aa52-427d-81c6-28f412f9c943",
        "cursor": {
          "ref": "9c818f58-ea95-480f-827d-3e3be314390f",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a62ac67a-55c5-4010-81bd-a8a10b1c3a2c"
        },
        "item": {
          "id": "e5d6024e-aa52-427d-81c6-28f412f9c943",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2c016d3d-a1aa-45d5-8b77-449dee3399b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563d2795-8f02-460f-b00f-daca28160c16",
        "cursor": {
          "ref": "9e7ecfd0-ab1b-455b-a79d-b1cfa9b826e7",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2cd9d6b9-3661-42b2-b205-136b369ceb31"
        },
        "item": {
          "id": "563d2795-8f02-460f-b00f-daca28160c16",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1cb4ddc5-3346-49ce-851f-3abf2adf69d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a081a8bf-4d58-4ce6-a00e-588160215911",
        "cursor": {
          "ref": "6f78141d-9508-4d93-96b6-c0bc842113b1",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "72061c38-ab70-4d10-81bb-0b0284304740"
        },
        "item": {
          "id": "a081a8bf-4d58-4ce6-a00e-588160215911",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8a70bc15-c8db-4c31-9e99-38b0f9e72048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ae0835-87f8-42c5-bf97-61797e3577f5",
        "cursor": {
          "ref": "a234771a-d1a3-4988-884f-007c37780a08",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "abe16e2f-0ac7-457d-b788-7d807a1c7d58"
        },
        "item": {
          "id": "67ae0835-87f8-42c5-bf97-61797e3577f5",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "77b788fb-c2a3-407d-a61e-a8ae2e545af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a5261c-9e87-473d-b3df-8cee3fb1a32d",
        "cursor": {
          "ref": "988a5d39-b502-43cd-b842-fac30401a2c9",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2add3695-6790-4efe-8a11-9b077d3bcf78"
        },
        "item": {
          "id": "99a5261c-9e87-473d-b3df-8cee3fb1a32d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ff5b7dff-a9fc-4fc0-a1bc-afaac3dcb000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62094631-4d7f-47c1-8299-61cb2dd24a97",
        "cursor": {
          "ref": "4d9a6590-3d30-47a5-a09b-1e52e09a13ab",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "db300e55-b33d-48a8-ba71-c8b809553b4c"
        },
        "item": {
          "id": "62094631-4d7f-47c1-8299-61cb2dd24a97",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5efc079d-3e54-4345-b198-f06709468b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eadfe97-f9f8-4f70-9a42-61914e732397",
        "cursor": {
          "ref": "b46f1557-2b94-474a-b565-148b5c96236f",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "cee5cc2a-9511-4e1e-bfd0-821822958bf5"
        },
        "item": {
          "id": "4eadfe97-f9f8-4f70-9a42-61914e732397",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "765fcdfe-9fc1-4773-b074-8345d57463ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18fa8ad1-e850-4a0e-a3b4-3142bfe63aef",
        "cursor": {
          "ref": "4c8e7fa8-78a8-4152-b1b1-8d73160123f3",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "882569a0-530a-412d-a3ce-061c83da1a75"
        },
        "item": {
          "id": "18fa8ad1-e850-4a0e-a3b4-3142bfe63aef",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f0c2187a-9ed5-40ad-a198-5a3f3cdbc674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40333fa-fe52-4684-b37f-09bb653ca2d9",
        "cursor": {
          "ref": "9e20493b-74ea-4526-b58e-aa20ab45f272",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "114bf8da-2f5b-426a-8489-2f029471d7ae"
        },
        "item": {
          "id": "a40333fa-fe52-4684-b37f-09bb653ca2d9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "db3c4b48-84b0-4236-8f18-6e2b96350f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5258757c-00a0-427c-9bb4-2f0ca1b3272b",
        "cursor": {
          "ref": "d136a465-20d2-420c-bf1b-27c2f0c9b71d",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e8c97164-efef-4b09-86b8-8c2357d86727"
        },
        "item": {
          "id": "5258757c-00a0-427c-9bb4-2f0ca1b3272b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "64f1fe06-6608-459c-b5af-4b938a681f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70bbcb13-c890-4e30-a582-4e9ff95064ec",
        "cursor": {
          "ref": "6d0708dd-eb8e-4e24-b808-f28587d87676",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "365969e7-ea81-4001-84d5-f181e954c153"
        },
        "item": {
          "id": "70bbcb13-c890-4e30-a582-4e9ff95064ec",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "14909f67-d1fe-435f-bffd-b20cbc23fa9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b1fe1c-2edd-4e96-804b-e1c5cddb0afa",
        "cursor": {
          "ref": "fb6020ae-07b5-4d55-b203-e53de0097ad8",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "cca572fd-64f5-461b-9eb6-1092f691e13e"
        },
        "item": {
          "id": "01b1fe1c-2edd-4e96-804b-e1c5cddb0afa",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9c61c2e4-f596-40bd-98bb-6cb3d22be81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34865c0c-2183-44ac-a00f-eb41f9398a66",
        "cursor": {
          "ref": "b2fcb880-6cdd-4940-b770-00e9b4fe5dcd",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0a525b26-7d2c-45aa-b3a0-a4cd510bb161"
        },
        "item": {
          "id": "34865c0c-2183-44ac-a00f-eb41f9398a66",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "88880629-3bbb-404e-a810-d27a0077dc50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f262d11-f82a-4dc5-af08-bab3939ddde6",
        "cursor": {
          "ref": "144f2eb4-b835-400a-92a4-a1c35217bd7c",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9cb52356-f59b-4680-a5d2-d8c4e5a8863e"
        },
        "item": {
          "id": "0f262d11-f82a-4dc5-af08-bab3939ddde6",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d11dfe2f-a06d-42c2-b2cb-a139e7ee541c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4fa856-b4b8-4283-b566-4ba10f779c4b",
        "cursor": {
          "ref": "2b24ca86-ba8f-404f-8c16-0bc38a5042b1",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "afb40d41-1a66-441a-8a41-c6e8e20d3622"
        },
        "item": {
          "id": "3c4fa856-b4b8-4283-b566-4ba10f779c4b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "fc8aeb0d-30a7-41fe-bbb9-403b11c48737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac781aa7-b395-429a-a9eb-d3924c1c92ae",
        "cursor": {
          "ref": "c2fd7ef4-420a-483e-9181-6df16ccbe870",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f80a905f-4821-450e-9abc-de4135729258"
        },
        "item": {
          "id": "ac781aa7-b395-429a-a9eb-d3924c1c92ae",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a4821077-c258-4109-8bc5-e9600f545b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87fda0bd-312c-4e88-85f9-2cb005f48d11",
        "cursor": {
          "ref": "c1676eb0-509e-4071-ae0a-8062274da05c",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3e68cbaf-7f2d-4710-818e-d2c00d0ec3b4"
        },
        "item": {
          "id": "87fda0bd-312c-4e88-85f9-2cb005f48d11",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3f1f5f31-814c-40c0-8735-ba4588d6dde3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e74e09a-96fa-488a-bb7c-4469abce5dd2",
        "cursor": {
          "ref": "85207054-259f-47f7-9066-e2bc0d6980c3",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5b7c478e-c5a3-4cec-86d0-8aeafae47649"
        },
        "item": {
          "id": "1e74e09a-96fa-488a-bb7c-4469abce5dd2",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1f8411bf-6849-4907-aaff-5d66b981d824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b070ef-2c34-4fe6-bb6b-b1f0a94f98da",
        "cursor": {
          "ref": "fad94fbe-40bd-495b-8d0d-2c5b1cc3cee6",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "03b98032-8d61-4397-8ca3-aa59fdbee9e6"
        },
        "item": {
          "id": "17b070ef-2c34-4fe6-bb6b-b1f0a94f98da",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "22bc2683-2b20-4a33-8646-92b8c8be8c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdbb2325-1881-4863-926d-9c591640d73b",
        "cursor": {
          "ref": "2f3f1163-2e51-4bef-ad8b-e9b045d305f6",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9b5437d2-c4ec-4e59-836e-0f3f40380d1f"
        },
        "item": {
          "id": "bdbb2325-1881-4863-926d-9c591640d73b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "29b04ad1-4163-4fc6-953a-25eff319248a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adaae912-4618-4c1f-a92b-9948f4fc49a4",
        "cursor": {
          "ref": "8462e4e3-0eac-402f-9845-8467a760c5df",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a53ab4a7-b1dc-4641-9c2d-8079af9e4d2c"
        },
        "item": {
          "id": "adaae912-4618-4c1f-a92b-9948f4fc49a4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0374bcf6-07d3-4571-ac45-a7cf699ba668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8ee487-2946-49a4-8fa2-019c673b43c6",
        "cursor": {
          "ref": "4b97d227-7cff-4fc8-a7e4-2716d0737159",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8293c788-9f85-4d32-be5a-9093c6a5a42d"
        },
        "item": {
          "id": "ac8ee487-2946-49a4-8fa2-019c673b43c6",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "40ba48d3-2093-4524-a27f-d58fe25cf858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9bb99df-531a-42aa-a141-e59cf14ac92e",
        "cursor": {
          "ref": "d8611624-74d3-48ba-9186-52a1140d4965",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3101e26d-fb64-4f0e-8e9d-442f323e2ba1"
        },
        "item": {
          "id": "d9bb99df-531a-42aa-a141-e59cf14ac92e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "55ebd9a5-2440-4e88-870c-98c73f760531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6911c74-d3dc-49ca-a767-69dbe8cfca16",
        "cursor": {
          "ref": "dfadbe36-52fa-4320-ba58-e802b61c662d",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c728f90c-c783-4eb0-8c51-550541c84a0b"
        },
        "item": {
          "id": "d6911c74-d3dc-49ca-a767-69dbe8cfca16",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "45e5995e-363a-4bdd-97c2-f81ee193f84f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88458922-3f73-4bec-b1b7-a64bd68f6913",
        "cursor": {
          "ref": "326e962a-04e6-42d2-844a-75cea38dbb1e",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b5c043c7-e313-4a50-b99b-2b0003d755d0"
        },
        "item": {
          "id": "88458922-3f73-4bec-b1b7-a64bd68f6913",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "2861dd83-e8a0-402a-9085-c0dbcb12fcbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a0a33c-ab89-4193-a421-74665615f6c2",
        "cursor": {
          "ref": "e56083e9-bdd7-424d-868f-12f898b64714",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ffa137f0-36bc-421b-8bc2-2fa567cba3e0"
        },
        "item": {
          "id": "41a0a33c-ab89-4193-a421-74665615f6c2",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "57e86232-ff4e-41d5-9557-298e4badbdee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb0c0f09-5a68-4055-acb4-7918a162ef1f",
        "cursor": {
          "ref": "04ce2bf4-082c-4bf6-ad38-22ab2fb0502f",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "575d9a1c-abcc-4066-b558-e04bed726dc1"
        },
        "item": {
          "id": "eb0c0f09-5a68-4055-acb4-7918a162ef1f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4e7887b7-1dac-428b-b8b6-6ebcaade1efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0bc3d0-54e0-4bd8-8ace-2bbb49b8dad7",
        "cursor": {
          "ref": "a21451ed-57b8-4240-b3e1-a4b258d91bf2",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c53b8267-a295-4845-89b2-c9b39d0b645c"
        },
        "item": {
          "id": "8b0bc3d0-54e0-4bd8-8ace-2bbb49b8dad7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ba1e26e6-eed2-424a-8aab-8c43da41e3ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27560f5e-570a-4117-bbc3-a731614c8f96",
        "cursor": {
          "ref": "900fcd4c-211e-4a90-b53d-79fb24209173",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "12531ad4-7c19-410d-8372-7bc544fe9795"
        },
        "item": {
          "id": "27560f5e-570a-4117-bbc3-a731614c8f96",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9060823b-78a9-424e-886e-a7c695d06a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af447fd-d881-43ff-a07e-1ff3f909bf78",
        "cursor": {
          "ref": "70528d4d-b30b-4335-af26-e24a1d797100",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "20a448b5-ddd8-4646-aa50-1ab96ebe3663"
        },
        "item": {
          "id": "9af447fd-d881-43ff-a07e-1ff3f909bf78",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3174129c-b351-4f6d-86fd-3c6f1e58c617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5f7ee8-ff28-411c-95a5-a039df7ef065",
        "cursor": {
          "ref": "1a893343-dfaa-4f9d-a935-73fb08a26904",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "87374c1e-159d-4dae-8acc-70c950cce50f"
        },
        "item": {
          "id": "fc5f7ee8-ff28-411c-95a5-a039df7ef065",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4818aaa6-fb8a-4996-85a4-cc3b50ddea9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e367e332-fe23-4836-9937-91f8d1016cc1",
        "cursor": {
          "ref": "a0f84986-cb36-4426-bf3a-2a09272df61d",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "3bb6abde-1f07-4053-a348-90a2b8dd2e1d"
        },
        "item": {
          "id": "e367e332-fe23-4836-9937-91f8d1016cc1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "49815de6-c536-415b-bfb7-4fad1fc7e21b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4816a4eb-0114-4a04-9af4-a9397ca8e973",
        "cursor": {
          "ref": "1d41c71a-2bad-40fb-92ad-b981f04163f4",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "3f4c2623-1588-4549-b103-7fb24e8abd0a"
        },
        "item": {
          "id": "4816a4eb-0114-4a04-9af4-a9397ca8e973",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "967f0254-40d0-44f7-8ff5-91430b113bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dcc5fc8-8671-4ddd-80ef-acc6b7dc8188",
        "cursor": {
          "ref": "79de10e7-230f-4505-9878-4bb053d68152",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "2c1ba31b-da50-4f3e-8b77-d3a132b72e4d"
        },
        "item": {
          "id": "0dcc5fc8-8671-4ddd-80ef-acc6b7dc8188",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "abfb6ed2-edc5-41fc-a184-3301357c8ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6112e24a-22df-4bbc-944a-4bdf604e6e78",
        "cursor": {
          "ref": "7cdfbc20-1414-4e72-ae3a-2ab95d128566",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "f63969b7-e873-4f1d-89bf-2af6a31381df"
        },
        "item": {
          "id": "6112e24a-22df-4bbc-944a-4bdf604e6e78",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ad8e7404-cf46-48cd-a14e-2ea4b0939096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5bd28d1-d158-44cd-aa79-c1194141e2a4",
        "cursor": {
          "ref": "79bc3cac-e8bc-40f0-9b87-8522d5392b48",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "4503da7b-b7d9-464f-a736-5e1cb1122bfc"
        },
        "item": {
          "id": "d5bd28d1-d158-44cd-aa79-c1194141e2a4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7c115d9b-6ec8-449a-af66-1a439f16a802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba11b98-f692-4b74-aeca-fbf5cd662f09",
        "cursor": {
          "ref": "b26e42fc-75ff-4a82-941c-a79b3132fd10",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "8e6eee50-a670-434f-a393-f792238214d7"
        },
        "item": {
          "id": "9ba11b98-f692-4b74-aeca-fbf5cd662f09",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c79d5a79-9f99-4109-a8e8-e5b32b0744a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b825ff-829a-46ad-9cf3-61bc423ea0a8",
        "cursor": {
          "ref": "1acb832f-a7a5-4895-a26a-76d22f704af5",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "3053c61d-e8ba-45d1-a4a0-fd3c9fcc37b9"
        },
        "item": {
          "id": "a2b825ff-829a-46ad-9cf3-61bc423ea0a8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b8c3a133-ab33-42e8-b4c2-8c2fd634e042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9b11f6-1afe-4773-a19c-9e414eb13abb",
        "cursor": {
          "ref": "b5b9b05f-f9a3-492a-a919-f6486a98fa3a",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "a7ec34aa-7e7e-47ae-bf2b-c4f278bb228a"
        },
        "item": {
          "id": "3e9b11f6-1afe-4773-a19c-9e414eb13abb",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "69ff8500-b5db-48d0-b95f-00f99e09f601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb2b1b3-f7dd-4ef8-979a-c00b73071151",
        "cursor": {
          "ref": "221a0c7f-83a6-46ac-8563-6516781af510",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "4a957b58-7a47-4816-ac82-3bda070fed3a"
        },
        "item": {
          "id": "bcb2b1b3-f7dd-4ef8-979a-c00b73071151",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "72040205-6957-4e41-bd2d-81cf295a4f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d875ea05-0a87-4bea-81df-f40c8ee63dc8",
        "cursor": {
          "ref": "bc0b2c09-05d8-48c1-a4a1-cd29352ee808",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "1054a0a8-d3e1-41fe-a806-e296b9a76d56"
        },
        "item": {
          "id": "d875ea05-0a87-4bea-81df-f40c8ee63dc8",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "80f5c179-c5ba-4b14-aae4-62a38d26da70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78572cf0-8330-4cfa-bae5-9760548553e2",
        "cursor": {
          "ref": "f56f401a-f292-4540-a718-bdd07b64d434",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "09d2626f-c34b-4602-8e64-498dd08dd692"
        },
        "item": {
          "id": "78572cf0-8330-4cfa-bae5-9760548553e2",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "87b26257-f411-4a11-967a-58935c563ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8407e135-a229-41a9-a6cc-33efafb9d37d",
        "cursor": {
          "ref": "b5f16779-0316-4efe-98c2-84dd7f08ba01",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "d6ac36f0-d89a-4ae3-8c1a-f6b7929b11ed"
        },
        "item": {
          "id": "8407e135-a229-41a9-a6cc-33efafb9d37d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "846ccb05-601c-456d-8dc6-c2cbab568106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5705c9-1c36-4e4b-95a7-db90c392acb4",
        "cursor": {
          "ref": "feea90d9-508f-41de-b581-0ef069bf50a9",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "b75475c2-59a1-443e-ac33-5d760e7ae23c"
        },
        "item": {
          "id": "6e5705c9-1c36-4e4b-95a7-db90c392acb4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "599729e8-a0e3-43bd-8f8a-50a5823632c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d85138-7eba-4345-8ee7-b4a485924b1d",
        "cursor": {
          "ref": "304a6e2d-5a4d-4daa-a285-e061fbb57f02",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "ebbe3979-ec0f-425b-b859-3eac1daf3392"
        },
        "item": {
          "id": "11d85138-7eba-4345-8ee7-b4a485924b1d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "84814e5b-4954-4739-9521-fbf2a4b4b261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e668019-ea9c-4459-b88f-5eeee5ed8fa9",
        "cursor": {
          "ref": "ab2dceeb-f0b0-4497-980b-c761c724588d",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "ac4bdda5-bc06-489a-8cf2-0323bd9d3cf4"
        },
        "item": {
          "id": "1e668019-ea9c-4459-b88f-5eeee5ed8fa9",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "651cc399-acf6-42e0-a005-1231d4885380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7d72c2-b8a7-4792-b13a-7737084b41a6",
        "cursor": {
          "ref": "8d5eb8ef-886e-4fe2-aed8-7af092ba36c8",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "57995de4-d3a3-49a3-a1a7-6d9134e72112"
        },
        "item": {
          "id": "9c7d72c2-b8a7-4792-b13a-7737084b41a6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "db10901e-3221-4016-ac6e-1fd9df7f47f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be3d321-f781-4584-a2b6-0359d5a406b0",
        "cursor": {
          "ref": "24b6b9b1-8019-45c7-8c09-7f56e7d5274c",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "8e765b6e-f6cf-4374-969d-2bd03a048356"
        },
        "item": {
          "id": "8be3d321-f781-4584-a2b6-0359d5a406b0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "da6d11fa-d87c-4029-850e-508000793629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44af3a21-5154-4816-af96-d6ab12533914",
        "cursor": {
          "ref": "547d5302-9329-4750-8c8c-b4f22a722938",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "39aa3a04-ef75-46c2-8381-7f8c0e5b20af"
        },
        "item": {
          "id": "44af3a21-5154-4816-af96-d6ab12533914",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f7c3e318-22f4-4a71-8287-f93422668c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a66d078-331f-43a8-9a4b-2db4ecf9d983",
        "cursor": {
          "ref": "163ba706-3f80-4295-a35f-9b24a2af2e51",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "4148b114-0e21-41e6-b5ce-ccc1e35c5dec"
        },
        "item": {
          "id": "1a66d078-331f-43a8-9a4b-2db4ecf9d983",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ff60b3e6-91db-4fcb-bc48-4de5812b0720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5444d8-cfdc-4c9d-85e0-c23089f743e5",
        "cursor": {
          "ref": "e0ed8ec5-a9b5-420e-894e-85974657c131",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "2683c6b8-1f4c-44b9-9b83-029f0a95f9a2"
        },
        "item": {
          "id": "cf5444d8-cfdc-4c9d-85e0-c23089f743e5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "018d0bb7-d3c7-4109-b119-c539c24d987d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66eea362-7505-4a5b-a19e-f727ee69cee6",
        "cursor": {
          "ref": "4c9474f3-5229-4f04-bb4c-79aae8b70c0c",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "aee22b78-68d7-4bf5-af14-754216f8e69b"
        },
        "item": {
          "id": "66eea362-7505-4a5b-a19e-f727ee69cee6",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "12f05a73-9b1d-4269-802d-a0b963366d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7e82c8-236b-4d42-bd4b-9a15715523f1",
        "cursor": {
          "ref": "3d7cfd61-ed89-4cf7-9988-2be6f818dc49",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "8124b0b4-aba2-4353-815e-a3d7a23c35a4"
        },
        "item": {
          "id": "ba7e82c8-236b-4d42-bd4b-9a15715523f1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5d5d3878-b603-4322-bc78-383662acc64d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa90fff1-afb6-4b51-874a-245ea80c6918",
        "cursor": {
          "ref": "df47393e-c40a-44f5-94e9-2ec30c68fc25",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "5bb7e34e-96d1-4c26-a3b5-a01ed3825b08"
        },
        "item": {
          "id": "aa90fff1-afb6-4b51-874a-245ea80c6918",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "433fa214-53c6-49aa-a75d-88393287a784",
          "status": "OK",
          "code": 200,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2a6b06-6a33-479b-8c25-a4c003197f43",
        "cursor": {
          "ref": "eb1b19d7-e0dc-4879-8177-8d5cc823c832",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "218d6e38-7797-4823-98b4-7399f86de907"
        },
        "item": {
          "id": "7b2a6b06-6a33-479b-8c25-a4c003197f43",
          "name": "credentials_verify"
        },
        "response": {
          "id": "007bbeef-5ea3-4b96-b8aa-d2ec362b96e2",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f667a01a-d037-42eb-beda-52979d96eb57",
        "cursor": {
          "ref": "fb468a56-19e2-4b2c-87e2-6ac43e8ba078",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "c1658460-104c-4ee8-9910-45329a52efc8"
        },
        "item": {
          "id": "f667a01a-d037-42eb-beda-52979d96eb57",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "82ac987f-5640-474b-a31f-88fc434cf567",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6c332d-13b1-4aa6-8e41-41ba8e929b62",
        "cursor": {
          "ref": "aa97c7bf-0ee6-4f02-9334-0efaefaf9130",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "99d85632-907e-4fe1-999d-9977e401aa6e"
        },
        "item": {
          "id": "3b6c332d-13b1-4aa6-8e41-41ba8e929b62",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "54ff6051-3e3a-4881-91d2-2ba72d7cc0c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6c332d-13b1-4aa6-8e41-41ba8e929b62",
        "cursor": {
          "ref": "aa97c7bf-0ee6-4f02-9334-0efaefaf9130",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "99d85632-907e-4fe1-999d-9977e401aa6e"
        },
        "item": {
          "id": "3b6c332d-13b1-4aa6-8e41-41ba8e929b62",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "54ff6051-3e3a-4881-91d2-2ba72d7cc0c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ecdf4d6-f601-4429-b955-a4c3801f8a15",
        "cursor": {
          "ref": "b0f9acb4-9236-4532-918a-320601acc705",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a18fb9e5-f0df-4449-a0f8-fed450da49d8"
        },
        "item": {
          "id": "7ecdf4d6-f601-4429-b955-a4c3801f8a15",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0c785718-00db-4578-993a-39487c64b932",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1f67e1-223a-4196-b014-c835a8563248",
        "cursor": {
          "ref": "d91e1735-32ea-42db-927d-5e3f4e6ead40",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "91a76c9b-15e0-41a0-b06d-2581230874a7"
        },
        "item": {
          "id": "db1f67e1-223a-4196-b014-c835a8563248",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "72186672-b8a8-44d9-980f-11318e66873c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}