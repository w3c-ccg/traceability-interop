{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "85f988b7-05b7-44d3-8447-bd6ef1d9a9e5",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7e0c79b3-c206-4965-b9d2-978e1d4af0ee",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5863db13-8ede-411d-a3a4-3119d3d340d2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2a54b748-ffb6-4073-b72f-edf1c172d702"
                }
              }
            ]
          },
          {
            "id": "d87657ae-19f7-428b-a9b3-ea3e6c32204b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "88046364-f5a6-418c-8bb9-a8c97c3938b7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "28f749bc-cd61-4800-9256-451bc38a4e9a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2b6e8c3e-f7e6-4fb9-a143-8e1b9a9e9345",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ce0353e0-fa80-448b-a417-12e59d748992",
            "name": "Positive Testing",
            "item": [
              {
                "id": "07e25edd-2a38-474a-a32d-02257c9e0656",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "adad2699-a990-4de4-bac8-fcff81bb73f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6375f113-85b9-440f-9a69-7236346649ae"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e286ca8b-4c3d-4adf-b6e8-a375e3fc7f65",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3099e32b-ad0e-489b-b97a-bc569a7e3dc1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "561befa3-873c-4bbf-8f8a-46260e1c0117",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b3e0b9cc-317f-43fd-af6c-0a7348795acb"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0485f53-29e2-40e1-a5a7-a482ed3cfc64",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a9eb18a6-b0e2-426a-acd6-3412baf71173"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "50f7d71e-e1e6-440d-ba2e-76a60eacb9b2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "43bc1398-2f67-49c7-9dd2-6abd544d37b2"
            }
          }
        ]
      },
      {
        "id": "67e43593-a5fe-486d-8822-131511fa211e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c066168e-d292-4a81-a414-ce8fa55716b3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b1d775a0-3c5b-44b9-bf3a-f8cf0c1fd4ad",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4a2d5911-166e-4ef3-96e5-74f0764e07d2",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "906eecd4-d467-4b8b-82ea-296a2c51a10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "235c6917-d79e-4fd2-a86e-167e851597f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f458e464-03c3-4341-905b-7175a97e3520",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e08774a-4cb7-479b-9550-42c1256309aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44373c28-3cc5-4d4a-bdba-fc24ac367b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6375a84a-b53e-43a4-b213-9e96fd87f410",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "485bd546-bde7-4e89-afa3-4777d4fedb96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd4553ee-51d6-4551-8798-1b8d39790fc3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "af95d169-0ac7-453c-82f7-03129ff53162",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "41673b53-5d58-4a56-8794-6c8ed05d5004",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4efb43f-521e-4c8a-b951-fb85735f7ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91908208-ca72-4370-99fc-b32cfbb2af95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956f4b07-dbfc-4ed8-a327-9ef27ea47fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bbfa4e2-b90d-44bc-94d1-aa1b9897bf6c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "80762b92-fc65-462b-89f5-eb702cbebd44",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d74944fb-f8db-4347-929a-8e40c1d64424",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ddeafe2-e5fb-4114-9708-e7d791c97c21",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "71c5ac1b-f353-4cd8-93cf-9e8d65cd33ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0de78bb-58c1-4193-baa4-dbe4d85f515e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e3dedfa2-696f-42e6-b1ae-2a681161342a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b275d39-5235-44d3-b0e0-62132ccef6fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e3cc8fff-5a08-4bf9-8e11-46859a125ae9"
            }
          }
        ]
      },
      {
        "id": "cef30407-7832-4824-8d26-5cbbdd7f86f4",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2af17dcc-5b7c-4062-a7d6-05e98757172d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "471233a7-f039-4e86-9273-f2ac66a34b19",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f69b66cf-96f9-48df-a3b5-f9813983f56e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92e8ddd-b851-4609-aaba-200375ea62e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "659e4ae1-686e-4fd4-98d2-52f60993b3bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36e559f-d32a-4797-a877-54804c32490f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b88bc47e-cde6-4747-999f-411158bb7890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a2be2a-0a91-4068-8178-202bdf6ff1e9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a030ef-0719-45c6-935a-5d31da2c9372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cca809ad-4fe9-43cc-b119-c14af75e7b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c4fefd-86bf-4826-89e6-07c4d163e99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3371373d-cafe-4f22-b4e1-49b9aad4b26f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ea55d2-0d1c-4864-ab03-90683f583a6e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27239480-c196-4f5f-a39c-37d61a5b0009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d635ff89-2732-4e1e-bc7d-a2e64e716545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0258df83-f7b1-4498-ab7b-8955e2f0b860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a7ef56b-b8ad-40ca-944a-68819e906f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8dfdbc8-5504-4cad-8db1-3bf1a35ae9f0",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a093b1-cadd-45f1-9553-9680cdd15727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ce9ac9f-e158-4df5-a572-e2a8f91fff83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a93de7-4c7f-4773-81a6-842022081a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "160e46e5-3703-44a0-920f-fae2bb32f793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1379295-e0b8-4f31-a92a-1932e4f50af0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f3d79a-6b5b-4b2f-bce3-14171058e4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e2db01e-e5e9-46de-8091-fffbe2e5999f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf39a4f-3f30-40fb-9fd5-6f522360220f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73a1de53-ae8f-475f-a637-1a5fee3b68ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8716ca45-fb80-4979-8e53-04c984f624ab",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa0238d8-0c4c-459b-ab0a-2e2b0b2c6c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f344fd59-2d22-42d7-8f18-0cd3beeb92f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def2c5bd-1b73-4d34-9518-6d8d88fb07cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ca77666-c4f8-4d4d-9e03-34bf7c473b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163cee8d-11bf-4dbf-bcb3-006e5f2a04e8",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02099c5-092e-4ff0-9501-2deaf7a23a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ce599c3-3b67-4a1e-8375-8ebdadc21c2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40af78ce-8753-440d-a5a2-66d26eeb8425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c956e5d-c8cb-459f-8c0c-a70cf15281b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f475794-b2a2-409f-a8d0-7eed1fb00bbc",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c5a148-3a21-48a2-9331-9bc0159af307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58538e46-19d3-4611-8bb2-d90e76718171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db4b048c-4e5c-4ae3-85ab-a0b165e4d3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1db018ee-a7f5-4d0b-8e03-c4dcfeccdbe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6691cd5c-fc8f-4342-82c7-12c68a3db702",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77cce41f-566f-41ee-98ec-508f4db73385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "520fec0f-4b63-405a-9955-ee1aadba3017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d55c85e-2399-4b31-8d63-006f88499f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c36cc67-d415-4f9d-b158-79a4ed7236fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd094590-9a2d-47ac-bf21-7c287735c664",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426f0235-3e88-434f-8872-5cefb762e049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4072462-f712-49e1-9f33-35ff6021f763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc80054-c915-447a-8827-eccbd60dc060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3410fb86-be30-43d7-98ee-ea6d0a6b09bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225c3eaa-df9d-473a-93b7-2250a022d9c6",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a321c0-4847-4f77-8723-4ff14d65d844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d39f2cc-f321-48f5-8d7f-7dcaf4a9e65a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7925bb-aa03-41d5-8a59-5008a47c87ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f0ca18a-7130-415d-8753-d3216d89ec31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd8b730-7335-43f4-912d-7d92261a132d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f1a5ba-8566-40f7-8168-1e44f43b4772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a1fde42-e7ec-4fdc-a960-5123f2e2a6d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e39a4ed-f02f-4f72-b5e9-a92e27d4fe9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbbbe139-e3b2-4a61-8e42-3c292f69fbfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27d9a56-00f1-4d9e-91b2-9361acdee0c6",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad717a76-296c-4f1b-b02b-9f078d646b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "827b5444-9771-4ccd-b6b6-1eda20b73ba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708ebeb7-aefb-4954-9537-7fe481e39d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "297a52e2-08b0-40fc-9efa-5b4f8be2f0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01253dd0-f5b8-465f-b4d0-a0d0c9eb4768",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c355f76-cf38-438d-b933-5def0f39038a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5851ead2-487f-41cb-a2f2-6c4323d19d0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd3fda9-62f6-4e4b-a502-fd40c78f254f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c8e3808-9598-4922-80ad-bec6a0c2fe16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad25f99a-68ff-4f4f-8bcc-d144b0b16ec5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e7fcac-029b-4578-9cb2-8aa7c76b8e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "929f36e1-f82b-44fa-b051-20eed0c5295a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624974fb-880f-45c9-b126-140743028df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "137b4cea-9326-4228-900f-3c32874d4ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81737b6b-269a-4c43-8ad3-70d36a41ce83",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb751fab-3ca1-4b59-8b26-d714fe1be067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bc09b70-51d2-41e6-85bb-f62a28bd1978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebaffc58-3361-4fd5-b0f0-5215ea5ad191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54ee35b8-67e5-4513-8c57-481cd4b7bd05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a6ea264-6af3-4389-83bc-bcd8e367fd55",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b63e009-bc53-4c13-9113-c5e14cac899e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7131c37-4b81-4969-ac7a-2158b3b5272b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379ce8c1-8273-41b4-be3e-bad70c31aa93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44e82b39-9ccc-46d4-bc83-c4bcd79d497a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c9984f-b937-4d56-84ae-663fc125030e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be94eca-b3b5-4d8e-8dcd-4287b6f17e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d35a594-99ff-4cfa-b700-7710a6cb81cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0beaa71-4e9c-405c-8204-6947725ace64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "deaa33f7-c910-4632-aa67-1a9df1c20be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4763eb-1466-4057-94cd-973d18889ba7",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe73072-d208-4dcb-924a-69749a602324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbfd149c-af1c-437c-b17b-64bcc6acd5c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7094d288-c27e-4464-beb8-7d185f938ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "72fe22fc-4730-4b00-a69a-dd0429d97e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a707831f-ef3b-4333-be1a-a5e5ddd92cbc",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfeff28e-ad14-4640-b9a2-5a3285c82d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d1bb886-224a-486a-a151-729a6aed834f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "041ae56f-e3b9-4886-9d0c-ad2002fc0346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3c71d8d-2b50-4c42-863c-3453a209002b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea56c0b9-b9eb-4016-a0d8-37591c5d8ad5",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82726edc-8ddc-429f-b90b-c7e02b29551e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e829b14b-6e58-4d38-a6e3-0d9e12fc4ece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f4d6ae-0196-45cd-a16c-87bd3a7c6901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "960c07a8-ff1a-4a68-8974-ffad2cbd1022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7355acf-f2bc-466a-b423-c399d01df573",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a93c9a-10b0-40ab-a536-fa8e418de546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49b9c9c1-9c30-4c88-b28b-f7a8fab3c03a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c72565-cd47-47d2-a20e-c3053cb23477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "25e2b6a6-3848-4231-939f-ec19a6dc9953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2508fd33-83bb-4f5f-8029-1ab10a93f420",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d38dbbc-5ddb-48e5-b194-685af2569f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94423b5a-0e28-4b72-ad7f-2fa87d60d37c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fbed007-22d8-4c0a-932a-b8c75c3a0775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c9f08e0-7816-4228-bdaa-cf2a0525ea46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd97fc57-453b-4409-b1bb-9f690d8464d5",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e533e981-7d12-45db-bd6d-f360f3e80266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d0a10b3-ca8b-4728-b421-c258c9c3a5d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b963c85-f45c-4a44-a5aa-9c77a01c1b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "07af4a1e-03b4-4061-b8a0-46fb9a509f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "863c8dda-6d78-4d23-bedc-048604a3997c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa5ceed-ceee-451e-af16-570ff6e21670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75ffa591-d53d-4a28-9d11-5308ddf9da5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13f1d28-190d-4e5d-ac0c-24fb48dc0241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "107c2a8b-bc3a-4b30-bd9e-5162e7ffab83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9786b9-383b-46d2-899e-bd79f8ce871e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0030f6e4-7116-4ef6-9a11-f5ce877656ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acd6a670-729a-4af9-9e81-aa627ab1a829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4914b0-538d-4d30-840b-8319b974079d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1c292fc-f473-4437-933f-da91f84c7798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7251b2-449d-4573-ba64-c12465259f3f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98bc8b67-eddd-4c87-8361-c6bdf019d447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2d5bf1f-5796-4718-be3b-39114fdf4db6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd9fae1-79d6-4af7-8dd0-1a217d9e5ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5332001-7dc6-4766-8549-a93f824b2003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603aa9fc-9543-401b-9290-d406fe6d769d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b3267c-5424-402c-bc66-85d3529e73ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e23c8c68-d9fe-440a-968d-73836ad4ea44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0ebff6-0c8a-462e-b20e-3f14a50a87a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "926f4948-3217-4ae3-ba4e-6cea4a14bdd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3369d8c-d21a-46bf-81ca-8d2d7745bee4",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c83dfc5-c680-49a2-9f66-ebf8a2af7ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e614f17e-b801-4e21-90dd-d1e8d679493e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f33e7df6-0044-471a-8ced-dbbb25cbdd9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "359445c5-9c3a-4226-87b0-aa772cb24be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45bb94e1-b37e-40ab-910d-dd84db591cec",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4891bb3-3f77-448c-a2e8-c6568cfd79d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2651c9ef-2fef-47e3-ae08-edd3cc2e714b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83afb2e8-2606-4659-80ad-f1b6b9ec9ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "588435d4-02e4-4c61-b495-62ebeb629e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504c7260-06e9-4891-a65f-cecc53aa6920",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f59ef02-e258-4410-bb43-ad25f2e4aaaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d975070-d08a-4a1d-9068-c7cb7ea45bd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c405763-c6f6-4f0a-ba49-f0a022c18605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5c97d02-c202-48af-8787-8f2c7ed33e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194520c8-aadf-4bb8-914d-a1a9108690e2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33d4b4a-5a84-4fd2-b020-1bfa9918ed68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "742242e4-79c9-4d6f-9226-027796432ae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628bbd83-f138-4ea2-832c-1f05071d19b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "28e35bae-dfa9-469a-8fcb-d71c560a7746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ef2829-e0f8-44f0-bf1b-12002162fdc4",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe00a214-f812-4533-904e-ec453eaf7e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbf54d4f-a427-42a8-be5a-2a9e0084f41d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c99a8e-24ce-4ece-bc6c-e1e928edafff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c1e738f-bf03-44df-b6bf-a201c2eb83fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7993e9-d794-459f-bd71-ccdb666139d6",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb740848-01b3-4679-8419-ade5ef7d0fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8572ebf6-c0a8-4a0f-aa4d-9e0f7331196a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8ee3f2-4577-488d-bffb-ea3366f742f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f863aebc-af46-4575-8b26-c6554e345e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50dba5d-f793-4f51-bdd7-04005f888a98",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b55c2d-8954-4d12-b4e8-c281d5dfd00b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4eac1f2-6981-444b-93cb-de2afde26999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b212acc0-6f7e-4be3-8ee9-46512a1134c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "03bbe1a2-461f-4137-abb9-299db448fea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c14f92e-fc0f-41b3-83d4-1fdc05dfc674",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a355c018-5680-4254-bcce-af6f86e67436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aadf9304-98ca-4937-895d-bd7012687141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7ecf69-c732-46f3-94d1-d8934b48e69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0c2badc9-0c67-47ba-8f8d-b1e97c22d9ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd9f6caf-c9fe-41cc-996b-27f2337ca8b6",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d9063f1-dc1f-41af-abbf-97a197d2c61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95088965-ae7f-40df-9d02-9d65792310f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e48ebaa-7f21-4f20-a853-7b778d68157e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "92a2fdb7-eb29-48a2-8f0a-afc5b21ff0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e1f3c7-0a52-4158-81ad-de3d83f5c4a5",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4833b205-97d9-4598-9f47-1218e8070694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f6ff6d1-fd97-4133-a53d-ed2745f973a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810dd29c-7799-4881-aedd-5cdbb8029892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "88aaebfc-9e99-4dae-b5b9-610fc17b53cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1227040-0250-479e-ba36-02ba59fe9fa4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a92d21-5183-47f3-9046-e9d2b17115dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f67bc9f1-990b-41fb-a18b-344c0f38c85b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4ab7f7-b945-479f-9caf-bd7dff36ff94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "01c7cfd5-6c25-43e8-b7b7-49290fa8cb7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d25e99-24e8-48ce-b208-9e6648497746",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7976877-8014-4e8c-a613-2675f572ee13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "836b18d2-32f6-4e30-8c7a-894d1ca4fe80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c96b371-655a-41bb-9646-0840d860fead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff1e4cae-b4c6-41aa-bb99-0288291ec7a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52405f4-b08c-42de-9d8f-608694f0cba6",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5043131-0284-47f2-932c-f72ef9988690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b4d26c-755b-4012-9e70-472adbcbdede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01338385-ebd0-47dd-82f5-53e83b51c146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9dcbfa6-7657-4348-acb1-0a24699bfed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8dece6b-3be5-4c03-bf7f-f4d5e9b8360b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14465267-a73d-497c-8ced-35ad2a5e81b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e387182-3307-4e4b-9bc2-861130509e56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6000f99e-d490-4e7d-9eda-efdc57077bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0e8d51ca-d52e-496d-82e1-a03ca2ad94d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a080af-bcd3-4427-91c2-f72864d1c03a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b675d2-5ec0-456a-9722-24e3ee9aad71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2f53a3c-1359-4437-843d-9c78df02b7ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c153528c-9dd6-4d4d-beb7-9fb929166aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae84448f-c42c-4e3c-a656-817a8c89035f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f20038-b1bd-4298-8a03-45dc51edfdce",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d44ed7-d70a-49ea-b416-8b034155219c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "963e5dda-813a-4d9a-b688-d400ecc939f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd7037df-851a-496c-8d2b-f8b558858912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba85463-2bdb-472c-bb47-f95b036073f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a733cc9c-6e20-43ed-a9f3-2171337e952f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3bdd46-af60-4138-a6c3-2df308ffd32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf4f8860-0543-4276-a170-73dfa8025ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8fc91bd-0017-4051-b1ab-86ed653b190f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d12cbcdc-6666-427d-8341-2c422e1f852f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e1530b-83e6-4d67-8c2c-a37ef062dea9",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21ee24d-af93-4642-a498-1cb21821d85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2da861cc-3029-4b7b-aa2e-8e2e48dd8c6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e41e74f-e453-4e45-92d5-de6fa90d2c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5efc5eb-541d-4c89-968c-b8a281a4dc86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5911711-8f87-4a24-969e-71b201848837",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa75006-a8f1-45a7-ae12-e86263817bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58a00464-e248-4a40-a490-afe01da83fa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09cdbee-ac04-4fe8-aa0a-2fec3e44fe80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "be2b74c6-a55c-48e5-8eee-e20b5ba94070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae913f12-4065-4ff7-9915-e268c24a0635",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e9fb10-32da-4580-b2f5-53a72b925614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9de9350e-fccd-4328-ba8a-2d26aa0bc244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "113491af-3343-4594-b72c-7ace03c87c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "41e04469-ffec-4a97-b0dc-47ae10b8ded2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d89ef4-0b85-496d-a078-faa40922374a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "729dffe5-d18b-4397-9354-f9a1c918468c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee7eab6f-b772-4474-8088-861a211790a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518df840-52a8-4006-b2d1-61544cc3f84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "42a50a88-1877-4dec-ba13-7efa251ac977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1f002d-b21a-4c11-ac90-8e680b5e00e5",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77ddcb7-6b20-497a-b6a6-56de83c22ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0764b37-4b56-4e0f-bfa5-c4087de35b51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f003022b-aece-4cd8-957d-c8dba1286be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "640fd4e4-b081-4696-abde-90cf91f32059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208b8e59-c953-4b05-8b4e-a58f4bb7614c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b01f9e-434b-4530-b32c-f1479b7e2c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19caf105-5009-4e2d-92ac-7982e419ab8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e7a253-dc4f-4dab-855e-961bb3c3c4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d95e59c-cd4b-422a-9078-3f6b38a4cc1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba2a1bf-9f29-4701-a98d-38d79750dd52",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df2791d-1f19-47ed-93b3-ade2e636908c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f8f5219-8e67-434d-841c-4827e3d8b450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf6ef36-6377-4c1c-9195-49135c352b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "663271a7-65de-404d-aa43-6a2399d453e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d93b9e-5146-4f50-af39-49b1c59cc7a6",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02db1dc9-345a-4de7-8c65-7c8babc89195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a43335d-3906-45b1-97ec-d020f708c08a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937109e7-b9e2-4ce8-b4ca-79b0e5dd80a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ceb8b736-c73a-4075-90ac-808f8a5cc3d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6245b7d-47a0-45ec-a85c-05dc5fc3b1e3",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e5adeb2-88a5-4f50-ab2a-59d9290b2c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1736e4ef-30db-42a4-9675-1f907d82b4a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5b879c-4195-424f-b268-c1b236a04ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a3aae08-a205-4d4f-ad64-9fc9b7a198d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac339839-f29d-4ebb-9b5b-5b9d8ab61093",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea625ef8-b0e2-4f1e-ab42-bad75b8e2eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7868d5a8-12f7-4628-a814-3b8fdd5e6d56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0020c8-d1ec-4a60-a63c-a499ecdfbb5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4460a3b1-d362-44d9-8329-9de17ba3ad8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ddb62ad-01b7-4bd3-91df-82568272de8c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3018bd75-f70c-4a1f-afdc-fdf261926068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a09191f-4043-47af-8171-0f527b935547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa2ae66d-8486-4f15-abd7-b045957c0e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "cca11942-0f58-4506-808c-37ee787a4b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbfc0500-0cc6-4573-8eff-fbf438764325",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62da8f30-90a0-4dbb-8c53-e86180ef878e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b9e419-a26a-42b8-9ac5-7c401763f634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f59e54f-7794-465e-951e-64024b377955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff7ca9c6-720e-4333-b863-e40049bb7b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ad6c47-80cd-498e-994d-6d322f623343",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3887a7e6-7c7d-46f3-9b29-6e034b59f571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d9749cd-488d-4a6c-850c-b14e2a7a49ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976bfebf-eb09-4456-abee-b97c38bd9e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "83afbeef-cade-47ab-a8e2-d977449b6fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "517fe411-0bef-46d9-b0c9-96f60eb26f2d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6e3510-687e-4eb3-b4f0-21f0f9d963b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c55dd81d-3a90-460a-9d23-20fdd43aba4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db3ad98-c346-4fc6-8105-cd872fe65ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0c99de5-f81f-4feb-a7f1-1b3ca1b5c2ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1b665c-dcbc-44da-96f3-b8bb48bf9cc9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01de3df2-2a11-4732-9882-a032a193ba0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "104a1f29-ff56-4e06-ab12-d6a18d86854b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db94996-60ca-4d49-b048-fa44281e59da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1559f3e1-e628-4d0c-8e62-41d7e6484967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8159920f-bd0d-483e-ab03-bbc266da53dd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f9cbfe-ec56-4957-a343-be97bcd8708c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9173fd67-5f98-4fbe-896d-d664da2c1231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e257f8-9d15-4956-a399-caa21ef70248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "32fcf371-3e1a-42c2-93e3-8016af359e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f40256-c137-458d-ab4e-8afcc0fc0657",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5a5d93-190f-4bba-9283-2d9211a7ac51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "474624c0-2e9c-4ee8-b5eb-1ce43147f5ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89b7ecf-5c08-4a07-b7ca-18fa27b0874b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "63e50cd0-b87e-46f1-b9e3-e0327a6db5b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb0f7ddf-2130-4cf5-8e26-dc267e03576c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2758f694-42e9-42be-92d2-9ad37a22a865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "320ed5bf-9a45-49dd-a834-bfcefa95a59e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9a0358-8953-4d93-a0c3-eae7c342c527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6948081b-b23a-4dd5-bc54-7c2a42cd7d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54f6bb9-52bd-4ab9-accf-d7e9d6509aae",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f77e6bd-97c4-4276-ba83-8f84a7d8e6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d343d29-8478-4272-a61b-62f12c1771f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209f6ebe-f19a-4a79-9fc2-07a2e0c3af1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da3dbc81-47af-4deb-941b-2b8324b8f862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb80743-3b45-4bb4-9eee-ba5a3c0cd528",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db737d59-a71b-43b3-961f-96f7724b4ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d72c760d-2dcf-403e-84b5-d049087df218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b3c6e0-5e87-470d-aca9-5879896d54ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "67a4bc3e-5bc3-4eb9-8938-4f01ba713f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3792eb-d132-4d9b-984f-72dc512698ab",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dec871e-ba9b-4063-b323-fec84dd126b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f116878-61ab-42b6-b9af-99bbdce830d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b197d26-b9e5-453b-bdab-1c591342677c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6925cfe8-04a1-4153-afe6-ee290a21e8fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca3a82b-16cc-45ae-a376-c8eae713f37b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe52245-7cd8-4531-a2f8-cecb4a6556fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f4c0e94-c064-4a75-b12b-901adc30a99e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5929df-b3d6-4430-9c3f-5362a4349025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "20fe0875-b640-4488-9e03-606099a27703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37cf2a5-b65a-4a9e-bee1-c13ff0dfee27",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b02612-a9d4-4b1a-a344-f6f87d64c540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92b71478-6319-4c54-b079-611a075a0e15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c39917-e4fd-4184-bd19-3afa58cd7d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "28895bd2-0798-4948-8f29-f72f064dc201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a48071-ceab-4511-a1a6-b09a0c872f22",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20416a9b-d6dc-4b7e-befd-532c4c71c5a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5daf0c69-ef38-4214-81f3-a2bc7f9f7fc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211428c9-8e7c-4321-adf9-e92f37378d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "45a2c199-2d52-45f6-bac9-ef639d7712ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ba9c3f-3b52-4e3e-943a-67d52314a007",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cbca815-8a53-4e33-9cbb-f029b3ab1a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde23bd3-aaf9-4a47-9066-3810434ba5ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d75023a-1ae5-4f01-976f-d6afe49f603f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e123da13-53dd-4fcd-81c7-987b3aa4f582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7aa311-5e0a-4d42-a23d-664cb0f82377",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55edea53-f835-4b77-a8d4-c027157163e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d8356b3-0dbd-43f0-b1d2-a1d20cf19dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd02c67-fec3-4335-9452-35554b88a33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2edba328-b856-4ce3-9c4d-b508c1ed30ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b73288f-16c9-434c-ab17-d7c54b9335ef",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b751f56-fcce-4625-9ed3-3617a1d41ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7345e95b-7569-43bd-a539-860e03c2a10d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "566acbb2-8c90-4bee-b173-6a2e6a8f68a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "854d822f-7efb-4b0e-a062-7a8cf83befde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856aa937-6f41-4246-8a4e-182ba0e147a9",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83611090-e5ab-4900-8a93-9ee702cffa8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c04ee663-67c3-4748-9c44-d5ded569d0ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84cad86f-63e6-4005-98be-d799b178b554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "08a146fb-7a36-46af-8beb-d0cbc69428a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1928e737-cad7-496f-b046-51eb8b3507de",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d87b169-9d65-4eb2-8f99-d3fcf5d1f42c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbdf565f-677a-4406-837a-97f55b95b56a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93ee5e7-4e03-4b92-9a84-48f2406ecbd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "347f2442-285f-4f5f-acce-5660a32c6098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea1c285-3fc0-426c-bb3f-e2c6bcaad77b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a29f1e1-d186-4d97-952c-c229d5daba6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac2541b9-0353-464c-8346-482a6d493828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adceeb54-94f1-4907-a651-84f9b82ecd18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "70041d72-b6f0-4b76-95ca-43ee2990124a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb5d4a8-d25d-4c76-8eec-e43c5715f1a2",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2508722-f9fb-4992-adc9-e71077bcd5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84c04486-4f3e-4c2b-a1c5-f1ef93af4587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74768cf0-cbc3-4121-b3fc-3d534e3cffa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "588f3f28-ecf1-453b-b9ce-951186df5eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa29a1c-9a7f-43a4-880b-3db7ba9b4293",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ee62b6-cd9d-42c9-91a2-d094d128e9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "123f6e1f-9d18-47c0-b72c-b47e7e1faa4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86874ceb-cf83-42a6-afd7-36f709fece57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "366c633e-6dad-4ef7-aaca-6727d822b779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf743f64-c936-4efc-8e08-a172423b25d5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d13d63-231a-4983-b7a0-f0cff02efe98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb78dd14-24d8-4fc4-b917-92fcd67913dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e59ed6-535e-4c11-843c-01807cf79103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbb29683-d1e9-48d6-8378-fc03801977d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55961395-431f-4ac0-b4c9-293c472aab29",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2657d6-40ea-4fa0-adbd-a7a4d3d9c5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70dc2108-bff1-4412-87e5-f564a2a05cef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f74a8ff-a904-4ce4-9f8a-fd9da81190ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "334a2e01-6835-4e89-941a-3433b71fa6c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a3120a-de59-4e62-8953-3723300a7e22",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa534092-c6c6-41fd-874c-c50fa761ed58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce6d2db-bf97-4eff-b3a0-34098364db40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "730bc6ad-b072-4a1a-8f1c-f63729a6c86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "978cba78-7209-419f-8769-0cafe3938e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d57ab4b-ddc7-4250-8bdb-c9d38cfa92b4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15918f48-4e41-449a-8915-348225274417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ed371e6-b2b6-4a34-9bfa-b64d863c5710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e8d6ae-abdf-4d80-b1ea-37ca0328a1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "32ed4e4d-06ce-4204-9bca-dd540e4e4b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ceb7239-a8dc-4b95-904f-fb21f2168e61",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "079bd863-30cd-43b1-8403-47b530ba7b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d255432-e4c1-4707-aaa0-b3d93129a38e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8701e09d-94ae-4490-b57b-371285958553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef3c6a37-1fc7-4206-bd32-e2dbc542e9cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2355d1a7-9e9b-43b1-ac87-bb8b98214ebb",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4327f47e-06d3-4bd9-95b3-fb0fb9ddc489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14f7e6a4-f1bb-49e3-9952-f342b995be37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23476980-2e6a-4894-ade5-c304cd1784c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc93a4ae-4a3a-436c-b7b0-c2c21018eb3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec02edd-db95-4126-a460-5fae6b44f041",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "748579a0-56cb-40bc-98cb-360f77df63a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7ab708-3e06-437c-a0c1-8f6c6cffd2ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd87ade-15a9-435f-84e3-b7757a1ef0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2ed6c8a-245e-4a9d-89fb-1950125db582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd280d05-e108-426b-bcd9-9c44b6bbd56b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef38022-d9a1-4857-a28d-dc855bd84517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b51b10b6-6b98-49fe-8c61-eb208a7f6581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00cfa919-b6d5-462f-ba3f-a1d7fc0001e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1a304a0b-7452-4d57-bfde-f0c3bf84e7b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f09eda-dfa4-4c4e-801a-3c5c120b07d3",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e91988e-d2e1-4f43-8858-ff3058598259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d06c8394-5815-467a-bcc0-5880c88ca6a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6719f00-9b91-4be3-9c56-9fce318367b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dccea783-73b4-4ad7-98d1-85cca60290c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6589965-6758-4b8b-85de-d8837dda98df",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22d6450-c193-418c-a2e7-d36a47264be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c19e5497-b122-4aea-a857-98be49584ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1d5f99-a0a9-4b1e-88e5-dffd841a2402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "03fd7791-d61e-4b71-a24e-bbfe062b8039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785e94cb-5651-4b62-b3ab-e685f4312079",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6707d7a-2911-4a07-85d5-cffdbf6b6a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b8691f-ab1e-4434-8f4d-34872039e054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b648ee9-a9f3-4d10-9ec2-46fd61ce1791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c98ed64-3f30-40a0-87a3-4826f4277ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c94c697-1e39-41ec-b148-cacb2ba736c5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a88aea-0fd5-4323-b9af-5f161d1a796c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1cf2488-d5ce-42ea-bde1-83c3b5bcd921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a65b83-3777-429d-9cd4-1048d935fb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "92949c38-91d5-4aea-82b1-d4a7869fe931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b05b98-a85f-48c2-9ec5-8cbc7513ab95",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb043dc-9286-45ed-a828-bbc80c1a04cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3022aae5-8450-470a-b90b-ee12834621c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0e1991-5998-43b5-b5c4-b2f77569ac65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "afe8dbc7-be9c-423c-886a-27fd22da39b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ef3328-0cd1-4f8a-9211-6bc13e81daaa",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a318e4f5-0ad7-4329-8099-4a461335178b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c351b9c-e89f-4e79-a44a-dbcfc39373f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b044ec56-1c5c-47f3-b20e-eef8d3a40c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "551b41a9-92c8-4d7a-95f1-1a49dfb71f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492a59ce-79ac-4242-8988-46625d7d7bd2",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe285d9-8bba-45ef-aff9-313a3e8da9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "24d70c81-807c-4f20-8e94-79dcae0cbae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393c8640-8eb5-4d38-b0d6-a4845aeade1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "49627011-f1b0-4c4f-a3d5-692e0b81d19a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2ea559b5-ad28-4393-9432-c9db69cc8e53",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f4c441d3-0ddb-4b92-9bb8-857ab0560beb",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf4a112-7791-43ec-a4d5-b9ec88fd521c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b67e133-7769-4d58-b030-a0fb64a8f3d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425a9d4b-1561-43d0-b077-538ce35f8fcc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e57eeb0-7236-499b-bb65-32aa55141fa7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c586904-b031-4312-af22-532dc3d14ac4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "274eb0f6-1786-45e4-a536-9e5b2b41ab1b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e17ea63-1891-4a9b-9592-0238a183cb2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f0e1786-0a29-48f8-827c-eb4cb767bd92"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "27f083c2-9db2-4c2d-99e5-74c70567f894",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9ac5475b-b561-4d04-ab54-059eb38207bc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "03d3f058-b976-4178-b163-967992283d55",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aa40d648-87b9-4153-9c9a-7e32378653df"
                }
              }
            ]
          },
          {
            "id": "10ef7499-6680-42a9-807f-a223beabc314",
            "name": "Positive Testing",
            "item": [
              {
                "id": "78cc313e-7e06-4ae4-bbbd-90ecdb863509",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e453dbc-b40a-4a2f-882e-a61f783ef6b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5c7d1b8f-b586-4ded-81b8-de70ea4f5c69"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81488765-0d06-4668-bc74-4f418e998cd3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8e90753b-e215-45ad-8c7f-8e8fa446e1cd"
                    }
                  }
                ]
              },
              {
                "id": "b1f8d8b7-8dc8-46dc-a5b6-54ab64dae129",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f732f2b7-43f2-41e4-9e09-c0ce579b4700",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2a4229f5-8f50-4322-a321-d41f30e43972"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa2651ce-ea22-4727-ba6b-ca63aee7b891",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b8d0715b-ef62-4c49-b564-06f633abf9c0"
                    }
                  }
                ]
              },
              {
                "id": "4154bfb3-41a0-43cc-a4f4-435c6fea6857",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7eb2dcf7-e802-4176-9b85-ae46d6913037",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "418cfebd-6f66-43a0-8168-90eff8f6315f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a39e0999-02d2-4ffe-85e7-a1e6dbc4abf4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7d1e4e94-395f-477e-a98d-48eaff3a5d04"
                    }
                  }
                ]
              },
              {
                "id": "a9bdfa93-b877-4175-b96b-4772b83ab221",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "01eef67e-4a1e-4790-8e02-263467af76bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7288c8d5-29a7-49db-8dca-06b3a754780a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6b03848-f6d5-4106-966d-2ec32dd402bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "fc9bddfc-74e5-4b7d-b092-c650cc28ba9b"
                    }
                  }
                ]
              },
              {
                "id": "b8701243-11a6-42ce-9632-1de677379e49",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ec28915-1e34-48d2-94a3-17ebbaa11ced",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9af52827-3494-4338-b620-9d9dac23d885"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85682dd2-3239-4676-8f46-d6f679924613",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "83fa1b2f-a309-493e-a765-dc520831c83d"
                    }
                  }
                ]
              },
              {
                "id": "3923c7df-6aa3-4aa4-925e-2937004803e0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2470c3c-d2a5-4b72-9c9e-102f10d4bfa6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bad3d9a6-fcff-45b7-ba45-79ad5472db2f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c268789-0e54-436a-b10c-2f3dc4f3e316",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cbba840a-c635-4d10-be32-cbf53f1469a9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d6a5973e-7dc0-436f-a932-d127ddb37b98",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "87640fc8-98b7-4f58-8cfa-1c6497a59278"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5affc814-e320-4dec-afa4-4c3907ecb64e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b85316a1-bf0c-4da4-8cc6-550c23cd2c2a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "06365a41-4f2c-4d82-855f-dc08223d078c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ebd20d21-84e1-43e3-ac44-01659f37866d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ebcf516-0741-4af6-9426-d0f4eafcc989",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d9b51ba2-7e15-47ca-a5c3-475b121037e4"
            }
          }
        ]
      },
      {
        "id": "4423f7e5-2e41-4767-b6ff-01532402b450",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4ec15dd5-b30b-433a-a179-98baa7b9b2eb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5ac7dcb8-3167-4c0a-8df6-e71ae70af9bd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2dc2dc8b-cafb-4252-9792-1f2d0c475cf1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f31f40-553a-4664-9bb5-e69ad8b4df3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "595cd4d7-07a7-45a9-b52b-d82b740d7df6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778fc028-be6c-40d7-9b70-c40b1ebab5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e30ecc6a-ae09-48e0-ac01-d33acb0cce80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "375fe6c6-fed3-494e-9e76-8068eda2445c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9ae59f-e97a-4888-b135-0ad09b4cce03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b83fed0d-904d-46b1-a591-8722a49c903f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec659f4-09a4-457b-9da9-9e3717d60e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "db25663b-cf6c-452a-a2b3-984abc6eef67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063fd6c1-27b7-4ded-9b72-37c7399b9b66",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6dccae-d190-41fd-b972-694b9103152c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbc50d53-e890-46e8-89bf-ab603792caec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d35774-30d7-4560-9d6e-4dcf239db925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12d69398-cb35-4df6-8813-890d246bb83e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d605e04-2216-4387-90bc-4f3174b5f564",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e901c1aa-c653-4495-bcd1-710faf8e1374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a24ad01-fff9-43c7-9c40-dc9ebfe37432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e7444f9-4e4d-4e54-bbf8-1f2167d593d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5f850b5-1cf5-4324-93ec-bf847a897f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957ec666-39bd-4cca-937a-d57cd2c832da",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac05f6e8-66b9-4a3b-98de-20bf5a5aa9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cccd012-70d3-4c82-95e7-7a63dfdf9003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30e0c0b-8220-4f06-a426-6e41e9cf76dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "62ae55e8-588b-4f73-9ded-02f23e6f617a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32151045-0c40-45d8-92f1-a34c228c5733",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c82ddc-423c-483f-b172-02632b1dbe10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef731dd6-f331-4bca-aacc-360a4bbdbd38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff0d1e3-fcb6-40ca-b9a4-d0c7915775e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b14d0bef-3d62-471e-a1cc-0b8a83a4d96c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f77e6b8-d02f-4348-a165-a6a390c1b6b6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9783b234-3af6-44b6-b7cf-a0187cb92318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da4e0090-fb43-40f4-8e93-3acb1a59c90a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ca820a-afd0-44d9-9323-5afb729f3a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0858e31f-dfeb-4a6d-a300-bc8a996a52bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02ecdbe-6744-4c93-a332-1d5ff856a910",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3dac72-304b-4555-8d72-bf0f5b69f20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "138d7bea-50af-477a-ae31-7fe2be33e8f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c34a8b-badc-4e20-94cb-3c5c094d014c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74d6e10c-4b2b-499c-819e-c294e282dfb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6c2c54-6dd4-47a9-90b8-84daf56419a5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f71cc8b-58bc-41b3-be38-d6250bee3b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8260e19c-5b08-48fb-bf4d-22a963bf2d77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b860933-a7ab-4c92-b3fb-2da038905c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8275d10-2050-4892-8601-65dd9958556d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584f686c-8e84-47ed-b358-6a321b13d37c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74ae5ef-e693-4fa4-9187-f65059b546c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab94c3c-da6e-46c5-9f18-a919542a9f9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a559a0f-2ea5-4af6-b674-9c57eae01398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d750109d-a7b9-4963-ae1a-7b824321de7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89b7709-2c5f-47ee-a696-cad53f4127bb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cfdb07b-db87-41f7-83cb-64b0c7ea231d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9fd961a-976a-4ab8-b351-6d65358c4bba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6743116-9a06-41b3-97af-78fb208e1fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "76d3634e-c01e-4fb8-b71d-4c0def6589c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f95803-db21-4fff-acd8-22b73a9a95d0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3efbb7a2-c009-4bbf-8da4-74dbb579ac5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8596929-436e-43a4-9ad4-cd1887f51dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c10cb3-5df3-4aac-8e10-671baa50ddbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0c041b08-9116-44b2-af4e-90e52d239212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4917e6f-d111-43e3-b49b-0feeb8790e49",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b44dcd8-dda9-4816-9495-7bfe9bb1a607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9262569e-546a-41fd-8b0e-3186d1e0488f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c90abc4-d10a-43c8-9276-75bda9149a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e73e4f0-8d0c-4401-af11-c557b1857cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0a0fa7-3c8b-474c-a431-e961c2f7084b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30afca82-2c4e-4c7b-a5ab-ac812025c138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ea65e3a-5340-4baa-ab8c-7a1ce74f810f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f30584f5-7f8a-4a3e-a108-68c92f899aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9476a83-f8c8-4b0f-b790-42448c3dbf35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a404a5f-d815-49ea-be06-67729c5de21b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3830e3-6d71-4b63-a7cc-d6494b4daccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0a8f345-775f-4856-8090-f19fe837c2f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b10e5d-b8aa-4bf9-a73a-4ae43ecc5450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d774a799-78dc-4efc-b21d-000e4b867dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df816086-f99d-4868-be28-6e519837aefe",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82434606-a821-4e02-9e71-0e68a0bd008f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e416314-6450-42de-92f9-2129ee82dfe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33216bb8-c1e8-4f00-b167-9289307de621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ba82b0f-9f84-452d-8563-2e1051a04ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e120a2f3-e1a5-4304-88ba-c7cf43899610",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "079dc24b-aa1f-4c83-8be3-6e2e133e665c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "590f6ad3-74c8-438a-b808-9faa310cf83a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "564fb616-e57c-4f0a-b354-0bf7d4a60655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf044b8-2a6d-42fb-a65e-40e07cf90348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4453070a-b14d-45c0-9b14-23ffb9f38836",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08debcfc-6f85-44a3-a7c7-a0f8c15f70c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc753481-396c-4caa-b4f3-8584ea4eb8db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c97b13bf-a412-4883-80ea-9e0f8d33122b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d048b2a-f32d-4e50-bcf2-cb9e790669fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a64b9a-67ff-49af-bf7b-7bf25a1fd12c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bdaa379-b9db-43f3-899a-93266a39725a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18b62108-9ceb-429b-86a3-abe1ab85a3aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94aec0c2-ce11-47d7-b5e1-c684bd0c7711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7955c6a8-50b0-4d09-bfac-834c82b50174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43643653-4f54-4ec3-9dec-3d1974179ef3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33404f0-4db9-4c70-aa61-6f9f35b9c317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37e368ba-45c2-40e7-acfe-c5f2023f2d2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1772b5e-ce9d-46d2-ba9a-53452cb0d747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "522f49d7-cd8b-4fa2-bf35-c79e38c84b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ccb6d67-1ae8-4fb5-ac8e-36385864dec0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27419182-f1c0-4aab-9cae-c570580898ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83460964-8a92-44a7-834e-beba5c4f8f04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e94822-1ae1-4b22-8b0a-ad6d4b0cf72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ecfd435-27c5-4e53-ba4b-51a0dd927f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc4c44a-267e-4fe4-b9dc-c4289f269071",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e047dd5b-3339-401f-a29c-0f01a6649fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f6e0fc1-c9b8-4845-ab81-e9a62d6b2336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2c7263-6178-4502-a756-612f55400383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2aae529-a21d-4b19-a271-31772139b4c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d57569-5457-43c1-8b4a-18f12cadb337",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ca5e45-a1ce-495f-a689-dec31f8fb473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c0fda35-9e4f-4ce5-9136-dcd205d69648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d92d979-b124-42ee-8628-8305f89c5fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81a1cac8-c572-482f-961c-248b11124cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4a0c08-2b16-4772-8f0b-839dec56365a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03aa41b-cdf6-485c-9500-4f532f238c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a74ba1d3-b1b6-4773-a9f1-97201a200839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f592f1c-80f4-4843-a041-2828ec5409f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52006ec7-0a8b-42ee-b350-f96f59ab9187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3547b3f6-2faa-4a0f-84b1-660b9ba0e4e5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab445435-f834-408f-a1c4-5113f63f65d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fee71b6-0fb3-410a-8f33-bfe13988da54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9950f3bd-5fb6-4f61-a5cf-8ad382bd1ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6dcefdf-1d5e-4ddc-b1be-05dfab6eb64d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8836d9fb-3652-47df-9c2a-fdc439b715b4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5215e859-1061-439c-9e64-4b525ca41a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f4135d2-60a0-49f6-a7f5-3660eb2ba8f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e08438-1c72-46d3-aa85-997535c48a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97af8e69-f265-4bee-8765-8a77c23e06be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aec18c9-54bb-444b-af06-1b0d42f2d089",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a68529-5e9a-474a-852e-6e11d2f9f717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd31037b-2c77-40d2-8d8a-dd21c5dd4461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd117b49-373e-43e1-8eff-360c5d654c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "413b8cd1-68b3-4b57-be4c-496900886f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff047cf-1505-45d8-923a-7f38bbc8f7ca",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bea0884-102a-42a5-bb32-fe00d00c42a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a287ebcc-30aa-45dd-a735-cb01d23b0233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1402770-5bae-4cc6-8342-33af3eec3163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59b6ae40-945b-48c9-8928-82a499f7d12d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14fc78f5-3b77-4b80-a9ca-1fd82a313227",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4027c1a-b315-4eda-8639-7c48bbf9eb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8b182b4-929c-474b-922a-1e3c782d96c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b745fa1-7d79-46f3-a15e-58c14a298d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04e99a0f-b033-498e-8e17-61d8b0f30aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74577057-df00-48ac-b974-9fec703bfbed",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ec158b-80b2-4706-82b7-7245af175b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3afc7c28-9b59-405a-a947-651e054285bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a364ba1-e4dc-4c2d-bd58-c5473dbbbd12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77a2f3bb-4d11-4e79-8071-4518a8745e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6667864d-59be-4552-ae89-d4f26948399c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0e5e44-2bdf-4e1c-b280-fbd8ecb536a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "558be85b-512d-407d-9ec0-9635c5e2134a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b8d70e-0095-4ef9-9726-34c9359e6de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd5a5c02-585b-449a-92c5-f2d8807d92a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5968b50-06f0-4752-a892-21af27ae59fe",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "311ec129-bcff-49c9-9842-def3e8ce7de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20593561-c986-4054-b153-777c114cf770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f755ef0-502a-4000-aa86-c59cea9d93eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7f05c28-4e0d-4715-ae07-bc2e3b356d14"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "76a02d3f-bdfd-4148-a97d-b779c210c352",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4f02c9ae-fade-4d41-bfb0-fb2e67469500",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14fb8abf-a724-48ca-9ddf-de30995a9301",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "84faaec5-87fc-4e1a-9945-fc4310a75da0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a55a6f9-30c0-49af-93bc-4b905edc967b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62514dce-e365-4909-8fd0-387c140052b5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18fee656-df4e-4948-95e9-c114e3f4701b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dff15a38-7a91-4172-bac1-1d2738c435e3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "35be9c75-ae14-4d3d-b495-da501bf8589a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9b0b4f5-445b-42ce-ab72-26771380c78e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "922d9bf1-a3a2-4972-ad23-724653538ff2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "78f64982-1eda-4a0a-9f4d-5fe8a7d7d1ac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf4f77bf-16af-484e-a420-febd3f86ab32",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9f7d740a-9c55-471d-a16d-c23a7b72b2cb"
            }
          }
        ]
      },
      {
        "id": "d2b684dc-1e32-403e-a820-f4b45ed3a1c5",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "2955869a-153a-4b0b-b935-78be2f204614",
            "name": "Negative Testing",
            "item": [
              {
                "id": "df005596-e6dd-4b78-ac36-6f8d65a539fb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "921b30bb-0620-41a3-9f02-dc53c813011d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87af83b-288d-4fae-b866-43b7d76b0028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79917bbd-8bbb-44cf-9539-e0d499537396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6cd311-e4c7-4ef6-a5bb-f7d3f25f1de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "223b6036-f726-4f78-9f0c-4ba627712d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f830e04-3f37-451d-b16d-0bb0d55a9df8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae21273-7ed8-487c-8ad7-2741f8a5d3f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9fec5fa-c866-4be1-92ad-780e23f46e78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e7f9ac-59f2-4bdb-9196-a8522e953dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1175989f-f055-4452-9367-bdb66fbcca2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57e79df-d242-4d24-8feb-852e8ff1bebe",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "253aca1a-0c05-4b0b-ad4c-37bb3c18ac75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81b5f2f3-5436-4874-939d-8e518c69f2c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242a16f4-a3de-4b94-a578-3114db9101b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "249cfef0-9158-47f4-9845-733219e07e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88e3169-3f32-48aa-9c04-804701935af1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d972dd-5c93-4c68-98ce-eded4132221e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0462ec34-1d8c-4a5c-bc46-35785ff4d774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde80160-1f54-4dac-9e94-fdd295aa5688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdbcd55e-33fb-4634-9b5e-d9a739f92ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232cb6c3-5181-4149-9e5c-e8cc3d60f3be",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "993eb2e7-8d68-4b14-8971-878bc7e4af0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48eb713b-73dc-447c-ada5-92dd70d8f581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d11766-1538-4da6-a99e-615d05309a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "67324b3e-56b4-461c-8719-cf9abc6cfe3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b45b0f-5787-46f3-82ca-2fc7caf41e2b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de62720-e6d0-462d-adfa-9b472d2a495c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f4631ec-aca2-487b-afb6-c6841993e20d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845e7df0-5a78-4c37-b58c-b459736de852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "617b8339-0067-4127-8a4c-02ddf6f365bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72924d8e-7ab6-4694-bbc8-45f78c564df6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c656f4a6-8121-4b2f-907d-fec702f962d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f44c76a-e4bd-46a7-8f41-8d5a560eea05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c130f0a-a2e5-4a77-a147-f06230d022d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b26a3036-aafc-4eb9-b271-e608477d0c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f69bb88-52b3-43b3-858a-a12290ec2732",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58df8e00-e02d-497e-9573-826bfd07c380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53be206c-e4b8-4fed-890e-012bcb100d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52062596-40c8-4d37-8d6a-85386485d76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46810653-0a0e-47ea-892e-ba159cc6e124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7bf972-dc24-40fe-ab70-58a43b7a341d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d299222-b5cb-4ffb-a624-31ba32b72d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f94368b4-ddea-44eb-aed2-3de323fb555c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b498e21-8866-4a61-a60e-e226ea743926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1642807f-10bd-4ebf-856d-cbc0874c023e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931c411a-cbbd-43bb-802c-104a8f1f0b4e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "655cdb09-4f49-4319-9369-8c3122a52ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a1cec6-0485-43cf-8ceb-7042b16d7a39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e245c2-8ea3-4a97-97e6-3e709e560c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "49eac0de-b113-4359-8c0b-5614c89922ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7374389a-2988-4919-9760-f53477fb7c46",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98009f1a-b8cb-4cd4-91f1-d03b7792140c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1d6f8b3-9269-4313-8ba8-f45cafff2aae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd9bef6-a29a-44fc-b9d0-dec590b89770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d7b9c5af-deec-4968-a119-9eba17569858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee32a1fb-1ee4-4023-8bbb-59e52cdfd002",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a4210a-7d9a-4b08-b747-f51a807e9f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c668257-40c0-4c42-b357-9f5e1bbc7ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb21f83-55d2-4d3b-a969-70e7e34721e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bc0f920f-88ec-4c21-942d-eb86d85910a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c25be57-4b2b-4d8f-a99c-ed09a301aff5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "057ff610-5410-433d-82c2-ef725996c075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8414d451-801a-4a98-a42f-78bf8938e227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc83dda1-ac70-4ce6-9d2a-797548e66979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3c2ae61-5ceb-489c-bf71-24b18db9d969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422c412e-4401-47ed-8974-c2dc83f012d0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8306ed-c423-470e-a381-cd05267ef667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a919791-e8fc-4321-895c-613ec0b40688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa3ccce9-7c76-413c-b9e4-eb514a7f345d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a77ce17f-bc74-491d-915a-29a40c484fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d150dd6-20ce-4673-8f54-bfe4f934cebd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8eed3eb-d368-4261-b06e-dcc83ffdf9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd14b573-5483-47a7-9506-f820d32cb255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f84636-52a5-46d1-a81d-a24a42c2dc83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2575f9d-b3a2-46a3-ba07-1f7e37c2f1f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7a9f27-bd63-42f6-b1e2-2a413187a24e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db816c73-3c13-43db-bee3-51b4224ec0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07dd9700-b56f-40f7-89e6-1d89fe192ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abdb792b-12d7-4393-b660-d3e8d8fccf27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c592fcc1-fe1e-4119-9a0e-6010ce89eebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f706011c-80df-4478-9507-c6743624faab",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "724878f7-a285-4f62-ae05-a9248cfab3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "238c99cd-da04-4b4e-a5d2-97eb2b5378e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f4c1ff-02fe-46cf-8f6a-8365eb665564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "97ec3519-02a3-441f-bc8f-759e68718fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "209c0518-5f52-4814-a049-2fb1f3656981",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1792755d-580d-4730-ba0b-ebf6c7191a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eef681e5-d3e4-40f5-9390-cd56cb083650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad6b1f6-60b4-4e24-ad4b-1ba08001a509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0d66d83-2f19-4253-906a-0619cc972585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec7b603-a745-4fdf-a643-c7ec8a43b8df",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c7df0b-e91f-4f1c-8035-9053da33c7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70f7ca35-6042-4c5f-8d29-6185f0189377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b7888c8-3ae0-4716-9af3-92629c962849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "043db224-b088-4f3f-a4ca-856f99911ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c93230a-e9f5-47a4-ab31-8c899b7fd267",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "986a500a-55dd-461c-83fa-0c4573f42b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b73f080f-45b7-49d9-ab05-ea166cd8f68b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7094d93b-a1ae-4176-aab4-2cde7a95168e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df0768db-cdbd-44a6-8b98-d6c386db1c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ede4dd-c418-4eeb-a344-93f264dc1bcc",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2765c8e5-7508-4ed1-b58a-6f60f5652942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f5e5a63-76ad-4c5e-96a9-18a8e19b044f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd0bdc5-b3fa-413f-bc75-7f59fbba47ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10a2395d-3a6c-4cb9-923b-e23fefb07193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ba054b-9517-4eac-bed8-f947ec679d75",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8eda09-b217-4584-ac54-169b0f3d75f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca015cbe-ddc6-4c0b-8c6c-4d209fd5a98a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c51f0bb4-40c7-4b96-99ec-401e740a27d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4219c1b-d5f2-4250-b2ca-83c509f593bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11cb6dba-2a65-4d9d-b4f3-9a6ffca8b354",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c7cd37-0d0d-420b-9a89-addf5a7bb0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9616fe10-9697-4cbb-9799-f747770ee96f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1571c718-7aa1-4474-9cc2-75e045641df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc206630-d699-4a83-be78-cbaf4c2dd277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e96ae19a-7b9c-4101-94f2-1646ca382634",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3f70c5-5219-4bd8-a862-b9a4b7870e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b30393c-a330-4d2a-ad0b-52a47dfd3a92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02de048d-9e7a-46f7-a112-2021f098f947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a6ab315-60ee-4e4b-895e-7806c35ceb74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e0efb4-ec48-43d4-a97e-39a78e23596f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd30290-917e-47a7-9c95-335850c8dee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c63d5258-7dd1-4fc1-af7e-7607a4ba918b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71bc18d-6798-48b1-8d2c-8a647399c7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "739344a6-ede9-4e9f-96cb-ce88ef1c3bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f368bb-1d5e-48ef-95d7-049f19e5eef3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f82b352-e4f4-40af-9734-3bd012fdfa91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11b72f18-1878-428c-b5df-a245359277ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9cd4046-9ba5-4076-8317-c71ae53507f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ddee8b9-3fda-42e2-b31b-4c433c592e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81544b00-debd-4fe2-9afa-f89898dc8104",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7faaa4c1-5eb0-4a17-b25c-df4222def136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c11b42c-72e6-4c58-8819-ba3cb9cf7d85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a919dd-b114-460d-b904-53acf22c533b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c55f3efc-226c-4777-afb0-3bf1bc89221a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1cc3b3d-c537-498e-b0f5-d635943a8564",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22065e2a-51f8-4d3d-8d86-8bf511127bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "736e67f0-be85-4797-afa3-99290bc2cdcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f28e8f1-cff1-4ca5-a0fd-8d2641ad552a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c31b20d-d161-4163-a05c-d62df98610c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2725db9d-3c2c-407b-a074-8b6cebb5d0ca",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c898e9-08ad-4a6f-bacf-a9e70b7b873a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "208cc4e7-b747-4a80-bc73-efa1f3c40e43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c9f4ff-5cfa-4d13-89c4-1d6cce4ff0cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01a629ae-a550-4c40-be56-4060ac5daa80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75cf9e16-137e-49bd-9b3b-8c91abf2e9a8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682a1dd3-569e-41c6-b33e-809ee447b5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f02f6118-f61d-4f67-8cd8-55e6a224a2b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3453396-3306-4d73-b4cb-c2c91b0bce7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18a65c4a-8ced-407a-99d5-6ebded99e66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e8dc3b-e05e-4e7d-ba97-424d6bfb005b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88de935b-b763-496d-b752-68f6daa9d6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b906e233-2ee6-47aa-b178-59b6433d8a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1916df73-a862-4abd-acf5-12884a316e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe9902ff-ed72-49b2-8d05-6ac8fc85e759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5cdd5e-43fb-4209-aae9-f2defc9348c5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2843fe5b-5915-437d-987b-393ef58b80ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa87fe22-2569-4b63-a49a-b8a305f1c5fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447d0937-a082-4b07-88cf-e43b2dfa20bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8bec315-2160-4955-9fd4-6093d6907f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08728369-1bf5-47a9-9812-33d693970f26",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c0723e-eec7-4b4c-ac54-22872de02e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "437d55dc-8c90-4489-85ae-5eb059149df6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f259a84-1c4a-4755-9c60-8e3b63aa91e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a205d65b-2eeb-4f35-ab5b-2aca1633b208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62169ffa-5939-452f-a844-9c2a8ac2de37",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0083312c-424c-4e45-ada0-a21d59ce9f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c31adb6-e784-49c3-9e5e-306bbd4bc612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faffd0c2-94c5-4e10-9b78-2bceb95c6a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "431aadff-3489-4cd0-91a1-d4cf89f1b1e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cc0ed8-6649-40a6-b71a-2ff46902f01e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18804a91-aa3a-4a63-9717-27ef40fcc1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a66c37a-6472-46c1-8e40-80ff6f3719ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563e0648-b73e-4af3-a71b-b097292195ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50ba893f-457b-4529-950b-f16cea9c4444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3f8525-4a4b-439b-8ee0-655880d8e075",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d7c6cf-7a11-4ca4-9646-c77bf71ec543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6685df12-2565-4d22-b260-430814d5a66b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca579c7-bb58-4b74-911b-94bea7b4c47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71dedf27-e77e-4faf-9904-3cf0007fba4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347178bb-c118-44d3-8715-024b5ca222db",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9db6d4f-165f-4e8b-b34b-4dea03357529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d720d598-4847-4086-aca6-48464f2a8ee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a604d7-f2d7-4c33-aadc-d3b505c9f735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29902799-01b4-428f-bb9a-0110e7fcd9d0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1d619c6e-3ebe-40a0-b4bb-601a3774fac4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c833579b-44c6-4ef8-956e-0c3a5db9f202",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1ae21e-8ed1-4305-bda4-d3fa5e5f8740",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e645f5ee-e8fc-4245-aa60-e350b46351f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e83d39-b74b-40c8-be69-5b70f2de640b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af25443b-0868-410e-ab48-228b799664af"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd50f716-d1a5-452d-a7d0-d368158d175f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7717e9ac-32dd-4a8c-be50-e0ebc7c59cf6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "677c70ca-1681-42c4-999e-ce3ffa5c8ba3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "436fcb3a-5203-432b-b275-a081f4d1f2df"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7f1e164f-e0e7-4578-badf-1755d19f7429",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "791a1d17-b5c7-4bb3-95fa-7306eaad23ba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ef2c2ee-a0e1-4343-b5ac-8bb5774ecf33",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fcabfc18-f750-4650-b41f-d29aa9870260"
            }
          }
        ]
      },
      {
        "id": "9db26cf2-6f4e-4d74-ac34-64132b71cb85",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3846779c-48c1-4228-a468-2eb574aaf8dd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0bb7332c-8c98-4ac2-ba6e-75535de5c638",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1769d7f3-1af1-4363-92e0-cee61b83378d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e504c96-7215-4fcd-a1ea-2d0a5b420beb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b16a5931-92d0-4c66-938e-ce4398cda73d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f75998-60fa-4534-b8ad-27c47a5f7daa",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36008791-e0cf-49f9-9dfd-5fd31ed8dd8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "199bc613-f994-459d-a761-52ce18d75283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc81ff1-8204-45a0-8aac-b7907136ab55",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3829a113-8691-47f4-9965-2afbceb085e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab03e01d-cb13-4459-985c-e98fd361f6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd5033a-8a36-470f-ae89-fa882a7bf519",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22530219-46c9-4aa9-bab9-43d5ae8f671d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f40f7272-2946-4354-b08b-5c3e577a96fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a9ade8-4ca5-4a5a-96e7-e5b1a4ba2475",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0697f954-e124-4212-9acd-3c6e58811f87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc5a0578-0e35-4e10-9172-3ab1b60c23d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4328571f-baf1-49ea-a763-5b90169375bd",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d90bd0-abff-49c5-916f-a6727189066e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4e8a8fc-efd9-43cf-a521-47a584c6e7bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa84eff-18a6-4410-b991-cd167d96768b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d80d8f-00cb-4d9b-b255-35efdea0ea4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbb7bc58-f220-44f1-8613-1c420f151247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c2586f-787d-4158-bd5f-fe5b1574d8b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d463cd-5ecb-443f-98b1-33e33a594b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4c3778-4bdf-4bea-abd4-9b2f85bcf04c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "869a7f4b-e3b6-4b85-b550-ad5b6a3238f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8aab9f1-332d-4a73-9abb-820d5a62fb92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0cad41-84ba-48a1-9a66-85ba1462bf40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "938d5eb2-91da-49f6-aa7d-4bad34abbdba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d9b398-4386-4b93-9049-5c5cc6354e55",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c6c565-7690-4eae-9f8a-a92d52a251e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c55f1ae9-8783-49e3-bcbd-6aa9931827e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c1d1af6-9764-4a1d-bca1-1e0bb3cd2c72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e3b1e0d-23aa-4343-b5bf-3da1d6fd91bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a583f6f2-1b11-43dd-b7a9-fd1680b7ab40",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eade551f-4cae-4fec-b26b-0dd440cfc51c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83f426df-d324-42a2-9ec0-90d21bbec541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7719903-2702-4309-99f7-b8c530b7d746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e04c190-d0db-4661-9deb-4632d55ec26f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3366d702-0d09-408f-8914-6a6a4d5758d8",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598d5331-aecb-48eb-a787-6e571fc9e72f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0756d07-e74a-41e8-b02f-2413c73d99c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa383bdb-4391-421b-880b-982b2ef8c715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7687fc4f-2dca-42e6-bfd4-a9e1112e3925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "415fa5b2-7e27-44ea-9e7e-01fcf8165f7e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f4218a-0483-45c2-9107-e580c4635b82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c942bf2-2c11-44cc-8c72-d74625b756a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0fbc8f4-f42a-4d52-aa53-a332b79d9be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af2bef67-81af-45b2-a91f-7a5557d405a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a36e07b7-af8c-424b-9b9c-6e295344fa23",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b847fce-36f8-4f4a-90c2-66c03a4cf3f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccb71574-9dc9-4bc3-bba8-f594e2b73224"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc7361f-2302-402b-bbe6-e56506fa7345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb4612c6-9cf4-4bbb-a2d3-4d0905463d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5acd67f-5d39-4de9-aefe-5003861c51aa",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bca0da8-2853-4548-917c-b8e3c91bb67b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "356cb0cd-4a18-4b87-8390-1c3c360004b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf10227-0ae9-492e-b326-4c9830edae7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3db62472-a57e-4341-953e-84159a3c2c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57de34b-9296-43a8-8e4d-f843d0ff71f6",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "629376dd-6e4e-40cb-a7e7-8b2d326beca7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c996c4e-d00c-4404-963b-e41013392082"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7f25a0-470f-4b0d-8d60-dad5e68b4873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d7a4642-286f-4df8-9cea-73ea11b32650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b889e8-d21d-48a3-b1a8-e19f0ed14c7b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87182d2-c489-4306-bce9-5e42b2f55dce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df0f5ac9-f14a-4fc1-9c17-82e2e3a2d749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a9ea8a-4e3b-4c3e-9493-434a4f2b3da3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0a34987-43a7-4a67-949b-082efa85c9fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32383b11-d2a8-4234-8277-a33da418dbf5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b42d606-68e9-415c-a81d-25df9956558c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf8a4388-a121-417b-a848-b8193c2d1f27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc24a5ef-4671-4e50-963c-2e316da04af6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7c7111f-6e2a-427c-96b5-d264979c0a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d986b1-3cf6-44b6-9868-cb955b751c39",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2428fa37-45d0-45a5-b2eb-dc6e87f6cebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8238d0b5-cc1e-4a0e-b97b-860a7e66895a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df599cf-c024-48cc-b9d8-934ff8965098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b4ade9f-8c50-41ef-b13b-1f3ab7b6eaf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ab09ba-933a-41e9-a629-f38da150aad4",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ea7149-4290-4d0f-8233-bbe3d4446adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79afcf62-ebd8-4213-abab-d41fc5627a82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd63c74-af7d-40db-8eed-5a201bd1672b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41d39d73-a1cc-4307-9dce-20eb31c7423e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf19a130-928f-4628-a8e0-bc58e8e7b19b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25e6ec0-fd2f-4e94-82e5-188f4de576b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9125b1d8-7142-48d5-a55b-b64e7af476ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b4fa2c7-20b4-4988-811a-f78056030a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e8e8da3-e9dd-42d6-a868-be57f7b2b866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3e493f-0134-41fc-acf3-0c67571efd0d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20850a3e-1a2d-4ba1-a9be-0fca49e016a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fafee1da-c3db-4c8f-9452-cf9fa65f07ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4bd249a-db81-46b0-a161-a1f6823722bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8e5a1cc-be01-4882-a00f-127b2da513bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beda5e65-c66f-415a-bfc4-f208a6728ed6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d380b34-f11a-47c7-854d-99e264cdfb52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e334b77b-6ead-4564-b6bc-52cc8ae99b50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae904c8-427d-41c1-a550-538ca040bf0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4ffbe88-d3f9-46b1-a228-122eb120fb5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41e6e0a-8b89-4619-b4d6-38852901fa31",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5992d94-4c0f-4905-9dcd-dd451588b8e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "902484b7-8e5d-4dd1-917a-511554f198e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d518f6eb-f128-46a0-b934-2c6e0e6e38a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bd17baa-f04b-4acf-916e-1a39b1e1f369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3789c27-c395-44f9-858e-5d48d89a7d68",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4293f6b7-0e17-4ae1-9848-a7b0a88d7436",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e61ccfd-ab95-4ea7-bbaa-e7cf90ad69e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8045b37b-3cf6-4f24-b621-45e79e50f892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8101de29-8dd6-4ba4-8174-5a81db9c0463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5dbd8e-1f17-41e3-9070-4a34ed9c71b1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ae4773-5a39-4ba7-b2e3-e3687357f161",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2385209-a951-4658-b4f3-1fc2ffdaea11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fdef4cc-db26-49df-9f73-111a6e756c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24a0e239-2cac-46da-b9a4-b0d9ec85d50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3920f828-45aa-44fb-9ead-ef25e686b98d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c14df25-a7df-486e-bae2-67819f044da5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bac551e3-9a1d-4716-a48a-f43abc2d2126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db15716c-808f-41e1-9f3b-d6bb0eb43bf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0139ca3f-d622-4fa6-abd6-3d201c68089f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15cd73ef-b45c-451d-ae9c-1c28221b66fc",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce4da8c-fe6c-41a3-aae9-e4450fec6ec2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c85351a-842e-485b-81fe-c26efb3f30e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6cab65c-fb50-46f1-85b7-52f8807e6342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "484665a8-a387-4224-86cd-c813ab8f4740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b25cb4b-2129-45f7-a501-7e115085c374",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf85f9e-6810-4d3e-956a-a4608bf0bdc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dfade7e-accf-4d83-be6a-479860bbad26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd24d2d-6b78-43a7-ba31-b4db7758e5aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4229ff0-a368-4687-8fd3-84f8f81307dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e1b9fc-5c0f-402d-88e2-2cb5e677420f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde35677-82b1-4476-a76f-d44bdaca1877",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8787e5af-1581-4a71-847a-17bcd7d9b449"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "936c8c42-98c7-4269-9184-569e0b3caab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1324549b-278e-4d68-93c9-18ebd015b959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3fc8cf-9ef3-4f1b-8a25-6780cca7fc66",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5fb32e9-52b5-4a9e-9a2e-d71c778ff147",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7230afa9-d5b2-49b0-8bf5-0e628db89d94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b972587-8668-4a99-8601-4cf4a9412e07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d89cdc5d-5e16-4de4-93e4-57ac920f8502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74fec395-98ae-45e3-ae87-e1669196c3a2",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55760112-3b9e-4725-8620-3170b613c0a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52949eb6-0d7c-456d-a092-0cb3c3383edd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a3348b-ef44-4212-8a09-0232b255f266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c19b256-0a8a-4b60-ae09-1a365874cce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe52c558-09df-4e3a-8fbf-8c30766d3129",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86689c0a-7fad-4cce-9abd-f3351ee6061c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "022ea739-cc50-4f3b-8189-e02f50c8df22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb8747d-4457-4a17-a4fb-3a67b947234e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc5423ec-2f46-454b-91bc-f6e65d22ace7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a3a18f-3679-426c-9e9c-e12155e6cf27",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089348c4-61ee-478e-b285-9e4b5e95cd7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6c99dbf-860e-4700-aa0d-2df652f4f3c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1e3caa-b941-4f45-85e9-c35ae3aca36b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95cffa5c-1391-4046-a384-260fa18ff259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a953552-5821-489e-8196-fb29ef16e550",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb5615f-5d50-40c9-a901-a10be9c76b86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8dd81f2-cd35-41cf-93b9-55774511a177"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b5f1ca-01fc-469f-b010-e6f3791e31ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62501470-8ae0-443c-840b-19158e73ade5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04510b0-f01e-4890-8ccd-e531c6c000ba",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ba71b4-b897-4509-bf7d-909c6a075b9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feea42cd-63df-4b63-b897-3dc3de6bf67c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d677cedc-dce4-462e-8402-94d152f66ee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa89352d-027c-4f39-bd68-9bdd1e16136b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d1c8a3-796b-4ba5-a95d-3edb084ad357",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fba5be-8702-4f92-88dd-ab0b10b6f541",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13405d0c-8562-452e-be14-9c627f0ed812"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c8f4bf-a1cd-4ccf-8a21-0d86a6a77915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a56a057e-9ad1-4b08-81fd-7b9ee20ce0aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23c7cb2-1921-4cb9-8a70-5008af6538cc",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7211711c-a49b-4891-b822-6173add59431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1875429-b935-4eb9-acaf-28e10c4a854c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ee8c84-3687-48d4-a4f1-22b86f61a17c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "342b6f5a-feb6-4dae-bf45-e7d2bdf215a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c96ac4be-9dba-476f-b760-cd11381f8232",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a191da14-e9d1-4e0d-bdad-e2fc2bd2641c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71c3bb42-7728-4182-90ee-be3f81a80009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67630013-1b88-4c80-8c94-4ee9f587d5ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8512d995-cf15-4a56-8f2c-a640934567c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e35edc-00bd-436a-8d31-63a129c5963b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234a9a38-42fc-4428-afe7-83703e9e7e7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e33207ef-5f38-4d4d-9df5-c779f8bee447"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17aa466c-ed83-4f8d-b1c7-853c28fe0524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b7d0f55-96be-4118-8b81-2409cdc764ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f49c4c0-8b51-4551-8936-943009788a36",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87c1751-c2de-4b54-b130-f4fce4f358fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "506cce7a-ebf8-452d-b72a-340a0b017316"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0187d382-c86e-47b8-97b5-116cf50da15c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee742caf-ac60-4709-a18d-daa1abec832a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc67c94-6377-4165-a72d-52b409e33be0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab7d297-5d42-448e-87ec-898a0a297e7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e25dbfc-5b94-47b1-bbc4-e666764b73c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "722c9c83-5866-4420-a7f2-971528014928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b54118da-5525-475a-9abf-61e92df81190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a3be48d-e8df-4dae-bf18-9e8189783974",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec7a7ad-5ec9-4d47-bd38-ff76c0d4dfdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "724b595b-55f1-451b-bde2-43744fd900ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4193d9d1-84a5-4209-afae-dc5beb72c178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfe9d60b-4a0e-414c-b7b1-5584dbaa0e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a81a0a-7366-4137-9472-fc7b0ae3ad65",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4786cd0b-0ef6-4b4c-930e-3dc1b997b816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bede97d2-4ef8-4c97-8d6f-463a2f17e22b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90179c24-7fb4-4b92-bf15-f9e05bbb3396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "650d9555-f1aa-4fd4-bc5d-93218b47f364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e7d526-b39a-42c9-a550-906f1a6a1f25",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74607ce-8714-496a-b246-b4676decf232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cebd00a-35c6-4c1a-a9a4-556993b56c91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a30f219-9504-4ed4-adea-035b3f3d4a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "156b26c7-d555-499e-8cbe-103d02911fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc1d764-dcd9-4b1c-9520-8a70bf30d92c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6244160a-7f4a-48e4-b69e-f9627051670f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "665d2455-43fc-4620-820e-1c9409cc8979"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c55fa0-997e-47e9-a46a-1edabaad63bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "544afeac-6632-4954-9781-4b6df9e64873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "753738ce-87e2-4ce4-920d-f435a4b3ab73",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9adedd0a-ec0d-466d-ad5b-701634878388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8b79448-b728-4958-92d0-b895e36c2757"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c56dc22-aae3-4694-a655-26dd3a35e025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb7c16c3-8b97-45e4-8880-86f58a882c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b233b45-3d9f-4760-a55d-c25e1adba22b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376d4475-d237-4786-a124-598d2a9a6fa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83ea176c-0d25-419c-8db1-61d73a2609da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15668fe1-ed10-4f69-9f39-a09cde636863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76978de9-8e28-44ed-a93a-ec7cf65743f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98c20e3-a944-4618-adb5-63c0c74437b5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7582cd-03d0-4c0c-bbe9-1ac4fe747ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34d7e0ad-d31b-4c2f-9ba3-2c2c297aeff3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a20c7e7-3c47-4b06-8547-c8b580da4c84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c6467db-934a-4523-8a66-692316a5720c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5733b080-6940-46a4-b041-d1c523181843",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5cdf3a-70be-4678-b214-c27529561207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d17f76-7863-4c47-81fd-e9371facfae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14833d95-c176-47e9-9ea2-7ee01f2ac54f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca1fe19c-a7b3-4e7e-ab3d-765103b1d808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f992e65-72de-45cf-b1d3-0a3e320db1aa",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db58a317-70a9-4811-9a0c-436459572aa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b9a2730-b7d3-421e-a9f4-7118139845d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e257f1-7784-4741-b6fe-d647ec8f8600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd1dba6-00fd-459c-95c9-61200e5c7b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df669cf0-9cef-42f6-b9e6-bc3cc062ed93",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d25cd2-8732-4243-b3db-1a25d9c36509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27ee61a8-128b-4a38-8e56-ba5516a8c6c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef95d25c-5226-46e2-99e2-1ba92f4c0189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67907e22-d164-4aa1-83df-82a28f2f3065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d4f448-fc0d-4ebd-85fc-4c6204d23b95",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a8434f-287b-4246-9540-c72c271efbc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cb1d36a-a2fc-442a-8dc0-8bba400d62ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce12dea2-9eff-49ab-ba81-88fd2a594346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d29f066c-3f62-4b2a-b580-24aedd7d0775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e144c8f7-ed6a-4ab6-b68e-7b0d7a8780f1",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2efc4e1-4b63-4c21-9620-cdf791b67474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e110acb0-5a2e-4694-96d0-3a0c21e17099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "166ddd0a-5b23-487c-9dd0-d278c1c4f9b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e326bc75-cbe1-4809-8816-19b00e388b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5810fbfc-8c65-4d7e-bfc5-5408b06a24e8",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6236dd80-0a0d-43dd-a8dc-eff9a322b37f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da81c167-5749-4534-b4fc-8ecc8fcc2afe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1895b36-bf14-486a-a756-f01e07f51f70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf32cea1-b338-4c70-ba21-3af9c4059f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca22df8-4396-40a0-af6f-a9672d724fe7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68eeeaba-ce4c-4435-b0f6-e81987f0e165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97b29608-f8d1-40f3-8371-964eb50533b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc27943-1cee-4c30-9d1d-8d024541bdf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84f52ed6-79ae-412d-9fce-6cd8fcc7c712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f431a3ba-9eba-49ca-b0ee-960f8e7c38b1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c35e652-512c-45d0-9b68-e8a3d6b1a344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff503a5-a202-4ff1-adbe-04c4f81c7ecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1b1197-c6cb-4f21-8aee-0ea5f134d013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e06cab50-78dc-4c07-b06a-0d76dcf517af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa04d6a-fd48-4630-a955-cca261973cae",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8867a9d9-112c-46c5-b76f-c9dc798a222f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c9764ff-2a06-44eb-bb1a-87dbe5922872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c21ea0-0f2e-400c-b3e3-689a21556ff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bed786c-fde4-44e0-92df-e51eb0f0e3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0180656-2848-41a6-92fd-cb2acd4fc688",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafe1ea5-e856-4e3d-a162-d8fe42e00002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24aa1495-0a66-4037-9528-1258558b1652"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08c38ca-8300-4422-81a4-8c18809fb5b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5633998-7d71-4a3d-8607-2c31a2d73a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cfd4b0d-0f6c-47db-be1e-e089c1809178",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1074ee4a-1d7f-452c-ba60-d8b9171f8525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c01989fb-bcae-4f98-be2c-bb351856d749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c89e421-3a2b-47ba-8a9a-1097ff035808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83f273a7-52eb-4695-b390-b3bc78860c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a83521-6b84-4754-897a-4c52fe26ae00",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884ae57b-1ad1-4e6b-91ae-954a6cd5c76e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b20029d-cb4b-442d-b50b-8167e4208a34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f4b299-0ab6-45a2-bf11-729a9789ae48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89f2ae58-eeaf-4a1f-a154-9932ea4bcc98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e4e2b6-4755-41de-bb4f-10cb1a19b54e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58fbe75-26eb-450e-b936-62bd7954f084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45855c74-7816-4417-940b-308024bbb71d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea343608-80dd-4387-b5c6-e055ad9546fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d227d681-4d94-4c58-a334-d003e10eec28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e03e59b-8f6b-4933-a74a-f848b25b8d80",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b81500-13aa-4708-9c34-2fc27beec6a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cbd822c-3ac1-4638-b0d6-70b3a373c264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "492956f7-1909-4387-9462-40bad9b7690d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "624b7739-26c5-4849-b6dc-11f49377c77f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d259fbd9-d377-423c-b4fc-9a166329266e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ef2ecf-aaf4-4bbc-a959-cb5cf12b3c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8ca4538-6bb7-4f4b-a932-7a35ab3b41d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4832185c-869b-49ed-a824-739d589c54b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a4aab66-dcae-470d-a11f-77da3cdf44d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d924c7a-fa09-4b90-a184-c055137bf9aa",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b801783e-f4c8-4806-9064-637c188fa200",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "018b41f8-9914-4e36-b4cd-fbbfa161de98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9e0528-f395-4550-9458-6dbdf74549e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f6a2214-b91e-4a05-aa10-571280515cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9782c11-b93b-4b76-a92c-a5dd7a4ed357",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4084f45-c701-4552-801b-d181a41ccaba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fabec864-31f7-4f2c-a14d-097a4cf70abb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e145a389-dbb3-4ff2-a8c6-dc3ea852ce33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b89b7f0-3961-48c4-83a3-949a9dea86dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cffec31-2d6e-481f-9094-f9eadc00f5f5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42cc917c-2b0c-41bf-8294-d3d0b402563b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79bf889e-46cb-4f7c-a659-8a6eb0cbf709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe3e2de-ac0c-4152-8b10-4fd6d2b0f802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11dbcc35-d23c-40bb-9709-97f96e017cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be605df9-f761-4c40-9510-32c81097b53c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b30023-2f2b-4615-9dfa-a7e33db162e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c5f7399-e0db-417a-83c9-1ebb9d7f3949"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "303aae97-ae45-4b59-9628-5eb6ba1104ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90f905c4-5c9b-4c4e-8067-7e1f8b33c7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b7528c-9253-410b-bfdf-06f3c56116e6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ef765f-c4c8-4345-b260-c10f90bc80da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c3f7dad-6df1-444a-a3ec-a31fed978373"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0bb8257-4756-4810-ad00-57263504a4c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c2a9c9c-ef27-462e-a7f7-db111a81d253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b433115e-d3bd-4708-a439-ebea3a68cb6b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789cdd7d-bcd9-4fb2-9819-25a376d19b88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cf35145-b5ff-4c1b-9103-5a3430a0bfef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46dc0eda-9336-474d-9b23-66217372e146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8aa0e9d-d80e-42df-8c60-0d53a709782f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe752fda-25f5-44fb-bf9c-513371998e4c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a7d78d-c127-4738-8341-1f4896c17c1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ece4c685-4d80-430e-b79e-ad442ede6024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30ce3f5-b3d4-4031-8fcf-12bdcf0d7840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af3cefe2-039f-462b-8765-72adecc78ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9557d8ae-1de4-48e7-890c-65bd94dbf6e1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77828b2e-29a4-42f8-8dc0-88e1b50b0041",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29b2c1e4-2426-4ae5-95f6-5dbc7d00c84b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "428959d3-5f26-42c4-8580-37083c3b4d75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a10dfcc7-562a-4d5f-a074-e82957cb6498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c26645-a87b-4a9c-8ee0-62b1da4c0e47",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19b4f85-669d-4245-bf5b-130fdc952d6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e3d5553-a8d1-463e-ba4e-4fc4e753f640"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4977906-12f0-4b56-94c6-adcdd554b3bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b788a44-a26c-46fb-b3b6-b588bdeb500f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee06f1c-7d42-4cd6-ba48-9e47ee73ab67",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23fcf01-3e45-47ef-b48a-744f1c6f0bce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c70960e5-1b0e-43cd-938f-9dbc01c4f32b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01e1dca-09df-4ec1-9d3a-59e7443d13bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d895a353-72d3-43ae-86ca-6c23f714ac71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224dd5f0-2d0b-43cd-bc7a-80adac8dd3a9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9da302-d9ac-43d3-88ac-1846f5447fae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1ce3969-c8c9-4a95-8c02-08ed05b80f3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64cdef3e-76c5-4ffe-beec-42e47ed16f64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e932895-66b5-429c-ba02-fbd9e8e1541d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4799eafc-431e-433e-8634-e71b1d2c2b39",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679a9d97-ba35-49cd-aeda-d92e5f43d8e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c3b938b-74a8-4f5f-8e00-8a38c1eb709b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de1c9a5-385a-46bc-90a7-7df9df83f94a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c30347ec-3b7c-4583-ad48-521b429a90cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881176aa-68fb-4f3b-828e-f82316dbe3b1",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1af2bd-8095-4b7c-9719-fa3f41bd8326",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b5aae1c-1814-4d65-b4de-a4992ee498d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7854c94b-89ac-427d-a21c-3d30d6c9f7a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09d549f7-aba0-4065-a1da-e04e7f8be0b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c8bb91-f54d-4613-a709-4297cdf719c9",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a80cbe-4488-483f-a462-b0b4471b9f2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "665887c0-e94a-4200-ab6f-ea4d967ccb9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fff77cc-f1cb-4a1f-8fe0-8b0cd4c2b3c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f77ac749-dcc9-462e-bfbf-c60280caec88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d62f83-73e4-4308-a7c1-e457c18107a8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc4c872-2efc-4bb0-9dbd-5a9dbf431374",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f902e89a-82e9-4f77-8ba2-6393f5ade71f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ab8a2a-1849-48ff-bcf7-1ebe417a4080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb7559a-d169-427b-b2c4-b41e30a7fc1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50be1fd6-3528-4ab1-8fa4-14c630ebece3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4cf0b66-8395-4541-8b6a-35ab6b0e4ce8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e5ab8c0-08d3-4f3d-9d0c-725672471eda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f619acb-69d0-4b65-a581-db22a5731add",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "548b54e1-800e-4c01-bfdf-444aae641e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4368a39b-b68d-428c-bac1-4041ae1e3492",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366a6121-08a8-4129-8022-164979b412e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2f3c16b-035f-4ab3-992d-9315ef2635fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f9c300-39dc-4098-96a4-444613c743fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b36eda89-207b-4593-8abb-0d9da62da348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2604853b-93e6-477b-91bc-ccd9fc84a67b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5c02fc-5ec1-4f3d-8557-cde4ec7aad15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a87d690-46a8-4e34-9ebd-2dd4c43672a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96fd4b17-414a-4cf4-b5af-2e64a695d72c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2321fccb-8b6d-4545-851d-1cea3ae7cc9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4622b15c-106a-4567-b2ef-b6cbc6c9b400",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b70f05a-02da-46de-8908-3393df60d797",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "640a750a-7401-433f-94b6-cdd6a92b4044"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6685a7-3405-48cd-9b14-0ef15ce9a3fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a09a23b-ec56-4a11-a4c9-3979c734e6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb484f95-3abe-4194-afec-086ba017639a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f845ae89-bdae-4503-888e-2fe80fabd66d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e71b691-b69d-44fd-a0f3-e9af396cc08e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc721a82-4b36-464b-a6fe-3af46de19eb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eefd3a5e-9bed-4d2f-b27d-85a2802e0e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad0e024-4d6e-4f01-9ce8-93b79edfa27c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72d11ed-bc77-4de9-9d4e-1047cb05addc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6a3d07d-f0ad-46a5-a480-d424b2934951"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ab1bb2-4977-4f74-8c8b-8f081d841014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22b21528-5e5f-43b9-975a-aa5b8cf1f64f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a5cd10-7394-40bf-827d-a98edc27b82e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a66a6c9-d4cf-4f6a-9e48-60e1caabcede",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1586b639-20af-49c5-852b-ff5ae9a54a6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ddf2ad-25f8-4e66-9ca1-a757545a8aa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d17cbe0-615a-4ba3-96e5-f505ea9d94e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead53e9e-1152-4b1a-9344-f8207d4da922",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf01b95-eb14-40ea-8bff-9099a1b885de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "535d7d46-567d-447c-a375-d30358bc2dda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4aed72-496d-4c4a-bb7b-45d020d6bf32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e408dbc2-6cad-42c2-8d16-8133b4a41bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00fc679a-b164-45dc-99c3-d8b63d9f83f3",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9b0dc6-2d09-4fb2-97d0-94be858853dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d19f9d29-3c52-48a4-9d3a-206567ad65f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7363d241-9683-4e2f-bd4d-3e2018a8c304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cdfef61-efa5-440c-aceb-cab7df6c50a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0230d8a7-020d-42d4-a6fe-5895055a5ea0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb0dec8-87b6-4b5b-acfc-1026591f8239",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "688bc052-113b-4291-aaa0-36999c9e3f0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0553a00b-f12b-41f0-91a7-c0d8d1628951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ae509d-7542-4692-b7f9-f6c10b254301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b58605-8366-4cf3-a900-7f5aa68215dc",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8bc596f-b744-487f-95a6-0533b8ccfa70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb0008f8-02a2-4467-8aa2-0360fd0fc85a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4b36be-08ef-4547-98a1-3eb68fdbe0e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04140ce7-7061-4c3a-aafc-d2cf62cdd112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83cf980-96b1-46cb-8269-1721764b8708",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e166d89-e66f-445f-8d93-5670a863af14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9822f060-6878-45ec-97b2-40f61ddfceee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7930cd98-cc79-429a-bf69-e20f178b762b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d92fa2d-f646-4beb-90f7-753f03e27eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab43551a-4363-4835-9d73-289d8a8e5111",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0364fd48-df8a-4222-b3b7-d35c8705a3a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4952a965-ba70-4c39-a34c-bbde25365da1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce8e5fd6-e7ce-4738-8d7b-24dfcfcdecc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83425b34-13c2-4217-81ee-037a567cde7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e1f70b9-586b-4712-8574-b42325248fa3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535c02b8-497a-4a22-b263-1815d3e2a15a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68e91507-5933-4b61-b02b-2ab4d21a0ded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8094e350-3201-4afd-a284-7db12e464066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4c7b1d6-d4bf-4457-8817-d93a707ddfef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a5537d-5aa4-4e95-bba2-37129990425b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f7b1065-683b-43f3-85a6-f652d005ce4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5d04cf0-c07b-4b36-8e54-35231e753ad9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1740ece-546d-4e79-8518-2928b45eda1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab6411c6-a702-4a96-9b52-db9b4340aa3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef79658-3aeb-4b5f-946e-3288ec15ef3a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b65e853-5ad7-4104-a480-83548c5d667b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "944e75b9-2879-4635-88e8-d965f9e8ebfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "741c2681-5b30-4e75-8cde-51d94695a3e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc673f2c-61b7-4003-8c42-c416709704c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a1f554-fbe1-44f0-a838-358f7df427c5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7ecd6e-5943-4a55-87a5-ce4b4f59a713",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fef847e1-5d75-4822-b622-3f019c891712"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae44bd1-11ca-4c69-89fb-77481ee68671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b658a1f-1cde-41fc-9e58-b687061cbfce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6030ae08-582d-4eba-a189-856df7179fda",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043f2ca1-a2de-46d6-b21d-d54dafce594d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "801fc87e-6491-4dc9-b19d-eef48791eedf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee6a6aa-f6cf-419f-a2f2-55dafcae779f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ee6ecc3-1a65-4c2f-80a5-0bc0dd3d786d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c944700-fabc-4ebc-98f0-8fd9f2a5d1e8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216b0242-0368-4df1-a926-46b1a74d587f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61959e44-a703-4514-98d0-edcab81e9c15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94efafe4-893b-4988-b1ce-92cb406ce6de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2a57485-f840-4159-856a-3e845408b9ed"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24597802-791a-46aa-a42c-00189056c645",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a4238c8-6b30-4398-ae31-6f3c4a2ee371"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "21d762c8-338a-4be0-8233-263a93012430",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5ab1df2a-6e0b-4615-9585-2964d4f3298e"
                    }
                  }
                ]
              },
              {
                "id": "d65563fa-0069-4541-83c4-ede2741e6ac2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1412ece0-b418-4259-bce7-624130e4ba59",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095fe7ba-678b-4a69-83fc-11d52ad2f46f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0a6259c5-59f8-4c99-8742-2007daf83b7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3115e9-1c2b-46b2-9ac8-766670e475fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08c6d963-4f51-4a54-9e0f-e473d947c186"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9fd74db-c962-49db-acd4-72785fcf786b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59ff1e80-632c-465a-9e2d-ba3911a76dbe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "60993741-e12f-4324-86dd-92201b23e893",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e3c5115-78e0-499a-85b5-51630fba8a74"
                    }
                  }
                ]
              },
              {
                "id": "907db6e9-5812-409f-84b7-c5fe313199b4",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "443a7d0a-e087-4c01-9a87-d2692c217e20",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c5fbc2-70f7-4fed-89bc-9762ed8be3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "5e53879c-c367-42f4-96d4-1fb615c01aa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4d1642-118a-4534-8572-01facfa6b411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d239f414-797a-4057-8648-1125920bdc80"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "13d77883-46c7-4e88-8036-88d06013ce54",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a3bbf9de-8d42-4d87-a785-e9244c7dd4d8",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "01452e32-95d0-4179-8ad7-8cdc44f85264",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a5c6eb91-a557-4a36-ba56-0778ab4369e9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "11583b8b-cfc7-4bd4-bdd0-cd8a7ba1c6b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b5d0929-d6ca-4e9d-9fe3-1bb05a2ed87b"
                    }
                  }
                ]
              },
              {
                "id": "b0356ac9-41c1-4838-8fc5-b55acde7363a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f4c94d7-9b8c-4f51-ab6c-f33e4eec8efb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1d69e56d-5528-4f4e-8f02-635ec3774a88"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7cda887-72c5-467f-be81-a335c42d5143",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27398742-d08a-441d-99b9-9cfa681ebb25"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a561141-2fdf-4f84-846b-091073c98b6a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "63c02097-009d-4c2c-97bc-c6575a8aa278"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a2bac2c0-5149-400a-a6e0-86d18d30d070",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cc5c52f9-71fa-4500-8c4f-2e18746acccb"
            }
          }
        ]
      },
      {
        "id": "ff05e9ec-c91f-4e66-970f-947b54735a9f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "bc90fe35-299c-4609-9b31-031230a5caaf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c73ab2a3-32ff-487d-9c9d-2c21d7c0caaa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0d3bb27a-ae14-43d9-8a67-961d7a49e23a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76223bb6-2f6b-408c-9692-2d1940568ded",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "67ab8af0-1800-4567-9592-e6f34d64a7f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9936829-f477-43e2-9b67-70c4a4370898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33977323-8369-4921-86be-e5e8c207c9b0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "208bd127-01dc-46b7-a1b2-935e9ae1f5a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9b2143d-2553-4ed2-b8a6-0242ffea76ac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a42bb321-9caf-4fa5-a562-70593a3cb46f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ac4b6b9-c4db-448b-a9b3-815014505b37"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e94d958d-d6c0-4c4f-ac3e-cbdb0157dfd9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1a70346a-9418-4c71-9024-419eef1a457a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "22edc604-5e83-4afc-a5b4-8de8edacb38b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "19f6da81-5aec-428a-b847-4f3d2f48ceed"
            }
          }
        ]
      },
      {
        "id": "a514ae32-3c86-4192-a7b7-e3a6d64b7eca",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "702fe964-f17f-46d1-ad9e-f70e679f69f4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1e22039b-8370-4fd5-a9dd-582454aef268",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a6ad8928-a11c-411d-9a31-30fdfede2a60",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704795f8-3226-4596-a677-f078c27b2500",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d8ee0d1-4444-4b6b-80ae-f8c35bdaccfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "008acf08-a44b-4ed5-ad0f-b98a1f0acc72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33044873-a1d0-4503-b7df-e74a3c81e5ed"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3a6001c-d302-4fa8-bcf0-3461c00d2161",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56e9f14d-8cb2-44c7-ad75-f0b9062bb04d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "efa2bc89-02e4-41a6-93ee-fd2f2ef4eb48",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "585c9efa-90d1-46e2-aab0-258209b960b0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "feff2479-e3a3-45b4-9bbb-98c94a746f59",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "67d1bad4-cab4-4d45-9102-91dd7ef254a6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c5d4df2b-3172-4d2c-aa7c-5e7982b48509",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "507acf69-b38c-498d-b4d4-515af6956b2f"
            }
          }
        ]
      },
      {
        "id": "77f60102-8b60-4526-9ba1-afb804274031",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5dafbdc0-3d47-46b3-9120-872a7dbd6c00",
            "name": "Negative Testing",
            "item": [
              {
                "id": "32e1d241-b083-479d-85c1-bd98edd57144",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "46bdf49d-d01c-4ccf-9ade-101bf97c39ca",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0af908-d047-4bf0-b3e2-14d99be61cf7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0258a577-fd9c-4282-9b54-a5c862f34bbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e07112e-be09-4abc-bbf2-b38e5c9ce00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7b17ddc-7510-4272-965b-f243d6e48a87"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92614e5d-619d-4c2b-8797-80c6b3f6f014",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4fc5ee59-500b-4641-90fd-02d8b5bee269"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "98733397-4b1a-4e4d-9957-e35df99a9b29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2146e84e-982e-4eb6-88e0-440fbf8489cb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cf52a56b-5ddc-43cf-8f5a-722de62c8c53",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c9da44c9-f8b6-48de-a506-1c2d0cb30ff3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d8fcd6fd-06dc-4780-afb8-618f4c47ce08",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca2e963f-4b9b-41c3-998d-89d81a847c67"
            }
          }
        ]
      },
      {
        "id": "de080a64-a015-4b46-a98d-e86422297130",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ebf3ad08-bdf6-4daa-94d8-fad2af725f18",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "57526d7b-9156-4139-92fb-38c290a0b024",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f84e8149-c8ad-42a9-b439-6e1fe18707c2",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3a0c2597-a6b5-47d4-bd84-1e35857da1c0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a87d7e8b-8384-485f-a65f-af5878d14e1d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 650.0492957746478,
      "responseMin": 7,
      "responseMax": 6673,
      "responseSd": 743.2062518447983,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1687567588171,
      "completed": 1687567787892
    },
    "executions": [
      {
        "id": "7e0c79b3-c206-4965-b9d2-978e1d4af0ee",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0ed48e1b-9398-4c67-bdf4-e8230ec49d59",
          "httpRequestId": "22d70e40-0a77-4585-a343-8aaae57a8e33"
        },
        "item": {
          "id": "7e0c79b3-c206-4965-b9d2-978e1d4af0ee",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "302c71be-e205-4842-add4-0f4a94beb008",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 0
        }
      },
      {
        "id": "d87657ae-19f7-428b-a9b3-ea3e6c32204b",
        "cursor": {
          "ref": "9dfd4e66-d8a0-4a73-82c7-7b2d3eb2c255",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "023cc5f1-8ef6-4ebd-9b90-5697078d7379"
        },
        "item": {
          "id": "d87657ae-19f7-428b-a9b3-ea3e6c32204b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e54b89e4-07a1-4d3f-baaf-fa48c04feee4",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "07e25edd-2a38-474a-a32d-02257c9e0656",
        "cursor": {
          "ref": "664479d7-516b-49eb-b911-3932522a0231",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "daef2b63-6555-461f-95be-9ff87df27160"
        },
        "item": {
          "id": "07e25edd-2a38-474a-a32d-02257c9e0656",
          "name": "did_json"
        },
        "response": {
          "id": "b6f954d5-aa93-473f-b3bc-1b5ed452a032",
          "status": "OK",
          "code": 200,
          "responseTime": 886,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2d5911-166e-4ef3-96e5-74f0764e07d2",
        "cursor": {
          "ref": "ab1ed750-4ef7-47ce-a195-4cb7cf597ac1",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f4ba1744-a0e7-4c29-ae1e-0526dd2ca274"
        },
        "item": {
          "id": "4a2d5911-166e-4ef3-96e5-74f0764e07d2",
          "name": "did:invalid"
        },
        "response": {
          "id": "bfde69e3-b332-4099-83ef-fb9614cf4044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2d5911-166e-4ef3-96e5-74f0764e07d2",
        "cursor": {
          "ref": "ab1ed750-4ef7-47ce-a195-4cb7cf597ac1",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f4ba1744-a0e7-4c29-ae1e-0526dd2ca274"
        },
        "item": {
          "id": "4a2d5911-166e-4ef3-96e5-74f0764e07d2",
          "name": "did:invalid"
        },
        "response": {
          "id": "bfde69e3-b332-4099-83ef-fb9614cf4044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f458e464-03c3-4341-905b-7175a97e3520",
        "cursor": {
          "ref": "60a25696-581a-47ed-9049-8230a088aafb",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "737aa161-623f-4e0b-b0f4-cc1818d2a091"
        },
        "item": {
          "id": "f458e464-03c3-4341-905b-7175a97e3520",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ddc8b8fb-8e50-48d0-9b69-9551064a4083",
          "status": "Not Found",
          "code": 404,
          "responseTime": 684,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6375a84a-b53e-43a4-b213-9e96fd87f410",
        "cursor": {
          "ref": "99b057c9-7100-4db1-9df5-7f54dad50b7e",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "828cb762-6564-4615-9445-ef9cf8ed2a9d"
        },
        "item": {
          "id": "6375a84a-b53e-43a4-b213-9e96fd87f410",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3bf70575-7a8a-475b-a88c-c02e1f5affe1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 750,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41673b53-5d58-4a56-8794-6c8ed05d5004",
        "cursor": {
          "ref": "4fd05d8d-6d01-4d73-9b4e-44cbf6041f0b",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4655dbfe-6ad0-495b-974d-6e11718762bf"
        },
        "item": {
          "id": "41673b53-5d58-4a56-8794-6c8ed05d5004",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "52b99703-43ec-4bb5-b23e-887406171581",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d74944fb-f8db-4347-929a-8e40c1d64424",
        "cursor": {
          "ref": "1c58a594-c300-4066-9bbb-a4e1270f3d09",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c0d440d7-5aec-46fc-8e13-04b859b6d1af"
        },
        "item": {
          "id": "d74944fb-f8db-4347-929a-8e40c1d64424",
          "name": "identifiers"
        },
        "response": {
          "id": "f283c9c4-c3fe-497c-a2ab-448a450af13f",
          "status": "OK",
          "code": 200,
          "responseTime": 1310,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69b66cf-96f9-48df-a3b5-f9813983f56e",
        "cursor": {
          "ref": "5dd9743e-4680-4934-aea5-89b861060649",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "445f447d-d80d-4e3d-8cfd-b91a3e97b683"
        },
        "item": {
          "id": "f69b66cf-96f9-48df-a3b5-f9813983f56e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6903b9b9-9bcc-480a-9faf-af2c0fa6b9d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a2be2a-0a91-4068-8178-202bdf6ff1e9",
        "cursor": {
          "ref": "a5eab0cd-9fdb-4f3f-8336-6fb7d4912227",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "457104c0-5f39-4ae7-b65d-a3a753fc2865"
        },
        "item": {
          "id": "66a2be2a-0a91-4068-8178-202bdf6ff1e9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c64ed085-5c43-4ea5-b2cc-78dc3f77a35c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ea55d2-0d1c-4864-ab03-90683f583a6e",
        "cursor": {
          "ref": "a6229f82-5b26-4bdc-89bc-0e71b239537b",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "244ee9f7-c053-40f9-acdd-68a83199cb7e"
        },
        "item": {
          "id": "87ea55d2-0d1c-4864-ab03-90683f583a6e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ed297cec-8f1c-412c-9682-1dc93c0963ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8dfdbc8-5504-4cad-8db1-3bf1a35ae9f0",
        "cursor": {
          "ref": "dac95da8-0ae4-4bd4-a103-a46dd8ce60ee",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a7a19593-33aa-4b0e-bced-163006303999"
        },
        "item": {
          "id": "f8dfdbc8-5504-4cad-8db1-3bf1a35ae9f0",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ceac12ed-c7c5-406e-bf82-098172d623d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1379295-e0b8-4f31-a92a-1932e4f50af0",
        "cursor": {
          "ref": "1879cdf4-a979-4076-93d2-a76a1cc4f5f2",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5f9824c7-14af-4418-8217-510898116199"
        },
        "item": {
          "id": "f1379295-e0b8-4f31-a92a-1932e4f50af0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9e23f93d-9e0b-47ee-840f-238d1feab0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8716ca45-fb80-4979-8e53-04c984f624ab",
        "cursor": {
          "ref": "0b990ee6-dab5-4287-b551-9f190a801fc3",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "bdc829cc-110a-495a-9ac7-b36c5c6d41de"
        },
        "item": {
          "id": "8716ca45-fb80-4979-8e53-04c984f624ab",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "bdacf946-ab5a-4f2c-a7aa-3ec6960b571c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163cee8d-11bf-4dbf-bcb3-006e5f2a04e8",
        "cursor": {
          "ref": "ea194b4c-856f-4462-8f8b-95d817d1ea65",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "62530d9a-de80-477c-8b4d-ccd30424899c"
        },
        "item": {
          "id": "163cee8d-11bf-4dbf-bcb3-006e5f2a04e8",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "fafe8e46-68c3-44f3-bcb7-907a40e2b70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f475794-b2a2-409f-a8d0-7eed1fb00bbc",
        "cursor": {
          "ref": "89a22b6f-369c-44b8-8504-2f5b7a41f39f",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "457c367d-e798-4f65-97d4-032582b2647b"
        },
        "item": {
          "id": "1f475794-b2a2-409f-a8d0-7eed1fb00bbc",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "019f7b60-8427-4333-953d-9e8d418cc0d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6691cd5c-fc8f-4342-82c7-12c68a3db702",
        "cursor": {
          "ref": "1b240fea-b884-40fb-b18b-06bbb80b1759",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "def0ab0b-6683-4d6b-9faf-fa421a913b03"
        },
        "item": {
          "id": "6691cd5c-fc8f-4342-82c7-12c68a3db702",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "729b7ef2-f21d-4445-8c1a-1e4250e07d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd094590-9a2d-47ac-bf21-7c287735c664",
        "cursor": {
          "ref": "4325eedd-1fca-405b-b1af-2a1c8fc9bae2",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b0122fc1-0803-4f58-bb38-a92bec08c192"
        },
        "item": {
          "id": "cd094590-9a2d-47ac-bf21-7c287735c664",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "500956d9-41c1-4b94-99ab-ac445c7e5377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225c3eaa-df9d-473a-93b7-2250a022d9c6",
        "cursor": {
          "ref": "4d9a00b7-93cc-43ec-bc2c-45856e8ac4e0",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "94e4b46f-d876-4a29-bdab-b501614583da"
        },
        "item": {
          "id": "225c3eaa-df9d-473a-93b7-2250a022d9c6",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "cc6ee938-bb29-4d4e-ba9b-bf7490243dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd8b730-7335-43f4-912d-7d92261a132d",
        "cursor": {
          "ref": "f33e4538-04aa-45b9-af65-1f313d39f198",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c0cde173-e82e-4659-8734-e7ad45cf786c"
        },
        "item": {
          "id": "2dd8b730-7335-43f4-912d-7d92261a132d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5a2c2269-e02f-4f7b-907c-cbf983d7ecd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27d9a56-00f1-4d9e-91b2-9361acdee0c6",
        "cursor": {
          "ref": "8a4bc043-454d-43ab-ad66-f12fc5f57636",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ee108d11-5bcc-413c-81a2-2276ea21969d"
        },
        "item": {
          "id": "e27d9a56-00f1-4d9e-91b2-9361acdee0c6",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7400d83b-2fce-49c6-856d-c7fcdef6f447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01253dd0-f5b8-465f-b4d0-a0d0c9eb4768",
        "cursor": {
          "ref": "f5528fad-c783-4cb3-84d3-1a3d07f7e96f",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "69cea3a5-97f5-482a-ba11-a34fc2442cf3"
        },
        "item": {
          "id": "01253dd0-f5b8-465f-b4d0-a0d0c9eb4768",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5b56d6c7-b637-4155-bfad-dc213f86d37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad25f99a-68ff-4f4f-8bcc-d144b0b16ec5",
        "cursor": {
          "ref": "2ec32cc2-cc3f-46de-b180-d70bd8d1fb59",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "122f5859-b299-48a2-a8a2-28ceda1892e9"
        },
        "item": {
          "id": "ad25f99a-68ff-4f4f-8bcc-d144b0b16ec5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8046db05-a94f-4030-8a17-01a5329309e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81737b6b-269a-4c43-8ad3-70d36a41ce83",
        "cursor": {
          "ref": "96a20f71-cc5e-45d6-b05d-ae2ada0efb1f",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "762331e3-a596-4b5c-9fb8-686fbab4b926"
        },
        "item": {
          "id": "81737b6b-269a-4c43-8ad3-70d36a41ce83",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "151a4b10-e839-481b-aa07-0b1f8382cc61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a6ea264-6af3-4389-83bc-bcd8e367fd55",
        "cursor": {
          "ref": "79e21ac5-c238-49dd-8d52-23d11138c2b8",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f9b57222-9ae5-4d47-9446-33993df352c7"
        },
        "item": {
          "id": "4a6ea264-6af3-4389-83bc-bcd8e367fd55",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5c8b67af-9d7a-4eeb-9843-9deedd7101fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c9984f-b937-4d56-84ae-663fc125030e",
        "cursor": {
          "ref": "4c901c16-6ee4-4f46-b57b-cda069cf4101",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6ddc8c35-c5b7-46cc-877d-7d79ab38de61"
        },
        "item": {
          "id": "f1c9984f-b937-4d56-84ae-663fc125030e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a2b90bdd-012b-42dd-8ff2-71affcb232c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4763eb-1466-4057-94cd-973d18889ba7",
        "cursor": {
          "ref": "56128d07-38ea-41eb-92d0-2dd7d6a7d776",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4698613c-8f61-4275-8642-15a6650f3b2e"
        },
        "item": {
          "id": "3f4763eb-1466-4057-94cd-973d18889ba7",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9f574ebd-a647-416b-86bb-f6a2e2134e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a707831f-ef3b-4333-be1a-a5e5ddd92cbc",
        "cursor": {
          "ref": "7acd2304-7bc1-446a-beb6-67dbe4d84b02",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "73a8b1c7-9e19-461e-b848-87cc2bd9f01a"
        },
        "item": {
          "id": "a707831f-ef3b-4333-be1a-a5e5ddd92cbc",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "44f62a76-f5cd-4362-b522-c513d8df30e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea56c0b9-b9eb-4016-a0d8-37591c5d8ad5",
        "cursor": {
          "ref": "379554e4-aa4b-42ce-b2cb-1a68f49ab389",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f19945c7-3328-437b-8da7-d0bdcfebb97e"
        },
        "item": {
          "id": "ea56c0b9-b9eb-4016-a0d8-37591c5d8ad5",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3ab699ce-80c3-46ba-ba76-b3ba25ce6a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7355acf-f2bc-466a-b423-c399d01df573",
        "cursor": {
          "ref": "47d6f958-08e3-4503-a39f-f32099ed9650",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "452a4e01-4fd9-4d62-b100-29510453ad6b"
        },
        "item": {
          "id": "e7355acf-f2bc-466a-b423-c399d01df573",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5671fa4d-ab0b-41e2-b443-8107dc41ca27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2508fd33-83bb-4f5f-8029-1ab10a93f420",
        "cursor": {
          "ref": "31005e31-b9ed-4c13-9873-904d0388426b",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6881252c-bf44-4e3d-bd43-d71a706dff32"
        },
        "item": {
          "id": "2508fd33-83bb-4f5f-8029-1ab10a93f420",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9c840ba7-5ad4-4832-96e5-e02429f0f319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd97fc57-453b-4409-b1bb-9f690d8464d5",
        "cursor": {
          "ref": "0d0a4210-ded7-49f9-a394-678a5b027ee0",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0f92e63b-a905-415c-ac27-46ce03e4d3d2"
        },
        "item": {
          "id": "dd97fc57-453b-4409-b1bb-9f690d8464d5",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "dad72765-de4e-4dcb-8537-901c70976344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "863c8dda-6d78-4d23-bedc-048604a3997c",
        "cursor": {
          "ref": "3a5ec4d7-a705-4fae-b9b1-8063b8b82535",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "dfa72f25-0012-490c-8a81-ca4b0cd189bd"
        },
        "item": {
          "id": "863c8dda-6d78-4d23-bedc-048604a3997c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2ceea6b9-8a6f-4dcb-b90d-848c91db2f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9786b9-383b-46d2-899e-bd79f8ce871e",
        "cursor": {
          "ref": "895b1a5a-9ca7-4c7b-934e-8c60c5280979",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6bd2f8e5-8639-4dc9-8ea2-99d12d2fc758"
        },
        "item": {
          "id": "fa9786b9-383b-46d2-899e-bd79f8ce871e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "81c5c5e9-37b8-4586-ae73-e2118dfe421f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7251b2-449d-4573-ba64-c12465259f3f",
        "cursor": {
          "ref": "8364685f-1829-47be-bdf3-50a28abfbf21",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0e37ce20-d79a-4c37-ba93-b7da629edb93"
        },
        "item": {
          "id": "7d7251b2-449d-4573-ba64-c12465259f3f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "864b7345-2f4d-463f-a00f-3d78b48093c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603aa9fc-9543-401b-9290-d406fe6d769d",
        "cursor": {
          "ref": "02d75aa4-ce60-4a1e-b413-a8854ed4f8ed",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d637dfa5-7be1-4a68-b717-2d5dad1b4b93"
        },
        "item": {
          "id": "603aa9fc-9543-401b-9290-d406fe6d769d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "aa717579-9fd8-4bc7-afb4-edd5d70d635a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3369d8c-d21a-46bf-81ca-8d2d7745bee4",
        "cursor": {
          "ref": "7b79424a-c2b7-4707-9e05-47c56eec49ec",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "68b5d4e3-6135-48fd-8f66-1c8982922438"
        },
        "item": {
          "id": "a3369d8c-d21a-46bf-81ca-8d2d7745bee4",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "fbc89eb1-f7aa-4d86-9400-d4250973460b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45bb94e1-b37e-40ab-910d-dd84db591cec",
        "cursor": {
          "ref": "13772bb6-e9cd-4d36-9eda-3228e21edc67",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7f114a12-009d-4786-bbf9-89d0e4e215c6"
        },
        "item": {
          "id": "45bb94e1-b37e-40ab-910d-dd84db591cec",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "08620b05-65a0-4775-af2a-a1d3435c6b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504c7260-06e9-4891-a65f-cecc53aa6920",
        "cursor": {
          "ref": "b6ab91d6-13e7-4443-81b4-86b048c19fb3",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "51b596a9-3f41-454a-a44e-a230b2bf7499"
        },
        "item": {
          "id": "504c7260-06e9-4891-a65f-cecc53aa6920",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e06ab8c2-6488-4c95-8ff3-e9c92c95d17b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194520c8-aadf-4bb8-914d-a1a9108690e2",
        "cursor": {
          "ref": "de1cd3f3-e5cb-474a-b4a5-b2b5c4cf31d1",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5cdbad5f-48d2-45eb-ab4d-875264f2c668"
        },
        "item": {
          "id": "194520c8-aadf-4bb8-914d-a1a9108690e2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c804ddba-1f43-4418-b9d0-5c3778107f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ef2829-e0f8-44f0-bf1b-12002162fdc4",
        "cursor": {
          "ref": "47d16d8d-1d5a-4d2a-bb09-e01370c9ee3d",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "49ed6837-6830-4e62-8e96-2cfe1ac37ff8"
        },
        "item": {
          "id": "57ef2829-e0f8-44f0-bf1b-12002162fdc4",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5342369b-9cc4-4d82-ad73-b97acff5d162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7993e9-d794-459f-bd71-ccdb666139d6",
        "cursor": {
          "ref": "8264242b-2e27-448e-99f0-fbb4d28e22a8",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "951c0909-c2c4-4a99-a7ab-7ea6646ae36a"
        },
        "item": {
          "id": "0d7993e9-d794-459f-bd71-ccdb666139d6",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "88b254d7-38d5-450a-9b60-b95e57f9269a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50dba5d-f793-4f51-bdd7-04005f888a98",
        "cursor": {
          "ref": "f1802e52-aafc-4c7a-91cd-84dbd89534c1",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "04252ea1-57d0-4b3c-b551-4f416b233549"
        },
        "item": {
          "id": "e50dba5d-f793-4f51-bdd7-04005f888a98",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e2cae336-953b-4b55-834f-13cc3cf6c089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c14f92e-fc0f-41b3-83d4-1fdc05dfc674",
        "cursor": {
          "ref": "57ed8ae7-9a1b-4a88-847d-98bfb93fbbcc",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "76e20962-fe68-449b-9b3b-39cdfec88d45"
        },
        "item": {
          "id": "2c14f92e-fc0f-41b3-83d4-1fdc05dfc674",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8e65959e-c2c9-4761-baf4-fff2cefe00d4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 796,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd9f6caf-c9fe-41cc-996b-27f2337ca8b6",
        "cursor": {
          "ref": "0126105e-0714-4d9e-ac00-025d1672aad7",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "802c57c4-e885-496e-a3c6-c59c43afe347"
        },
        "item": {
          "id": "fd9f6caf-c9fe-41cc-996b-27f2337ca8b6",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4eb23488-021a-4418-8468-2924e2d44d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 872,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e1f3c7-0a52-4158-81ad-de3d83f5c4a5",
        "cursor": {
          "ref": "c3481d27-2100-475a-ba8e-edfedd7bb2d3",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "52c1803f-d6fa-4635-a73d-d1588d3a9f63"
        },
        "item": {
          "id": "96e1f3c7-0a52-4158-81ad-de3d83f5c4a5",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c9001d9d-c182-4400-a216-02d919f361e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1227040-0250-479e-ba36-02ba59fe9fa4",
        "cursor": {
          "ref": "5c27bf34-253a-4051-bc05-904c90308dd3",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "704128cc-8cba-4b74-88be-20064380aab8"
        },
        "item": {
          "id": "d1227040-0250-479e-ba36-02ba59fe9fa4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "413cc823-9d3c-4c94-9d45-67600ba7d4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 862,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d25e99-24e8-48ce-b208-9e6648497746",
        "cursor": {
          "ref": "fe1b714d-228d-4ebe-855f-ff468413ed91",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d3910ac6-df94-43c9-9568-f1d525c43279"
        },
        "item": {
          "id": "69d25e99-24e8-48ce-b208-9e6648497746",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "60e348cd-381b-43ef-aba2-bb2604a96c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52405f4-b08c-42de-9d8f-608694f0cba6",
        "cursor": {
          "ref": "60b7ef2a-0230-41a2-9efa-d670447a7d83",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "36b89635-3613-46e0-bcb5-bb76bda75cfd"
        },
        "item": {
          "id": "a52405f4-b08c-42de-9d8f-608694f0cba6",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e835665e-76a6-418b-a0f9-563ef814e83a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8dece6b-3be5-4c03-bf7f-f4d5e9b8360b",
        "cursor": {
          "ref": "50cd17f1-0d87-4a6c-85d4-8b2e49fff3d9",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "154bdf39-ac94-4798-b154-8aaa4e14bb76"
        },
        "item": {
          "id": "b8dece6b-3be5-4c03-bf7f-f4d5e9b8360b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "91028c87-7635-4e9f-84d9-6e6e506187c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a080af-bcd3-4427-91c2-f72864d1c03a",
        "cursor": {
          "ref": "6ac5823c-71cc-4c7d-a613-b4ea1fa144b7",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "15c833d2-6638-4e41-a75a-4c8e0ec3acf8"
        },
        "item": {
          "id": "14a080af-bcd3-4427-91c2-f72864d1c03a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "71b82ba4-98ae-4599-b2a2-86a8a07e6460",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 773,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f20038-b1bd-4298-8a03-45dc51edfdce",
        "cursor": {
          "ref": "ee8c1232-733e-4f56-bfd1-7796643cc69f",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "621f69e1-a983-46c9-8800-a7012bed3b5a"
        },
        "item": {
          "id": "94f20038-b1bd-4298-8a03-45dc51edfdce",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f98ee7ec-798e-4c2c-b8da-f68cf070a9b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a733cc9c-6e20-43ed-a9f3-2171337e952f",
        "cursor": {
          "ref": "4f5e20fa-b95d-4320-b5b9-f091970ddfc6",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "cca1abb9-ea61-48a3-95bd-e45072dd9314"
        },
        "item": {
          "id": "a733cc9c-6e20-43ed-a9f3-2171337e952f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "89b3fcf2-7011-4f1f-b583-1dbc7adfa638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e1530b-83e6-4d67-8c2c-a37ef062dea9",
        "cursor": {
          "ref": "c651140a-cd77-440e-bdf7-3b25f639718d",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1d979156-9c27-4a25-bc99-4a63941e9213"
        },
        "item": {
          "id": "56e1530b-83e6-4d67-8c2c-a37ef062dea9",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a7de20a1-6ead-4211-b169-d85e35388293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5911711-8f87-4a24-969e-71b201848837",
        "cursor": {
          "ref": "a25c4206-1a94-43e9-81a2-895b7bb6b1e7",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "81fdf4a4-cdb4-43f2-9487-50c6a36632fd"
        },
        "item": {
          "id": "c5911711-8f87-4a24-969e-71b201848837",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c4153338-121e-4f55-885a-fd19a59ae260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae913f12-4065-4ff7-9915-e268c24a0635",
        "cursor": {
          "ref": "95ed9c20-07c5-40d1-99d6-ee71f450b455",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f10bbee1-4ba2-46ed-8d4e-c7aa5f821d76"
        },
        "item": {
          "id": "ae913f12-4065-4ff7-9915-e268c24a0635",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4c1a36a3-12a8-42f1-ad45-9fa9bf0ec0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d89ef4-0b85-496d-a078-faa40922374a",
        "cursor": {
          "ref": "94a70f8d-aeba-4a5a-9dc5-271b4a658857",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "89c7faa3-6259-4815-9324-ce19832b5ec7"
        },
        "item": {
          "id": "a3d89ef4-0b85-496d-a078-faa40922374a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4d1eb571-0731-43ba-a365-e3198418f62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1f002d-b21a-4c11-ac90-8e680b5e00e5",
        "cursor": {
          "ref": "c384c929-fa5d-46a7-a70f-4855cbee1718",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8f2637ff-ca26-4e2e-8989-2dd70b16c17d"
        },
        "item": {
          "id": "2c1f002d-b21a-4c11-ac90-8e680b5e00e5",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5e1dd8c9-9207-4b97-bf7f-5ac3126eb772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208b8e59-c953-4b05-8b4e-a58f4bb7614c",
        "cursor": {
          "ref": "17325154-1670-401c-afc8-e0136ab9b3ce",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1842173d-bfe2-46b6-9d68-d66e2514916e"
        },
        "item": {
          "id": "208b8e59-c953-4b05-8b4e-a58f4bb7614c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "392f07a6-c716-48af-9e6c-c234d27be53b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba2a1bf-9f29-4701-a98d-38d79750dd52",
        "cursor": {
          "ref": "dca26553-c1dd-4d4f-b5a8-064f51858e8f",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "01af3178-7602-471b-acad-03ec06e6c71b"
        },
        "item": {
          "id": "dba2a1bf-9f29-4701-a98d-38d79750dd52",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3cf18aba-6145-4a2a-9656-84a1b101048c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d93b9e-5146-4f50-af39-49b1c59cc7a6",
        "cursor": {
          "ref": "bb9aec1f-3360-475e-99a0-9d64941ab9ca",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0e678e19-8ed0-4612-83eb-b716ceff0639"
        },
        "item": {
          "id": "46d93b9e-5146-4f50-af39-49b1c59cc7a6",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "96325462-f1e5-490d-b794-18ddef910c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6245b7d-47a0-45ec-a85c-05dc5fc3b1e3",
        "cursor": {
          "ref": "79f83e35-0203-4dd5-9951-ff38b3d2b565",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1afbc57b-f08c-41f8-a9f4-06f96a4953f7"
        },
        "item": {
          "id": "f6245b7d-47a0-45ec-a85c-05dc5fc3b1e3",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "25afb4e0-0cf3-4aef-b08c-04923fbb8cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac339839-f29d-4ebb-9b5b-5b9d8ab61093",
        "cursor": {
          "ref": "dc4b8e2c-86e9-4141-90ef-67f5a6cae8e4",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "dee3be6f-b040-4064-b88c-ae11851f8605"
        },
        "item": {
          "id": "ac339839-f29d-4ebb-9b5b-5b9d8ab61093",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b106ea1a-3487-4d72-9b9c-87533acef520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ddb62ad-01b7-4bd3-91df-82568272de8c",
        "cursor": {
          "ref": "2ecd77fe-17c2-4bee-99ae-3a8d3dc53f26",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b5b5d579-7b70-44cd-89da-26a7fb1a1bed"
        },
        "item": {
          "id": "1ddb62ad-01b7-4bd3-91df-82568272de8c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "02e99b38-478c-481a-8a31-d0c98fc1fd54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbfc0500-0cc6-4573-8eff-fbf438764325",
        "cursor": {
          "ref": "45dbec2a-cfe0-49c6-b8fa-4fd0415d0970",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c85da734-cae2-44f5-b6f8-9e90c3b04ed7"
        },
        "item": {
          "id": "cbfc0500-0cc6-4573-8eff-fbf438764325",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "533249cf-4015-474e-976c-c262508b3701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ad6c47-80cd-498e-994d-6d322f623343",
        "cursor": {
          "ref": "4a16f9a4-c057-4724-b1ae-d3e1b0b0ef39",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e87d0af6-e750-42dc-ad29-3d8820348ecd"
        },
        "item": {
          "id": "38ad6c47-80cd-498e-994d-6d322f623343",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0d342abc-6560-4fb5-91f3-ba036e1d188a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517fe411-0bef-46d9-b0c9-96f60eb26f2d",
        "cursor": {
          "ref": "48efb632-4421-49b9-bab8-1608c2b7d84d",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e9fbf79e-7f05-4f2c-9161-132f5e8765c5"
        },
        "item": {
          "id": "517fe411-0bef-46d9-b0c9-96f60eb26f2d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e27702df-7e19-4cc0-99af-6754a7b44260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1b665c-dcbc-44da-96f3-b8bb48bf9cc9",
        "cursor": {
          "ref": "5eacd223-0d01-4651-abf5-1e770c2d8145",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a7e8ee74-ab7a-46d7-a02f-3e3921d5e630"
        },
        "item": {
          "id": "ac1b665c-dcbc-44da-96f3-b8bb48bf9cc9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "fe66b5c6-245a-4c67-8959-ac9673dc82ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8159920f-bd0d-483e-ab03-bbc266da53dd",
        "cursor": {
          "ref": "2112657b-bdf7-4d8b-aaed-ff52ef493177",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8b219b6b-7d91-4306-8def-07c7c723e351"
        },
        "item": {
          "id": "8159920f-bd0d-483e-ab03-bbc266da53dd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "62c8656a-f3eb-4985-bb1c-8485ce7d4a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f40256-c137-458d-ab4e-8afcc0fc0657",
        "cursor": {
          "ref": "4e01aada-0d62-43f9-a0ca-54b7b90ae843",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ca89fe0f-89e6-42bd-8957-05017dd60894"
        },
        "item": {
          "id": "19f40256-c137-458d-ab4e-8afcc0fc0657",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "23d01a65-343f-4d5a-bf17-c571fba18145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb0f7ddf-2130-4cf5-8e26-dc267e03576c",
        "cursor": {
          "ref": "5eb0da2f-c9d3-47b8-8b06-b7d3e3aaf4a8",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5b4a1501-f4c8-4295-b335-089473fc4b04"
        },
        "item": {
          "id": "eb0f7ddf-2130-4cf5-8e26-dc267e03576c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7d1f0692-0343-452c-8ea0-1b072d86126f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54f6bb9-52bd-4ab9-accf-d7e9d6509aae",
        "cursor": {
          "ref": "531b036b-6d14-47b9-94b8-8aaa267382f5",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2f2a7520-1eb4-4d33-969f-8415083acc9e"
        },
        "item": {
          "id": "e54f6bb9-52bd-4ab9-accf-d7e9d6509aae",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4b7bc6ec-b1b2-452d-9458-5c6ed72c5424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb80743-3b45-4bb4-9eee-ba5a3c0cd528",
        "cursor": {
          "ref": "2f78ec37-663f-46a8-ad7d-5fcbc685de5f",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "16e8a484-fa65-44ff-a464-d76501d224e3"
        },
        "item": {
          "id": "0eb80743-3b45-4bb4-9eee-ba5a3c0cd528",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7673bf41-3da8-40fe-b332-fdb645af8ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3792eb-d132-4d9b-984f-72dc512698ab",
        "cursor": {
          "ref": "61fb253f-3923-4038-85c9-8617e03c6894",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b160c317-86dc-4879-8a83-8ae7071c421a"
        },
        "item": {
          "id": "3c3792eb-d132-4d9b-984f-72dc512698ab",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3f5cb9b9-8b9e-45d5-9032-3ce4d9df7d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca3a82b-16cc-45ae-a376-c8eae713f37b",
        "cursor": {
          "ref": "c9ae0c87-0d93-4409-a3c7-84efd1f668e5",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2fd3a331-14cb-49e4-aa2b-507e5697ea37"
        },
        "item": {
          "id": "4ca3a82b-16cc-45ae-a376-c8eae713f37b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d4e1d705-a9fc-4455-bfae-a3f87c6d262b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37cf2a5-b65a-4a9e-bee1-c13ff0dfee27",
        "cursor": {
          "ref": "49bbbf66-79af-4524-a028-3d93899da8c5",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a38438d2-1364-437f-9ea3-2c0932e3a670"
        },
        "item": {
          "id": "d37cf2a5-b65a-4a9e-bee1-c13ff0dfee27",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5036b43c-df45-44fe-ad2a-a48efe2350ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a48071-ceab-4511-a1a6-b09a0c872f22",
        "cursor": {
          "ref": "a67719fc-01e8-45fa-9860-4615797b36be",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9a4b3742-b8a6-4fd3-857f-b6cd7738ddf6"
        },
        "item": {
          "id": "76a48071-ceab-4511-a1a6-b09a0c872f22",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a5cf11c2-8505-4533-a22d-7f4da6fd9be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ba9c3f-3b52-4e3e-943a-67d52314a007",
        "cursor": {
          "ref": "8e2a9e08-3089-4bc6-ba9a-bafc6637c7c8",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "4fd5c3a8-ef23-4906-954d-feed1d345143"
        },
        "item": {
          "id": "f2ba9c3f-3b52-4e3e-943a-67d52314a007",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f18a189c-d2fb-40d9-93cb-375ce3cb0248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7aa311-5e0a-4d42-a23d-664cb0f82377",
        "cursor": {
          "ref": "c14b5cf9-a1e2-47c5-b470-70f08564999f",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5bdd14a9-47f8-4b32-b458-050cbc359524"
        },
        "item": {
          "id": "1e7aa311-5e0a-4d42-a23d-664cb0f82377",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d81f2e40-fbd3-4a0b-9a1b-bc7569856f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b73288f-16c9-434c-ab17-d7c54b9335ef",
        "cursor": {
          "ref": "1be5d5af-8946-422e-bc4b-08cfa5192f00",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4dd9b9ca-58cc-46e2-ba42-778efe9854d1"
        },
        "item": {
          "id": "7b73288f-16c9-434c-ab17-d7c54b9335ef",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c598fef0-6ba4-4ea7-bbb3-fe7d1e6422f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856aa937-6f41-4246-8a4e-182ba0e147a9",
        "cursor": {
          "ref": "aca3cebf-da43-4437-8b4d-a5e4ff33d369",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a6955c56-225c-435a-9eb7-9238ead73a78"
        },
        "item": {
          "id": "856aa937-6f41-4246-8a4e-182ba0e147a9",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "14ed7158-8342-4e2f-8a91-7700f6b72996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1928e737-cad7-496f-b046-51eb8b3507de",
        "cursor": {
          "ref": "65a261bb-e37e-472c-a5ee-4dc4ce1f0b6b",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2c38a9cd-9db4-4f01-b316-ca91efc8f492"
        },
        "item": {
          "id": "1928e737-cad7-496f-b046-51eb8b3507de",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1eccb5c4-679c-4cfd-9446-54164175aa5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea1c285-3fc0-426c-bb3f-e2c6bcaad77b",
        "cursor": {
          "ref": "1a16b30d-24be-4ec7-ac53-82272bc018cd",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f20b83f5-f0fa-48a3-ad7e-a16a1424d9ec"
        },
        "item": {
          "id": "8ea1c285-3fc0-426c-bb3f-e2c6bcaad77b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f34c2109-a519-4a1b-b63f-6e724df4301f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb5d4a8-d25d-4c76-8eec-e43c5715f1a2",
        "cursor": {
          "ref": "ed8db080-94b6-4a4a-985a-10f9f0a30719",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ff561190-2c42-4164-ad31-403b1d82d76d"
        },
        "item": {
          "id": "dcb5d4a8-d25d-4c76-8eec-e43c5715f1a2",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d77aedcd-2b3c-4b47-8c6e-0b597075e7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa29a1c-9a7f-43a4-880b-3db7ba9b4293",
        "cursor": {
          "ref": "c2bd95b4-edc0-40ea-82a3-212deb201120",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "11d6da72-bce6-40ac-9d46-e2bf783197c5"
        },
        "item": {
          "id": "3aa29a1c-9a7f-43a4-880b-3db7ba9b4293",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4dfb1268-fa99-4657-a375-db0fcca131c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf743f64-c936-4efc-8e08-a172423b25d5",
        "cursor": {
          "ref": "f24c54f4-aea2-4bdf-9f94-599288ec3a38",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3816007c-59d8-4993-a0ae-9eb23f46163f"
        },
        "item": {
          "id": "bf743f64-c936-4efc-8e08-a172423b25d5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "bc3e9574-7512-4c34-b651-e5e02752c819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55961395-431f-4ac0-b4c9-293c472aab29",
        "cursor": {
          "ref": "b17a79d6-a989-448e-83a3-0fc862bb640c",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "128086a5-2174-423d-8594-8a13becdf177"
        },
        "item": {
          "id": "55961395-431f-4ac0-b4c9-293c472aab29",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0f7a27bb-0914-4821-9d32-85f08cbe7058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a3120a-de59-4e62-8953-3723300a7e22",
        "cursor": {
          "ref": "721e059f-7e57-4f08-ab4b-c6db055f3c3d",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "92a27a36-2d03-4863-891f-057dc31112ca"
        },
        "item": {
          "id": "e2a3120a-de59-4e62-8953-3723300a7e22",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "787be95e-9701-461c-b8c7-86fb02d261c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d57ab4b-ddc7-4250-8bdb-c9d38cfa92b4",
        "cursor": {
          "ref": "8d0150b3-fa8c-4bb0-996c-57a82257fbf2",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b27c0ce5-8ddc-42e4-bde0-bff2dfe470b2"
        },
        "item": {
          "id": "2d57ab4b-ddc7-4250-8bdb-c9d38cfa92b4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b15e40fc-5973-494e-859c-72724a7b761d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ceb7239-a8dc-4b95-904f-fb21f2168e61",
        "cursor": {
          "ref": "01c5b2b8-a51c-49a7-8f8f-dd8d51651c46",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f8510565-5c70-4246-86a0-462a7dabb230"
        },
        "item": {
          "id": "7ceb7239-a8dc-4b95-904f-fb21f2168e61",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "899f97f0-5d26-4ac4-b523-aef80c60e672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2355d1a7-9e9b-43b1-ac87-bb8b98214ebb",
        "cursor": {
          "ref": "227b9d84-32a7-4414-bb96-d247390fa792",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "3ce6463a-9e64-476c-88c4-5215529cbc42"
        },
        "item": {
          "id": "2355d1a7-9e9b-43b1-ac87-bb8b98214ebb",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "37c8b208-0b1d-423c-8eae-61c55a0658c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec02edd-db95-4126-a460-5fae6b44f041",
        "cursor": {
          "ref": "3d8417c2-5bb5-4856-9875-f3ed4aeaf6ad",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b6d52125-b4ca-4083-82f2-fee2d351ad57"
        },
        "item": {
          "id": "6ec02edd-db95-4126-a460-5fae6b44f041",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1ea435b5-bbfd-41be-9050-1e77b5b81f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd280d05-e108-426b-bcd9-9c44b6bbd56b",
        "cursor": {
          "ref": "a5f202db-bc2d-4c58-a8d8-f83734ca82e8",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "50cfc303-da2c-4290-973f-6dc74700ea4a"
        },
        "item": {
          "id": "bd280d05-e108-426b-bcd9-9c44b6bbd56b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f5e6ca24-ca13-42e9-9c7c-f0b18764dbdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f09eda-dfa4-4c4e-801a-3c5c120b07d3",
        "cursor": {
          "ref": "fcaab871-451d-49b6-b01d-325a744b4c35",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "90ca483f-42d8-4e70-a776-b10414cc663a"
        },
        "item": {
          "id": "09f09eda-dfa4-4c4e-801a-3c5c120b07d3",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "96a3cbe1-d8d8-4830-a12c-3a7f344c1634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6589965-6758-4b8b-85de-d8837dda98df",
        "cursor": {
          "ref": "837bebf8-2a87-4e31-93a7-512cb2c8a0b3",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f3a29b84-2fdc-4ebf-ae53-82d91e61e708"
        },
        "item": {
          "id": "e6589965-6758-4b8b-85de-d8837dda98df",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b3ab2045-8263-40c6-b5bb-6ec5a7de79d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785e94cb-5651-4b62-b3ab-e685f4312079",
        "cursor": {
          "ref": "a9e8a766-a65f-4af5-aa18-90cd1ddd9dd8",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b79e2102-7319-4678-8c46-8d3fbe4c117b"
        },
        "item": {
          "id": "785e94cb-5651-4b62-b3ab-e685f4312079",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c06e36e6-85ee-4da9-b84d-e97212b4970e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c94c697-1e39-41ec-b148-cacb2ba736c5",
        "cursor": {
          "ref": "7243f36a-8a00-42d8-b9a2-a1a56edfa6f6",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3ba457a0-5f46-4a1d-b2cc-b63cba3e777f"
        },
        "item": {
          "id": "3c94c697-1e39-41ec-b148-cacb2ba736c5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2f6c9112-c44d-4764-91db-5b9ca70f6f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b05b98-a85f-48c2-9ec5-8cbc7513ab95",
        "cursor": {
          "ref": "b3062b2c-870e-4b1b-bfb6-b3e4b36f1f3b",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c9ca00dc-f298-440f-ba9c-da3a95093625"
        },
        "item": {
          "id": "99b05b98-a85f-48c2-9ec5-8cbc7513ab95",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0d7c34ee-6588-4784-bd7d-8406a00dfb40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ef3328-0cd1-4f8a-9211-6bc13e81daaa",
        "cursor": {
          "ref": "69ee7d92-0f5b-471b-9652-8df171f78e36",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "24129bd8-f0d8-47a0-97e2-4383a5dc7ce3"
        },
        "item": {
          "id": "52ef3328-0cd1-4f8a-9211-6bc13e81daaa",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "10570610-50db-4193-bd8a-69165f10eef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492a59ce-79ac-4242-8988-46625d7d7bd2",
        "cursor": {
          "ref": "28ed6bcf-89d1-439d-9079-13b7d5d87898",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3b0e1e4c-691d-47aa-92fd-91c4881a2e3d"
        },
        "item": {
          "id": "492a59ce-79ac-4242-8988-46625d7d7bd2",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fcaa94d0-a42f-42fa-b674-c846fc6b0bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c441d3-0ddb-4b92-9bb8-857ab0560beb",
        "cursor": {
          "ref": "2ff15bc1-1a90-477b-947b-d5d64ed80c91",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "23dbc24f-e0cd-4ca1-8a5b-7c70e2036d79"
        },
        "item": {
          "id": "f4c441d3-0ddb-4b92-9bb8-857ab0560beb",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "44bb72fa-39cf-45f3-bc1d-f839366db5f0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78cc313e-7e06-4ae4-bbbd-90ecdb863509",
        "cursor": {
          "ref": "bc660435-d844-4415-a091-6f87c218105d",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "24ab1c28-a782-402e-9198-321be0a96a62"
        },
        "item": {
          "id": "78cc313e-7e06-4ae4-bbbd-90ecdb863509",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d505d6d3-c04c-4090-a39d-d34569951fe8",
          "status": "Created",
          "code": 201,
          "responseTime": 6634,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f8d8b7-8dc8-46dc-a5b6-54ab64dae129",
        "cursor": {
          "ref": "26e6c95e-c6cb-4407-b504-5141565abd2c",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ec554cce-9b21-4d8b-a9a7-a7edccd48bcb"
        },
        "item": {
          "id": "b1f8d8b7-8dc8-46dc-a5b6-54ab64dae129",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b3a3c2e9-9a6a-4134-a4e3-9170f5a40d9c",
          "status": "Created",
          "code": 201,
          "responseTime": 5641,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4154bfb3-41a0-43cc-a4f4-435c6fea6857",
        "cursor": {
          "ref": "9ef2035f-02b6-44c9-8ff3-728fb1c3976b",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "23d28965-3a9c-4628-b19a-a50a78c7929f"
        },
        "item": {
          "id": "4154bfb3-41a0-43cc-a4f4-435c6fea6857",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1433e316-803a-4a11-90a6-e6065bc1ac81",
          "status": "Created",
          "code": 201,
          "responseTime": 5741,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9bdfa93-b877-4175-b96b-4772b83ab221",
        "cursor": {
          "ref": "f2c43e97-12a4-4ca4-9b72-5475dbf86c11",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "fce00027-8cb3-4f1c-a34a-c202e4aad8ce"
        },
        "item": {
          "id": "a9bdfa93-b877-4175-b96b-4772b83ab221",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e973e5cc-a972-4030-8fb6-e369cdb28044",
          "status": "Created",
          "code": 201,
          "responseTime": 6673,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8701243-11a6-42ce-9632-1de677379e49",
        "cursor": {
          "ref": "b66478bf-0bec-4d51-b713-0631812716b0",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "eb3824e3-83eb-4693-bedb-018adbce2699"
        },
        "item": {
          "id": "b8701243-11a6-42ce-9632-1de677379e49",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b4b82803-5da2-46ac-a177-b7ffdaf3fcd3",
          "status": "Created",
          "code": 201,
          "responseTime": 5401,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "3923c7df-6aa3-4aa4-925e-2937004803e0",
        "cursor": {
          "ref": "36e56164-8ca3-408c-a6c4-a01857223445",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ee1402a5-20eb-40d3-8c3b-6ec81153bb39"
        },
        "item": {
          "id": "3923c7df-6aa3-4aa4-925e-2937004803e0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f31ccabf-a74f-4829-a58b-28cf446c3a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "2dc2dc8b-cafb-4252-9792-1f2d0c475cf1",
        "cursor": {
          "ref": "5d0c4685-3693-4428-b68e-54da86b1e169",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "6a1190df-cb6f-4ac0-b4f8-8ce7e99b8cf0"
        },
        "item": {
          "id": "2dc2dc8b-cafb-4252-9792-1f2d0c475cf1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9384a6be-f31b-421d-84be-e6bf9661149b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "375fe6c6-fed3-494e-9e76-8068eda2445c",
        "cursor": {
          "ref": "147cdda5-bb51-4e60-9cfb-57d74a7e9982",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "074001e5-cca6-440b-9356-e29a91054398"
        },
        "item": {
          "id": "375fe6c6-fed3-494e-9e76-8068eda2445c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b286618c-71aa-47ba-a786-b66f10ee217a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063fd6c1-27b7-4ded-9b72-37c7399b9b66",
        "cursor": {
          "ref": "06ee646b-5b06-42ea-af2a-447d56400230",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b531a5aa-d822-4658-8970-7339490fa3f8"
        },
        "item": {
          "id": "063fd6c1-27b7-4ded-9b72-37c7399b9b66",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2be542bf-f325-464e-9605-ea4d5b890654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d605e04-2216-4387-90bc-4f3174b5f564",
        "cursor": {
          "ref": "2e518f7a-f143-4b9b-8bd5-f52b4b648f1b",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "47bc620c-e2e7-4fe7-90b4-3353b3204699"
        },
        "item": {
          "id": "6d605e04-2216-4387-90bc-4f3174b5f564",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "08f58aea-abc7-4618-b1ad-48f46758248e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957ec666-39bd-4cca-937a-d57cd2c832da",
        "cursor": {
          "ref": "40af04f1-29f6-46be-b5f1-b2729fb4fa54",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1fed37d3-7589-469e-98ed-e8ca29dd950b"
        },
        "item": {
          "id": "957ec666-39bd-4cca-937a-d57cd2c832da",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3915bf18-203b-48d3-9c3f-6f8f87411b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32151045-0c40-45d8-92f1-a34c228c5733",
        "cursor": {
          "ref": "3b7826f2-b651-4305-8e07-c2d955a32de1",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "be05051f-65a5-46e9-bd95-eb2ba08867b2"
        },
        "item": {
          "id": "32151045-0c40-45d8-92f1-a34c228c5733",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "481607c8-f0ba-4150-9ee8-4efae003c733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f77e6b8-d02f-4348-a165-a6a390c1b6b6",
        "cursor": {
          "ref": "b8f3d767-552f-4fb6-99e9-af7041e5cb75",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "55da1667-fccc-4c62-bd1a-dd0340e73282"
        },
        "item": {
          "id": "9f77e6b8-d02f-4348-a165-a6a390c1b6b6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6f37148a-e20f-42b6-87ad-051f3ecd3149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02ecdbe-6744-4c93-a332-1d5ff856a910",
        "cursor": {
          "ref": "c1bfaa92-9f7b-47d3-926f-fc76c97df336",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "24b61e79-c3fa-48c4-b1c0-1be6320ecdb0"
        },
        "item": {
          "id": "a02ecdbe-6744-4c93-a332-1d5ff856a910",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c36056ed-4edd-49b7-bb33-c27b13d906ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6c2c54-6dd4-47a9-90b8-84daf56419a5",
        "cursor": {
          "ref": "f31fa87b-9857-4651-a2af-9c841c30ec96",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "dd90722f-1296-4c79-b1e3-45ae1517ae6f"
        },
        "item": {
          "id": "5a6c2c54-6dd4-47a9-90b8-84daf56419a5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7fdc2a31-c2cb-4f93-bf78-1b48a71c6f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584f686c-8e84-47ed-b358-6a321b13d37c",
        "cursor": {
          "ref": "9ba86864-b01d-43ae-8a81-24759e29b9ff",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b2419c69-7cfa-4379-8b4a-8a46ac006126"
        },
        "item": {
          "id": "584f686c-8e84-47ed-b358-6a321b13d37c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ebe98fac-6e56-4184-81d1-4de160ccb77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89b7709-2c5f-47ee-a696-cad53f4127bb",
        "cursor": {
          "ref": "7830e4a8-efc0-45b7-b08b-97151eb67153",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0be3cd1a-b7ef-4263-9a19-0c082f498eb3"
        },
        "item": {
          "id": "e89b7709-2c5f-47ee-a696-cad53f4127bb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b405c0f2-e746-403a-8d9c-a398883c7a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f95803-db21-4fff-acd8-22b73a9a95d0",
        "cursor": {
          "ref": "7504d1e0-1d35-48b3-b0f4-4eaf2a5fe2f9",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f7a71374-994d-4fe0-a496-f9ba1939c0de"
        },
        "item": {
          "id": "31f95803-db21-4fff-acd8-22b73a9a95d0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e1375d34-2d09-4e03-abcb-4ee9b094b811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4917e6f-d111-43e3-b49b-0feeb8790e49",
        "cursor": {
          "ref": "a5ea9aaf-c377-4d49-87ab-7735122050c5",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d62a1efa-9778-4bb5-990a-7daba2be71da"
        },
        "item": {
          "id": "f4917e6f-d111-43e3-b49b-0feeb8790e49",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1923d975-c90d-4597-a5a0-f309874a2fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0a0fa7-3c8b-474c-a431-e961c2f7084b",
        "cursor": {
          "ref": "0dc7e447-b042-4077-a206-081b6f0cdc63",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9bbe1924-0a8e-455c-9324-4ebfd86446ef"
        },
        "item": {
          "id": "1b0a0fa7-3c8b-474c-a431-e961c2f7084b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "09bac5a9-7ff9-424a-bad7-b08a048903d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a404a5f-d815-49ea-be06-67729c5de21b",
        "cursor": {
          "ref": "d1ba05d0-7820-41f0-86b1-a1db15eed5e7",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "6c0421f4-f234-48ca-9d4a-d37b07f5a667"
        },
        "item": {
          "id": "2a404a5f-d815-49ea-be06-67729c5de21b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3b145128-a47d-43d0-842d-051565cd4e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df816086-f99d-4868-be28-6e519837aefe",
        "cursor": {
          "ref": "dd5ad646-d065-4305-b49b-113e9679bc77",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ff692cdf-de0b-457d-8250-d3e203d66518"
        },
        "item": {
          "id": "df816086-f99d-4868-be28-6e519837aefe",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9f901213-c229-4605-b452-da3b447f44d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e120a2f3-e1a5-4304-88ba-c7cf43899610",
        "cursor": {
          "ref": "9c7e9e22-3747-4283-abcf-067a0cae2ad8",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "976dcd78-340f-4e18-a9e5-e00db5607e1c"
        },
        "item": {
          "id": "e120a2f3-e1a5-4304-88ba-c7cf43899610",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "622db565-656d-4143-a790-491273fbcfbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4453070a-b14d-45c0-9b14-23ffb9f38836",
        "cursor": {
          "ref": "71c28938-cbab-464d-8e9a-04683ad895e5",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "165c1636-130c-4fab-8d8e-5cab8a74808a"
        },
        "item": {
          "id": "4453070a-b14d-45c0-9b14-23ffb9f38836",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5ffa98ee-af35-4f50-87d8-2f034c19e58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a64b9a-67ff-49af-bf7b-7bf25a1fd12c",
        "cursor": {
          "ref": "2a4b3b69-1e4a-46a9-ac61-9131413ad441",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3ba4c61d-bc0f-43f7-a3d4-0754f7043a53"
        },
        "item": {
          "id": "f9a64b9a-67ff-49af-bf7b-7bf25a1fd12c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "156a8cf1-fc14-4d3a-83e7-053d379efd87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43643653-4f54-4ec3-9dec-3d1974179ef3",
        "cursor": {
          "ref": "cbfdd5d0-953a-4c72-bfc5-c9f51684cf51",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e1665778-1b5e-4897-b95b-c05c5237c428"
        },
        "item": {
          "id": "43643653-4f54-4ec3-9dec-3d1974179ef3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c16439d2-c7af-41f4-97f8-9b9982b7da98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ccb6d67-1ae8-4fb5-ac8e-36385864dec0",
        "cursor": {
          "ref": "ea7621ed-d7da-429d-b9b7-f8e2cf70c60f",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "611b59ee-fa55-4ed8-8933-e99dc649eaf1"
        },
        "item": {
          "id": "1ccb6d67-1ae8-4fb5-ac8e-36385864dec0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ee920469-90c8-4ddf-be3b-92603bb57582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc4c44a-267e-4fe4-b9dc-c4289f269071",
        "cursor": {
          "ref": "27888526-a996-457f-9347-fcff6f9af71b",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "523494a9-91ef-4f2f-b6f6-634c53d00f3a"
        },
        "item": {
          "id": "7bc4c44a-267e-4fe4-b9dc-c4289f269071",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e0154083-ff9f-419e-a0eb-04f4b6a0994b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d57569-5457-43c1-8b4a-18f12cadb337",
        "cursor": {
          "ref": "8ecaa1ec-ca99-4e39-bdbd-5924f76d420c",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8d9e55b0-ca07-49e4-a598-aba0e391a93b"
        },
        "item": {
          "id": "09d57569-5457-43c1-8b4a-18f12cadb337",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "528aea7d-b9c3-4f15-82e7-872a46eac960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4a0c08-2b16-4772-8f0b-839dec56365a",
        "cursor": {
          "ref": "a4a1dc35-0587-45a3-aa13-8652cd37a786",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d519b4be-6e91-453b-a9f1-6abe7c30038f"
        },
        "item": {
          "id": "6b4a0c08-2b16-4772-8f0b-839dec56365a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7bf2c6f6-7fed-401e-b74b-0ac649424c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3547b3f6-2faa-4a0f-84b1-660b9ba0e4e5",
        "cursor": {
          "ref": "df7e2fd8-00ed-4523-b9f5-2a82271d4952",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ea72404d-6e6d-4888-911b-4feeb21c83a6"
        },
        "item": {
          "id": "3547b3f6-2faa-4a0f-84b1-660b9ba0e4e5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0461463a-dad1-4041-bfeb-182ea7c2e81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8836d9fb-3652-47df-9c2a-fdc439b715b4",
        "cursor": {
          "ref": "412ec3d0-0bc8-4380-b658-5e361df7f278",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3525298d-58cd-45e8-bc40-3c659772ecff"
        },
        "item": {
          "id": "8836d9fb-3652-47df-9c2a-fdc439b715b4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4e392167-356a-4528-ac5c-eafe853bde82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aec18c9-54bb-444b-af06-1b0d42f2d089",
        "cursor": {
          "ref": "5c19a1b6-4a5a-4a05-b39f-ab452fe4b7b4",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c58ef38a-9620-4aca-bade-943dd67f1479"
        },
        "item": {
          "id": "4aec18c9-54bb-444b-af06-1b0d42f2d089",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2d375059-1f6c-4c09-9d15-9840b89f4ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff047cf-1505-45d8-923a-7f38bbc8f7ca",
        "cursor": {
          "ref": "4d10d7a8-c3be-4b9e-bc28-67d72623bec8",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e5ba5b13-ed78-44dc-a0aa-d3f209049f78"
        },
        "item": {
          "id": "1ff047cf-1505-45d8-923a-7f38bbc8f7ca",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "918c091c-66db-4f4c-b0ae-4363e61c60cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14fc78f5-3b77-4b80-a9ca-1fd82a313227",
        "cursor": {
          "ref": "0da5544d-d6ff-4a6a-899e-0889022e109b",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b71bced3-a971-4779-b7ff-0dedab4eecfc"
        },
        "item": {
          "id": "14fc78f5-3b77-4b80-a9ca-1fd82a313227",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4194d324-f345-4bf4-a96b-a6aa0e14d7a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74577057-df00-48ac-b974-9fec703bfbed",
        "cursor": {
          "ref": "f7c980fd-f23b-4cc2-b96a-ad763dc2d86f",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9fdaf44c-7f53-4532-8cc4-0c3e18264a4f"
        },
        "item": {
          "id": "74577057-df00-48ac-b974-9fec703bfbed",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8f8f8f08-a849-40c0-bf58-46cac7ddd2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6667864d-59be-4552-ae89-d4f26948399c",
        "cursor": {
          "ref": "38bc7c5e-1d5f-4045-9324-77c9d70ecad3",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3e1bddb6-4af9-40ff-95b5-ec4dd267006f"
        },
        "item": {
          "id": "6667864d-59be-4552-ae89-d4f26948399c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c6568fe2-4909-46ea-8c21-b6ebfcc142c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5968b50-06f0-4752-a892-21af27ae59fe",
        "cursor": {
          "ref": "98aed907-d774-4545-9747-510ed5a4fdd7",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "81e49fdf-0706-4560-9b6b-f89616bb7b79"
        },
        "item": {
          "id": "a5968b50-06f0-4752-a892-21af27ae59fe",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a2deddd1-c931-4324-8b0f-64169a2c8565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f02c9ae-fade-4d41-bfb0-fb2e67469500",
        "cursor": {
          "ref": "921daab5-4d93-4a31-b5a3-b839fc33f852",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b3d89728-1103-4211-9433-5b69b33b6fa7"
        },
        "item": {
          "id": "4f02c9ae-fade-4d41-bfb0-fb2e67469500",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "db8ea8ff-612e-47a3-b4e6-6a18978b0c23",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921b30bb-0620-41a3-9f02-dc53c813011d",
        "cursor": {
          "ref": "2a02cd98-26e4-4749-9c3c-31d01e4de965",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7e669ed8-829d-4cc0-be2a-02ea26267447"
        },
        "item": {
          "id": "921b30bb-0620-41a3-9f02-dc53c813011d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ae20bc57-daf4-4bf5-94b7-6fd64902ead9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f830e04-3f37-451d-b16d-0bb0d55a9df8",
        "cursor": {
          "ref": "567d3bb9-b784-4afe-8b4e-3b28241c8b62",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0923e083-7638-4d3d-8643-edc2d1d93047"
        },
        "item": {
          "id": "0f830e04-3f37-451d-b16d-0bb0d55a9df8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9443be5c-3fef-4fc1-923d-9e493b4b9c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57e79df-d242-4d24-8feb-852e8ff1bebe",
        "cursor": {
          "ref": "f5c8af6a-7f3a-4510-bce8-6cfa03c5d0c0",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8a264cc7-cf16-440d-b5a6-1a4d19097ae2"
        },
        "item": {
          "id": "b57e79df-d242-4d24-8feb-852e8ff1bebe",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4b23920c-b428-447a-86dd-a60c65f53f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88e3169-3f32-48aa-9c04-804701935af1",
        "cursor": {
          "ref": "0606006e-93f4-4dba-a28e-e2a4cd98b295",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2832f5cb-85d3-4cc5-9c29-e3e012c4e116"
        },
        "item": {
          "id": "e88e3169-3f32-48aa-9c04-804701935af1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2e44cd70-7405-4b51-b5d5-b9ff25541732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232cb6c3-5181-4149-9e5c-e8cc3d60f3be",
        "cursor": {
          "ref": "dad280fc-e97f-4964-9558-41e81f51a07c",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6e7be7a4-9b8f-4319-89c8-8006e1aaa681"
        },
        "item": {
          "id": "232cb6c3-5181-4149-9e5c-e8cc3d60f3be",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d6856c8e-0186-44fb-b14e-fd9e8c352961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b45b0f-5787-46f3-82ca-2fc7caf41e2b",
        "cursor": {
          "ref": "7229d21f-badc-4149-ba6c-1351fd163443",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "be4fd520-8dca-439c-b3dd-df2d54f27488"
        },
        "item": {
          "id": "71b45b0f-5787-46f3-82ca-2fc7caf41e2b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d17d9bf4-81a8-4c98-a14f-7c1fcd0fd007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72924d8e-7ab6-4694-bbc8-45f78c564df6",
        "cursor": {
          "ref": "499a6f24-daf9-41e5-847f-d525af5e3fcb",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "581d21b7-c461-43d2-b71a-481833cacff1"
        },
        "item": {
          "id": "72924d8e-7ab6-4694-bbc8-45f78c564df6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6ffd907d-915f-4a24-bb90-0d13703fd35b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f69bb88-52b3-43b3-858a-a12290ec2732",
        "cursor": {
          "ref": "b13ec72e-33fb-482b-8436-f878af55c0b3",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e340fe21-1212-4c36-b0c6-7e2c254680a5"
        },
        "item": {
          "id": "9f69bb88-52b3-43b3-858a-a12290ec2732",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "506c418a-7a99-4a7c-8d6d-0813ac84202c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7bf972-dc24-40fe-ab70-58a43b7a341d",
        "cursor": {
          "ref": "4697945e-66ef-4155-a62f-91e876044f52",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4594a62f-4cb1-4441-9da5-ed552b822399"
        },
        "item": {
          "id": "ad7bf972-dc24-40fe-ab70-58a43b7a341d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "03cc1ba3-91e7-4334-ad87-877819a4247b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931c411a-cbbd-43bb-802c-104a8f1f0b4e",
        "cursor": {
          "ref": "bf169a7a-62d9-4942-9fae-207f10778430",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a6f873f1-c242-489a-9346-a921e174eb2a"
        },
        "item": {
          "id": "931c411a-cbbd-43bb-802c-104a8f1f0b4e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d9bec639-fa6f-48f7-a83a-c4fea11b8195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7374389a-2988-4919-9760-f53477fb7c46",
        "cursor": {
          "ref": "ed8eaca7-5e0a-412a-8613-50bde71cc9bf",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c00d4b1c-a9c7-48df-af9a-0354aad6994f"
        },
        "item": {
          "id": "7374389a-2988-4919-9760-f53477fb7c46",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "feb3448c-4c32-4036-b1f2-009ea8229cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee32a1fb-1ee4-4023-8bbb-59e52cdfd002",
        "cursor": {
          "ref": "dd2df51d-e9ee-45c0-b7be-48a3537ea8e6",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3c660dc3-154e-46c8-91de-faaf2ca68f70"
        },
        "item": {
          "id": "ee32a1fb-1ee4-4023-8bbb-59e52cdfd002",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "63314bee-788e-4eb0-b199-82c278d97491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c25be57-4b2b-4d8f-a99c-ed09a301aff5",
        "cursor": {
          "ref": "3682d319-c943-4986-a250-3f0b319dce14",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "790c185e-98f3-4c9e-9b60-42e1c1d566f2"
        },
        "item": {
          "id": "4c25be57-4b2b-4d8f-a99c-ed09a301aff5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "417e095d-6ce4-4aca-9ed1-e269102ed8ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422c412e-4401-47ed-8974-c2dc83f012d0",
        "cursor": {
          "ref": "e4cbd21a-cfd8-4c81-b1d9-7288f58c117d",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3c87723c-ba0d-475d-bc80-adae6ff245ce"
        },
        "item": {
          "id": "422c412e-4401-47ed-8974-c2dc83f012d0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e5e28ca4-a633-470b-bed6-d80ae1b3601b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d150dd6-20ce-4673-8f54-bfe4f934cebd",
        "cursor": {
          "ref": "4a7cf0a3-ce0d-4c0c-92d5-67ce9b696567",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d3b5e67f-f70b-4642-a885-0f4b11138c2f"
        },
        "item": {
          "id": "0d150dd6-20ce-4673-8f54-bfe4f934cebd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5e5a49d2-aa30-4ae0-a1f3-d71be95fe74b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7a9f27-bd63-42f6-b1e2-2a413187a24e",
        "cursor": {
          "ref": "1a497c9d-9e5d-446d-8292-6f95cc75e17f",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "74889122-a253-457c-9240-2210cd57c889"
        },
        "item": {
          "id": "8e7a9f27-bd63-42f6-b1e2-2a413187a24e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "44ef2c9e-54d7-4935-a367-0765de6616c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f706011c-80df-4478-9507-c6743624faab",
        "cursor": {
          "ref": "f2931b26-9bfb-4c6d-8b08-be45c103c67a",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e04e7d22-0ad8-45d0-a46d-f801f5b7cf34"
        },
        "item": {
          "id": "f706011c-80df-4478-9507-c6743624faab",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "dcb0fbed-81a5-4c0e-ad69-f0a73901dbc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209c0518-5f52-4814-a049-2fb1f3656981",
        "cursor": {
          "ref": "ec32edb2-5013-4f6b-a332-812bc662cdfb",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "74cd9a42-ce0d-4edb-9300-2c3cb125bbaa"
        },
        "item": {
          "id": "209c0518-5f52-4814-a049-2fb1f3656981",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "43b577fa-426c-464c-a53c-1bd307b22626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec7b603-a745-4fdf-a643-c7ec8a43b8df",
        "cursor": {
          "ref": "76c970b4-4dc1-4999-9fad-51fffe495271",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "665a5ba8-02ab-4d1d-84a9-df467e195d95"
        },
        "item": {
          "id": "2ec7b603-a745-4fdf-a643-c7ec8a43b8df",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c466d4f5-e032-4db0-ae53-d11938c1ad78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c93230a-e9f5-47a4-ab31-8c899b7fd267",
        "cursor": {
          "ref": "b4ea8ced-a5e9-4020-9739-4ba8b0e74c87",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4041f71e-d6d0-450c-8907-32dc152b9a82"
        },
        "item": {
          "id": "1c93230a-e9f5-47a4-ab31-8c899b7fd267",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "43b3acbf-2d69-47fa-a041-e96cc31e4d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ede4dd-c418-4eeb-a344-93f264dc1bcc",
        "cursor": {
          "ref": "5b73d344-5b6e-4b81-95b6-3c1fcde30c9c",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "777f5b8a-a56e-4730-bf20-4dd509f97bc3"
        },
        "item": {
          "id": "d4ede4dd-c418-4eeb-a344-93f264dc1bcc",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e95c09b4-1bd8-42b4-ac2f-79aff181a749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ba054b-9517-4eac-bed8-f947ec679d75",
        "cursor": {
          "ref": "c8077a65-409f-4b3e-a756-6f9d1cea53db",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6900690d-52f6-44cb-8c84-506b139a103a"
        },
        "item": {
          "id": "73ba054b-9517-4eac-bed8-f947ec679d75",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3331de99-f779-41a5-9a54-b8059409f258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11cb6dba-2a65-4d9d-b4f3-9a6ffca8b354",
        "cursor": {
          "ref": "fc67013a-c35e-41dd-9a40-b02e218e68e1",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "70afedc2-c62c-45ef-bc73-dae4ab586e46"
        },
        "item": {
          "id": "11cb6dba-2a65-4d9d-b4f3-9a6ffca8b354",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "33214182-ad09-4ee8-a52f-beb5b31a3439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96ae19a-7b9c-4101-94f2-1646ca382634",
        "cursor": {
          "ref": "fbb847fb-179d-4e17-b2df-ba57c6bb92e2",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "41ece3dd-b210-41f5-9a0c-de60eb66e867"
        },
        "item": {
          "id": "e96ae19a-7b9c-4101-94f2-1646ca382634",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "987ce804-c308-46cf-9c46-2147158a48c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e0efb4-ec48-43d4-a97e-39a78e23596f",
        "cursor": {
          "ref": "57172625-4558-4c39-9a89-b710434decf7",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ddf86162-f6b5-4f45-accf-dfa05ba34eaa"
        },
        "item": {
          "id": "35e0efb4-ec48-43d4-a97e-39a78e23596f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bf9d36cc-cabe-4bd7-80f9-0cf69ca5de01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f368bb-1d5e-48ef-95d7-049f19e5eef3",
        "cursor": {
          "ref": "dd2afb2f-a3ec-4ed2-81ff-3e41229c6094",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7522d440-67b6-495f-b7ae-66b00793bdbf"
        },
        "item": {
          "id": "a2f368bb-1d5e-48ef-95d7-049f19e5eef3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e76ab082-6bb8-4d6c-8f50-6450f77b819b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81544b00-debd-4fe2-9afa-f89898dc8104",
        "cursor": {
          "ref": "789ed0cd-20b0-43d0-b625-06712452a9cc",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "80a6bfe9-8aad-4305-8a6c-6cb9c3d9d52e"
        },
        "item": {
          "id": "81544b00-debd-4fe2-9afa-f89898dc8104",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8af38cd2-c7c3-48de-a86d-c72246e3be91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1cc3b3d-c537-498e-b0f5-d635943a8564",
        "cursor": {
          "ref": "180c31be-436f-4353-aae5-d72958e5e5da",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "fbb806ad-004c-4c33-8c25-05dfe0a54bf7"
        },
        "item": {
          "id": "a1cc3b3d-c537-498e-b0f5-d635943a8564",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "02266e16-2c0d-409e-b515-d7090e7001e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2725db9d-3c2c-407b-a074-8b6cebb5d0ca",
        "cursor": {
          "ref": "2bc42c61-cffb-45b6-bb79-54b5d31565e4",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7ec23d84-f68f-42ad-ba9a-8c24418b6783"
        },
        "item": {
          "id": "2725db9d-3c2c-407b-a074-8b6cebb5d0ca",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "17c181a6-c033-45ae-9666-fda3222e0939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75cf9e16-137e-49bd-9b3b-8c91abf2e9a8",
        "cursor": {
          "ref": "22c8ffdc-7fde-455c-ae38-3709aebc7564",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "21d7b703-f4ef-4a3b-816c-594748b8a285"
        },
        "item": {
          "id": "75cf9e16-137e-49bd-9b3b-8c91abf2e9a8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0ef98928-5201-4a7b-a245-ed5d27ca9d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e8dc3b-e05e-4e7d-ba97-424d6bfb005b",
        "cursor": {
          "ref": "f82b0787-cd2a-426c-9161-33d27a5e269d",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "552b95ed-45f4-4cdc-b182-df1a7230a20c"
        },
        "item": {
          "id": "46e8dc3b-e05e-4e7d-ba97-424d6bfb005b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6bf43198-da00-40f2-ae85-d09f44a83d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5cdd5e-43fb-4209-aae9-f2defc9348c5",
        "cursor": {
          "ref": "4f16f6c5-582e-46e4-87db-177587e0d8ae",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a2b9cca5-987b-4c35-9901-ee2d637e2174"
        },
        "item": {
          "id": "2e5cdd5e-43fb-4209-aae9-f2defc9348c5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6adce682-1b62-4704-8c86-602a5417b947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08728369-1bf5-47a9-9812-33d693970f26",
        "cursor": {
          "ref": "39245f81-50e6-43c7-87c8-2fadaac6607c",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e912e5c4-8cc2-45a8-ad88-054ba08dd1f9"
        },
        "item": {
          "id": "08728369-1bf5-47a9-9812-33d693970f26",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "23ea22c7-d8d6-4bc5-9a9f-4c03dc82d798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62169ffa-5939-452f-a844-9c2a8ac2de37",
        "cursor": {
          "ref": "9d2ad388-6aa8-4af9-9fba-5a4af18a498b",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a4f96c20-ee6a-4a98-8b13-931eead9e778"
        },
        "item": {
          "id": "62169ffa-5939-452f-a844-9c2a8ac2de37",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "7f3df7ec-b171-401b-9ed6-b80aa817e55d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cc0ed8-6649-40a6-b71a-2ff46902f01e",
        "cursor": {
          "ref": "fd6be3e7-0ac0-418d-bb4d-69f0b1d3e940",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "02e692aa-ae09-466b-a718-56bdafc68564"
        },
        "item": {
          "id": "08cc0ed8-6649-40a6-b71a-2ff46902f01e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6681cebe-9a71-4f70-8f7a-75b8e0e45867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3f8525-4a4b-439b-8ee0-655880d8e075",
        "cursor": {
          "ref": "c360cb74-49a2-4efc-9610-5241e2cfab88",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f331f049-208b-452e-909c-5da086af9532"
        },
        "item": {
          "id": "0e3f8525-4a4b-439b-8ee0-655880d8e075",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "408d2feb-2633-452a-9a63-3a7ba5e8e8e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347178bb-c118-44d3-8715-024b5ca222db",
        "cursor": {
          "ref": "01c68f74-89a3-4ea6-9aea-7eda1334cc34",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e3d13723-5df9-462f-9a0f-2262317796e9"
        },
        "item": {
          "id": "347178bb-c118-44d3-8715-024b5ca222db",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "65336955-4d92-47a3-adda-619343d2569f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c833579b-44c6-4ef8-956e-0c3a5db9f202",
        "cursor": {
          "ref": "8fe4b57e-e785-4c3e-85ec-5dea58825624",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "31eb6e33-9e63-4233-96df-bd93ce4662d1"
        },
        "item": {
          "id": "c833579b-44c6-4ef8-956e-0c3a5db9f202",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d5c702f5-a6eb-41c5-a3db-0515fab7735a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1769d7f3-1af1-4363-92e0-cee61b83378d",
        "cursor": {
          "ref": "15a3b0c8-1c20-4b7d-987a-04917ce2f1f1",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "501de96e-0876-437b-a592-88fc22ad60d8"
        },
        "item": {
          "id": "1769d7f3-1af1-4363-92e0-cee61b83378d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ce350b5f-30d5-4f93-8368-e2c417d501a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f75998-60fa-4534-b8ad-27c47a5f7daa",
        "cursor": {
          "ref": "e3895a3c-1b47-4c34-9abc-1941aa9e0d98",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "477804e6-ec51-40f4-a12a-5ef4958d1a7e"
        },
        "item": {
          "id": "e3f75998-60fa-4534-b8ad-27c47a5f7daa",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "02a58f31-e8e0-4c9f-85f3-8496b0766ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc81ff1-8204-45a0-8aac-b7907136ab55",
        "cursor": {
          "ref": "af15c59d-e836-4e96-9f3d-8accb30358cb",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ac2c4b2f-3b7e-4e6e-aa82-24af8bafbb7a"
        },
        "item": {
          "id": "cdc81ff1-8204-45a0-8aac-b7907136ab55",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "5b34bd92-1706-48be-87e6-1b4d51b7963e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd5033a-8a36-470f-ae89-fa882a7bf519",
        "cursor": {
          "ref": "f1082522-a838-4741-adcf-257a30ef0100",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2342b09e-c963-4ed0-89ca-f603fb184b2c"
        },
        "item": {
          "id": "4cd5033a-8a36-470f-ae89-fa882a7bf519",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "881a0d6d-8acc-49d1-9ae7-0c9387b9a7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a9ade8-4ca5-4a5a-96e7-e5b1a4ba2475",
        "cursor": {
          "ref": "a8c1ca30-ab11-4d64-bebf-ff5762951bd9",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ad581afb-56b7-4ef8-bb4c-841e20f1df53"
        },
        "item": {
          "id": "e2a9ade8-4ca5-4a5a-96e7-e5b1a4ba2475",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "923bce3c-e46c-424c-9ce7-fcddf0201e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4328571f-baf1-49ea-a763-5b90169375bd",
        "cursor": {
          "ref": "58e2d506-5c1e-43b3-9020-35755d4ba1fc",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "0766e805-fa65-448c-80ec-29cbe985024c"
        },
        "item": {
          "id": "4328571f-baf1-49ea-a763-5b90169375bd",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8232c02b-509e-456d-a019-866fc8cf6e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa84eff-18a6-4410-b991-cd167d96768b",
        "cursor": {
          "ref": "f14fb0c2-e713-4ce7-881e-4c87ebcb67a0",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "548177fb-58f8-4f92-988a-91077acc003b"
        },
        "item": {
          "id": "faa84eff-18a6-4410-b991-cd167d96768b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f2062496-9826-44f9-b51b-5d5a363d0237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4c3778-4bdf-4bea-abd4-9b2f85bcf04c",
        "cursor": {
          "ref": "c676cf92-4f37-45a2-8de8-d609f87bb0ba",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "830f0433-6dd5-4ac9-b97b-7d17ebf7c2b7"
        },
        "item": {
          "id": "9f4c3778-4bdf-4bea-abd4-9b2f85bcf04c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e20c8290-c0e3-43d3-a43c-35a12cddf71a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d9b398-4386-4b93-9049-5c5cc6354e55",
        "cursor": {
          "ref": "376f9c4b-4902-4c0e-a419-20628a67bfde",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "93bf9b9c-a75e-4925-8322-bd75c93897e7"
        },
        "item": {
          "id": "98d9b398-4386-4b93-9049-5c5cc6354e55",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "812d2330-9dfc-4113-87f3-d06c956d7a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a583f6f2-1b11-43dd-b7a9-fd1680b7ab40",
        "cursor": {
          "ref": "48b999a0-6931-4e6a-a190-e7c46d6a16e3",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2627c67e-eadf-4270-bb06-fe0a95423908"
        },
        "item": {
          "id": "a583f6f2-1b11-43dd-b7a9-fd1680b7ab40",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4dab8a44-7969-49b4-9740-5bc5bf52e48e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3366d702-0d09-408f-8914-6a6a4d5758d8",
        "cursor": {
          "ref": "32a3d565-a268-4161-9c2c-e986fee8707c",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "99d4648d-68da-409f-92b8-c9e1c48f995a"
        },
        "item": {
          "id": "3366d702-0d09-408f-8914-6a6a4d5758d8",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "57d0e86a-d3ca-40ee-8f20-665066b16dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "415fa5b2-7e27-44ea-9e7e-01fcf8165f7e",
        "cursor": {
          "ref": "3905b323-db5d-45c8-824f-ac9fb03efc92",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8d901d96-dbce-447f-9ee9-6c8392b5cab2"
        },
        "item": {
          "id": "415fa5b2-7e27-44ea-9e7e-01fcf8165f7e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7cb8f474-345a-4475-90ad-569d0e5963a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a36e07b7-af8c-424b-9b9c-6e295344fa23",
        "cursor": {
          "ref": "c860ed3e-1b16-47ce-921e-caa3fbbc8764",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "41462712-3ce8-423a-9b59-596effea6b36"
        },
        "item": {
          "id": "a36e07b7-af8c-424b-9b9c-6e295344fa23",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "233e8f7f-93e4-4e98-917e-5b47223eb258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5acd67f-5d39-4de9-aefe-5003861c51aa",
        "cursor": {
          "ref": "5edbb807-5a48-419c-9a49-c18a17a63758",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "57e13f2c-0290-4a63-9e50-2733f468a6fa"
        },
        "item": {
          "id": "c5acd67f-5d39-4de9-aefe-5003861c51aa",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d1ec9693-981c-4907-bb77-c81a4cdcbc05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57de34b-9296-43a8-8e4d-f843d0ff71f6",
        "cursor": {
          "ref": "b1ec05e6-d644-4765-8e95-ed29ae0689ab",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d82b9842-72fb-4c29-9487-836c049886a3"
        },
        "item": {
          "id": "b57de34b-9296-43a8-8e4d-f843d0ff71f6",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2af1f613-b2d6-4020-90d4-dc80a1dae984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b889e8-d21d-48a3-b1a8-e19f0ed14c7b",
        "cursor": {
          "ref": "92a1448a-c241-40bd-9cb7-dc704dad7b26",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a35e5bc4-e49b-49b1-94e8-5c578bac8447"
        },
        "item": {
          "id": "64b889e8-d21d-48a3-b1a8-e19f0ed14c7b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "879fe48e-1f3b-4309-abac-38ef31191b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32383b11-d2a8-4234-8277-a33da418dbf5",
        "cursor": {
          "ref": "b01f4713-862c-4f35-91ef-f3d1d8a6d4d2",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "604f7e9b-8d6d-4948-af05-d3e790d77161"
        },
        "item": {
          "id": "32383b11-d2a8-4234-8277-a33da418dbf5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "764529c2-ac14-425a-ad45-68dd91819e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d986b1-3cf6-44b6-9868-cb955b751c39",
        "cursor": {
          "ref": "016f332f-94f7-4628-8b7a-c1008d5266de",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9df08cb8-822c-4d50-bbcb-75e4520e305e"
        },
        "item": {
          "id": "c0d986b1-3cf6-44b6-9868-cb955b751c39",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "96c8f407-9bcc-46a9-8c39-b50b18ea9c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ab09ba-933a-41e9-a629-f38da150aad4",
        "cursor": {
          "ref": "5510cdc7-3d50-40be-abd5-87f097f9f4a2",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b4bbd252-732b-4553-857f-31ace62c9be9"
        },
        "item": {
          "id": "19ab09ba-933a-41e9-a629-f38da150aad4",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "906ead85-b274-4fff-bb46-6548ddb2b59e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf19a130-928f-4628-a8e0-bc58e8e7b19b",
        "cursor": {
          "ref": "dc573ab5-bf5f-4617-88fc-4c9544782d11",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d34081ab-d6ec-494e-8bc1-cf15a1c088c3"
        },
        "item": {
          "id": "bf19a130-928f-4628-a8e0-bc58e8e7b19b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "09a8dbb4-2381-441c-9d9f-79e018d52d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3e493f-0134-41fc-acf3-0c67571efd0d",
        "cursor": {
          "ref": "9bd7ba95-2c56-405c-96a2-d36b780388c8",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4c8782ad-6453-4441-9190-f2e348c3ef7b"
        },
        "item": {
          "id": "2f3e493f-0134-41fc-acf3-0c67571efd0d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e97fe177-4570-448d-8991-64bea3477f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beda5e65-c66f-415a-bfc4-f208a6728ed6",
        "cursor": {
          "ref": "1c39eb43-70c5-4b10-8346-cd18dc9cc594",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c908736e-8ca7-4566-ba1c-65029f4a8505"
        },
        "item": {
          "id": "beda5e65-c66f-415a-bfc4-f208a6728ed6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "debd1db1-d0e9-42e7-b522-8f65c03c4358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41e6e0a-8b89-4619-b4d6-38852901fa31",
        "cursor": {
          "ref": "ee51a44d-ed4a-44d3-8b8d-1d503d96bf84",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "735d4358-b352-4cae-92d2-678fd5bf2a96"
        },
        "item": {
          "id": "c41e6e0a-8b89-4619-b4d6-38852901fa31",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e6f6653a-38b9-4a28-a1f2-2b93c9547b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3789c27-c395-44f9-858e-5d48d89a7d68",
        "cursor": {
          "ref": "73729631-382c-4c45-bd53-e754964e8906",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "40ebed04-8af4-465b-8b7e-507ec5e183fe"
        },
        "item": {
          "id": "c3789c27-c395-44f9-858e-5d48d89a7d68",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "beb632b3-244b-465a-b599-f50c1f584a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5dbd8e-1f17-41e3-9070-4a34ed9c71b1",
        "cursor": {
          "ref": "c16fba99-30a4-4bcb-bf0c-88d4c7870870",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e1e51b6e-115a-4876-a926-300e7b796b2f"
        },
        "item": {
          "id": "7b5dbd8e-1f17-41e3-9070-4a34ed9c71b1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "dc1199b9-3f84-4588-a971-b99b43a989fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3920f828-45aa-44fb-9ead-ef25e686b98d",
        "cursor": {
          "ref": "d0b39906-ed1a-4401-bb2e-14c92d303e7d",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "17c47b7f-3f87-4d05-ba08-c2e635495c1f"
        },
        "item": {
          "id": "3920f828-45aa-44fb-9ead-ef25e686b98d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "69b1832f-a0f1-491d-af03-42bc54b983de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15cd73ef-b45c-451d-ae9c-1c28221b66fc",
        "cursor": {
          "ref": "643c0806-8b65-4e06-9e40-ac56e1409667",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c997acb0-1179-44e8-92cd-1e24e8156ed2"
        },
        "item": {
          "id": "15cd73ef-b45c-451d-ae9c-1c28221b66fc",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ce8b0751-a519-44b9-a4cd-9ae00c18cee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b25cb4b-2129-45f7-a501-7e115085c374",
        "cursor": {
          "ref": "dcbe9874-fac5-4cdb-b0cb-c8aa1f13725c",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f0be21f4-2b21-4a1a-bf4d-988300a65c48"
        },
        "item": {
          "id": "5b25cb4b-2129-45f7-a501-7e115085c374",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "591af579-6e89-4518-a67d-81376128dd83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e1b9fc-5c0f-402d-88e2-2cb5e677420f",
        "cursor": {
          "ref": "9d1cb9dc-3b74-4815-b790-ac12f74f3afe",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "79da6dc5-3a1b-422f-82c9-377a8e1aab90"
        },
        "item": {
          "id": "13e1b9fc-5c0f-402d-88e2-2cb5e677420f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "18a30ec8-a1e6-4f1f-bc9a-ab42444829d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3fc8cf-9ef3-4f1b-8a25-6780cca7fc66",
        "cursor": {
          "ref": "127a6250-0e29-414c-9bf4-2281ccf274eb",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1b6d6fac-7714-4b86-a788-241aa8f8fe34"
        },
        "item": {
          "id": "6e3fc8cf-9ef3-4f1b-8a25-6780cca7fc66",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "afbea4d3-70b1-4dd2-b131-67877ccf14ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74fec395-98ae-45e3-ae87-e1669196c3a2",
        "cursor": {
          "ref": "e889c546-09fb-4ae3-8cf1-51a4aca293b1",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1bff1a5d-c535-4398-ab09-acef281b5f20"
        },
        "item": {
          "id": "74fec395-98ae-45e3-ae87-e1669196c3a2",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "5862a4d6-1230-460c-9330-4bb05356e87e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe52c558-09df-4e3a-8fbf-8c30766d3129",
        "cursor": {
          "ref": "a9e6458c-24fd-487e-9a52-f0408af52555",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a180149c-032c-48d7-b1ca-c8e0ed2e054d"
        },
        "item": {
          "id": "fe52c558-09df-4e3a-8fbf-8c30766d3129",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "04a2ba3b-ebed-4787-a12a-92319d16f992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a3a18f-3679-426c-9e9c-e12155e6cf27",
        "cursor": {
          "ref": "fd6a35ee-0ccc-40c6-a063-e2af4076c609",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0e7f247a-0e03-4cb4-97cd-fea2f644b577"
        },
        "item": {
          "id": "e3a3a18f-3679-426c-9e9c-e12155e6cf27",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2f40dc2e-e41e-41e9-9e26-18c7426c0c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a953552-5821-489e-8196-fb29ef16e550",
        "cursor": {
          "ref": "10b7641f-6c6e-4373-954b-afda91c8dc93",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "699f1ad9-4666-4cea-9634-a368c8d7e9be"
        },
        "item": {
          "id": "2a953552-5821-489e-8196-fb29ef16e550",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7037e6a6-2584-499f-baca-8480f888dea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04510b0-f01e-4890-8ccd-e531c6c000ba",
        "cursor": {
          "ref": "b41e4e9f-2506-49c2-9dcf-9e5a3b169e7c",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "cbfe1391-543a-4ec2-b72f-722f9ebaad29"
        },
        "item": {
          "id": "e04510b0-f01e-4890-8ccd-e531c6c000ba",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1eecb8e1-d506-4550-8ca5-696a4eeb451c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d1c8a3-796b-4ba5-a95d-3edb084ad357",
        "cursor": {
          "ref": "a3682052-c3aa-4e43-82a7-f632dd932b7b",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "aea6d70b-237a-4e53-bc9c-923c2b810a30"
        },
        "item": {
          "id": "38d1c8a3-796b-4ba5-a95d-3edb084ad357",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "75901e4d-56a3-4902-8901-4b7ae66b3d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23c7cb2-1921-4cb9-8a70-5008af6538cc",
        "cursor": {
          "ref": "d27011fa-2fbc-41e2-b3fc-49d2fbdae0d4",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "025d4c87-9370-4b4a-a7cb-ea5de316bdd1"
        },
        "item": {
          "id": "d23c7cb2-1921-4cb9-8a70-5008af6538cc",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1618b1ab-eede-4dde-bd54-f12e057b5a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c96ac4be-9dba-476f-b760-cd11381f8232",
        "cursor": {
          "ref": "453be93e-1914-4260-b1e5-6d992692e921",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0e6b2831-0871-470e-aa53-53e3a3f62370"
        },
        "item": {
          "id": "c96ac4be-9dba-476f-b760-cd11381f8232",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f8367cc6-ec89-48e1-b268-561ccd202b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e35edc-00bd-436a-8d31-63a129c5963b",
        "cursor": {
          "ref": "0fcb9f32-deb2-441f-9eaf-51b8a913d267",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d2b0845a-20ac-4463-9932-80aa71af3383"
        },
        "item": {
          "id": "13e35edc-00bd-436a-8d31-63a129c5963b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "40a83755-8311-45df-ab8a-aaa04bbbcb30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f49c4c0-8b51-4551-8936-943009788a36",
        "cursor": {
          "ref": "4f6a6dd5-1eae-4bdc-8c54-cfeb9177449b",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "af059fe3-b274-46d9-8d27-eb27564364e1"
        },
        "item": {
          "id": "3f49c4c0-8b51-4551-8936-943009788a36",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d7295cb6-445b-468f-b027-0f9e27aa09ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc67c94-6377-4165-a72d-52b409e33be0",
        "cursor": {
          "ref": "8ae32ea5-1a81-4a51-b6a6-5e19b5727259",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0c473b27-f94a-484b-98c2-ea405bef09c9"
        },
        "item": {
          "id": "dcc67c94-6377-4165-a72d-52b409e33be0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a9cc4b24-f391-4691-b881-c86b877c4a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3be48d-e8df-4dae-bf18-9e8189783974",
        "cursor": {
          "ref": "68e65bc5-f520-4f7d-acb9-8d5711e7558f",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8437947e-425b-4bf1-aa14-26b2e7bb0529"
        },
        "item": {
          "id": "9a3be48d-e8df-4dae-bf18-9e8189783974",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1f2b1abe-586d-40ad-aac2-237aecb726b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a81a0a-7366-4137-9472-fc7b0ae3ad65",
        "cursor": {
          "ref": "bd7c14fe-311e-4446-95bf-24835c561c9c",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1eaf0d13-ab2a-40da-a4df-8e0b37c7a8e1"
        },
        "item": {
          "id": "62a81a0a-7366-4137-9472-fc7b0ae3ad65",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a8b5ac6c-8ab5-483c-af1d-030d4a0b0e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e7d526-b39a-42c9-a550-906f1a6a1f25",
        "cursor": {
          "ref": "fca093cd-9591-4405-a13f-2c208eae8d57",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "fa28a151-6a99-4d46-971a-156f4ec0af4a"
        },
        "item": {
          "id": "84e7d526-b39a-42c9-a550-906f1a6a1f25",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "93d3f4b8-f8da-4f5d-a708-effaf7257e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc1d764-dcd9-4b1c-9520-8a70bf30d92c",
        "cursor": {
          "ref": "7743ce88-02e6-4b1b-848d-68f8ce730c5c",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "67870ee7-e45e-4b18-be19-ed81111aadf7"
        },
        "item": {
          "id": "cfc1d764-dcd9-4b1c-9520-8a70bf30d92c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "147e437d-aa0c-4725-8135-d09b9d94a8e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753738ce-87e2-4ce4-920d-f435a4b3ab73",
        "cursor": {
          "ref": "d7674150-72aa-472d-bdf7-05c9f1d3320e",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "779d38d3-7493-4173-b997-cc958aeea770"
        },
        "item": {
          "id": "753738ce-87e2-4ce4-920d-f435a4b3ab73",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d63694f0-a0f0-4837-9cbc-61f6b928dbc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b233b45-3d9f-4760-a55d-c25e1adba22b",
        "cursor": {
          "ref": "b5c82c81-83b7-4419-82c4-172bcd40da2c",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "986756ca-4370-45e5-bbfd-0d0120db5a6b"
        },
        "item": {
          "id": "5b233b45-3d9f-4760-a55d-c25e1adba22b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "929835ef-6c44-414e-ac2e-3d35116cbee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98c20e3-a944-4618-adb5-63c0c74437b5",
        "cursor": {
          "ref": "0cfe2e91-5bfc-4f07-83a2-4a4df2d0a2b4",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "301c0c18-0f68-4105-807a-aa9a047d2207"
        },
        "item": {
          "id": "b98c20e3-a944-4618-adb5-63c0c74437b5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "54ba8a08-237f-4779-87f5-e32988a4b3f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5733b080-6940-46a4-b041-d1c523181843",
        "cursor": {
          "ref": "14d2f62a-aedc-441b-996a-375c1587305b",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "10f1e068-50ae-4718-8700-0a21f3982eb0"
        },
        "item": {
          "id": "5733b080-6940-46a4-b041-d1c523181843",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5ccc898a-e5dd-4163-a705-382cf38671b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f992e65-72de-45cf-b1d3-0a3e320db1aa",
        "cursor": {
          "ref": "e02d48a8-e00a-465d-a9ab-ff0b9934e528",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c436097a-ac03-4524-95c4-45c7591129d0"
        },
        "item": {
          "id": "9f992e65-72de-45cf-b1d3-0a3e320db1aa",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a60d070a-65b2-41a7-935f-4cc5ff0e47bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df669cf0-9cef-42f6-b9e6-bc3cc062ed93",
        "cursor": {
          "ref": "ca4f84e4-e54b-4b1a-8cb3-08f10c8b540d",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4be24b1c-4768-42b6-9d83-cc04cba5bac8"
        },
        "item": {
          "id": "df669cf0-9cef-42f6-b9e6-bc3cc062ed93",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d329a5f7-a4c0-4454-a5cc-f341c2fbc8d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d4f448-fc0d-4ebd-85fc-4c6204d23b95",
        "cursor": {
          "ref": "099fdf1b-69bd-42cf-b6c2-0c0d5f97c1fd",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "be19063c-b4d4-4c07-8539-d47d4c1f2a53"
        },
        "item": {
          "id": "40d4f448-fc0d-4ebd-85fc-4c6204d23b95",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "711f49ba-845b-4aa2-b176-17c9dcc21339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e144c8f7-ed6a-4ab6-b68e-7b0d7a8780f1",
        "cursor": {
          "ref": "9cea6ceb-2c00-4496-99aa-831a50798853",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "88b8207c-a395-4a6f-ba0c-ad98e3c25182"
        },
        "item": {
          "id": "e144c8f7-ed6a-4ab6-b68e-7b0d7a8780f1",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d75f4d61-e98d-4e03-952c-76e00128eede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5810fbfc-8c65-4d7e-bfc5-5408b06a24e8",
        "cursor": {
          "ref": "45fa5545-85b6-4aa2-83d6-a1582d919681",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2c8d217c-04d9-4b3f-b114-5253a3e7d6f3"
        },
        "item": {
          "id": "5810fbfc-8c65-4d7e-bfc5-5408b06a24e8",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "55a1f133-939b-4d72-965b-659afdfc0e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca22df8-4396-40a0-af6f-a9672d724fe7",
        "cursor": {
          "ref": "73bd91d0-ce44-46f5-a3d3-725cad93ff3f",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "669c593c-cad9-45af-a5e9-acb8812fd4e8"
        },
        "item": {
          "id": "6ca22df8-4396-40a0-af6f-a9672d724fe7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c5e99447-0f00-4db6-acca-c75ee55134f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f431a3ba-9eba-49ca-b0ee-960f8e7c38b1",
        "cursor": {
          "ref": "eed333e3-ef84-46ec-85c1-dc6615b72d3b",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0ec0dd6e-7a72-43f6-a919-88c0676c0fb8"
        },
        "item": {
          "id": "f431a3ba-9eba-49ca-b0ee-960f8e7c38b1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b2602e3e-5431-4f39-887c-36e49d876dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa04d6a-fd48-4630-a955-cca261973cae",
        "cursor": {
          "ref": "10a83e2b-d253-4855-8113-3e3d709b0e67",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5dd6fa84-f380-43c9-bba3-63a04daca828"
        },
        "item": {
          "id": "0aa04d6a-fd48-4630-a955-cca261973cae",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e3032b9f-858d-4520-a133-85f7ccde98ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0180656-2848-41a6-92fd-cb2acd4fc688",
        "cursor": {
          "ref": "0cd02427-a462-4091-ae17-5e2c01c9cbcc",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "010683de-c51c-4f02-a1af-82def23acb3c"
        },
        "item": {
          "id": "d0180656-2848-41a6-92fd-cb2acd4fc688",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7e751894-3a0c-42bb-ad19-cf50d8ca8d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cfd4b0d-0f6c-47db-be1e-e089c1809178",
        "cursor": {
          "ref": "0b170250-3316-43a0-814a-55452cbf8de3",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "46e30c55-d57f-4fbf-bed8-cc14610e0f3e"
        },
        "item": {
          "id": "3cfd4b0d-0f6c-47db-be1e-e089c1809178",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "78063999-bc7d-41a9-9b80-000f51cdb7b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a83521-6b84-4754-897a-4c52fe26ae00",
        "cursor": {
          "ref": "d7283114-f6c8-4602-b031-d409b52dfc2c",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b9d73294-6e51-4553-8792-54ec25ffb6b6"
        },
        "item": {
          "id": "e5a83521-6b84-4754-897a-4c52fe26ae00",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a482db0a-85ce-479e-b1fb-4b1d205d08bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e4e2b6-4755-41de-bb4f-10cb1a19b54e",
        "cursor": {
          "ref": "d2e9117f-1018-4554-953e-eedfa42a30cd",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a180e83f-42be-4e44-bc7e-6b56b5d70f03"
        },
        "item": {
          "id": "36e4e2b6-4755-41de-bb4f-10cb1a19b54e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "6e1586fa-39f7-418a-92d1-789a92942c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e03e59b-8f6b-4933-a74a-f848b25b8d80",
        "cursor": {
          "ref": "e51b0355-b600-40e6-a847-b1542a1b88d1",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "36845a4e-30aa-4215-aeb1-a34bddebcd38"
        },
        "item": {
          "id": "0e03e59b-8f6b-4933-a74a-f848b25b8d80",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "82dd2600-4bd2-417b-9a46-06330a02c769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d259fbd9-d377-423c-b4fc-9a166329266e",
        "cursor": {
          "ref": "1ae85f83-d22e-4f3f-bfba-b553ebf07bc9",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "336fb119-2f64-43d1-a2cd-a3de9f679c73"
        },
        "item": {
          "id": "d259fbd9-d377-423c-b4fc-9a166329266e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e29a8e1d-a6dc-498c-80f4-fa58cd450a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d924c7a-fa09-4b90-a184-c055137bf9aa",
        "cursor": {
          "ref": "ecb1b435-3c53-4624-ad89-edd2a95754df",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a3d28c79-a2a2-49b5-9173-494ebabcc4b7"
        },
        "item": {
          "id": "5d924c7a-fa09-4b90-a184-c055137bf9aa",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "35c60744-27e1-40af-bd4d-1228f3d2e3cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9782c11-b93b-4b76-a92c-a5dd7a4ed357",
        "cursor": {
          "ref": "6ca2f2db-5885-4943-899e-dd7191ce85bc",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ef66aadd-02b0-40a7-b451-602510b91297"
        },
        "item": {
          "id": "d9782c11-b93b-4b76-a92c-a5dd7a4ed357",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d82757f0-f1b6-4714-83a6-3ba3e1ffeb85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cffec31-2d6e-481f-9094-f9eadc00f5f5",
        "cursor": {
          "ref": "2727d3f5-32b4-42f2-b4a7-a95efd3854d0",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d434651e-bd0c-4a29-95e1-01e404ce5976"
        },
        "item": {
          "id": "6cffec31-2d6e-481f-9094-f9eadc00f5f5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d6945d5c-20f0-45bf-8048-1d4def151701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be605df9-f761-4c40-9510-32c81097b53c",
        "cursor": {
          "ref": "1fcc0eb5-c533-4670-acf7-e5e6c782f28a",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7fc5922a-8d6d-4284-9b9d-07eb9411fa87"
        },
        "item": {
          "id": "be605df9-f761-4c40-9510-32c81097b53c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "cc160614-3080-4a4a-9873-28523e485baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b7528c-9253-410b-bfdf-06f3c56116e6",
        "cursor": {
          "ref": "a9ecd327-04d1-48ba-9552-b9014ff47277",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "86104354-9449-4f81-873b-6011652c5cfe"
        },
        "item": {
          "id": "87b7528c-9253-410b-bfdf-06f3c56116e6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "569bc453-b1e3-4f7b-8537-d2b51866f4ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b433115e-d3bd-4708-a439-ebea3a68cb6b",
        "cursor": {
          "ref": "7d44f755-a5fb-4b6c-a4b7-5d97b9839b53",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a2ec61eb-5ee5-42aa-a120-5b75aeaac553"
        },
        "item": {
          "id": "b433115e-d3bd-4708-a439-ebea3a68cb6b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a39f4fb8-ac6b-4a75-bec1-c7f2033722d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe752fda-25f5-44fb-bf9c-513371998e4c",
        "cursor": {
          "ref": "09567919-21d6-4f2e-9082-610b8f3b2973",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "02761377-60ad-40a9-b6c4-e97f56dd92bc"
        },
        "item": {
          "id": "fe752fda-25f5-44fb-bf9c-513371998e4c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "593521fc-cf09-41cd-9a81-0e789cd9ad2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9557d8ae-1de4-48e7-890c-65bd94dbf6e1",
        "cursor": {
          "ref": "e871854c-f374-4563-9b6f-dfd16f9ce50b",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "58a33e3f-6b2a-4884-952d-05f0d2d77593"
        },
        "item": {
          "id": "9557d8ae-1de4-48e7-890c-65bd94dbf6e1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "486c8e64-57f5-4b49-aad8-85f8777f5f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c26645-a87b-4a9c-8ee0-62b1da4c0e47",
        "cursor": {
          "ref": "1ae463cc-0b3e-4360-a8be-1fdd5f283bf9",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "18e17ef7-730f-487b-b075-10113f215b40"
        },
        "item": {
          "id": "16c26645-a87b-4a9c-8ee0-62b1da4c0e47",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4f62d31d-b003-4442-90f8-478e90b4a745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee06f1c-7d42-4cd6-ba48-9e47ee73ab67",
        "cursor": {
          "ref": "f21effae-f006-4e69-949e-bc50d5dbe1b9",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "02e199c7-5313-41db-86ac-1475974f5ed9"
        },
        "item": {
          "id": "5ee06f1c-7d42-4cd6-ba48-9e47ee73ab67",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4658397e-9795-43fc-b883-5185f8757ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224dd5f0-2d0b-43cd-bc7a-80adac8dd3a9",
        "cursor": {
          "ref": "dea2e465-b02b-4947-8a42-1615e4fc32c4",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "75993393-c848-4019-a8b0-3c5e8045229e"
        },
        "item": {
          "id": "224dd5f0-2d0b-43cd-bc7a-80adac8dd3a9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2535f4ad-64fc-47c3-8c2c-cf090191e58c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4799eafc-431e-433e-8634-e71b1d2c2b39",
        "cursor": {
          "ref": "a9919437-eac5-4737-945a-7e59622aec1e",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "7be26801-9834-4e6d-8ad6-de6de4725b13"
        },
        "item": {
          "id": "4799eafc-431e-433e-8634-e71b1d2c2b39",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "46c3560c-fe12-4fad-b945-32134f1164b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881176aa-68fb-4f3b-828e-f82316dbe3b1",
        "cursor": {
          "ref": "09138e20-fc8d-426f-aa46-5d8314f1b991",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "afeedb07-1ac9-4366-b850-030a70358392"
        },
        "item": {
          "id": "881176aa-68fb-4f3b-828e-f82316dbe3b1",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2a90a2a5-73c9-4196-b87a-1c03ec2f1af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c8bb91-f54d-4613-a709-4297cdf719c9",
        "cursor": {
          "ref": "d0b65ba8-8670-4afd-aa7f-41483da26972",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "87fa4c17-5cfa-49f2-aabf-3bf83c4cf5e8"
        },
        "item": {
          "id": "d9c8bb91-f54d-4613-a709-4297cdf719c9",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "132f5963-528c-4d13-abd2-aad39f873fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d62f83-73e4-4308-a7c1-e457c18107a8",
        "cursor": {
          "ref": "0e077848-3e73-45f4-ad5b-5bf2aa8f88ce",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "a4955a33-7819-497a-8f57-ffcd6e711fce"
        },
        "item": {
          "id": "80d62f83-73e4-4308-a7c1-e457c18107a8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8e258d9b-94a6-4c97-9ed4-a8161876f711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50be1fd6-3528-4ab1-8fa4-14c630ebece3",
        "cursor": {
          "ref": "1b783b35-606e-40ef-8687-af41373fceee",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "fcb5991a-fe11-4363-8381-ad2b2872fcf2"
        },
        "item": {
          "id": "50be1fd6-3528-4ab1-8fa4-14c630ebece3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ccb01d1c-f828-4e45-8253-47574c21ec09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4368a39b-b68d-428c-bac1-4041ae1e3492",
        "cursor": {
          "ref": "e8e2c41f-792e-459e-a39f-7835a103c1ea",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "689238f9-2528-4bf1-8e80-3f68f0ea2c8d"
        },
        "item": {
          "id": "4368a39b-b68d-428c-bac1-4041ae1e3492",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "476db52c-5e57-4aa7-bc97-4ce0f7ca4529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2604853b-93e6-477b-91bc-ccd9fc84a67b",
        "cursor": {
          "ref": "5e53a2c2-6fd1-4352-88df-625e60989f40",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "f98cab51-6d3a-496a-a95f-697f1b2ae3bf"
        },
        "item": {
          "id": "2604853b-93e6-477b-91bc-ccd9fc84a67b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "54193fae-ec58-44f0-a6ff-24a78dc7912c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4622b15c-106a-4567-b2ef-b6cbc6c9b400",
        "cursor": {
          "ref": "9dfad48c-ffea-4c2e-95ed-18fe26577a0b",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "c4aa8c69-ea7e-4424-9ff9-efafe421d042"
        },
        "item": {
          "id": "4622b15c-106a-4567-b2ef-b6cbc6c9b400",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3c74d4ac-2662-48b3-bedb-a536a172721a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb484f95-3abe-4194-afec-086ba017639a",
        "cursor": {
          "ref": "9b5238e2-091a-4e17-a795-1edec4e88a83",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "7f8e24f3-efd6-4e8c-b1ea-1b50b8cbf3a1"
        },
        "item": {
          "id": "fb484f95-3abe-4194-afec-086ba017639a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "64b54a23-b73a-4c28-a24a-f82412819a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad0e024-4d6e-4f01-9ce8-93b79edfa27c",
        "cursor": {
          "ref": "a052810d-82cc-4fb2-bc8d-3f3e1f874553",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "593d9896-7572-434d-a9de-3bf436e613d9"
        },
        "item": {
          "id": "5ad0e024-4d6e-4f01-9ce8-93b79edfa27c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2ec6d2a7-17af-4f60-968b-58b1dba618a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a5cd10-7394-40bf-827d-a98edc27b82e",
        "cursor": {
          "ref": "8132674c-4b91-4cca-b04f-0e40254d6cc4",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "b1b86f5c-31c8-4319-b143-dc66b8fe5e57"
        },
        "item": {
          "id": "c6a5cd10-7394-40bf-827d-a98edc27b82e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "cc48171c-73ae-4955-b025-b14b28588a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead53e9e-1152-4b1a-9344-f8207d4da922",
        "cursor": {
          "ref": "bc85ea83-3b03-451d-b4a5-6382472db3d1",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "531bd0ce-94e7-4cbf-97f3-7491b6760b14"
        },
        "item": {
          "id": "ead53e9e-1152-4b1a-9344-f8207d4da922",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "49a1e351-fc4c-4a19-b31a-1fab6cb267ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00fc679a-b164-45dc-99c3-d8b63d9f83f3",
        "cursor": {
          "ref": "c3337433-227a-4a66-8fba-bcf208e871b3",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "228b781b-c4f4-4b80-8ca6-9fc5b10ed362"
        },
        "item": {
          "id": "00fc679a-b164-45dc-99c3-d8b63d9f83f3",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6d537f0a-cb8d-483e-9842-142987fa6403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0230d8a7-020d-42d4-a6fe-5895055a5ea0",
        "cursor": {
          "ref": "910fd670-4813-4cc1-9b15-bfb4ce39fc64",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "fed972cc-e8fd-476f-afd7-4aca9cafa4f4"
        },
        "item": {
          "id": "0230d8a7-020d-42d4-a6fe-5895055a5ea0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d15f0c58-b13b-4634-aead-06eee55b8d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b58605-8366-4cf3-a900-7f5aa68215dc",
        "cursor": {
          "ref": "d4b9c499-95fc-4ad0-b333-561b2578fad8",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "e1990229-657f-494c-a2be-3f5664d52fe7"
        },
        "item": {
          "id": "a1b58605-8366-4cf3-a900-7f5aa68215dc",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "bf997d8a-ecc4-4b1e-afaa-8fba62f7f3ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83cf980-96b1-46cb-8269-1721764b8708",
        "cursor": {
          "ref": "a3d6d56d-a45b-4934-9a77-ea9b5eb1e498",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "68d6ad0d-413d-4feb-98e5-c02ece33b032"
        },
        "item": {
          "id": "f83cf980-96b1-46cb-8269-1721764b8708",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a9905365-15a2-45ee-a2b6-a61e7a032ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab43551a-4363-4835-9d73-289d8a8e5111",
        "cursor": {
          "ref": "02365483-0d05-4247-9742-2a51a0fda486",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "92066b24-3f0d-4f4b-803c-63eedb2b7696"
        },
        "item": {
          "id": "ab43551a-4363-4835-9d73-289d8a8e5111",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1ed812d7-e16f-4678-bf86-75f0ff4099e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1f70b9-586b-4712-8574-b42325248fa3",
        "cursor": {
          "ref": "d4792d11-92d8-4dac-b423-101839efdfee",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "c90ee28a-a16f-4dee-afcf-8e31fa7b6a63"
        },
        "item": {
          "id": "8e1f70b9-586b-4712-8574-b42325248fa3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "6747a0b5-5ca0-49d1-b587-b72ca4aba1a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a5537d-5aa4-4e95-bba2-37129990425b",
        "cursor": {
          "ref": "be4ca6e3-76fe-4e3a-872b-8eb070875c84",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "fa1c31db-c43e-485c-8883-64a27da8e1af"
        },
        "item": {
          "id": "53a5537d-5aa4-4e95-bba2-37129990425b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "12b70082-6ecc-43d7-aa92-3200a8106e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef79658-3aeb-4b5f-946e-3288ec15ef3a",
        "cursor": {
          "ref": "2fafc031-8a78-48cb-91ef-46b25af7ea7c",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "753d78cb-7a2d-4e8b-bb25-01ee54238c66"
        },
        "item": {
          "id": "6ef79658-3aeb-4b5f-946e-3288ec15ef3a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b08352aa-619b-43ad-81df-b2a0513d1885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a1f554-fbe1-44f0-a838-358f7df427c5",
        "cursor": {
          "ref": "01e6b925-4210-45c5-a9ad-e46987114f13",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "cb814c91-d7c8-4f33-b0ab-322d878c81a6"
        },
        "item": {
          "id": "87a1f554-fbe1-44f0-a838-358f7df427c5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c598ee99-737c-4e7f-b594-7a506aa61eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6030ae08-582d-4eba-a189-856df7179fda",
        "cursor": {
          "ref": "a196d3c5-5400-4b60-b3e3-e26368dd5891",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "81864866-12d0-413d-bb7c-1089c68c8d07"
        },
        "item": {
          "id": "6030ae08-582d-4eba-a189-856df7179fda",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "09c4ce49-af83-4d00-8c35-6a03cab1250b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c944700-fabc-4ebc-98f0-8fd9f2a5d1e8",
        "cursor": {
          "ref": "e88c4b9b-a86e-45d1-969d-1cdd926402e2",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "e09365ee-3346-4316-9f1c-9cd4d42bc0ba"
        },
        "item": {
          "id": "0c944700-fabc-4ebc-98f0-8fd9f2a5d1e8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "78ba4e1a-4d8a-4627-a61c-864227fecf4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1412ece0-b418-4259-bce7-624130e4ba59",
        "cursor": {
          "ref": "cfca24d5-aadd-4ac6-a51e-1734f304cb39",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "9ac5f904-eb6d-4ffb-929b-826233c78077"
        },
        "item": {
          "id": "1412ece0-b418-4259-bce7-624130e4ba59",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1d0c997e-4e0f-425e-958d-2f12fdf733ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443a7d0a-e087-4c01-9a87-d2692c217e20",
        "cursor": {
          "ref": "a8a39d0c-e2ea-4bc3-a50d-56ddf5e1d1a7",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "5c7a45a5-722f-471d-bf1e-88aa8259b2b4"
        },
        "item": {
          "id": "443a7d0a-e087-4c01-9a87-d2692c217e20",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "169a755d-5f1f-4bff-9bf1-1ce5d987c800",
          "status": "OK",
          "code": 200,
          "responseTime": 483,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3bbf9de-8d42-4d87-a785-e9244c7dd4d8",
        "cursor": {
          "ref": "f03455dd-3b00-433e-81cf-64070a6b729e",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "6f1ff522-03b6-4313-9232-4f7ac970a7e8"
        },
        "item": {
          "id": "a3bbf9de-8d42-4d87-a785-e9244c7dd4d8",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2ac120f4-c4cc-43d2-bace-8dfd257ae7f5",
          "status": "OK",
          "code": 200,
          "responseTime": 1705,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0356ac9-41c1-4838-8fc5-b55acde7363a",
        "cursor": {
          "ref": "78d15c8c-fd14-40e4-89a0-bbcfec037f6e",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "53626794-918d-45d7-9797-343f1e81aba1"
        },
        "item": {
          "id": "b0356ac9-41c1-4838-8fc5-b55acde7363a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "de60992a-ad98-451d-96d0-575647d0bdd3",
          "status": "OK",
          "code": 200,
          "responseTime": 1511,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3bb27a-ae14-43d9-8a67-961d7a49e23a",
        "cursor": {
          "ref": "9757dd67-96a4-4b05-b55c-120361df2b26",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e7037299-ac77-4e57-8484-9fb3dbe5b31c"
        },
        "item": {
          "id": "0d3bb27a-ae14-43d9-8a67-961d7a49e23a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "72efabaf-0d59-4589-8414-5263eb5d9d36",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3bb27a-ae14-43d9-8a67-961d7a49e23a",
        "cursor": {
          "ref": "9757dd67-96a4-4b05-b55c-120361df2b26",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e7037299-ac77-4e57-8484-9fb3dbe5b31c"
        },
        "item": {
          "id": "0d3bb27a-ae14-43d9-8a67-961d7a49e23a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "72efabaf-0d59-4589-8414-5263eb5d9d36",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ad8928-a11c-411d-9a31-30fdfede2a60",
        "cursor": {
          "ref": "fbbd18bd-56b1-4435-8576-0e378fb96811",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "25b54d8b-0f91-4536-b446-11231735cecf"
        },
        "item": {
          "id": "a6ad8928-a11c-411d-9a31-30fdfede2a60",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "56a56a9f-b206-4f2c-8fa6-9eed48db7d0d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46bdf49d-d01c-4ccf-9ade-101bf97c39ca",
        "cursor": {
          "ref": "67f61452-0871-4730-8669-2f67b0d399bd",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "6ca12724-f868-4ebf-9f5e-07b48dd0acf9"
        },
        "item": {
          "id": "46bdf49d-d01c-4ccf-9ade-101bf97c39ca",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a1b9d3e2-7c37-4941-b578-e9780dfa187f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}