{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3cfa4281-aeb5-4ef9-945b-49ce9b33a47d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "cebaad77-e054-4f0c-8238-2117c7fa0fd7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b2b6a149-bb63-4566-adc7-7da842ea553d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "638bb420-bf07-420e-94bd-087b6a506c39"
                }
              }
            ]
          },
          {
            "id": "5a7b2116-d159-4b89-af8e-909b9ece51ab",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e4f16d3d-293b-472b-9f37-46a579bb83d4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "35460629-87e9-40e0-9316-cebb411179e3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "503dbdd9-8436-4e70-89af-98bdea4920d3",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e1ed915c-7c79-457a-aba2-29c74bcb707e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d4f7f039-3ca6-4d2b-9043-aad3f0cf36d7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "814f28c2-44e0-4694-bbd5-26c08925d702",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eff9c32d-19cb-43df-bb79-a3be257f0a6a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d4978682-a3c7-4ef8-a182-caf53584e407",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eb234b6e-0eaa-4120-84c0-15d372578716"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0c60ccb5-c688-44ea-b0fa-14ff55cfdf78",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fbb8e250-dc5a-4ef0-a35b-22aa9fe4fb19"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3a0fd722-bc8f-4df7-9c65-3d4e38b6ef7f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "023627c4-5ad1-4dc9-b223-8f84372c0b43"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce638d9a-a62f-4a64-9506-4f0ad94dd108",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b95e247-6aff-4a5c-b21b-8d125a52b178"
            }
          }
        ]
      },
      {
        "id": "dde622df-cf84-44fc-9476-fa7433e73e7d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "59ea889b-8504-44da-a1df-aee75605e9d1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c96f14d5-9ba9-474e-bcc2-c67de08b828b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f5c91a80-45b3-431c-ba56-426dbe1b796a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea27d81f-f3f5-45de-8178-e8a63a12f005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d186303-a703-4347-9360-61c6e57629d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27bef035-b7ae-40e3-a40c-953f38bdcbce",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3ce587-5422-4978-bb89-8423b530ad4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8fdf8f3-da21-4f43-b899-d5e0b7fbb234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea50b8e-f3da-486e-b190-665006cbc3a1",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c64cde-caa9-40a3-ae3c-f0d8ce5f3983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3380ca1-b264-4d16-9a8a-d78ea82865bc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "aaada678-4fa5-4b24-9862-b02c640cf95e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4463bd4c-131f-4ea5-a773-39e2919e26d0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f34e468-0ebc-4cbd-a7a0-5f592d59dff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c356ac5-7b5b-4d1e-8eeb-ad23e8ee3594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfebcde5-c4d7-41d9-be9e-b878d8d644c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fc4e325-2ad0-4ad0-ab6d-8a8583d1c397"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "55f5c0fd-6526-4aa2-b4bc-5cf00a658dde",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d3682c45-a000-4704-91db-0c9b20193257",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9acba4d8-4327-4b5b-ad58-220104b3af89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7cb247b3-ce89-44aa-95cb-6f212e6c20be"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "110af8a5-da05-4a46-bece-01b72e19bc79",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "31203bb8-c7ab-4159-80e4-f78172aca8a5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "481786b1-1024-4857-9e87-394a391def88",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "92f2b087-9570-4cfa-a323-ca7ffc3873c4"
            }
          }
        ]
      },
      {
        "id": "5838bb05-ed6d-46a7-a333-c7b5d08faeeb",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2071c528-5a17-4207-8e25-ab745c523985",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c72d050e-4925-448a-a0f7-9ec9ea00d2c7",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3ffa6a7c-0983-49e2-946e-766bf6f88751",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65cd1f4a-a886-4af7-8cba-32aa9517f393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4202af83-e0d8-48f2-ab17-3e2ccf34eb98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810cb861-4a61-414d-ad9c-93ee20b52613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "581ee57c-40d7-444d-925d-a41edc3623fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9b80e1-cfae-4ee2-9008-6677c79a1705",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f961adba-bd44-4689-9f0c-dcd08faec102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "761eb9ab-1cc5-458d-bfd5-a8ff9140a97d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5956af7-9e12-4642-8936-363caf5f7579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c07025ad-2b1d-4d6b-b264-cacfc54616f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06a185f-eff9-48ef-8685-cfcf9eb443cf",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9984e406-6fa4-41d9-92c1-09007a476cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da146804-f016-4fee-804e-c9df470d574e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303f6876-1dc3-4929-aa1f-7ed038919c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f8e02d5-8289-4343-8f42-7db5ec7c2e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c62f9a3-47ca-4016-9468-b087f9d50ac4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32804182-6d41-4d6b-880b-dab7bdd81483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87af38b9-a3f2-49ad-b265-3cb92384653e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6376ca-ef22-4605-b80a-37db6d5f226e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "949e00c0-d70d-4e08-83cf-5bd66688cdf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c6cb89-cf34-499d-82e0-30eeaaa2e470",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "074b09bf-b937-4ae4-9756-d9c0d6126c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b08da7d1-2dbf-47ec-a355-91c99eb00974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a21b606-5364-44af-9d54-d4e458befe0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c759854-76dc-4d15-a3fe-ef6149391862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5575fab-1bf0-4d71-a6a9-b5b0823c0075",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ace499a-4149-49c6-9101-65c924da3c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68aa8760-0188-4ea6-8ccb-f4fd91b73cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a8ce04-9698-4d07-97f7-123e61a9956a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7016af1-d918-457b-83e4-d0f7ca627100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd70629-e76b-4e3e-a719-1d274b2ee74f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b24ce83c-f587-4be9-9541-16d20a0a350b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f96a962-97f9-482a-acdc-406086ffb64e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d4bbb9b-f52b-40f4-b7bb-eecd27b98977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7759b77f-d6d8-4446-8401-307fbc72d1e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf9be14-bcbf-4139-827e-ccb11c8f4100",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3787048-33e0-4ba0-a1de-e1e690059365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f8e02eb-6aad-45ed-8f2e-9eec7da313b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa7ad78-c678-4e8f-b1f9-3cefb907faa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "330b34d2-125a-49bc-8863-334423ea98cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1562f06-dbda-41e2-9bc7-6a5145af85d7",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcaf154b-a7c6-4156-a05b-d53611461aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ca2979a-142c-41be-84f9-3839680806f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bad3dc2-648f-4942-a0b1-faa840992289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82f826d1-d8c7-411d-9ab6-a1bc7713d917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7302127c-e581-4ad3-b80f-7cf7f7959b97",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54320e1-255c-4b31-ac91-17c23ed74de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d1dbab2-e862-4879-bf12-a987da379abf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e23f8b1-4dad-449e-baa6-d58406d94e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5be48552-ae91-442f-a203-02f1ef32c322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c568ae30-ac3d-40c6-a3aa-c238c1a6818b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df8a8e4-7dfc-4d5d-9561-95e1d3255694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31728442-0ac9-4b94-a93c-0aebf96cb4ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d415ff28-0dfb-47a5-90fa-0268e94a9027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b96665e4-9fab-43d6-8fcd-81b18575b4ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27c6ec3-9416-47d5-91e7-37e305ffe0e9",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c4c436-7d2c-4a0c-84fd-628fc4b0dd5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72dc3218-7b27-402e-9396-265423957365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb4a997-2c8a-467d-8d18-8621be27e59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "460a9906-926d-45fa-9917-87cdfdebb88b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c4174a2-4038-46ad-87f3-d1a267eee431",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23b93d2-88d0-4efa-af23-e52368b3cdd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa8f6fe0-a53b-45fb-bc47-f3328d5761e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b78bcd6-7bbb-41f0-b9cd-0e55c9127453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f569d73f-a0ce-410e-99ac-516cada3238a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85175b5d-6192-4ad2-b536-fc4844fa484b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96607266-e5ca-43ab-af43-e1ca65f7ffd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee992ff-69d4-42c4-ac02-dbf1bffab2c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7faa6b0-8ec3-402b-be51-6804627bdf70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99fa82f9-9a8c-4931-a599-86819ccc9727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604617fc-a46e-4541-81b5-1ae1e0a57dd5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2474c311-2a51-4a68-ad2d-1e50e8006f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd350d1a-1624-42a5-b211-26eae1482e0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464d756f-ad5c-4251-866a-e3b3e7b871d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9200276b-7609-4d86-aba2-e74279261d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14bf7d60-3f10-43aa-8d00-f6ae88e6f65c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "305d8d36-3796-4e8c-9fa1-a47919a821b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "590dd22d-2abe-48b0-961b-b6a1566b8339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ad4f13-e5d8-4ef1-a016-9f5ca123eb4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8fad0e17-d5b1-4316-9c44-2c4bd4c737dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab16885-ef74-47ed-a953-7e0062ffe3a3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d524beb-beb4-46cb-9277-68d0f733db76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc6762ad-7660-4ef5-8ce8-2064e6535357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770b04c9-24b0-4963-8d81-2dedc15f7405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0917bc6b-d59c-4a16-8f6b-cc4cd31ac79a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514dfa4b-22ef-4519-bc32-d3f857bac7f3",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73aaa724-d103-4c03-9c24-4e24aa0f1b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1f470d3-ea4a-45b5-8ee7-d4c54c20f12c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48caa012-8298-45df-b1f3-c840d087d711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf93cde7-528b-4820-a238-752aac849af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b08fd2-c81a-4971-862a-d4334d39de9e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ed6a84-9598-457e-90f0-34ff6a3676ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edea4fe8-9dff-460e-b3e3-6285971a3a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6349f1-c991-4704-b8a5-ce958436fe2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "757ee060-1360-485b-84d1-9015d40c543b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0755a0cc-de90-460a-ae3a-bf77a15b615a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7969043d-d7ca-4bf7-98c5-b785e7a95268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab248c36-6146-46df-817c-c3217a7c13f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85552885-3c0e-4d66-8c9e-9fa58c4ebfb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6d94756-5612-4202-aed7-14bf36eeccb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ced5794-76c4-4811-bace-09e35dd10813",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88454ecb-e291-4d43-83f9-4cd7f853add7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc3ca24-2e75-4586-b625-93225f1b0209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2252fa0d-c3a1-467a-b382-af8d6a966692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "57263f18-e994-4a3f-9b32-f639c140b0d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f718cb1-8b3b-4413-926a-a107a5a93e4f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea97cac-311f-4b42-a512-79e3a5a427fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f6d4911-9741-40e9-a69d-3321966e3412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1f1a56-cca8-4fb4-b375-fbbf9a7ccfe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3eb8314-e6a9-46af-8bba-53ad40f51635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6bc17dd-92b2-4291-997c-90524860241c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17d35e3-80c5-4266-968d-9f156681a5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6191305a-a2ab-400c-91f9-e2c3edfed88d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b07d22f-f8f2-4c18-8182-56252e3d5cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed9f76e-4822-4600-bdbd-e436e08a8b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248d8290-fdd6-4eed-a88a-9d3aba18c80f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e44a74-e2e0-456d-851b-7574964daa33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61bcc98b-6d5c-4027-857c-5d34a4512e23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "973231a1-74ac-48af-bca1-3806a7699d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "765d008b-1901-4937-a83c-f42ee63b1bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0200e74-b28c-484a-a052-a8fed448e917",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b026f2-d8c0-4618-b1f4-411bf8d7d47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca6620ae-0042-44d2-8c90-c2f5eec4d98f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98eeb346-44bb-4eaf-895a-3c28fa0ca8ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c941a79b-cff2-4a27-a07f-d07cfc317356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06686c67-0223-4d23-9673-8674f285c315",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6120541-8037-4f60-b888-34497492a3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02cd64f8-8074-4a6d-921b-1fc45c1ab43e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98da220-afb4-4b24-b311-891838a9e516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5160167a-0b98-425a-8780-0bdf1e96c5e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d05961f-1b51-4bef-8f58-716c4e25a3a0",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "194349f2-40aa-43dd-8269-4c52e958832c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf17bf4e-c000-47a0-a5ae-3280c742764d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4bfba47-2624-476c-b535-883b1c771f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e29f40e-3b85-44f3-be03-740c6a4869cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772af07f-5c24-495e-bf43-bd7a9b6575ba",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7371a2c-6494-4c86-b4bd-6646968ec00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b48e84c6-153e-47bc-af2d-c0ebea42d265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cbb49ee-3c55-4aaf-aee8-ec21ce3dc1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "125cbd3a-f2da-4b8c-bac1-75820a07ed65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7afb6e2-75a4-4e71-8764-f4d43b639636",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3eac801-f589-4821-9c1d-6502a55bec4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ddf2d1-8118-4916-b070-abaee53cf27f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f2d64d-d077-447a-963d-cd189f3088ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb09bdef-1cb2-4b98-835e-ff9b42ec68e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be5bbe9-f1a9-462f-b8a5-d7b252785d98",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6833ed18-3167-4cb7-af18-08367f5e3667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32248824-54a1-4827-95f1-2ca4b61f1258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a95cfed-9f1e-48d6-bd57-63a21623915c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d0ca32d-7802-41ac-9bf4-d3767e35fde1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe3903c-7d28-4cd3-b5f1-7599bddf9373",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ccaca4-d975-4792-af63-c3d4c376ee7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45f1f498-3427-45cf-ac5b-2ad45f3fa7fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e0fced-5ccc-43ae-b2e8-9dbd28b1cf1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "028c8ef1-045f-41c6-a8ef-e1439e25e69f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cafd0332-31ff-4af1-84a3-6377ec353f3d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cfdc951-ecd2-4db7-b652-71e3a8402d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "902b41ee-f79b-4409-a0d3-47df03a8afb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b21885ec-eee3-4a74-ae90-a555469b9e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5aebc8e7-9307-4156-965f-658242b6eb7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb640cc8-4755-4b81-9580-cc05a480f539",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2823f1-348d-46a8-a5cb-ab60a84be3ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2090f5a5-bc24-42ad-8409-a735451a16d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71428ac8-315a-4be0-99cf-3e955125d404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c612b0a0-0623-47ab-91ec-a0546d22eff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc1fc4b-677f-4db5-96f4-7387a093cff4",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d704a6-c230-4f53-8a60-e5cd0d43d93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d10d6fa6-5ad6-4c41-945e-946a2e6a52d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ddd4929-fb3b-4a37-82d8-ea3463f14e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "727cf783-7a16-4933-a155-122a0def06d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4f3187-52f6-40d1-8869-fb06cb222fd2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02ffe92-f08b-49ae-8abb-27a17e8c9d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66500670-8e60-4cc1-bca9-25d580023081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f921ad-53a0-4afb-af3d-55cb503b92d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c2af905f-4af2-49b7-ae2b-3b881151b92d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "226f864c-5d83-44df-8352-ae89c2a19b5c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8356f439-23ab-4fc5-b200-31634829b628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d0f08d4-f9dc-4af1-97e0-df030af5a573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94faebee-45ec-42e7-a6bf-22a758dcaafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "45f77175-6c07-42fe-9189-3e3d49dd7683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5333550-0058-4b67-a90e-097b371c6998",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a42c5a-639e-4ea5-9743-a964987304a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c3d5106-42e6-4170-9556-c09306239950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "031d03a4-a62e-4257-b6be-2aaa41617442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "06cdff89-74aa-4c91-b2d7-d5f7083797a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03b2f1c-6657-4bb9-b3f4-245e62ac30ec",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d6524c1-6bed-4236-a012-61ce854feb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a370155-5654-45a8-9b7e-d9e22b90672a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621149d5-4527-478f-bdb8-33459faa8b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b12ffe06-5ee5-4505-b848-1d0e6e64ead9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267aaa98-af34-4dcf-b2b8-47b062596c25",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc96674b-0fb4-4821-b8cc-1547dade6376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b60598b-9a76-4ff4-a397-8ad70d962ff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b81c12e-c4ac-4119-b6dd-d3a33f32041c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1089ea5-71e8-4d4b-8ce0-e410865b4443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d221d474-a4a0-4afa-9dc7-e7f6be06d4af",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4fb6975-3a2b-40a3-b744-e298f9a39bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87da6171-c23d-4cbe-87d0-3c556bbc5821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e400aee-2cd6-4015-9a53-e260c36bea38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae261e3c-1a56-43f6-9d3d-373196f5603b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078cf035-c352-44c0-9988-465e2e0a669d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec55d5d-a45e-494e-8371-baa2108c5efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3adb4b6-345e-48f7-a2ac-d3611e318536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96bb443b-99e1-4ece-8480-6869d42d8fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2fc45af1-d3fa-49f4-9c31-39caefcef6ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79eea12a-c1bd-41e6-9f23-0654df2a6b6c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "440e2a5c-4d97-45fd-b042-1347831ac3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d1d6f5f-46b7-49e8-bb68-8cf14e15c46a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630af81e-4037-497f-a0ab-bfb6549caaeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9c9760aa-636c-471b-b43d-6c0cd25a07c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9298af-8694-456c-962b-998915392585",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00788bf2-fdf0-4e1e-94cf-26dd33c1c52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82b3c53c-3a6e-4a34-a30a-ea4025779368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1b6f71-3a73-45bb-aa5a-6f0e49bbd9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce8e48cb-2204-4a2a-949b-3ae1219230f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe0dcf4-30f9-478d-8ce3-53ae3ad6d168",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52799e0b-6c58-47c4-bbe1-4cb3c5d891c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2276c151-5db5-45a8-b7b3-870c17c1b1d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac968d5b-6fe8-4dd6-8c8e-b4602ffd2d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "83a3cebb-b80a-49bb-b100-a920ced5d42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8977b3c-6994-4e22-a084-6986f5ec1312",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f42b29-d3c7-4474-81f3-9b4911e59cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd1f623-e450-4183-ae41-4257c1087426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653f4a0b-a524-4279-be41-557b49150978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c308f79-677b-4bfb-9ba1-9c09abf50fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e845fa-f16a-4489-997b-5cd35cc3e43f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c1f639-16c4-4737-81c0-5630ee980117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa084fee-8d50-44dc-b59c-dc513de99dec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04430902-d330-4e92-974e-f888c59c5356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e7d2ed5-ddd3-4008-823e-0def5e00f9cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc65183-b695-410f-a716-9d2ba3a0ce29",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a4a646-5b8e-405c-afc4-04976212ae88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "258b5bf5-8998-4fc0-8843-cc000a53b72f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490728c9-6d42-4261-ae62-b5e3acf6f315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c034a94d-a936-4d17-a0c5-fee38ffc40ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef5c5400-af9c-4227-9763-64d3a9cdb6d6",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0cfd36e-0826-4633-ad02-84c231bc97c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b572ea4e-9f76-416f-a98c-3480b76230a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945620c3-5351-404d-9712-4a1c22635a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e2ca6cb-2710-40d9-b54e-ba1892eb8848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0439c6-aadf-4dac-abeb-fd643b14ac0f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946f0e04-5a29-4207-8e23-52af15190e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8f31033-7078-4fb0-b5b8-2ac02284c42b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c9a18f-2924-47dc-a7a4-c90303abcfb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1af3e506-276b-4171-85b7-86c3558dceb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7eb90b-0183-4f60-96cf-c137dc7b5bfe",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ac9c68-ef62-47b0-b82a-9804152d8385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a20e2b6b-93c5-40af-9aea-430619b810c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5152abf-fb89-4c14-ba05-643e1ef67b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eda42ed9-f826-4f41-8ae2-619b0ae7b809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5e1239-1907-4259-9c45-2891e1ad8063",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6e7f0c-d8c9-44bf-99d8-d11414218f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f433530e-8acc-4473-a532-2862f66f9c7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7670601a-2b7b-4455-986a-f65f89692c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "68d0ec9a-3bdb-43fe-adbb-32d993a583a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80c9839-cebd-4446-bcbc-a9004a10a3c6",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a617db6e-45a0-4cbe-b49e-5434ab1cfcf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd014d33-0154-40a6-ae0d-e37efdd4e363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3765a088-d181-4670-8242-1545e35799d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfe58903-b4e4-440e-ba3c-68b6ec2a5164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffec799c-a98a-4902-b24d-d6b124f5a0c8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49694a9-c6ba-4f36-811f-178c33b9ef59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf94484-8bbe-485b-a9d2-948ca0b3e68f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa25288-1fcc-441b-98ae-31d9167517af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8c74e03-5db7-41f2-b9f0-60846e222678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f73d405-8a35-40cd-9063-4783bf579634",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3476d7-e9b1-4c78-9495-94d2ea9ad7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93e8b2a9-23e5-4105-becf-8b0a5d734fe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8365699-d28c-49d7-8455-faa9a6e7cb66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cbf3ee0-a967-495e-9f15-f2672eca9f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e83c0710-5dc6-4714-8adf-d22102ddb185",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79857467-1b1f-422a-9d32-999ff0fbb2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b180751b-b472-4fb9-a246-ec26b39ceab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf9f80e-5f0d-4ab2-89e3-84a3df002435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "695116ac-4f72-4ddd-baf1-542b22b488cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748f2c8c-f0c9-4c23-99cf-a5c35b5e465b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc9e336-c0c6-48d4-89e3-c05a2d836e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0005af80-852a-43a7-a6d7-23483be41619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40025802-78f8-440c-a9d1-3ade8beade7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9714d699-49e8-41cc-bd36-df6ba7cb2fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ae7f49-bb8a-444c-854f-cae4071c7842",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60951aa-5abb-46c5-b7ce-21347a89aaf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcac9bc3-7831-45af-b2b7-798761803cfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c7b7ec-f1cf-423b-b6a5-d38205f265c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ecf07ee8-1aa9-4b0d-9cda-530fbb90a3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28346d2e-de64-4680-9933-27fe320578e1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a691d8b-03cb-4384-addb-ea7f48d645b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37ad9603-3093-4aa1-972e-7b5f1654205c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ce2115-9f77-447b-9fcf-141b20b02089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbb60af3-581f-47ff-82f5-92f57c85cc22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5624de7-e850-4ada-8081-351d8808a043",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef0e2d7-84f5-410d-96aa-d34ece5d234f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cbc509a-82a1-4680-8cfd-63a0413ae692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53525790-f660-4551-927f-8436a936249a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1b48a0c-8cc5-4587-aa94-7f2a75b5a58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da60cb59-2c7e-41de-a99a-2608af9a6148",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dbbe267-2336-49d0-a1f8-9b67ec6b0cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c7a7901-ac3b-448c-a824-bde75d35b950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d7c61a-ce1f-437b-a62e-cec99b80cbd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5770ee00-664c-4b52-83a3-9f09f796427c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea2de3b-5e72-4ff8-8f63-c9621dcbe297",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd6ff39-9473-4d4a-b0c6-76056ff87b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e9c842a-e86c-402a-a8b8-aa733bcd537c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc09a8d2-540c-42b0-9a9a-22f88cf8fefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "49ba0542-cb2c-49bf-9cec-25c44db01fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a7a5e8-140f-4015-a2a8-ef7cb3ef95e0",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9a407a-5817-4f21-ae57-05a634af9d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "562496ab-937e-47d4-83c6-229a6261732d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaae84cb-18e9-44bd-826b-9d00879fb571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a1551b3-f3f0-47e1-ac15-e9dc01da8a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c37ff5-bfe9-4746-99d8-9cbc4d839b84",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0383cc4f-2dcc-4534-af54-45f6fac28c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e0d2875-c129-484b-ba63-251fd30e9cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba8e744-f014-4725-8df2-2fee4ddf391d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d3c9857-71af-43d8-92e3-c1b1ef4cb6e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c46df467-a18f-41a3-b672-916ad33c047b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba561363-b8ab-4567-a944-6b32dbf42c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d242b574-9148-4dc8-92e9-46ecee01d177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "382d7e54-3bb2-4568-91cd-9d9c0bf8a2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7793d596-0a66-43df-916f-ae476ef2c5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2c08ee-06b0-4460-ae40-be5446655c53",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6c2daf-33a6-4387-8af0-5a8a90fb316d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1550b375-1649-4ddb-bd4f-9141ae65aed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5877c0-f2e1-4538-9e04-fad10b10594b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b05d18c4-26c6-40bb-95aa-2a87cad72483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e834e7c0-cfe0-4244-bee8-e49f433a1c4a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe5678a-ddfb-4479-b176-a45769e4abaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b60a637-216b-4a7e-9681-4a3af467ff00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c86542c-8ea8-4777-ba49-71d3934a18a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "39217920-7f18-487c-bf18-e609e0272b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f8e5b36-0949-4ede-a926-1af8e54fc124",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f0e9c0-4d2b-4826-9e5b-e57a4388e1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fbf3faa-cafa-4437-97fc-1cb8eef0d55b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0596aaf-67ae-44e7-a2b2-5e9b3feb1d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7c225259-b4f8-4273-91a6-5b52cccd1021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5155d9a5-cbfa-4dc7-8e65-8015fb355283",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40bcc3c2-c7c0-4740-a61f-8cfada1002d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f0b76f3-d92e-4eb3-be69-ad5f60245513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c33bbfc-c211-404e-a530-3e3781c010a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "52acce15-1422-46c4-b4bb-95339483d942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dda68c7-35c2-4183-b980-d1b0386d5801",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "479fc285-e799-4a53-bed1-f943c79c1b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e9d828-ea94-4054-bf82-f6d4f452e3bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663f1622-0728-4be6-aff7-2bcb83be6bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3461b808-7a4f-4049-b219-0a0890108bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b57dd98-6850-48f0-98f4-72c088648abc",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0adbfc2-21b7-48b1-b99c-8d79846acaa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6e010de-bd4b-480a-a546-aed925e7f416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d2ea1c-c647-4845-a6f9-41e49dc84dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4804295c-03ee-48dd-9298-96339248debb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb34db9-8e6f-453a-bac1-4ba1b7cfadd8",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac9e89e-3f22-45e9-8bb9-a9cc40444933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aae5fe8-4338-4f1d-a247-e27fd8e6230c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0573f5d7-0d75-4e4f-826d-35189d0493ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9375a1ab-f53d-4823-a176-7690ae45d8a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44109ff-2819-48ad-994f-6628815fa62d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b03d47-bdaa-4a6f-bed2-4963f12e8fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e94c73ff-c65f-4e91-b82a-6e662dd04872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d922a3-59cf-45a1-adcd-0e459671fd2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5e02b8d-f0ef-4afd-b947-dca7ec57d633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e08617-2046-4073-9b2f-c8f4dce91b8e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04280ea8-9dae-478c-8c11-0ffa60efda01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16a8256e-1e52-4c30-aaf5-f06410ad1248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b682f17-bf1c-4f7d-8d4c-b585c376c04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0bc7aff9-05bf-4772-bc41-0a21148e1b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78e6bf5-6651-442a-9f3e-14c4f1bbe238",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "452784fb-2184-4a82-8d6a-e2ab0e4001ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee4e4eee-eee6-480c-aef1-818e17b27812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555ced50-48fd-486b-a065-1a5cc8d08702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "918cb69e-aead-4e14-8fb7-77534e0b9352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d762cbc-d498-4543-a8b3-191bd0ecf7e4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c8cd90-2439-4209-96cc-8bda28a14b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70b4905d-cfa0-470a-bb54-f8edd5f447e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f3b840-9fec-4b49-ae38-f13aaaf45d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "26bb028c-b29d-4f22-a01d-ae7e748f36bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "314cb831-0c66-4acb-af42-f6545678359d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c8ac86-d591-4863-8fd8-248dbcea356c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbd167a0-0db7-4613-8c08-fe0e27fb249b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d50001-63b4-406a-8538-063e4f3c19ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fa3c5e7-6998-4a87-8790-965ffefabdbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d15da96-a099-4d53-9f53-b09755b195fe",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fde3d14-03ba-4ee8-a0ca-28d76b8ef601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a55c5e-0613-4b10-829d-43ed4657b71e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73bd94c-a10b-43ad-a775-7f7b7f091020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f21af79a-850c-4243-a20a-df3ccd155bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2321298-179a-4d4d-84fc-410422367116",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c15234-e697-43b6-bf03-9dbcafb93067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fb30350-8b8d-4285-80d7-49c1c4aead18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93d1d20-e7b6-4292-8a88-be427d837623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd4f4068-792b-43d5-88c3-8d0dbd3468ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43b9214-716a-4450-a087-af015565852b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4fb4591-c711-4e8e-a766-a94d1a22e864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc8bf1c2-4a85-4570-868f-335d8ff0c4ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44ad308-e0de-4546-8d9f-efd82f09d609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f6715cd-b4ec-4ac1-ab9e-f3e7ab415685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e364ce07-bbe3-4d28-829d-2f6830654c73",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0b9a69-7f9d-4c4a-829b-758787d24f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2dd175e-abd9-41e0-ab74-b5aaf63387ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843e7db3-3c68-40ff-b779-159a608040bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5c581559-7635-4a11-8719-f0d3709884bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36efd852-bce4-4352-9235-4873e956e45b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "466d80f5-bed7-4ef6-b7aa-92ffe50dad61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c031dcd-80b2-41c9-b5bc-a96e4193e8ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d82e7ae-a0d0-4a05-b664-eaf558e9c101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "05e463e4-d006-409f-acdb-50257e3ab057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420b50a9-d150-43da-b539-aafcdc9d4502",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8797721e-e8e1-4c36-bd79-8cd16232698f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "373cf2bd-faa0-4804-8f0c-de9f934a58dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d2f4b4-23b0-4d52-a0e8-168ea37578ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0049edbd-dd00-4040-b7cb-f5c01a1a61e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a06d00-1572-454b-bf91-46afa95b8f77",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5001615-6164-4779-be5d-4f5b5ddee286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef5b3297-1479-4c70-b4c8-aa294c7c9e8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d228ab-bad2-41ef-b495-2001ea543ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f514244-3ebc-4616-9597-749ef807916c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf62214-46fc-47fa-b8b0-f045e5afbc60",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd78dcf-d296-4c8f-b4ca-19b8a6244f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c00cc8-8a99-4eb6-8adc-4f4154402e76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6099022a-9745-47f3-a710-c24216f42a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3644e29f-ff95-4b35-af54-3fba73bceb67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dec202b-5fa8-4d8e-8e1f-9b4952625adb",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04681e6-610f-4117-9826-956a11923f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d03d988-f069-4c95-a2c9-f2321d8032ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da94b5b-a0fd-4233-b3ae-060d45a8a360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aa4250ad-bb6c-41c4-972a-f4bb36a1052e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1fe3c6-c414-4232-b3a3-576a536802d8",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc66398c-f34d-45a5-be2e-3f460f0c9abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69e00269-4ca2-4a46-8c06-695fb1dec223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e916bb0e-78ff-4397-b22a-d26510f6b5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c6e6d58-f51a-4a36-9509-cdfe004a4975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466d3d78-b2be-4ee1-a3f5-d0c847f3171b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ec1dce-31c1-47e5-a3c7-5bd5f8c5efcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78faa598-784c-4f91-8437-34c88017ea70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10d0ece-d727-49d7-820a-4de3ed94687d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "57baaeea-8493-44e1-9f01-b409091c0ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98e7311-d822-484f-b594-9a162088e627",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e67c9b-2dfc-46e1-b194-f6569d0c53da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d19ed112-d7d6-48a4-947a-5555fd997d70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f90e3a-fb36-42d0-b566-f35ca1384beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6281f95d-d659-49e0-b502-cd3e0f33cf83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ccd5fb6-8f6c-4d37-a397-f578a946776a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "060018c8-1df6-4897-a6c3-f6d5b5f97a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32af40a0-0de1-4394-84d4-0621bb843c8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d6ff78-e7bf-41db-a447-7271b6c0f53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6c3e157-d66c-49c0-ae20-8ae2e3bf07b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd34c946-876e-46a7-9318-45acf2e7572f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc43eade-4b71-453b-b4dd-a2a2610a6893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e484a27-9412-4498-bfc4-f0a1fdad652c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9995980e-fe09-4029-8986-d99c43417dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3610c61d-0c24-4449-8678-d482bf3b3f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ab7545-dd9c-41af-8830-0d06bbdea19b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "651ca9cf-0bba-4851-b1ee-d6ee5df08630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59cdd18d-768d-4f72-9db3-b5d3a2e9fd44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17cd9b14-e9bd-425b-abba-a2a9a54f03e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2675e6e3-08e6-43e0-898e-b85478e54858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c280d88c-cb91-4aa3-8f93-c95272a99cdd",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40aa93d-7dba-422b-a2b0-87b177f14672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6d284e62-8c0e-4a0f-bbd6-b2713b7aacd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b602b7-b6b7-48bc-8e93-91613b17e514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b225dc1c-bdc3-437f-aa98-74ee1388d6bd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d97e4884-64f5-4eca-868c-0220185cb221",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ca900ed8-74f6-4de2-b036-a39a70612450",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0158c4b7-823a-4f40-b893-46b04ebfff8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60eec88c-b796-4acd-b9a6-804caa4b1889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab64653-2a3a-4e59-87e0-53c3f3827f55",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8061d1da-44d3-42ca-b24e-96b270b436c2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eff25080-b4b7-4612-9c12-7f3c24ffc841",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f670af7-8a83-4a28-8058-bc0474c33b95"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8af1fbfe-468e-4be3-9049-c483acd864cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8493d981-84d4-4ed5-9899-3bbe221478fd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0a3bdfc9-af35-4d0e-987f-dd845fbe740e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "37c66808-2a0f-4222-aecb-506d3a4472b5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ee564a15-0871-4537-9d24-8c158cb6d899",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8927d20e-4e9c-4267-ab40-e9cba0073355"
                }
              }
            ]
          },
          {
            "id": "b949baff-4325-4950-bf1c-971e4958920a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "eae2f617-b57c-4eb1-9761-0e63946f5888",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "d6072bcd-7707-41ba-8abd-ff34f3567304",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1adc08ff-6c48-4ac3-a85b-c9438aece28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "cef3095c-4a13-404e-aeeb-e106f2ac8dd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae5c72b6-701c-420b-998e-8e9e75adf31e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "895f08bb-c7f7-4be5-a1c0-ad79f538446a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "90bf7cfb-903f-4ef8-b7cf-390e29c3c182",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d04757a2-f321-4e69-8bdc-e83c8b789119",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "19ac4f2c-0ff3-4e0c-b946-fbff2a42d865"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94463c51-5735-46ff-85ca-d6c77c5aaca0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c2666f03-5451-4f18-a3a6-d5a637e79e9b"
                    }
                  }
                ]
              },
              {
                "id": "d07f9678-f5d7-4ca6-90ba-20a0f2f96359",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9bbdbd4f-a0fe-4358-b691-adea54cf046c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c6bcc334-f33a-4a9c-bc50-73f25e3731b3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ecd8e3a-329b-4556-b13a-c7dbf5d5271f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0fbf12d2-1a45-4043-bbf3-93d332a34b9e"
                    }
                  }
                ]
              },
              {
                "id": "0cb2feff-0af2-4d58-82cd-d2e73fd2a039",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ff7c4eb-8285-41d8-b91d-f50e12851e27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c723e32a-7a41-4210-98f4-d24b1473c34c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17d206e1-2e76-4418-bc6b-3ba050f14a4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ab496d92-c974-4222-b426-aad304bbbfe7"
                    }
                  }
                ]
              },
              {
                "id": "271d03be-52a9-44f9-aae9-0a76fb9cc63e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "94663f30-4fe3-423c-8b1c-6489e0a96d5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "659b2c2b-c42d-46ef-96cc-87f168d01227"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05c443be-340a-479f-b2bc-ec459c3e86fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a68cbef7-aaa8-46bb-980f-2bee6472a8bf"
                    }
                  }
                ]
              },
              {
                "id": "b1e034a5-fd4f-4ade-b339-d3b2e61da6e1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9be58979-afd2-4ad7-baa8-0eaca81ba057",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6681b467-b10b-4c51-bbde-f78bafccfc93"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dfdb504c-d411-4eb0-80ae-b335e3b4a17b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "df864d74-9386-47fc-967d-926da73cf435"
                    }
                  }
                ]
              },
              {
                "id": "bfd17ae1-0f9b-4604-b10b-993e8fc404d8",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff33888a-e1bc-428b-964d-ee04966f225c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "417e40b2-08aa-4a10-899e-bbb856bd5518"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "475b8a94-c8c0-4f08-846f-66ddcae5dfea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d8e1ab32-b49c-4cae-a2d1-455f9f078626"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9b06c9bd-86cf-4fbf-93bf-4b4977cbe858",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "83946791-1bc2-4b4b-b027-7804925afe2d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9a19b105-00d8-4fb2-98fe-3f1e8af4fa3b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "905f5791-71a8-444d-8b76-707e722350ef"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec46276b-2b39-4a42-8f23-0469f010adc2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "96bd226b-25d9-480b-9dba-ba9f459ce08e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "63244d9d-0a34-4cf6-ab60-9888578eefb1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d5a8f86-7223-4f1e-9fdd-eddc88d25205"
            }
          }
        ]
      },
      {
        "id": "a78bd967-1c94-402e-895f-b13e6edf3f87",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "239b1db8-63bf-4761-a763-cde0227117c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d46fa987-c6d2-42df-84da-5e4ac46af2cc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1e764eee-0d7f-4bb7-b7fb-9d10cc44bab3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2dc2abc-e53c-43fc-a81b-ddcaf7083718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7401c780-63cc-4373-a303-c78bab41790d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed55d24-8558-47ca-8a97-0ab1af9dab0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcc732b9-7b2a-4bd4-92df-a45aaf85fc4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e9e968-7e82-46ea-807d-8ff2e329958b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe8dfc0-434b-4848-891e-34acb3e011aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec1ed8d5-2785-4f6d-986f-e97d447eda73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345fed74-a3c6-4625-b246-3820f914af10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "52a86ab9-3457-4643-9faa-258b158ed6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7e031d-5ab7-4bca-a415-ff6f656f7df1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43ae53f-bdd2-4134-bc83-49f5cc1d4182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1916163b-22ce-49f1-b4f7-80018895901b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7fa1704-782c-4686-8fbd-9996d210598b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "29d55f0c-aff7-4eb9-923e-498838dcf61b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a413c277-2008-4bd9-a7e3-5bce0b242b94",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c57616-0824-44cb-ab7a-e26d5d216c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f9743b6-a1f0-4bf0-8175-6d976acf0d42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8905ab97-87fa-42e4-a5c9-c1d8dddeaa33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "61065ce4-a399-429c-a900-5e1e341799fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3327dfa-95b8-4181-86f3-544ca95dfd2a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63ad098-bcb4-4779-89e3-24ff904d6499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca10e6e-796d-4dfd-ba0f-c652a01a8e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75dd269-e6a3-4fea-b1e1-b56880d1f06a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7983532-7002-498d-ba75-299f4c39ae56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6feee26-9dd5-4ad2-b28b-fc13abdc5df0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "550e764d-1f8c-42da-9c39-78496580959b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f08321e-a0c1-416b-a8ab-5a49257da8fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162e9716-7ef8-409a-9a77-2e2b537d291d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e905a43c-1c1a-4a8b-8c93-bdca9efa9363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a96ba97-4a10-41bc-8523-8c1938f55da6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14462762-1df0-4aff-a06a-788a424d087f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba716934-cb7d-4ce2-b20b-259e418e0516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da89dcdc-82c9-4648-b1e6-5abb0ef23cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "249d52de-8021-40c3-a872-a07c113c726e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe03f5b7-7440-464e-8936-72eb246c0080",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f830b5ef-0dad-48a1-8f35-f358916217b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7ac8098-4590-4745-81f8-9f72e7816807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c34086-5a7f-4eda-a924-b0162e0dc27e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cac64fea-b634-4383-a3cd-67749f4b7237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b401d133-b6e6-4f73-8ecf-ec89e199c263",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be8d9986-f201-49e1-8265-79828f4d811d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddeb42f2-d776-4573-9482-3b5ba59c7c67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b56235-9284-4441-9a78-4e2053e9397d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "529c45d9-b868-41f5-ba48-8f885e4c8607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ebb946-034c-4625-adc5-c17eef46c207",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "193795b8-9ae8-4045-a847-69469f58a160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db537fb6-3c0f-4dd1-8e24-3fdc112c19d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261a8e08-9287-40a8-86c4-b8ddce783275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "234079be-8677-4fc3-ae12-8ae9e1755794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96202ae8-a3d7-46e3-8cf0-9f990b6bb8b8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa14c6ec-8805-4c35-adda-f4d75c569a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c91d1503-0153-4c14-ac48-f1f0cffb5031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef7d9889-5d9a-49ba-ba10-e3df0830ebb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b425886d-dae5-4aea-a833-bb81008230e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385c1df6-6c0b-4596-8d50-7e4a9df6290d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90665553-8df9-4f1f-8fb7-7e168c6be4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc34e9d9-f226-4307-a8a4-5cdc294e549f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2566cfb0-0f4d-4788-9c57-a47740022701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e4039c13-1eee-4239-a0f9-f4ab95e73214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7c8bdf-7445-43a6-9c06-90dd59c56142",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4338a0b2-41d0-49cb-b9de-656dfdc6aaf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7a4ec0d-fce8-476d-b5fd-af4a0fe78679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42676295-350e-418d-bba5-c2eff3b6c2b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "739ba00d-ff11-4510-ab5a-b27b3bab83c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a436f29e-5c04-4bfd-969d-dc07bd7e188c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2f915c-8416-4521-8583-ad159e0a6d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4e31b95-776d-4f97-90f1-55206f560188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dff3ef0-3dcd-450d-a791-d916dee88a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "33cc3ad2-d9fe-430a-acd7-c6ba2d4c6db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2165ee-360f-4735-8f2f-814bfaf9de5d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d984f225-62a4-48f7-8235-145fc7d1b8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a92b9f8e-8ab4-4b1e-96b5-303dd6d32976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1d5a4c-f977-4482-ae21-38f2c501001c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "34aed4e9-5e21-4600-a931-702e84a40362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b9b0d4-0999-45fb-91d9-d788c2da157d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc66b1a-e23b-4b00-9935-795f48e0482d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b8cae06-1018-47aa-8c7f-1ff3e61466ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5fdc25c-287e-4ea0-96fc-8ad7dbca3a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0e686f0-1c94-4955-84c5-ca8640f9ef16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73ce25f-9540-4362-8924-3895e488eed9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a173b9-3f09-4b64-b40e-9b9a5deca26f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "432ee9e5-7bf3-4e45-bdee-46c63d105279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41443636-f95f-4af7-a4f1-cbd63720c9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b05de2f-4991-42ea-bb9a-f7a406108139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6cbc89e-7ab5-409f-9ce3-6e2ed31b9e9e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a835ab1b-3f97-454d-ba66-11ea3866c3ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39bf75b4-d5f8-428b-8118-87a3a7ffd600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c87e241-6dbd-4710-99b5-d79dc6c580b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1c9da4b-c6c4-4919-b5e5-2dd0d03b0a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788128c9-694e-4bf4-b345-d0f2a9e83a91",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddcb6119-538e-4b4e-b056-15ddc9a1c9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "515e5822-0a77-4845-92d0-b76aef86c5e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a16f200-8720-4736-91a7-f63c9f78eba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f19edaa-1d59-483f-9a00-565d82fc69a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa20d16-8668-4d86-845e-bbcedce27353",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0104b60c-df82-4d9c-bab6-e96be6c2c92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9699132-88d1-414f-80c9-949ba88d585f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47df1d0-89e6-4bce-b593-0f2ea9ba8faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e653b001-067c-4fdb-be70-2c1593253a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c551257-1856-4d94-95f7-b55e1fa4f40d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e8c150-1670-435d-9d1f-8f625d9b1fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7aaab80-7b1b-4191-97d5-34e8bed2d0f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5222e11f-f28a-44e0-b586-c9595eaeb842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0403c329-8226-4ec6-861d-835a2451e539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a90dfd42-c871-4ba2-83e0-b5c4c8b2e813",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ecb6a3-4527-42f4-bc7e-f3050854dc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75d55d41-722a-4005-8d20-34288ce4c303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b0eb21-031e-4faf-b66c-2a58b6ed52b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb329f23-1bfb-4f01-bb7d-116946b2f6fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8574443-2968-4511-8204-304ebfd608ab",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9678874-1b92-437e-9002-e7e4b7b2344e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd4b9966-b255-402d-bca9-d9f9bf371296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750a375c-2dd6-4154-b0ca-1d2eacff1887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad8d2d3-d3b4-4eff-a4d9-9f0913336e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9e935c-7816-4fbe-af6d-1ee1ecb34941",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba58f316-9dbd-4df5-b8cf-7f9509ae2d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d4b2ceb-918e-4f7a-af51-5b9421a20042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9174d5c3-742c-46e7-a496-cdf2dc7097f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5af63686-cc49-4443-8c44-cdbf33558712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0085fe-570f-4820-9360-454613d5991f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed31a95-806e-494f-bc21-1d7b20e6e9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa9622c6-4e86-4d7e-9e1f-63dccd670aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b88722a-3cf5-4377-abf5-0a50d3b6b81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b225528a-e664-47ab-99a0-e6abf3783a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82eaf59d-6da3-4e45-bb79-ead1a9aaa562",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bff0960-89d3-4b67-9486-6ede056bac64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c63e777-2885-4169-b95f-ad180c04a0d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b3d861-1c6e-4703-840c-1afce2077cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58976401-4710-4111-ba10-0d2717b727a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3aaea20-ab9a-4ad4-b572-700949393efc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "365afb7c-43e4-42a0-b15e-60850bbad7d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c5033a-86d3-49c3-b3b8-9035eea8f4d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ec444e-6a8f-4fcf-bea4-d036d5436017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c3a6cc5-cef5-4b41-aea3-5791962bde22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ad921e-4680-47a4-866d-2fccf107b0ab",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4818a0a1-565e-4019-bdcb-7cf32eeba22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a88cbc2-21f7-432e-8f25-2500db8fb209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae05f60c-a9ba-4340-8b63-5a39d0fde73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c7008e7-aa3c-4cc6-934c-51f2217eef60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6771f4-1bb2-4fbd-a752-501eea18cdad",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b040d0b-0bf7-41c7-a35e-641301a6167c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6088054a-b2e3-4922-bb56-31ec868b8979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c7846d-74ef-4b29-ad54-db379184beeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9473cd4-a158-4a78-a418-e7c3d532e268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb5eb56-96f6-460a-acfd-a83fa9f66b33",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf38529-8296-44b2-8e47-b5d84e60b216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2beaf7ff-9494-436d-b504-e5247e0adbad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0388c37d-b52f-4abb-bf72-2b8b93c98aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9227f22-f1fa-46a3-8913-e87a898f24df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c654c7-33e7-4f70-91f2-5bf57f9a1561",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad509ef-753a-4799-9b2a-3798cee9563c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aea36eb2-050d-481c-8124-d3be7d3be01b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3240009d-94ac-4f13-94a8-f6278a872f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcc9cf6a-46b0-4d42-bc3c-bb784301337c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb21e68-8f47-4a6b-bd1a-5feaaec9fe36",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "309329c5-f67f-4c70-85a4-f904e3698c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9fc4f10-98c6-4336-b7d0-ecbb2fcdf78a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea9beff-1937-4b40-b109-84a6be4734b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6590e64f-04f4-40f7-986b-251078d594f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74cfc66-97f4-47b9-8e1f-01f0a5a580b4",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c348ae5a-f3b3-47e4-a779-032199d7811c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c350ec1e-bd41-4979-b684-d0ef4bf5407e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ed3a99-17b7-4c03-ad43-797d821498a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "795695d8-d4db-4326-9977-c807a5a7798d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd4cef0-0d4e-47ee-a20d-17b8982c78e0",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5a6b30-7363-4432-b31b-04e66da87cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b07995fd-f600-4120-8cbb-3b914ee8d4e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1abd707a-1e66-4d85-a982-425ea60c331c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fbf3d21-6501-4114-8866-03b4ea8e32a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3cfbfa-9b2a-4ee5-a970-f645aa25f028",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eac5e10-58c3-4540-9411-8ee1d17b7772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "417e2d3d-3ec2-41cc-bf02-dadd2c00e02c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a5f659-c92e-4974-b408-79f373cdd6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68e54ea3-165d-4699-a935-c5b5a6682b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1f512d-400e-497e-969d-e55cc43bf064",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01aa78bc-b345-45fe-9905-d083a895d08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aa7325c-c0fc-46f9-a52b-0803e584111f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be5002a-192e-4512-be64-723369476305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf15163a-e3ff-415f-be52-caf78c5bbddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87291eac-07fc-4f75-bf24-b5b389d4d78c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6046fc8-c58f-4125-9675-8cb083f3c9b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b316cd7-45bf-40ba-8085-80567ad17686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38418353-728d-469d-a272-0c018cb1a2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63161e05-fe0c-4132-b69e-673ee1283333"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "00d3ae1f-0f5d-4ad7-bca5-7f39b653c1b0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e27f3602-1b2d-4a9c-8ca5-e5610ba30796",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8739d28a-e589-4545-a29f-d076549311f3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "116de578-b59d-4528-a0b4-40a8bc64a213"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e7a9ce-8499-4de0-aad5-266c0cc7c033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "95051cba-e9c7-41e6-acf1-bdb8bd0f6e1d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65063e49-dbe1-4051-a621-292ad963fd6d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6084318-07f1-4385-bb20-f0fe9adf75c9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "224055c7-e4b7-4903-a5e5-78aafc20a13c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e8446da-b9b8-4681-b552-f809b928ea7a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20f8c89b-f88e-468b-b336-9271e147350d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "58c75a71-e045-47b8-b416-ac7c1f572d8c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d3d2970d-b054-4798-90d3-57cb92b1434b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d94ee097-27ca-4880-979e-f6d03b85b37e"
            }
          }
        ]
      },
      {
        "id": "652b0a2e-57ef-4bc0-929c-df836dbd8a39",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8f2b6226-587a-407c-9514-f8c905a2c3cf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "45a3ea7d-79c3-42f4-b735-faee6feab5ab",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ac917098-3b7d-4997-8044-60d82de33976",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74db9040-0471-462f-b5a5-54d6cbcda8fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc329377-37d8-4dbf-8034-442359488638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caecb994-812f-4865-ac5e-5034acbc1ea2",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce063687-fd8f-47dc-9481-add3ee5ab54e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d6434dd-d75c-466f-bae2-e9a1db8fe9bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef52add6-4335-4a5f-be4b-63391f24e257",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "345c62f4-4fae-4062-b0d4-94d7b3f5f544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "716f46b9-b355-4fad-9fb4-6b2ea5598897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac20270-0977-476b-a410-cd2c3773494f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b8fe3d-6120-49ae-b0fc-8905b940eaf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98fe3677-6d39-4672-aaba-d9fa55e2326a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb9ca4e0-a60d-4dd3-a61a-2d90621870ec",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a5d0a1-d366-4b66-951e-de7c0dfdda29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12ef8d3b-7c99-48ed-8180-13d1272ea339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15327f8b-19c3-44e0-bbb3-c9382c2633c2",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd01c462-e9c8-4d66-87cb-fa7328666b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27931376-cfb4-4f69-8690-53cfb9f0778a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff98d008-a445-4984-8d39-a45a166a51e1",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa8bd74-54d3-41c9-9dae-5fd302e43e9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07f63205-cb5e-438e-ac6d-743219473e6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de29b062-989e-4b15-856a-3525d971efae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4962981-cf19-45ba-974a-7fa2d18808f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9770371c-25b5-42e1-8db3-d41c127d80cd",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac8af4f-53f8-469f-8b22-e1097f47eb64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c36da04-c21d-4f21-9bc4-44e93fc97f10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e51144-da33-4470-9f5a-72780586688c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53225d74-409e-435a-b1de-5e3042299334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc7601a-d044-463b-805a-7f9333368f1b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187047c0-fce8-4a30-a863-42f7bc669b83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5cce2f5-fc7b-40a5-bc13-d4301005f852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd98336-e5a3-4012-ac09-98e3b62d26f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2b81992-1f54-4715-bed7-f0b8a743b9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4eb8d9-54c2-453d-9774-1d7c1d1bfe61",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b50974-f7cb-4976-b871-6055450a372e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cb26c87-f5e7-433a-83c9-e150bbd1edba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f23fbcfc-bf1f-4232-90f7-ded4fd934ae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54e7f9a5-0622-44a4-86d5-dba36c62ac74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a66d13-8f06-401f-a778-0243264c750b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a86c3da-b181-42f2-9715-61ff836ec6d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "906e142a-a861-4484-a976-e940f30cfa42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a28691-53ef-4e08-ab48-ec306e4ab766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c7925a-4620-470c-8a02-3332db011dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2dcbaed-d7ab-417d-86e7-12afe91b62ff",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3beb9215-ed19-46f1-bc4e-f2b69bbaf65d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a1d378-9376-4450-8ff2-ed4f394b1ca1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f37599-172c-43e7-9636-c3d3a111cd66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "513b2436-d396-4113-85fa-acfbd2551e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d18e10-bf3a-4434-8358-994973ad8416",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea9ca2b-2f12-4443-b5f5-3e5df0df5828",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d0aa31a-953e-4f8e-b39e-add73e8ce05d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c52c879d-6bab-4851-8bfb-1b658d165f44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22967091-7744-4bcb-8593-5a81e536b768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6cd237a-6c49-40be-8624-366e4abe735a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef19800-7702-47b2-9e98-814014526592",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a29bf83-271e-4fd5-9db4-643e992a0b4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed20e7a-5866-4541-8762-7931285f3aed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c36ada50-525d-42de-8c3c-213a16bdbc9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab64cc5e-b5d1-41f0-94ee-2e733ccac23c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0e05a2-1786-45a8-abb2-f72414209bdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4375ab60-09e7-49dd-8188-02237ab4ac0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1c47cb-6543-4aae-b441-e7e357a8841c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20196f60-14b2-4a28-a52c-7951eac2f063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7135fc61-0dee-42c0-bd69-12878b5fd753",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda471b8-5b3c-4c60-8a11-36c24ead2b96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a2df828-7c0e-4ce3-91ed-673aae22ae2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c48061-e7f2-4720-9fbb-85c3c7d6ea8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9a3e1e2-f57e-4a04-b433-984d536cb0fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c012236-9988-44b7-acac-57458c70d2c5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71d37da-1bd1-49ac-9c68-607fbfb1d5f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e969b89a-6c7a-493b-b070-946e071b2868"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ab758a-9315-4520-a287-e25cfb225729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f29d5cb-650a-49d2-87a9-a5e5175fbeec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1b749f-5e7b-41d7-aa77-24c51e9eaf96",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2230c5df-4fb5-4db8-9fb6-08c78192cb43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e91ae183-636d-4ddf-b5e7-892b024f5069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c358afb0-be71-40d6-91fb-8ce677248594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b1dc82c-998f-4d8c-af2a-bcdd7264fd93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "605de431-fc5a-4201-aba5-7d78cc45f013",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ac22d3-e3b0-401a-9195-a02401e5c29f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15585dba-1801-4820-a1dd-3b22e69e4f2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6504471b-8b17-4349-ac5c-22ee8c1f5dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11dbdbb9-6523-42b0-8400-9ddbb9cc20e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be37c135-9ffe-4076-9ccd-d724f9dec00e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "087d30d9-812b-4ee2-b939-0078836fe9a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffbb63a6-246a-4a61-be5b-8c2a06ff4474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1755dd2a-b587-4246-adc0-cd206fb0189d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89004572-69d6-4a25-b861-77a89ede58b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1688e28-5379-43df-9096-2d196f08f324",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b91ea787-1723-48d1-8106-8c8c41c5ef92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba6b3370-5616-4f1d-b92d-635b77fd3c5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7cfc3eb-4ffe-480a-aa78-c92e84812159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "757eef47-2c9b-4ed8-ad30-ee6d2e4ee4d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99cfc21-5388-4848-a2de-845fa2788e5a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a89a7f8-8b82-4565-afd7-857271705ffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9fe26ad-13a1-4ff4-a839-2d6b6fca9423"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ea1978-2b72-4fcd-9a47-a91bc5050f4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b5ff7ca-f408-4775-b3bf-ab78370a000d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb5598f-7cdc-48f1-93d8-11380537ff4c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac55453-9252-421f-9aed-d3f8a4971f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f5bc16a-9001-4750-bf9f-1b6957f7eb08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68992b43-9942-454b-bd51-9289bee07f8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0064803a-0c0a-4c97-b54f-38bcdbd50241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197f5ffb-3fc8-49cc-8889-ef45ffea4672",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b465e463-b0dc-47ca-b701-e59e6af70ede",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86041af6-8a55-4794-9977-1766983c0a98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98c845b-1946-4280-8a42-617b499f2277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b98709bf-1d44-41e0-be1e-e6f2ee79ef10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7785709d-29bc-49bb-8a4b-4935d5c1a616",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137c148b-2ef4-4018-bde8-45d6d6dd836e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05fce95e-ec9e-40b8-bfce-e1b453b03480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3f9178-1647-4d69-a670-a76ed4a23052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f8e275d-2318-4822-889a-d45fed74303f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "392c9382-69d8-4bc9-9352-1bcf437afa2e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d360fab2-4dd8-45ab-bd76-4897a3993b13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "656636a5-2631-4004-a7a3-4e17283f18a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ee37e3-0f2d-49b0-b3d3-c11b8cf9f530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4930585e-b33d-41d9-8774-8d848fbc7cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca77b2c-0b1f-4f24-bb0f-e6bbea051aea",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d95785-0f0f-49c6-9d6b-af045b0a9fae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87c0520a-a12c-4938-87d7-735372793a1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9fd544-f045-4c28-bb5d-e89b04977051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc61145c-9c9d-4547-9609-9888b4c641a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72974508-a4c8-4bdd-a64e-f47a8c400427",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d207ed-b7b1-4828-bac7-87e2aec2aba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bf02ab6-6ddd-466b-84ea-cee25b48efef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9876518-775b-4d27-a225-8d3c990ac031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d46a9157-1a38-4077-8801-78acff97000c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0ffb92-bab8-4979-8a53-6d24173ac357",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d810e0f-b609-4ad3-8959-7770c0136168",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10c7a628-a593-49b3-976d-cf8ee8d352de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ea3978-8d93-400f-8c04-8943e112a2ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40aa7666-0479-4662-8d34-e52f9ac98b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54e7aad-be56-41e7-a437-620459603377",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34cdb476-0cba-4936-91c2-5c705a693454",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a57289d7-4e44-4010-9e5b-106f1e7e54a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff65d699-2d0f-4bfe-982f-0e76ed8cc957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "907c951b-206c-4488-b102-e2ccad6f8a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0a3319-fba8-4a2a-b576-15e401099a5f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1203bc8b-c705-425c-8dd6-e338cfcc09de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f5891bd-a681-4730-bc42-811de246acff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc36cfd-eb15-49b6-8b38-05f95e1f95b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "104abaaa-f529-4b87-a70a-5f64f541e1db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb68bdbc-e72c-4c14-bb2d-97a888f82ba1",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032db61c-b4e3-4bdb-bca9-f1527d0ed8cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8579265c-b8db-4d8f-b546-314fdfa37552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec7d563-9d06-4ac1-a0c9-04938821aad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87ece7d3-cc5e-4952-b7b4-816dbaa230b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc902a13-0695-4019-a4a9-4eaa818e28aa",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df60c983-f08d-455c-85b0-1fc75d342cd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a272fc89-38eb-49b9-9c33-856a7ad3f3f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "971fd57e-68a7-4048-bbc5-ea1b84a52646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9c076dc-5a01-4ce3-84e6-31b1f32aefaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec28063-4a36-46eb-8c65-3aa41b2bd873",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8400e9f8-eb6f-4f7f-9f7f-735510d28167",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30c9b24d-19d8-43d0-b2ea-59af8cc1246b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84267170-7b70-467a-800a-7ef2408282ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f80ed19a-8abb-4110-b678-92e42dd3d6c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c924290d-5e20-4c60-a301-a336a937d36f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99906abf-8331-45e8-a05f-ec2324dcf167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7cf7212-81a9-45ec-b27a-2d71607d6483"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04631ec-0faf-402a-a4bb-3f9360b2d64f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea666595-6bd1-420e-b498-7772fffb2445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4073fbe8-4064-4f9d-8cd8-5ecfcf5a6e4f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b80751-a7da-44b3-9b93-5c70c230a1bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "477c369b-5488-4b02-b8be-ea255bc25b96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c13b5e-cf66-4742-a25a-e33ce5ddbaa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bafea507-bdc1-4155-8589-a904af4bf464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321b5b96-76b3-482f-8b31-18b9d8e10ebf",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb45bf6-4d68-4713-9856-4544409d150b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d88bdc-0c02-4c90-bc5b-3aea181bf43b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7d32e6-da01-43cb-bc8b-17ed5e08ec36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e80f2518-36b7-4ae7-a84c-3538517290ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748f2811-4539-4193-9dc9-317c67474868",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101a8b9a-03be-4cf4-b030-f5be58751c23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "747fc7c6-a29d-4289-bbe5-621db66a5863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cdbd1e5-7c47-4647-9856-c82d74664ca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d94810b9-6309-4576-b475-87210a2ce9dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0164356c-9272-4036-833a-86efd82e8cd9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2c5624-0021-41bf-bbad-8cc3b230e2bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d10fa584-02fc-4ebb-aa0e-11d4a9c547cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe7139f-ad25-44bb-80d1-e1055c631cd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "154dded2-b992-4831-b29d-993f55f27db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f230977d-4163-4408-80f4-6f622c86ea05",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f28179-0df5-4e18-9c72-9b1921d6cd72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fd72b1f-d5ef-4336-82b8-cda34b38b871"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19567ee7-157d-48dd-a2ba-c447ca207b99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "414d7816-ba37-44e8-b28d-0b48074e1172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63dd1b3-13d1-4322-a2a5-2ac44644591b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04598db1-914b-45a4-ae9e-eff32b519802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "451fb1e7-4b84-4532-a94b-95718671f67f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a72ee5d-4bb0-450a-8823-5042a0cb3a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "340ee589-5e43-499d-9a33-3d1ae14b068c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973dff08-7ef1-4253-a5d0-bbe3d11ff000",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797ee4ba-cd08-4afb-8341-e18cf3105cfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd3fdec1-e3da-4afb-8396-dbf4652cbe9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f64124-622b-4063-ae03-b8f7ea81ffe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ae2c713-c4e9-4caf-81e1-a5eac55d0367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6805ee0f-2be5-449c-9f5a-7c883f47f169",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450badcf-86b7-4b51-ae77-d173eb5cafa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffe279c5-c8f4-4765-9aab-af4e6057d6c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58087d75-7642-4598-9708-4c4b37216235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c15c2a1-de1d-4b44-b198-f9f0546e1cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5291876-a3c2-4c07-8311-b054586a4959",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a081ea-cdc7-4e10-b8cc-31c9995363b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8079d08-c1bf-4395-854c-6018feca7fb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16bee10-daa5-41ff-bc35-41d3a3060445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0982c767-f9fb-41b3-967e-966c0331ddfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c55b9a5-b6b0-4b68-9910-1fc6efbfc01c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a52229d-1cc9-4c69-a241-4faceab53ac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc92d333-81a9-4c8b-8654-5fbc0685c62c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a519b0fd-4662-49de-91b3-e50ac8b41baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c5160e6-dde1-48da-b553-b472aec2e3c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1565e0-04e3-4ba0-ad64-87363a8acf90",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243c5299-e0d5-4d26-a986-dce6d359f76b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37e1ca72-e393-4f01-bec3-c06a3c4d695a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d19b96-16e8-43a1-9ece-195da8d1d919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b274de4-04c8-4455-acba-4ac32413e27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd80e14-163f-4765-b571-217b3b851bc2",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02dd1735-dda2-4767-9105-ba220a23e272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06667ebf-4fab-415f-97ef-53c6b3e5a02d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1746330f-03f4-4b0e-8d40-73c52e78217e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6359e6d-4e74-4fa4-b783-4b8132f75c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af1efdb-05f7-4e91-90ec-5195e6124a34",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8fe42d1-e37f-4f7d-8eab-df4f6701737b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1ece2bc-ef2e-4035-a59c-6cd478b6ea52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ee2307-aede-42c1-b6ed-5375f658d980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15166fbb-f6a2-455a-9493-d35f5ac9eeda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14210023-14e3-41f9-a2d9-d843747383b4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c17457-4b9f-4643-b31d-4c5069aed9c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0112ba81-961f-4a83-8a54-2f07939f0f57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bba85b2-05f9-4dc0-9fed-13287b270e9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c48faac8-3e7a-40f7-8325-c6fa6334b25e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d1822e-fa6c-40fe-945b-44a8bb9ea717",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8a8fd1-e9fd-4a78-a868-c591f25303e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8565e981-d9db-4ece-88f9-390dc84d9645"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83263116-8f7d-4853-b802-982e16928da3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87630721-ddde-49fa-82a7-59c3f0b810e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55659e45-89f2-4177-98f1-0927ba878d93",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8baf7dbf-6ce8-480e-98f5-3a783ca55886",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15452592-d035-4c19-9054-42a4e82f5c1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "131ff36a-1049-477a-970e-b49311f03cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dd4ca63-c676-4412-9ca3-00c30e92a032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a4c16c-aeee-4d57-8106-573547ad8f37",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842a1415-eff7-42a0-af2b-998309771b71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57772006-1169-4299-a513-6ae972c04b4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b8856e-68e0-478e-97fe-205bf7e5393b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bd2588f-1e60-40eb-a739-f436f2b49f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee6efdd7-aa48-4bc3-8ed2-e40daf95abfc",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00efca54-c4e7-4d95-8f29-4b2ecb8ff295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8391c962-edde-4f9b-bebe-8bc7c78b799d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc928b75-fd38-4118-ba48-328076ed064b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93322622-629a-4032-9020-a67f164def94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44eb5ff8-b7ae-440a-919b-74699ce2a2dc",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721f963e-86b4-4306-813c-6491d1069088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d554e059-1d7f-4fb9-a9ca-f76b400ffe59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b199fe-f784-4d2f-a476-e7d0531475ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3035376-92b6-4f81-9ef1-f5437df52807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4bc1500-790c-45c9-b1fc-b6afc985982f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c90380b-ecfb-445c-9d2b-bd5d96a46a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e684a11-e428-4fa4-9e83-a121a45dd9d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e06f30e-55b5-46e7-8a67-f2e4c7c07def",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8d1e5c8-be5c-4222-9112-d7a86131f0e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f47ebe-85db-427f-bd71-c2f9b4cb7463",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffba3a55-0ddb-4e15-a16b-a997518ebe3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d059019-fecf-4057-8db4-fb7d7caa7d8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a934fd3-38b0-4e3b-8822-e8752c213f87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c53e550a-2551-42d5-84e0-982039a9d423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4615041-f48a-475f-bfe6-92a441baf00a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f2d893a-e4e1-4408-b19e-5a2944ed8850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "277ea74c-4365-4e91-a041-51db80351a83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99eba68-48ab-48fe-8f72-cf1222ca0854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59ef51ad-484a-42fa-9b1f-2b533b4d911c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d2e6849-59e2-46a1-b230-a6e1ad601ddb",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6586e61-5f87-4a8f-b69a-f6e1050bce04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "031af8b0-63a8-4c93-b27c-4c00768b0d58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "178b153b-f54c-4395-ae7c-e29607f18003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8af82487-5256-4585-8f3f-fd09c48dec02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56762b66-d0a0-4556-89ab-f870df0eb7cf",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436ba8bc-20af-4b1b-98ef-abe5cdc02e54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07e9fe27-94ca-452b-9925-0a676d7e405d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b133e5-0d90-4f22-8688-d263f257bbf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8405c9a-0356-4999-bd77-e113322079ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f184e5fe-ad78-4990-bd7f-3fdc2224693d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5db1786-6512-41d4-b470-5b232c94cc3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cb751f0-eeef-497d-93eb-96e6395192f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de98d6dc-5871-43f2-a1cc-d151015d7aba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5e315e6-3997-4b6b-a766-dd0dd88ca96c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c0f60a0-9dfe-412b-ba59-7df67f86b6bb",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f7f125d-586f-4b20-b960-0aa972532f49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bac057e9-d7d1-423f-97bc-ef4e79016d7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d021c7d-8509-4da0-ab6e-bef6fd948c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec9a7eb9-752f-4d41-aa67-73b8e27dcd15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f984a465-d058-4646-b7ae-399728d30044",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a054930-426f-4083-b44b-fadd25220cba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37aebac2-2ac6-4ab1-9c86-af2783479419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2dcab7b-8060-4c13-bae9-9d920e4d3507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dc9cd39-6779-452f-ac0e-7e2369ec9f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c2da35-358a-4934-8db4-a432d24716c6",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75439d7-537f-4359-b135-1b3574a8d708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "773db65b-3615-4d09-8108-67ad55e3368d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07422cec-4cfb-4fcf-86b8-042270c85b82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a2093a-0b8c-43f8-9217-c14d6ce42056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d3022bb-5eeb-46aa-a035-6bf76d9dd92b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57bb4f19-5372-44b9-8949-cb311b575525",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fdb8eeb-e1cc-4abe-b9be-a098894ab646"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d1ee0f1-cc7b-4b61-8e10-3de1b8378410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4aa0f8a-be53-4548-8fec-1e02a8754d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08c374a-7757-4785-b926-f18a62445110",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb36b5c-6098-4e71-8ef5-cc28ec6e512c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33e8a596-2f90-4a66-9f7c-6d1dd3435878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6723add-7e32-4d08-8393-781b1745911a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8be98cf-67f0-4536-b931-88707c2e4478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f19a41-5467-4fdf-b30f-377938d89553",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53dcc263-441d-41c8-9379-8fc0521b1bc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8314bc27-654f-4030-a3c4-0cf69719ff32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f841ff19-1d00-4152-a732-59ef30233c83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a06fc45-59a1-4f83-a3c7-c4fa45dae9e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a397a5-402c-404b-9526-c496ea5cf88a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8320b8-1624-4d2e-ac28-9193669a803e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35a6a65a-b593-464b-8c25-9bea0bb80e58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9adf0ce2-8cca-4956-8006-f5ba1f82b044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e912791-2f33-4745-b19c-c97002804e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24232a57-8f7e-49f1-8bdb-77e3424c503f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ee7f8f-8ee8-4033-8983-a1026f5c5555",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce6d002d-a705-438c-b81a-93c5142c1838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b64db9-708d-47b7-bd41-b64105df7f74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ca58941-d682-4c38-b886-849cc79965a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf16c0da-b7a5-4b2d-9e54-5e23f1d2e942",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7448289a-a074-4a0c-9cd9-5cc8b60efac0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6bbff54-a8b8-4e5d-a0e7-c9b715d2ab31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf36c71-4a7c-4ff7-9761-6a54e18a4df3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e07648-9032-4c22-954c-f652e22fddf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f160fd-7521-4f0f-b43f-482b3cccf846",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64409ef-d42e-4ad3-a900-7223aafa2294",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2ebb050-f763-477e-b662-c376018ac88b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "303bf73c-da0d-429c-a416-82b9e056785d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0054f36e-d52a-44c5-ab66-93ca0db857ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b551f11-57b7-4bc0-a977-9862ac2d79a6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ee0a8c-bd77-49af-9673-5076438867cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f1f8846-c3b6-4898-97d6-795e406975a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10daa02a-c7f1-4dbc-a7dc-deabcd336edc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a69d264e-66eb-4660-9144-e23c1d1926e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6ee748-fd41-41fa-b890-a6a51557f9ca",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4efec32-f313-45fe-8e60-db4e876cf933",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bc18ced-a39f-49f6-a9b8-73911e45d9a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "268c6825-80ac-4f76-8416-da2fef8bcee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "321cc81c-b360-4a90-a540-bf19195214ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "279d61c1-ca8f-4e11-a92e-fc38b53f09ef",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de5b5db-c546-4383-bf5a-4c280bd80735",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "783b2ce5-af9d-4e60-848d-2e133ef8edae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3508fc69-c43e-44e1-bb70-7fbcb751d1b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94ee74f4-8964-4b8d-b686-d47a2979b549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae152388-d8d4-41b0-aff3-ef9aa2b7349e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02893c7f-b980-4e37-8714-5ed4f814767e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8586d9a-238d-44b4-940c-d6b42e513096"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea54a47c-2e94-4836-b4b2-2ab9deaeb3ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bcc074c-e87c-4548-a4d1-d24dbda09008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccdd1ed7-6f3e-484a-b3bc-1c71687d4684",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ae9349-116e-4e1b-82fa-a12493d919fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d7251cd-fa4a-4cf1-818d-4dd9e677f7cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "765492c5-466c-4baf-a20e-968a303d8166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29d8cc77-a1c2-4209-80b7-8c8689689af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2654d0bf-4395-4bfa-9d84-c6006c96bc3e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d972405f-dfbc-4bf1-89ba-910923253627",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5901002e-ccdd-4507-a09a-0cc0ad6d2033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be4b8d1-3e94-420f-8641-eaf1abe5db4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "410bc2b2-4689-4503-90af-0f3a2712ce17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13127dbb-40cf-40b0-9b2a-9e0ff5a9b66e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9418aef1-2136-4230-9245-849d3b31b3c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36fcfb8f-b5dc-4ca1-8cf9-27930b7e7ee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c27a73e-ee33-4db0-96d2-0cdb2ca1e039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c26f7812-587c-4711-a736-0bb9eb053641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febece62-3860-4842-aa9c-b9b2be84ca02",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69382393-cf76-4fd5-9166-33478dc50cc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b5c000e-0126-4d61-8f3e-d8778adc4bfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "035c5d1e-90c6-4b11-b1ef-c1e89a6d9eb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c273f026-8ce9-4c82-b51a-3a449eb04d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8081db-fee8-4c7a-b210-a897faa2bb4f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f047c7-0cbb-411c-b1c1-84fa15ee7935",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37bc4df9-636c-4f6f-bfae-42bc0105afcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2309d6e1-a0b7-4e0e-8ca6-8228fe9d35ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de50f9d9-1ff1-4676-a5d3-8e7add868e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b254ea02-29eb-4783-921c-e7c9f312ce51",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e221d409-b4fa-4e23-9c95-6e4464506a05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e00f585c-c734-4aff-ab2c-c686eb1be06b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "699bcd32-21dc-4bdc-82aa-856e05c970bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e12417fc-fa64-426e-b225-d2178ab788e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ae3962-9133-4c67-9cf6-8889eb6945af",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d26817-78cd-47a5-afa8-8709ad9d6165",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecc4b453-bca5-40ba-8887-ff7dc659fd4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ebc9efd-d029-40d6-93a3-3eeee17b420d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60d6a6a9-f5c3-4d99-a3ab-f718a26331b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b1d99d1-41dc-4654-8c48-85df2d75c342",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6636120-1747-40ae-b5a4-0cf27ae84fc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ec649b3-3031-4d3a-ae2d-c54769768eec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "855effe8-d66f-4e13-a63f-dbd523e25fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27775406-36f6-4731-87db-9a253f3d91da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32cc0414-79c0-4e35-83e2-4ba6c4b3d57f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d01c74f-85e1-4606-b32a-736c62bcf84f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51c5a6d2-f131-4763-88bb-5648d5aa4ac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "120ce804-7cfa-4f3a-8589-d2c60e633b2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20a7c9e3-ba86-4c33-b9b7-2664be45a1bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2525751-dfb5-42a2-b334-824a8ae706e0",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f812c7-6541-4847-8e08-eac994e4bd97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdfdb4d4-9af0-4144-bf23-63dfc1ee84bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4547f3f8-2c06-4565-8046-d06debd01356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49309c16-5674-400f-b0f2-3cb81be45baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3b0219-5685-43e4-bbe6-3f038ddca8f5",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be265a1d-7ac1-4ae1-bfb7-3a521b4b642b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6708f1f3-cd95-46a5-aab1-5490bbc21785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a92a1a-c855-45b7-b6ba-cff21a2806a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff3c8816-f960-4d6a-aafd-01b10ef30c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926f24c1-1eb2-4aa1-8cba-e992ff0ead16",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b7f4dd-65f9-40be-b766-c651cfa783ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2ad756c-58eb-4103-b3d7-31bd8da1f02e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59b585f-70d9-43b8-ba9f-e710e102dbb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0b29503-a824-47ba-9d3b-29537a844a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab164e6f-b5ae-428a-9004-f29592aed7ba",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0cade82-ceaa-4506-b423-dec24565b54c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a86ea2a5-cac2-446c-b22c-2867ee14c8f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "030f719b-c5ea-4b14-b6b3-bd1575128c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20835679-8467-4687-a7de-b126477ef3b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc2aa5bd-ce97-46f4-bc7c-489b6a27a9aa",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ed1239-0b8c-4b28-aa2f-825e22dfc6ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74a859ff-2238-439d-9017-80d03fea19a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1d6f60-d700-422d-8f3a-321ed98fdc17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acb4e7b7-9e2e-49f1-9f85-da90598ff05a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c4878b-4f44-44b5-a928-8ca05beeda04",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3696256-c700-4e0b-9f15-17cb138ead5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f5103c1-5dad-4b1c-8c3a-c1873c07aec5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f1252d-554a-4d31-9500-b88d2913f46b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30a6722d-3a07-4ba4-b831-9c3e7c8c371b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "832859c5-7064-4dfd-b228-c5859da714e3",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557f3bfa-457e-467f-8dd9-7e9de6af72cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "043b4702-5d0a-4580-82ab-87767366c84f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c2101e-3808-4193-9662-9076a119e736",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df136d32-8571-4c18-ad68-9d612ef94e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ba67dd-13d7-4177-9e4d-cef6f2a58c2e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55045fbc-b4a2-4a84-b577-b1f653221926",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80e76c46-39fe-46d8-a0a8-8fa19d6b4eb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58868fe-5604-4cd1-b61c-74b930f133a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eabc3256-6c48-4bc8-9333-1f0a872de3a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad91720-9f1d-44ea-8370-28a842de4300",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72afabb9-a4b1-4b38-b49b-2bc9f1cade25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "224a747f-2648-4778-96c2-4187dd5c3459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab5ad53-73b2-4c4d-b258-06bd886e4385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9654934-27ab-4e74-a99d-1222bf770d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6772d4b-c03a-4bc9-88ff-241862fc5906",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73921d7-f6dd-4a58-87a3-2c711a3e3363",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c0a4e5f-7afe-4d61-9fd1-fa59235c90be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a85f213-c0cb-4ba4-91d5-dd82ff5add8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7da1b464-431b-4223-8f25-b56b17811fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e28509-7c22-4fc6-9f4d-d54c335bafd4",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9546dac0-982e-4b04-be0b-86c252204425",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be2e0508-d78c-40fe-bcfd-4c53dc35026e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e6a25f3-eb3b-4d80-97dc-eaea5335c83c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57390afe-59cc-4aec-a61f-93e8da946e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0508f43d-2b61-4bd4-829d-18c766f77e65",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83fc3b1-c34a-4313-b8b7-a1c79d5e3c5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0b3150e-5d7d-403f-ae48-6e0e8d37eeed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67913c85-de0d-4c28-b049-f082e9eb4075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b42d87-fbf9-43ea-860d-6957b673e645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af67e943-4f93-453b-b31f-9e6e6f5289c0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55999e29-72be-4081-8ddc-577096d391f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de69cece-cc66-4266-b471-0a8583cfcc9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73a6d48-5603-4fa2-a65f-8962fccefc60",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ef3c24a-ea26-4275-af61-1fc35633731f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8fa70c9-c0f8-49a2-9dcb-0602faba4a6e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a6de4dd-4046-4993-87f8-23933065c784",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fb60455-b25a-48fa-80ff-d74b8cb67b07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ba40a6-f486-440a-9fa7-99faa63241bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d4260bf-c4da-41fb-936d-0c6223137762"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c6da946-d5fa-433f-8789-7411a8f24fe0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cce12ae5-c322-4f28-b967-b0c854f72229"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "82973d57-9c6b-43b0-8aac-0b6c87df32b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e000367-908a-4c0e-bd5f-f59a7233e548"
                    }
                  }
                ]
              },
              {
                "id": "b5d8e601-b0ce-48f6-9e78-e96c9720dddf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2544066c-1434-4172-b2bd-dfc21fb73f74",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e97547a-01bc-424d-b0c2-1834497f6681",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2d30db58-ba1a-43d5-b5df-0a39ff2c2df2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "903fcd48-4608-45df-8267-e445f6515acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb3834bd-3866-45dc-9395-004b4a209762"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98d645bf-a557-4f1b-815b-856d145afc9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0de2841-16e9-4d93-9ad3-4050b8825e14"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "74cbdd39-d5bc-419d-8aa2-75d04355a5a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85ca18dd-38b8-45b3-a741-881a010c79e8"
                    }
                  }
                ]
              },
              {
                "id": "1728a32c-8551-4500-bab1-c5d41a53e74e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6d4ecc3f-d80b-4206-a970-d30ec1c0df21",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9e1a22-72ca-4353-ad68-87f96b9252ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e0caa401-200f-4248-93dd-41001c6879c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6520a160-bd90-4118-b2ca-19d3a7eb2988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c15be368-55b7-4af9-bd15-b751fe40c693"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b9f5ddb5-17a4-41f0-a10d-ea7373845fb9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c2553321-1345-482d-a81f-cf786ccf50df",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bdf132d-7fe6-464b-8fd3-be0788e8d56b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ad8cc334-f273-4046-9652-401b1dbe3773"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1dc4ae4-b98a-4289-ab50-2e8645062456",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b0bc0afc-dfc2-445a-8647-35a23cf1a3a1"
                    }
                  }
                ]
              },
              {
                "id": "333899d4-2163-4b4e-8988-a71b7312b42a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6809ff6-b5b5-4bf7-84a7-50a74bf4eaca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1d53c971-bf40-4b06-b3be-0935f9bdb249"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce4f8a28-7a92-4d15-8bbe-26ea93687270",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d690919a-caf0-4f09-bb73-28c32d60db4e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "27d635cd-7c57-45a7-b810-25c8f79e92d0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d0827b3e-39e9-40b3-9f76-2a385d9acf65"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "061aba6c-9711-46a5-9067-b529c78c5235",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c905e2d-63e2-4c92-b72c-04fe9a524fa4"
            }
          }
        ]
      },
      {
        "id": "e1bd6b33-f722-4962-82e6-f9e1080643c9",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "16e32554-30dd-4cb0-8dd3-ab5c6b2cde45",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ae70621e-c9c2-4da6-a280-e3002acf529f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "98225bad-98ff-4fe7-8bbb-b999d8a4ee4d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c9e9f3-97dc-4197-bdbc-2f36211438fd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2f00ab82-f97d-4cc0-8f0b-ca98a5d762ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d80954-2bc9-4d36-96a9-86e2deef2251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90fb6e1d-c7ac-4727-bd02-dd96fa57edc9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7644af6b-485e-4ea5-a9c3-a6d0b716fc35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea71ec78-32a3-4370-8e68-7d1efdb0bdd6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa0ebd6e-729d-4a78-ab9b-f1d57a199a44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f67da21-4850-44f7-afcd-c60e411672ba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a37c58b-ab3c-4b3c-9fa8-869f6de5ab10",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d730a816-25fb-4224-a0f4-7e4b185e7fd8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "861c88d0-2158-41ba-9a14-7c5713f7514a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2cf3a7ec-c86d-4501-acb0-1af28f13cf80"
            }
          }
        ]
      },
      {
        "id": "46ffa2ba-e7f6-40b5-98cc-44f222c1fc2b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "8c0577de-c25d-4529-8ef4-ed150df8410f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "db6b31a6-fb9c-4690-a45a-32a640c9e320",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9c9b93e4-75a1-4ad6-ac3c-88d555d3e7dc",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0143be82-11f5-406f-a95a-f5f21c24212a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f59d057-862c-4d27-882c-e26875d8c782"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c895aba1-d076-40cc-93d3-0e60458fb4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d165bdc-5e65-4f78-8737-a74f09c0184c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c7543ff-145d-4034-a70c-663eb42c78e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ef9873a-053c-4249-838f-595ac4c155d4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d452b3b-d1e2-4353-ba8d-49e6fb9a135f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a36bc5e-5b5b-4a2e-8b66-687c4e1b06e8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1844e9e3-c689-42f9-8bf1-57403b84bf49",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0d7e37e3-1eb3-4981-892b-d001448fbfbd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7d8283e1-c562-424f-a65c-3f035f6e3b5a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "35782774-9753-4a6e-8328-6bd24971ad5c"
            }
          }
        ]
      },
      {
        "id": "43ed9e97-0e88-4a91-9ca5-5ec1710dfef4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "798a6157-d1d6-401c-9a2f-1c941a9b54cb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e7c49cec-e1ed-4ce6-8fb2-bc73ea4cf13e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0631f1c4-2f6d-44bb-bc6b-91bda946bcbf",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae0e78f-cf09-4e30-b0b3-8e5f05db6f83",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d616d35-8656-4ac1-a4dd-cdb51b2013b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ab3a43-470c-46f4-9706-1ebc97a19dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31de01f2-012d-4654-909a-0b102f18b31e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09fe7f17-ef5a-4f2d-b26b-04b108a36aaa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5fa9035-fb09-4767-b55c-cfa51bec11a2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a5552c6-3505-4410-aabf-fc57ba25bd1c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b92d499-bc73-48c4-ae8c-8c7e952c204a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "721042c3-b3f0-4f96-8828-a653a284a3f5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "768701cf-726f-4a7d-a837-f4cb58c34186"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "daf32cf4-5a52-47c1-81e1-472b847ee666",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b61350fd-d390-4237-ad78-f9b6f01c5489"
            }
          }
        ]
      },
      {
        "id": "3fef10b9-4353-4592-9f6a-7e30cde620f2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e43d1c31-e11e-414c-bef6-960e6f6c1362",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "564cc6d1-2758-4387-86d9-801692cd48e8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "272075cd-31e5-47b7-b2fb-0a612a00fb4d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e9603f6-c3a1-4577-9d42-7d4b26f1408a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0b72d633-0a34-4a93-b46f-1cfa78142eb9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 373.11111111111126,
      "responseMin": 8,
      "responseMax": 10571,
      "responseSd": 1532.4783937585769,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1720312963771,
      "completed": 1720313065984
    },
    "executions": [
      {
        "id": "cebaad77-e054-4f0c-8238-2117c7fa0fd7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "aab611c7-af1e-4c94-99cf-4f378718b4a0",
          "httpRequestId": "75d8e9a9-ea0a-4500-ae2c-7288865682a6"
        },
        "item": {
          "id": "cebaad77-e054-4f0c-8238-2117c7fa0fd7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "db495d86-8802-4991-8a11-1da3299b66b2",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "5a7b2116-d159-4b89-af8e-909b9ece51ab",
        "cursor": {
          "ref": "d11d1141-96b3-4cba-b74a-ea5bf611ca95",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f8821c56-f424-4d0d-b9a5-5831cc2b1526"
        },
        "item": {
          "id": "5a7b2116-d159-4b89-af8e-909b9ece51ab",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6e54a621-26f3-41e7-acf1-434a948ede77",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "d4f7f039-3ca6-4d2b-9043-aad3f0cf36d7",
        "cursor": {
          "ref": "7a87c88e-4131-488a-9af6-eb22c0963b30",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0f1f40c4-940f-4fcc-b999-17d30b03bb3d"
        },
        "item": {
          "id": "d4f7f039-3ca6-4d2b-9043-aad3f0cf36d7",
          "name": "did_json"
        },
        "response": {
          "id": "1e7ba0e6-5f03-439e-bdcf-734d366a0c6a",
          "status": "OK",
          "code": 200,
          "responseTime": 415,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c91a80-45b3-431c-ba56-426dbe1b796a",
        "cursor": {
          "ref": "7c22a68e-adb6-4096-8ff3-64ab7338af08",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "236135f4-5746-4dbf-9ebc-762d803a797a"
        },
        "item": {
          "id": "f5c91a80-45b3-431c-ba56-426dbe1b796a",
          "name": "did:invalid"
        },
        "response": {
          "id": "d74344e4-4e0a-4617-8946-dcb8e03841b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2301,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c91a80-45b3-431c-ba56-426dbe1b796a",
        "cursor": {
          "ref": "7c22a68e-adb6-4096-8ff3-64ab7338af08",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "236135f4-5746-4dbf-9ebc-762d803a797a"
        },
        "item": {
          "id": "f5c91a80-45b3-431c-ba56-426dbe1b796a",
          "name": "did:invalid"
        },
        "response": {
          "id": "d74344e4-4e0a-4617-8946-dcb8e03841b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2301,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27bef035-b7ae-40e3-a40c-953f38bdcbce",
        "cursor": {
          "ref": "3d677690-e0d0-4651-9d0e-56fb6872154e",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5fa9b8fb-e67c-441d-95e7-c54f16f04eb3"
        },
        "item": {
          "id": "27bef035-b7ae-40e3-a40c-953f38bdcbce",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "bcde6df0-676a-443d-83aa-483938eb7e44",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2559,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea50b8e-f3da-486e-b190-665006cbc3a1",
        "cursor": {
          "ref": "11d8201b-c829-471f-aa5d-b526ae2a3867",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "70723da8-4517-478d-b81f-821cbddd6f38"
        },
        "item": {
          "id": "0ea50b8e-f3da-486e-b190-665006cbc3a1",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "060ed1e8-01d9-4e9f-a092-f2f604a77abe",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2348,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4463bd4c-131f-4ea5-a773-39e2919e26d0",
        "cursor": {
          "ref": "01e35f21-4bb1-4530-96d5-8283fd6bd397",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6efb7a7b-1e1a-4eee-83f2-be59a9df5e74"
        },
        "item": {
          "id": "4463bd4c-131f-4ea5-a773-39e2919e26d0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "14fd1294-866c-4346-8d4f-13b5f28a7bf4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3682c45-a000-4704-91db-0c9b20193257",
        "cursor": {
          "ref": "3771af56-a50d-4875-954b-a2d6c180b897",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c281474b-3892-4760-b536-d5b06280cb77"
        },
        "item": {
          "id": "d3682c45-a000-4704-91db-0c9b20193257",
          "name": "identifiers"
        },
        "response": {
          "id": "fbebb794-79bf-49c5-9c8f-2b32698a9b35",
          "status": "OK",
          "code": 200,
          "responseTime": 2756,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ffa6a7c-0983-49e2-946e-766bf6f88751",
        "cursor": {
          "ref": "c576fb32-9961-43ae-a135-695d5d000f3a",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ef7e9728-e87a-4b49-8671-539113d75af5"
        },
        "item": {
          "id": "3ffa6a7c-0983-49e2-946e-766bf6f88751",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "cc3eae19-0636-4809-8b11-af416d0f2072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9b80e1-cfae-4ee2-9008-6677c79a1705",
        "cursor": {
          "ref": "d8c97b3c-f77f-430d-9915-72e802dcebed",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "21b07e14-41a7-45fa-a49c-3adfb79a6874"
        },
        "item": {
          "id": "9f9b80e1-cfae-4ee2-9008-6677c79a1705",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "640b17c5-c235-43d0-b64f-48cfbf44aceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06a185f-eff9-48ef-8685-cfcf9eb443cf",
        "cursor": {
          "ref": "db32046d-bb66-4ac3-b8ef-d2b766cd4a13",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4b9ddf21-76c4-4980-bcae-64b7a3b857d6"
        },
        "item": {
          "id": "f06a185f-eff9-48ef-8685-cfcf9eb443cf",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c2f86d8f-1fc6-4c46-968b-fa5e68f62162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c62f9a3-47ca-4016-9468-b087f9d50ac4",
        "cursor": {
          "ref": "6d4eb831-6553-474e-9235-970082a92c3b",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c976ca14-5b13-4cfe-a002-aabf1eea3820"
        },
        "item": {
          "id": "3c62f9a3-47ca-4016-9468-b087f9d50ac4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b7cb4ff2-911d-4e5d-b755-ba4d98340098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c6cb89-cf34-499d-82e0-30eeaaa2e470",
        "cursor": {
          "ref": "b0fc5aad-f637-47d8-9487-5d276fcbcdda",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "cb26e953-aefb-48a7-bbf7-69f4740a0795"
        },
        "item": {
          "id": "66c6cb89-cf34-499d-82e0-30eeaaa2e470",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c490fd9b-be74-4192-984b-61df38a7e6a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5575fab-1bf0-4d71-a6a9-b5b0823c0075",
        "cursor": {
          "ref": "12d5f4d0-03d3-476b-8aa1-07f7b83b93ca",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "50363e8a-8b4b-45fc-9cda-e7b4bdf4cf90"
        },
        "item": {
          "id": "a5575fab-1bf0-4d71-a6a9-b5b0823c0075",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "179c50c3-0cad-4784-9b5e-dc6111024799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd70629-e76b-4e3e-a719-1d274b2ee74f",
        "cursor": {
          "ref": "ee0fb30f-ce5b-417c-bff2-498b3b99952b",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d9566844-6c69-4256-a52f-eab2e7a70920"
        },
        "item": {
          "id": "bdd70629-e76b-4e3e-a719-1d274b2ee74f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5d3afa41-2c1b-460b-a4e0-f5d15b71edb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf9be14-bcbf-4139-827e-ccb11c8f4100",
        "cursor": {
          "ref": "21e44fd0-af52-4947-83df-38a97561913f",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ca9d2708-dc3f-4b0f-9049-b89c611852f5"
        },
        "item": {
          "id": "5cf9be14-bcbf-4139-827e-ccb11c8f4100",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "890fbc77-5c85-4486-9e21-f048ae6f64e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1562f06-dbda-41e2-9bc7-6a5145af85d7",
        "cursor": {
          "ref": "82cbbcb7-b4c2-412e-ac84-08abaf4a86ae",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a45e662c-6e00-4e02-b4d1-f665a0dd29e6"
        },
        "item": {
          "id": "f1562f06-dbda-41e2-9bc7-6a5145af85d7",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "695bf360-c6fe-4445-abc2-351d20ba5845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7302127c-e581-4ad3-b80f-7cf7f7959b97",
        "cursor": {
          "ref": "2e113d25-e1cd-42e9-91d8-85b2fb7a3877",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "19cf5fad-cf98-4db2-ae36-2d505a315b50"
        },
        "item": {
          "id": "7302127c-e581-4ad3-b80f-7cf7f7959b97",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "585e4588-74d0-492b-8243-5300be1cdfa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c568ae30-ac3d-40c6-a3aa-c238c1a6818b",
        "cursor": {
          "ref": "b0b14579-76a4-4921-8695-8fb3c8207dfc",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "61974e04-51cf-4e0e-bb72-e25c4d20fcec"
        },
        "item": {
          "id": "c568ae30-ac3d-40c6-a3aa-c238c1a6818b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "66bca462-f81d-4882-bfbf-8d2b8e336ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27c6ec3-9416-47d5-91e7-37e305ffe0e9",
        "cursor": {
          "ref": "5fe2ed85-e3d5-485d-98c7-22e67850710d",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b47d7792-4302-477c-9375-6f8bf9cc8d76"
        },
        "item": {
          "id": "c27c6ec3-9416-47d5-91e7-37e305ffe0e9",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c2ef9ac4-9ed6-4984-90c8-95cdefe34c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4174a2-4038-46ad-87f3-d1a267eee431",
        "cursor": {
          "ref": "cb1ef103-295b-41a5-920c-a7c088281722",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b437632f-598f-4db7-a88b-b1d827b67475"
        },
        "item": {
          "id": "0c4174a2-4038-46ad-87f3-d1a267eee431",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6980746b-2d16-42d5-9c2d-06a0d3ce15b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85175b5d-6192-4ad2-b536-fc4844fa484b",
        "cursor": {
          "ref": "f1ee9320-1e18-40ae-90c1-f1c36c239058",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4c61ba77-4077-4fe7-8cb0-f3d0b10cf54b"
        },
        "item": {
          "id": "85175b5d-6192-4ad2-b536-fc4844fa484b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "59f732a8-e020-4a94-8c37-79dac7f40857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604617fc-a46e-4541-81b5-1ae1e0a57dd5",
        "cursor": {
          "ref": "56a8338b-e8b9-4f36-9bee-303979a44dda",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "421deba6-f330-4d51-9204-2e93d2038f83"
        },
        "item": {
          "id": "604617fc-a46e-4541-81b5-1ae1e0a57dd5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "cc88d6f2-30f5-42fe-8377-546344231d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14bf7d60-3f10-43aa-8d00-f6ae88e6f65c",
        "cursor": {
          "ref": "b9e959a2-a89e-479d-9208-53a25a70050f",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8e1ce381-3523-441c-a506-9490175903c9"
        },
        "item": {
          "id": "14bf7d60-3f10-43aa-8d00-f6ae88e6f65c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5b5fc966-e003-48b6-95c0-5293385e74ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab16885-ef74-47ed-a953-7e0062ffe3a3",
        "cursor": {
          "ref": "1bbc46f7-0dd9-41ba-bb57-ed4f06362d31",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b2b76e70-d1d1-47af-925f-9be0c82e21c5"
        },
        "item": {
          "id": "6ab16885-ef74-47ed-a953-7e0062ffe3a3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "db99f9a2-b89a-46c9-a883-19140101d460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514dfa4b-22ef-4519-bc32-d3f857bac7f3",
        "cursor": {
          "ref": "e84b229f-dfe3-4a57-bcf2-83aada3e1abf",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c5041bd4-fefb-4bbe-8954-21d9993a60a4"
        },
        "item": {
          "id": "514dfa4b-22ef-4519-bc32-d3f857bac7f3",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d917d413-f0ce-437d-8469-f15e52793fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b08fd2-c81a-4971-862a-d4334d39de9e",
        "cursor": {
          "ref": "45b05bf8-dc75-4f49-867b-bf61ba0ec16b",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "632cc7c7-f21a-4b5c-84c8-ad35a3760740"
        },
        "item": {
          "id": "c5b08fd2-c81a-4971-862a-d4334d39de9e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6cc44c72-273d-49f9-a8ba-42279b3f8e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0755a0cc-de90-460a-ae3a-bf77a15b615a",
        "cursor": {
          "ref": "0ca9c7a8-eb9b-479e-9137-cf43620f68e7",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "faf56e37-7932-4b2f-a27d-e129be013b3f"
        },
        "item": {
          "id": "0755a0cc-de90-460a-ae3a-bf77a15b615a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "026ef568-5957-467f-a0f5-2126d25d68c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ced5794-76c4-4811-bace-09e35dd10813",
        "cursor": {
          "ref": "c9d4efa4-1f23-400d-8a7b-a88d3b8f4614",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "453755fc-991b-4cf7-81eb-e16d1ef276bd"
        },
        "item": {
          "id": "2ced5794-76c4-4811-bace-09e35dd10813",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "04263cee-de70-456f-8257-ff7711981a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f718cb1-8b3b-4413-926a-a107a5a93e4f",
        "cursor": {
          "ref": "a252f9f3-921e-42cd-b21a-8250e95b3896",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4e138a06-98f1-4386-9c5d-33508ee8b513"
        },
        "item": {
          "id": "3f718cb1-8b3b-4413-926a-a107a5a93e4f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c8cc212a-0c01-4e55-b413-d030dfeaa329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6bc17dd-92b2-4291-997c-90524860241c",
        "cursor": {
          "ref": "1ef8bd7e-8e05-4b37-8c13-7d693c74dc20",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2f652e4d-563e-4e40-a8d1-155c700b1e65"
        },
        "item": {
          "id": "e6bc17dd-92b2-4291-997c-90524860241c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f37d7f48-4eea-43ef-a641-ffe07e45b8b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248d8290-fdd6-4eed-a88a-9d3aba18c80f",
        "cursor": {
          "ref": "45c41be2-d5c0-4868-888d-969853d241a0",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "baa803c7-b64e-435e-b1cd-cca71eb6a5ee"
        },
        "item": {
          "id": "248d8290-fdd6-4eed-a88a-9d3aba18c80f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d3e923e1-2600-4242-855d-297fe61a79c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0200e74-b28c-484a-a052-a8fed448e917",
        "cursor": {
          "ref": "52df124c-b1d2-4109-b2a2-2ddd3e2add71",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b603ad9f-b6b6-47a3-8ab5-32fd37325fe3"
        },
        "item": {
          "id": "f0200e74-b28c-484a-a052-a8fed448e917",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "df1a063a-c18f-4a0d-af9c-698ccfdc068c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06686c67-0223-4d23-9673-8674f285c315",
        "cursor": {
          "ref": "43e3f73d-277a-46f8-a0a7-6672e573a547",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "90bb410d-1e22-4f14-b454-0621a2b48cba"
        },
        "item": {
          "id": "06686c67-0223-4d23-9673-8674f285c315",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "737a2d9e-335e-4631-a8a1-adfc34bcca49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d05961f-1b51-4bef-8f58-716c4e25a3a0",
        "cursor": {
          "ref": "7da9d614-9f4a-44f8-9a4d-573f9f39f1f3",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1f723bd4-f4e2-46e2-9a87-aa3cb3597e41"
        },
        "item": {
          "id": "6d05961f-1b51-4bef-8f58-716c4e25a3a0",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f3318a07-b64b-4ef6-aa61-f33820093d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772af07f-5c24-495e-bf43-bd7a9b6575ba",
        "cursor": {
          "ref": "109dda89-a68e-438c-a366-b02f2b4ad827",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "aab9ba66-98b1-4e76-ba35-a48181419c48"
        },
        "item": {
          "id": "772af07f-5c24-495e-bf43-bd7a9b6575ba",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "17b5a9cb-8340-4036-ba5a-c80d4d28d1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7afb6e2-75a4-4e71-8764-f4d43b639636",
        "cursor": {
          "ref": "28ff1bdc-68ba-4ec3-87d9-97e09816357a",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ea89b730-59b5-47ea-9c04-fa2dcb7732ba"
        },
        "item": {
          "id": "f7afb6e2-75a4-4e71-8764-f4d43b639636",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "756beeed-3a38-44a7-804b-207b73cedbe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be5bbe9-f1a9-462f-b8a5-d7b252785d98",
        "cursor": {
          "ref": "7a5d0198-003a-4412-ad09-973976249178",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "87f8199f-1bb4-4ded-adb8-037578bc065a"
        },
        "item": {
          "id": "9be5bbe9-f1a9-462f-b8a5-d7b252785d98",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0677d861-6b1a-4a8c-a5d7-f70c3b381489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe3903c-7d28-4cd3-b5f1-7599bddf9373",
        "cursor": {
          "ref": "49a3d74e-e387-4718-ac5f-bf3d68fae926",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1db94cef-22d1-4fff-b17a-77df83c733dc"
        },
        "item": {
          "id": "8fe3903c-7d28-4cd3-b5f1-7599bddf9373",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "dd72849d-f430-4ce4-8238-f530b1baa9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cafd0332-31ff-4af1-84a3-6377ec353f3d",
        "cursor": {
          "ref": "55ae230c-96d8-4bf3-b75b-b4dd9b24b8de",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "044b5f32-2eb7-4f31-bae9-2eb29424d7a8"
        },
        "item": {
          "id": "cafd0332-31ff-4af1-84a3-6377ec353f3d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3dbd40d7-d320-4b65-8573-6cd8602ff1b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb640cc8-4755-4b81-9580-cc05a480f539",
        "cursor": {
          "ref": "4366c189-9bd0-41b0-85b9-1ca74dce9f9e",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e235651e-0f9a-447f-b5d4-669972e4f550"
        },
        "item": {
          "id": "eb640cc8-4755-4b81-9580-cc05a480f539",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5f33474e-2b9e-42b5-821a-649dc0061af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc1fc4b-677f-4db5-96f4-7387a093cff4",
        "cursor": {
          "ref": "47e77d30-7682-4a85-88fb-e5661f91d520",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "1c6f6f0d-a7a3-44e3-8939-fd5298a1e0ca"
        },
        "item": {
          "id": "fdc1fc4b-677f-4db5-96f4-7387a093cff4",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "bd463a1c-c426-4517-9690-1106737a53cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4f3187-52f6-40d1-8869-fb06cb222fd2",
        "cursor": {
          "ref": "47ff7544-a00b-42f6-a990-786641412e99",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1eace39b-9bf4-4878-bd56-7dd90ba199d0"
        },
        "item": {
          "id": "3b4f3187-52f6-40d1-8869-fb06cb222fd2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d2bfde1b-ec5e-4b1c-b0fe-4eafaa5fe3de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226f864c-5d83-44df-8352-ae89c2a19b5c",
        "cursor": {
          "ref": "a083cd36-224f-433f-ab36-7d69e7b8d953",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "49da6446-c714-4396-8550-acf80be99bce"
        },
        "item": {
          "id": "226f864c-5d83-44df-8352-ae89c2a19b5c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "bbfd6bf3-3c8c-4f04-8ac0-1eb6e8e87ec0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5333550-0058-4b67-a90e-097b371c6998",
        "cursor": {
          "ref": "4d46a179-9304-49a6-82b8-b58a81a0d9ac",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "53829a26-4e29-4e83-823e-a55416047e77"
        },
        "item": {
          "id": "f5333550-0058-4b67-a90e-097b371c6998",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "472fed84-ee0f-43aa-9cd0-63d9439caebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03b2f1c-6657-4bb9-b3f4-245e62ac30ec",
        "cursor": {
          "ref": "b983b8a9-dbd9-4db5-92d1-00c187273d4f",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c52af30f-58f9-467c-a87d-8074702c720d"
        },
        "item": {
          "id": "b03b2f1c-6657-4bb9-b3f4-245e62ac30ec",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "22af183d-34fd-4492-a9de-0ec06c232995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267aaa98-af34-4dcf-b2b8-47b062596c25",
        "cursor": {
          "ref": "10e42cde-f746-451a-9e99-531b5eb02036",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "48f35071-db7f-4889-9767-15d86e023833"
        },
        "item": {
          "id": "267aaa98-af34-4dcf-b2b8-47b062596c25",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7c736468-7af5-4910-b662-8e9b2e8c15dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d221d474-a4a0-4afa-9dc7-e7f6be06d4af",
        "cursor": {
          "ref": "7a47bfc2-cbc7-453a-846f-9965fc5db874",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "43e85646-5b41-4ba7-8778-77aa7b72ef72"
        },
        "item": {
          "id": "d221d474-a4a0-4afa-9dc7-e7f6be06d4af",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "efe99ea9-b512-4d6d-9428-9ec2eebedbf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078cf035-c352-44c0-9988-465e2e0a669d",
        "cursor": {
          "ref": "9d5b72d1-ae6a-4d53-898e-ae63ff4831ce",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5c86052d-9cd5-40d9-8ec4-f38750dfe42f"
        },
        "item": {
          "id": "078cf035-c352-44c0-9988-465e2e0a669d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "38301f3b-6d58-4da9-ae1f-079434605731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79eea12a-c1bd-41e6-9f23-0654df2a6b6c",
        "cursor": {
          "ref": "5cd92f3f-dc0e-4da4-be37-81dac1f649b4",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f63cec41-f0ef-471c-b58b-8abfc63807de"
        },
        "item": {
          "id": "79eea12a-c1bd-41e6-9f23-0654df2a6b6c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3b1a2813-4a57-4974-b9bb-88400a8e36a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9298af-8694-456c-962b-998915392585",
        "cursor": {
          "ref": "73c5da9f-3526-4d8c-a9a1-eb23c886a4e2",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "80b85494-168a-4ffa-bf97-65a0f2645f33"
        },
        "item": {
          "id": "5c9298af-8694-456c-962b-998915392585",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "618f3385-5522-4ba8-8dd3-80d9a0dca406",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe0dcf4-30f9-478d-8ce3-53ae3ad6d168",
        "cursor": {
          "ref": "76625e06-f215-46b7-9863-ec0808a204f4",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7e2f22d3-47cc-451f-8fda-cc5db710df58"
        },
        "item": {
          "id": "cbe0dcf4-30f9-478d-8ce3-53ae3ad6d168",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "71682d56-486a-43fa-8001-2213fa0a8600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8977b3c-6994-4e22-a084-6986f5ec1312",
        "cursor": {
          "ref": "f9ee1c88-f8a7-4838-aca1-3ce3da0c7866",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "24aada8b-e351-493b-b5d1-4aa53a4677fd"
        },
        "item": {
          "id": "f8977b3c-6994-4e22-a084-6986f5ec1312",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "135b9159-3834-4f47-8323-37b0340ea2b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e845fa-f16a-4489-997b-5cd35cc3e43f",
        "cursor": {
          "ref": "3e0f87d3-49d8-4551-af34-0b3d014b520b",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "95dff9b3-d39f-4b6c-88ea-7b2e819b3ca4"
        },
        "item": {
          "id": "76e845fa-f16a-4489-997b-5cd35cc3e43f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7411e379-72ed-4237-b7c2-c8b7df6070c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc65183-b695-410f-a716-9d2ba3a0ce29",
        "cursor": {
          "ref": "128585fc-cf03-4c49-b57b-2fc0a963f912",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f7800d6e-7132-4e34-a68c-b9b4225c964e"
        },
        "item": {
          "id": "4dc65183-b695-410f-a716-9d2ba3a0ce29",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "098aa3e5-8713-44bf-9a3b-12809a547724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5c5400-af9c-4227-9763-64d3a9cdb6d6",
        "cursor": {
          "ref": "d6a5404a-688c-4f81-b2a5-a00fc25ab466",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "564a8407-5f43-436a-912c-cb46c07193c6"
        },
        "item": {
          "id": "ef5c5400-af9c-4227-9763-64d3a9cdb6d6",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4af7e74f-1240-4164-b639-f11024b982e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0439c6-aadf-4dac-abeb-fd643b14ac0f",
        "cursor": {
          "ref": "c9ecb91f-1246-427c-91fa-fe5ab9342bdd",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "bc2aafb4-3fb5-44fa-9d66-3df17e18b72c"
        },
        "item": {
          "id": "3a0439c6-aadf-4dac-abeb-fd643b14ac0f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2a1f1d2e-7da8-466e-a6f9-50e20a25dd77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7eb90b-0183-4f60-96cf-c137dc7b5bfe",
        "cursor": {
          "ref": "44733ab0-3de0-4cd7-bed5-9fe0b7d67a6a",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f30924fb-0cc6-4a82-9ae6-f9fef82aecb8"
        },
        "item": {
          "id": "ba7eb90b-0183-4f60-96cf-c137dc7b5bfe",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "aea70834-dec9-4d96-a6f6-904f222de8e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5e1239-1907-4259-9c45-2891e1ad8063",
        "cursor": {
          "ref": "c7dfb4f8-b3d8-4b4d-bfde-5b2cdd433691",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "186a7092-57c2-4603-92c6-2444bdc37aaf"
        },
        "item": {
          "id": "7b5e1239-1907-4259-9c45-2891e1ad8063",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "52fad489-efed-423a-98df-bc7c6cf32995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80c9839-cebd-4446-bcbc-a9004a10a3c6",
        "cursor": {
          "ref": "3d8b86a4-ba3f-41d3-b986-ae3e8bdf83d9",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "234033bb-d0e4-409b-8505-8c28b15c2da7"
        },
        "item": {
          "id": "d80c9839-cebd-4446-bcbc-a9004a10a3c6",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4845ea43-a4b7-4468-9b10-68058efa113d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffec799c-a98a-4902-b24d-d6b124f5a0c8",
        "cursor": {
          "ref": "f2e9065b-0404-4b8b-84de-9031266270ee",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "27ef41ea-89e2-4fa3-80eb-1c3a963cf6ba"
        },
        "item": {
          "id": "ffec799c-a98a-4902-b24d-d6b124f5a0c8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a2202da4-d2c6-4f11-bc49-23b06139088f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f73d405-8a35-40cd-9063-4783bf579634",
        "cursor": {
          "ref": "ddb8c25f-b5ce-4d6b-9ebc-d32c02e6cf31",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7b3c6b27-b68f-4637-825d-d52842f9a7d6"
        },
        "item": {
          "id": "4f73d405-8a35-40cd-9063-4783bf579634",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9dce6808-1008-4bc6-bd8c-85d8e39525cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e83c0710-5dc6-4714-8adf-d22102ddb185",
        "cursor": {
          "ref": "7a4c568d-0fed-4910-8dc2-38d026fcc0df",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e435c452-6103-4735-a069-08e0843de86c"
        },
        "item": {
          "id": "e83c0710-5dc6-4714-8adf-d22102ddb185",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0e5ed302-3b4e-4037-a375-bcd053286884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748f2c8c-f0c9-4c23-99cf-a5c35b5e465b",
        "cursor": {
          "ref": "5b74e52f-9a0a-4b0b-8148-c6ac0668edef",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d5cec9b6-db89-4ea6-b0bd-f1638ab7e483"
        },
        "item": {
          "id": "748f2c8c-f0c9-4c23-99cf-a5c35b5e465b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e1d8265a-abd8-481d-a004-571017c0d0e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ae7f49-bb8a-444c-854f-cae4071c7842",
        "cursor": {
          "ref": "6e3c8170-f89d-4ce5-be85-1819f68e54e3",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "78f9fc56-37bf-4119-837c-0e30294bae8a"
        },
        "item": {
          "id": "e6ae7f49-bb8a-444c-854f-cae4071c7842",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2c4323b7-4e56-4822-979f-4cbe1faf4a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28346d2e-de64-4680-9933-27fe320578e1",
        "cursor": {
          "ref": "3f2bfdf2-1deb-495b-81ec-61a04283a47c",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e0a97d1f-ac43-4d94-8ff8-a64de8a4bfb9"
        },
        "item": {
          "id": "28346d2e-de64-4680-9933-27fe320578e1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0df9dc11-c643-4438-914a-40611b9b3df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5624de7-e850-4ada-8081-351d8808a043",
        "cursor": {
          "ref": "d1c881f3-c1a3-40fa-9ea8-11dffcbe3aec",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e5a48aed-cc0b-45ed-a38d-eb998ab223b6"
        },
        "item": {
          "id": "b5624de7-e850-4ada-8081-351d8808a043",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "32046b4e-0f28-417f-8ae4-f0381be8fd38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da60cb59-2c7e-41de-a99a-2608af9a6148",
        "cursor": {
          "ref": "7e2b6eac-bc1b-47dd-9374-006e35777308",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1a13227e-3431-48f1-a688-ad405a5f8030"
        },
        "item": {
          "id": "da60cb59-2c7e-41de-a99a-2608af9a6148",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a5e2a428-32e8-4b2c-8730-553f438cee67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea2de3b-5e72-4ff8-8f63-c9621dcbe297",
        "cursor": {
          "ref": "8f8bd53b-b5df-47a7-9180-8bb1ad28455d",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ab574506-c338-4167-8f2d-3e9e2d5b81f9"
        },
        "item": {
          "id": "fea2de3b-5e72-4ff8-8f63-c9621dcbe297",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7d33af4f-3f01-4c29-992a-44e02bf99dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a7a5e8-140f-4015-a2a8-ef7cb3ef95e0",
        "cursor": {
          "ref": "0087c23a-ff83-4a41-aca7-29ae986f537a",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e98d411d-7887-4fe9-8dd5-cfe2f0a0b9b4"
        },
        "item": {
          "id": "43a7a5e8-140f-4015-a2a8-ef7cb3ef95e0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a0534df2-e2e6-42fa-878d-dccefce25f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c37ff5-bfe9-4746-99d8-9cbc4d839b84",
        "cursor": {
          "ref": "8d8e2255-ebab-4584-a6f1-44ab33c2daaa",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4969d854-4066-47fe-bb25-acde97ba81bb"
        },
        "item": {
          "id": "33c37ff5-bfe9-4746-99d8-9cbc4d839b84",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "0b6ce03e-938d-4290-ac71-78bd020448af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c46df467-a18f-41a3-b672-916ad33c047b",
        "cursor": {
          "ref": "fc050eb6-4217-4fdc-80c9-ff6bbf5f006e",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0661722c-977e-4e59-85c2-7bb270337aa2"
        },
        "item": {
          "id": "c46df467-a18f-41a3-b672-916ad33c047b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "06d7acdb-2769-483b-9b9a-b0d8a9afd47e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2c08ee-06b0-4460-ae40-be5446655c53",
        "cursor": {
          "ref": "9cfbce61-ddf9-4498-ba8d-dd64010eb444",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e5e21012-8370-4ae8-9891-07b531c6dd0c"
        },
        "item": {
          "id": "4f2c08ee-06b0-4460-ae40-be5446655c53",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f78ca0ba-b191-413b-9747-5651f8baf480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e834e7c0-cfe0-4244-bee8-e49f433a1c4a",
        "cursor": {
          "ref": "d241a5e8-c3ed-4c9d-8466-504a1fc8b7c8",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "16bf046c-8d7f-4c16-ab9f-38eac28bae7f"
        },
        "item": {
          "id": "e834e7c0-cfe0-4244-bee8-e49f433a1c4a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "608f4e5c-6085-4904-b661-8e86bdc3e1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8e5b36-0949-4ede-a926-1af8e54fc124",
        "cursor": {
          "ref": "463a512e-a7cd-4d5d-a6cf-119a27940435",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "43d42572-c7f0-400a-b0f2-11a28394b2c8"
        },
        "item": {
          "id": "3f8e5b36-0949-4ede-a926-1af8e54fc124",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "06a84e3c-4b3f-4275-9e0c-27ce7c74c307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5155d9a5-cbfa-4dc7-8e65-8015fb355283",
        "cursor": {
          "ref": "3efe17fe-424e-40f2-9746-bdc9f66aa73f",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "15f45a6a-1aee-4867-8ac8-92e8f32aacf6"
        },
        "item": {
          "id": "5155d9a5-cbfa-4dc7-8e65-8015fb355283",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "cfbc4db2-332f-4706-85ce-2650ab390f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dda68c7-35c2-4183-b980-d1b0386d5801",
        "cursor": {
          "ref": "8f96d74a-331e-4d18-be13-e97e0b264906",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "cba6adc6-7730-4258-a427-334a417ca839"
        },
        "item": {
          "id": "9dda68c7-35c2-4183-b980-d1b0386d5801",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4783c1e2-62bf-4071-82b7-7b9c064f1963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b57dd98-6850-48f0-98f4-72c088648abc",
        "cursor": {
          "ref": "cfab11cf-908f-4333-9200-383d2a159ddc",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b1551076-75d3-4fd8-a029-c0084bd99bf5"
        },
        "item": {
          "id": "0b57dd98-6850-48f0-98f4-72c088648abc",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3e9aff68-8cd6-422b-9f82-73f3328b0914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb34db9-8e6f-453a-bac1-4ba1b7cfadd8",
        "cursor": {
          "ref": "519a0f08-7a8e-4497-9923-763b6807c277",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ef2f89e0-9819-44a2-b233-cdc13065015c"
        },
        "item": {
          "id": "cdb34db9-8e6f-453a-bac1-4ba1b7cfadd8",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2e9b7e9f-2912-424e-add0-b9912cb3469f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44109ff-2819-48ad-994f-6628815fa62d",
        "cursor": {
          "ref": "a3029159-9436-4849-88c8-f6f6db9507f4",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "57ad0b3c-5035-4395-a08e-f14b0efcb90e"
        },
        "item": {
          "id": "a44109ff-2819-48ad-994f-6628815fa62d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c23e3f37-07cb-4860-8e69-2d1d22421da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e08617-2046-4073-9b2f-c8f4dce91b8e",
        "cursor": {
          "ref": "6b7c9c2e-9e95-466e-a09a-5fe532954059",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "492c7612-b752-4da0-9a09-48676e1eca24"
        },
        "item": {
          "id": "26e08617-2046-4073-9b2f-c8f4dce91b8e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c2930f01-fb2a-46f4-a683-aebafbce666a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78e6bf5-6651-442a-9f3e-14c4f1bbe238",
        "cursor": {
          "ref": "31bb2795-96a1-40c1-b399-c0ce55507641",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b82d0ed9-7b46-4a48-9e97-e2e1861880eb"
        },
        "item": {
          "id": "e78e6bf5-6651-442a-9f3e-14c4f1bbe238",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1f80f4f7-97de-457a-b9dc-d7951d00c1dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d762cbc-d498-4543-a8b3-191bd0ecf7e4",
        "cursor": {
          "ref": "885d81d6-83d0-4f9f-978c-62910e0af284",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e730f84c-1273-401d-bfdc-b4a477535a04"
        },
        "item": {
          "id": "9d762cbc-d498-4543-a8b3-191bd0ecf7e4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "070988db-e960-4de2-aa03-4c7bb1a56842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314cb831-0c66-4acb-af42-f6545678359d",
        "cursor": {
          "ref": "73b5c2f7-87d6-4eb7-8dd0-451a89833d0d",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6bc3ce27-62f9-436e-a85a-7310e056b5c5"
        },
        "item": {
          "id": "314cb831-0c66-4acb-af42-f6545678359d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "889f9ce5-0909-4875-9708-1469cc759269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d15da96-a099-4d53-9f53-b09755b195fe",
        "cursor": {
          "ref": "dc6e38ea-6bdd-41f3-985e-a4e542f67c67",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a9f52d20-d1ef-4027-93f0-242086352711"
        },
        "item": {
          "id": "1d15da96-a099-4d53-9f53-b09755b195fe",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f34d81f5-8235-4d9a-9bd4-5655d8e095dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2321298-179a-4d4d-84fc-410422367116",
        "cursor": {
          "ref": "8d451758-904d-45e7-bf7a-6c55a25739be",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1f68d8c2-1dd1-48af-abda-b44618006a9f"
        },
        "item": {
          "id": "e2321298-179a-4d4d-84fc-410422367116",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "be5fb76b-b008-47c9-9560-44dab979bb79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43b9214-716a-4450-a087-af015565852b",
        "cursor": {
          "ref": "a4a96b8c-98d0-4ea0-ab5b-6c2da10d1bd7",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ab1ae34b-2301-4aea-9fc5-88e015f170d9"
        },
        "item": {
          "id": "e43b9214-716a-4450-a087-af015565852b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6b62a65a-b42a-40e6-a793-cc430410959e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e364ce07-bbe3-4d28-829d-2f6830654c73",
        "cursor": {
          "ref": "0022cf36-130d-4585-a3be-3c19a45af9f7",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1e221b70-d1e7-48dd-b437-56b02121f30f"
        },
        "item": {
          "id": "e364ce07-bbe3-4d28-829d-2f6830654c73",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "fc629c26-fd19-4480-b03b-a8a1fd90ed57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36efd852-bce4-4352-9235-4873e956e45b",
        "cursor": {
          "ref": "79a6a6a6-1072-4eba-b6d0-8f29b973e2a8",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "600caeaf-2f82-4d57-b8ce-1e670951c5d9"
        },
        "item": {
          "id": "36efd852-bce4-4352-9235-4873e956e45b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ad761238-c856-4d53-94fc-4dc60dcfc993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420b50a9-d150-43da-b539-aafcdc9d4502",
        "cursor": {
          "ref": "e0162844-a8e3-4ef9-a882-01332f760355",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3137437e-a0b9-44a9-a78c-cd02a2b5ce71"
        },
        "item": {
          "id": "420b50a9-d150-43da-b539-aafcdc9d4502",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "575cb613-4b1d-4711-9614-080ab88282c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a06d00-1572-454b-bf91-46afa95b8f77",
        "cursor": {
          "ref": "f66e4ea8-0788-4d06-9d22-211adb0f7e1e",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2e0cae08-5ed8-4ac3-b21d-5485625a0aa4"
        },
        "item": {
          "id": "c2a06d00-1572-454b-bf91-46afa95b8f77",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "be2d79dc-cee4-4de5-bac2-934f902dcc6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf62214-46fc-47fa-b8b0-f045e5afbc60",
        "cursor": {
          "ref": "ab8d50aa-6650-47ea-80e2-8f6f150cc482",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c35e66a0-1d5e-4513-8f38-0757480f491b"
        },
        "item": {
          "id": "daf62214-46fc-47fa-b8b0-f045e5afbc60",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "19bf7de8-5dd2-443c-bd60-8c3a621cbc33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dec202b-5fa8-4d8e-8e1f-9b4952625adb",
        "cursor": {
          "ref": "d15fb10f-e6c5-42c8-9dc9-fed1123ae00d",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b87447f0-3719-4c56-9f00-9b9121257321"
        },
        "item": {
          "id": "0dec202b-5fa8-4d8e-8e1f-9b4952625adb",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ccb4c509-2345-4bcc-89d2-e7ccccae830d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1fe3c6-c414-4232-b3a3-576a536802d8",
        "cursor": {
          "ref": "4dd21a7a-96d3-427a-998a-5bd954383ca7",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "87f0a6d8-a1c6-42a4-af99-1e5578e3c7d3"
        },
        "item": {
          "id": "ae1fe3c6-c414-4232-b3a3-576a536802d8",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6a9f8877-5fac-4d89-bd27-9d55e7ee48bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466d3d78-b2be-4ee1-a3f5-d0c847f3171b",
        "cursor": {
          "ref": "b140e201-dadc-4f6b-a953-2ffe53e8242d",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f368ee72-bf01-4136-872c-661bbcc849ad"
        },
        "item": {
          "id": "466d3d78-b2be-4ee1-a3f5-d0c847f3171b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "45df2cfe-0c7c-466b-b71d-7840d51618dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98e7311-d822-484f-b594-9a162088e627",
        "cursor": {
          "ref": "299db73c-7a43-426d-9e90-cbf4025b2092",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ef94b9c4-0f1e-4fa2-860a-4b7bbdb148e4"
        },
        "item": {
          "id": "c98e7311-d822-484f-b594-9a162088e627",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e84ebd50-d315-48a2-965f-9d82a81ef972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ccd5fb6-8f6c-4d37-a397-f578a946776a",
        "cursor": {
          "ref": "ffe58727-e4a3-43fd-8e48-f97cefc9492c",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b14c44ed-b0af-4655-b60f-c022c002c10b"
        },
        "item": {
          "id": "1ccd5fb6-8f6c-4d37-a397-f578a946776a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e233701f-5c16-48b5-9c0b-55ba91941ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd34c946-876e-46a7-9318-45acf2e7572f",
        "cursor": {
          "ref": "6d0b79e4-a9d1-4424-89f5-97efbf0d25bf",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1c882fe4-3b63-49f8-ba99-1d1a63574e1a"
        },
        "item": {
          "id": "dd34c946-876e-46a7-9318-45acf2e7572f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "fe6025cb-a858-4530-a61d-07d59e1418ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ab7545-dd9c-41af-8830-0d06bbdea19b",
        "cursor": {
          "ref": "9f7e2718-66e1-4ca6-86b5-eb485ca13810",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "949c2e5b-7258-4bc0-ac5a-3bffffd99497"
        },
        "item": {
          "id": "e3ab7545-dd9c-41af-8830-0d06bbdea19b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "439489aa-94c7-47f1-a7ac-2023a4c48795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c280d88c-cb91-4aa3-8f93-c95272a99cdd",
        "cursor": {
          "ref": "75a1205e-4d80-4d81-8cc9-eceb45536f2c",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "388a272a-7a57-4ebe-a386-f59fbcb80be4"
        },
        "item": {
          "id": "c280d88c-cb91-4aa3-8f93-c95272a99cdd",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "53a92ba1-352b-455c-943e-c0a7894126e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca900ed8-74f6-4de2-b036-a39a70612450",
        "cursor": {
          "ref": "54f7cf39-3bdb-40e4-b032-b391ea532e2e",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "df8c2224-48c8-4634-899b-f1a01170172d"
        },
        "item": {
          "id": "ca900ed8-74f6-4de2-b036-a39a70612450",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e0200a31-7b0d-48a2-a245-9a72e471a594",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6072bcd-7707-41ba-8abd-ff34f3567304",
        "cursor": {
          "ref": "5c207c59-43fe-4255-afd3-52ba1178a142",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9d4dd834-4059-444a-8958-f8be837c48bd"
        },
        "item": {
          "id": "d6072bcd-7707-41ba-8abd-ff34f3567304",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "f46268c5-e18d-4b5c-a27c-54408cbf9dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "90bf7cfb-903f-4ef8-b7cf-390e29c3c182",
        "cursor": {
          "ref": "1fe469ba-a552-466d-8ee1-dae46a053d4f",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9e93fb70-79b3-4764-94ff-b3c3ea819cb5"
        },
        "item": {
          "id": "90bf7cfb-903f-4ef8-b7cf-390e29c3c182",
          "name": "credentials_issue"
        },
        "response": {
          "id": "68896009-a369-4b6e-9409-62332fac5ed8",
          "status": "Created",
          "code": 201,
          "responseTime": 10571,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07f9678-f5d7-4ca6-90ba-20a0f2f96359",
        "cursor": {
          "ref": "112da337-27ce-4194-b5f8-96875f1f3a7d",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a581b422-cf5a-4617-814e-5a1e9e55351a"
        },
        "item": {
          "id": "d07f9678-f5d7-4ca6-90ba-20a0f2f96359",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "758400f2-5a19-42e0-b48b-f13d27540af1",
          "status": "Created",
          "code": 201,
          "responseTime": 10104,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb2feff-0af2-4d58-82cd-d2e73fd2a039",
        "cursor": {
          "ref": "399a3991-3ff2-40d7-824e-8d8650d2c2ac",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b122ec9c-f509-4829-90ea-fd3e41c0b77c"
        },
        "item": {
          "id": "0cb2feff-0af2-4d58-82cd-d2e73fd2a039",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "94c45299-1fc3-4132-8d8f-1bd7e987a3d9",
          "status": "Created",
          "code": 201,
          "responseTime": 9533,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "271d03be-52a9-44f9-aae9-0a76fb9cc63e",
        "cursor": {
          "ref": "ef57291a-1b1f-4ea5-9130-9e197a797031",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ca938d51-f068-4823-8516-73163f6d5fb2"
        },
        "item": {
          "id": "271d03be-52a9-44f9-aae9-0a76fb9cc63e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6cb32ecc-c347-4f65-8f0b-8c46bf1a69cf",
          "status": "Created",
          "code": 201,
          "responseTime": 9452,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e034a5-fd4f-4ade-b339-d3b2e61da6e1",
        "cursor": {
          "ref": "5828e68c-d86c-4216-9d88-cfea02d04151",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7d812ca3-b2bc-4906-a3c1-c6b84e5b3b43"
        },
        "item": {
          "id": "b1e034a5-fd4f-4ade-b339-d3b2e61da6e1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c93efbe7-224d-4ce9-a136-b4ac1afeab7c",
          "status": "Created",
          "code": 201,
          "responseTime": 9755,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-07-07T00:43:53Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-07-07T00:43:53Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "bfd17ae1-0f9b-4604-b10b-993e8fc404d8",
        "cursor": {
          "ref": "79bfc8b2-01c8-4896-ad64-ffa050850ff6",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "213eec5b-3303-4274-8f53-a1001ff54583"
        },
        "item": {
          "id": "bfd17ae1-0f9b-4604-b10b-993e8fc404d8",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e3701637-3301-4d98-9291-89ec45527ac0",
          "status": "Created",
          "code": 201,
          "responseTime": 9756,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e764eee-0d7f-4bb7-b7fb-9d10cc44bab3",
        "cursor": {
          "ref": "821b31a8-a9eb-4115-b6ae-ca2b678a151a",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "af8de2aa-f0e8-4911-b712-36f5ff0a2458"
        },
        "item": {
          "id": "1e764eee-0d7f-4bb7-b7fb-9d10cc44bab3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3e44ce4e-91b9-44ef-98f8-c21b4aae3394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e9e968-7e82-46ea-807d-8ff2e329958b",
        "cursor": {
          "ref": "39ef339c-836d-462c-be72-4b1dffc8717a",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fe6afabc-41dc-4815-b292-4ad3d146ec9c"
        },
        "item": {
          "id": "42e9e968-7e82-46ea-807d-8ff2e329958b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d0d30c36-86f5-404b-b77c-9a02d81c26d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7e031d-5ab7-4bca-a415-ff6f656f7df1",
        "cursor": {
          "ref": "5216cb07-a627-414e-821a-42bd08f6089d",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8bce9891-1999-445e-918a-477e4cb78100"
        },
        "item": {
          "id": "de7e031d-5ab7-4bca-a415-ff6f656f7df1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "14ca38f8-9122-4e6d-83f8-67770d72c8a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a413c277-2008-4bd9-a7e3-5bce0b242b94",
        "cursor": {
          "ref": "f6673eb7-06ce-40cc-8fbb-c5ed4da35773",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "680ff027-96f4-4fe2-ad79-6c0467c39c5f"
        },
        "item": {
          "id": "a413c277-2008-4bd9-a7e3-5bce0b242b94",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1ecd43fd-982f-452c-a953-caa7c128af62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3327dfa-95b8-4181-86f3-544ca95dfd2a",
        "cursor": {
          "ref": "faa8d246-4762-4228-b13f-148ad327386b",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0d9d1670-4991-46f0-970d-c67c899180e3"
        },
        "item": {
          "id": "c3327dfa-95b8-4181-86f3-544ca95dfd2a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8bc08bcf-f365-4dcc-989f-a9b9981c8258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6feee26-9dd5-4ad2-b28b-fc13abdc5df0",
        "cursor": {
          "ref": "1f525149-f03e-4707-8277-4a1776ef59c1",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "092bab37-0468-4dab-b280-e3fd3d458462"
        },
        "item": {
          "id": "c6feee26-9dd5-4ad2-b28b-fc13abdc5df0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "565c2757-bd96-4960-bd5c-430773f31e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a96ba97-4a10-41bc-8523-8c1938f55da6",
        "cursor": {
          "ref": "a2c8058c-65c3-400a-88be-622df54a530a",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3df35f1c-6236-4a29-9bac-ed9d2213a26c"
        },
        "item": {
          "id": "5a96ba97-4a10-41bc-8523-8c1938f55da6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9d704107-063e-4e04-8532-2664513ac0dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe03f5b7-7440-464e-8936-72eb246c0080",
        "cursor": {
          "ref": "9fcf236d-1ce1-48f9-9f64-617416b61ff5",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "dc269cb0-8f08-4d28-80c6-a991f96f52d7"
        },
        "item": {
          "id": "fe03f5b7-7440-464e-8936-72eb246c0080",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f9d619a3-3910-4a79-b92d-f3951a8c5758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b401d133-b6e6-4f73-8ecf-ec89e199c263",
        "cursor": {
          "ref": "ccf1db26-6050-4872-9970-24a22dcbaea6",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c0bc94df-10ea-400c-9418-1221ee0a9cf3"
        },
        "item": {
          "id": "b401d133-b6e6-4f73-8ecf-ec89e199c263",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ef3b60ce-75dd-4d36-99c6-133e6559af2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ebb946-034c-4625-adc5-c17eef46c207",
        "cursor": {
          "ref": "54f23a68-9424-4f7d-a98d-af65c40bf099",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b64b5d81-92c1-4765-8b0d-5ec7e8622c24"
        },
        "item": {
          "id": "43ebb946-034c-4625-adc5-c17eef46c207",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4a92cfc0-3882-4bdd-9478-6ed878413b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96202ae8-a3d7-46e3-8cf0-9f990b6bb8b8",
        "cursor": {
          "ref": "0592d5b0-1c6d-4279-9e7c-1f93c43f2c60",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0b2564b4-4de4-4c9e-9401-8a801cbb4f5c"
        },
        "item": {
          "id": "96202ae8-a3d7-46e3-8cf0-9f990b6bb8b8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2efd9998-bc89-4584-8ee9-2bfa21a6d249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385c1df6-6c0b-4596-8d50-7e4a9df6290d",
        "cursor": {
          "ref": "1d32fc35-42d5-4bc2-bba3-c596554f02fc",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4b51c54f-36de-4ed4-af88-8d96c173bc7d"
        },
        "item": {
          "id": "385c1df6-6c0b-4596-8d50-7e4a9df6290d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "845c079f-0f5c-4f2a-bd5e-3662ce1a62cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7c8bdf-7445-43a6-9c06-90dd59c56142",
        "cursor": {
          "ref": "ed5b7747-f098-4700-96bf-bb8e5b43a335",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "994a9ee7-09ae-43cb-85d1-bc58d3864802"
        },
        "item": {
          "id": "ce7c8bdf-7445-43a6-9c06-90dd59c56142",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "02c54547-e860-4e56-9297-c82801cb1681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a436f29e-5c04-4bfd-969d-dc07bd7e188c",
        "cursor": {
          "ref": "34316963-5449-4584-b9c0-bd8cce9a2c4e",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "406ea79d-2a74-4ff3-ac36-e60a7790596e"
        },
        "item": {
          "id": "a436f29e-5c04-4bfd-969d-dc07bd7e188c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7ce506d4-c3d3-4a48-9df1-c33585679eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2165ee-360f-4735-8f2f-814bfaf9de5d",
        "cursor": {
          "ref": "6e45b5a9-8f23-47e4-9d49-c0f8c265cba3",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d2059ea8-d2e5-462a-b5c4-74ce68e3ecef"
        },
        "item": {
          "id": "3b2165ee-360f-4735-8f2f-814bfaf9de5d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d9f5e934-9986-4dc1-98e3-a7e0473d0854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b9b0d4-0999-45fb-91d9-d788c2da157d",
        "cursor": {
          "ref": "42460795-e8c7-4dc6-8356-60f7f7b7436f",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "22b0ac4c-b991-4599-84d7-b5ff7293d677"
        },
        "item": {
          "id": "92b9b0d4-0999-45fb-91d9-d788c2da157d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b51daadb-088c-4d9a-935b-1dcf1078b0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73ce25f-9540-4362-8924-3895e488eed9",
        "cursor": {
          "ref": "93d01ca1-949d-42ec-a54a-828ec5000cae",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2de11533-298c-422c-80d8-2c8e6916e0f4"
        },
        "item": {
          "id": "f73ce25f-9540-4362-8924-3895e488eed9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4ef65e09-9b9d-40aa-ba88-6cc4f15f214b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6cbc89e-7ab5-409f-9ce3-6e2ed31b9e9e",
        "cursor": {
          "ref": "43e76caa-d6ab-47cd-81a6-7daec364db28",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b4855746-7ed2-43d1-8018-2e82997a737d"
        },
        "item": {
          "id": "e6cbc89e-7ab5-409f-9ce3-6e2ed31b9e9e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ae53053d-4be3-45f2-9004-24a699552786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788128c9-694e-4bf4-b345-d0f2a9e83a91",
        "cursor": {
          "ref": "47addd0b-4f13-4ae2-94f0-e7ed5ca00fee",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3f8a4245-7198-403d-ab67-87fe968daebe"
        },
        "item": {
          "id": "788128c9-694e-4bf4-b345-d0f2a9e83a91",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d58c9f82-575c-400f-9660-99e0faf20ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa20d16-8668-4d86-845e-bbcedce27353",
        "cursor": {
          "ref": "22828126-95f6-4f48-b1df-f2fde1095d7a",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d421d718-d67c-4a63-aa12-5d8e500d57f7"
        },
        "item": {
          "id": "1fa20d16-8668-4d86-845e-bbcedce27353",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "947efc01-8e53-4ec5-b7d8-f2e3c7db47c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c551257-1856-4d94-95f7-b55e1fa4f40d",
        "cursor": {
          "ref": "fc64fc9e-f2c7-4bf6-b1bb-6ec5259cead3",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ed8c55cc-1128-4440-9db2-55e554c6d0f8"
        },
        "item": {
          "id": "6c551257-1856-4d94-95f7-b55e1fa4f40d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2f117d9a-3fb9-41dc-9f58-aa5f782e608b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a90dfd42-c871-4ba2-83e0-b5c4c8b2e813",
        "cursor": {
          "ref": "8aec7afc-d873-4ee1-af7d-658267af95a2",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "147dce14-4c06-4e54-bdce-a500e0adabce"
        },
        "item": {
          "id": "a90dfd42-c871-4ba2-83e0-b5c4c8b2e813",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5a536d40-b9b0-44d4-add0-b44b8e0b3707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8574443-2968-4511-8204-304ebfd608ab",
        "cursor": {
          "ref": "0ea66707-afc6-452e-a979-2d308968b1c0",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1d0dfe6d-cacf-46f9-93d1-f5354cf574d4"
        },
        "item": {
          "id": "c8574443-2968-4511-8204-304ebfd608ab",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c853092d-8480-4af5-8253-3658b414800f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9e935c-7816-4fbe-af6d-1ee1ecb34941",
        "cursor": {
          "ref": "ed0d6e5a-132f-4e96-b1d4-968a83962085",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "10ba9fca-a3ff-472e-a766-8110236df0c7"
        },
        "item": {
          "id": "8d9e935c-7816-4fbe-af6d-1ee1ecb34941",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2294fde6-76b2-4199-b654-5632d7d5de9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0085fe-570f-4820-9360-454613d5991f",
        "cursor": {
          "ref": "6cca4e92-973a-4639-aa7c-c1c76c5ba21c",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "32cff352-4c1d-4ed3-aaea-736474bab75f"
        },
        "item": {
          "id": "7d0085fe-570f-4820-9360-454613d5991f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e5eea82d-47aa-4437-a261-dd2a6cee35f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82eaf59d-6da3-4e45-bb79-ead1a9aaa562",
        "cursor": {
          "ref": "c04bc958-e43c-42b0-8063-521f5b26baa6",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "47cbf576-c8f6-4d7a-8d02-c6c0ce6f52cd"
        },
        "item": {
          "id": "82eaf59d-6da3-4e45-bb79-ead1a9aaa562",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ba77334e-61ee-43fd-9794-a3a6dbcee570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3aaea20-ab9a-4ad4-b572-700949393efc",
        "cursor": {
          "ref": "4b22fdb6-17a2-42f6-994e-d6bcd6139c84",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8dcabd1e-3140-43a9-b923-f3fb6427b1f8"
        },
        "item": {
          "id": "e3aaea20-ab9a-4ad4-b572-700949393efc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3b2d993f-8343-4f19-b572-2081aa3b21f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ad921e-4680-47a4-866d-2fccf107b0ab",
        "cursor": {
          "ref": "0a285ade-e025-488f-b3dc-64b2618a28f7",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d9015303-a2e5-48b3-846a-d0c52475fefb"
        },
        "item": {
          "id": "01ad921e-4680-47a4-866d-2fccf107b0ab",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "37b69e52-e2ba-4db8-be0f-0e673e6e4974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6771f4-1bb2-4fbd-a752-501eea18cdad",
        "cursor": {
          "ref": "511866bb-b38c-4b80-bfff-1c7e53ac1bb3",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7869a347-bc83-48ee-a201-8d9aa8702b28"
        },
        "item": {
          "id": "5a6771f4-1bb2-4fbd-a752-501eea18cdad",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "98602527-686d-4594-a62c-48496642c739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb5eb56-96f6-460a-acfd-a83fa9f66b33",
        "cursor": {
          "ref": "cfbbcfa7-9d83-4820-b3b2-abf962b883fd",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1a59823c-27e8-4d5f-884d-d47d4af518eb"
        },
        "item": {
          "id": "deb5eb56-96f6-460a-acfd-a83fa9f66b33",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7b5452ec-b6ef-4750-a00a-ea03211ec596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c654c7-33e7-4f70-91f2-5bf57f9a1561",
        "cursor": {
          "ref": "fa2c5892-9cd6-420c-b973-677542bb0a5b",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0dbced55-8a58-4468-acef-845a3bb10ea2"
        },
        "item": {
          "id": "c3c654c7-33e7-4f70-91f2-5bf57f9a1561",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e3b3c6b4-fad6-4eb9-812a-0260b903f162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb21e68-8f47-4a6b-bd1a-5feaaec9fe36",
        "cursor": {
          "ref": "44492522-d36f-4a56-b391-6de02406d5c6",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "cdd00237-515d-48e1-9480-03b1ec40ff90"
        },
        "item": {
          "id": "1bb21e68-8f47-4a6b-bd1a-5feaaec9fe36",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "748dbe54-3393-437f-9a20-efd25ffb8547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74cfc66-97f4-47b9-8e1f-01f0a5a580b4",
        "cursor": {
          "ref": "31b7cbd6-23f2-458a-8aa2-8a396da6cac5",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e5b7e4fe-4a07-4910-8506-2973634761d5"
        },
        "item": {
          "id": "b74cfc66-97f4-47b9-8e1f-01f0a5a580b4",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "443cef18-17ab-4d2b-b695-905bb0dd3eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd4cef0-0d4e-47ee-a20d-17b8982c78e0",
        "cursor": {
          "ref": "c9690b6a-c392-4415-af20-61018a360788",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "86912f7d-c530-44aa-8ced-d82184418312"
        },
        "item": {
          "id": "bcd4cef0-0d4e-47ee-a20d-17b8982c78e0",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b1a6b383-08bc-4a13-ad25-788a82e61dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3cfbfa-9b2a-4ee5-a970-f645aa25f028",
        "cursor": {
          "ref": "d2eb73cb-41ad-4b42-831a-9f6caef06cb0",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b9aca77d-114a-4dde-8b6e-8c67cb08f119"
        },
        "item": {
          "id": "db3cfbfa-9b2a-4ee5-a970-f645aa25f028",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "98a30d90-e731-4b11-ae0f-dd4b87fcb9c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1f512d-400e-497e-969d-e55cc43bf064",
        "cursor": {
          "ref": "8eee48ec-9fbc-4657-b3b3-bb344a8d2b19",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "12e7648b-20b3-4583-b6e6-6ccaa8d01b8e"
        },
        "item": {
          "id": "aa1f512d-400e-497e-969d-e55cc43bf064",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "dc9d0ed2-bffb-41a3-89ff-690503df333e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87291eac-07fc-4f75-bf24-b5b389d4d78c",
        "cursor": {
          "ref": "791fc18e-c8ba-4456-b9db-04dec76a025b",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0b7d7ad8-68e4-4dc6-a7ca-c9266b3761ac"
        },
        "item": {
          "id": "87291eac-07fc-4f75-bf24-b5b389d4d78c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ea8b098d-d955-4cb9-9d62-c1e195b4d6d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27f3602-1b2d-4a9c-8ca5-e5610ba30796",
        "cursor": {
          "ref": "c42f55c6-3fcb-46c4-890c-37f45c5bf7c4",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "1915a10f-32f5-4e18-8e60-a5d5b317cd68"
        },
        "item": {
          "id": "e27f3602-1b2d-4a9c-8ca5-e5610ba30796",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "21c56a05-7deb-4409-b498-da86d439f9c4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac917098-3b7d-4997-8044-60d82de33976",
        "cursor": {
          "ref": "0bafcdb0-ea08-45a5-b6ef-de81ddb208da",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6cb8afd2-6a73-4886-bf4a-0f085f77911c"
        },
        "item": {
          "id": "ac917098-3b7d-4997-8044-60d82de33976",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0d925b52-ae64-45ee-8b8e-29f901788b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caecb994-812f-4865-ac5e-5034acbc1ea2",
        "cursor": {
          "ref": "f023c418-22c5-4adb-8435-b1b22cb325d7",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "365c4046-42ca-454b-8a4a-e0782c8d7f4b"
        },
        "item": {
          "id": "caecb994-812f-4865-ac5e-5034acbc1ea2",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "424ddbac-2b79-477d-b8bd-5d7739e668e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef52add6-4335-4a5f-be4b-63391f24e257",
        "cursor": {
          "ref": "811244cb-4d18-4294-820e-135c1f40996e",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0d69c3be-444c-4344-90df-91e69cd1a90f"
        },
        "item": {
          "id": "ef52add6-4335-4a5f-be4b-63391f24e257",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3ee8f5c7-80ab-41da-a7fb-5b138bcfb888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac20270-0977-476b-a410-cd2c3773494f",
        "cursor": {
          "ref": "36909af7-345d-4b5a-9f3a-c08c41a718c4",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6d0e29ba-533b-41ba-b07a-4c11ceef4e24"
        },
        "item": {
          "id": "1ac20270-0977-476b-a410-cd2c3773494f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e4b38a0a-3c9e-4835-b4f9-c89c9b6b5bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9ca4e0-a60d-4dd3-a61a-2d90621870ec",
        "cursor": {
          "ref": "15297a50-1122-4c15-aeba-44708cd415ad",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3441f42f-2538-4689-a663-6379a9440936"
        },
        "item": {
          "id": "fb9ca4e0-a60d-4dd3-a61a-2d90621870ec",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6f529e5a-141a-418e-b937-694288079868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15327f8b-19c3-44e0-bbb3-c9382c2633c2",
        "cursor": {
          "ref": "8edccff4-ef53-4360-96ab-7f528ad6fa83",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d91297ff-8dc1-4788-8b66-5174995ef519"
        },
        "item": {
          "id": "15327f8b-19c3-44e0-bbb3-c9382c2633c2",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "74827b23-f54d-4808-87af-f83e00503354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff98d008-a445-4984-8d39-a45a166a51e1",
        "cursor": {
          "ref": "1504d027-2a42-45a3-9d99-9b62c4673f79",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7e22a9c6-4d83-45d3-be11-8eefc7961899"
        },
        "item": {
          "id": "ff98d008-a445-4984-8d39-a45a166a51e1",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3258729f-cf33-4533-ac4e-6b0cdafd6d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9770371c-25b5-42e1-8db3-d41c127d80cd",
        "cursor": {
          "ref": "48c73815-1365-4265-97c3-893d775547b6",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "93499ff6-d176-47cd-9abf-4d61041241bd"
        },
        "item": {
          "id": "9770371c-25b5-42e1-8db3-d41c127d80cd",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a30e845a-c6aa-4e6e-9a04-2ee9ba9cebeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc7601a-d044-463b-805a-7f9333368f1b",
        "cursor": {
          "ref": "ebb3bf22-1085-4d28-af9d-a62c7bea0191",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "bd2c6b4a-8765-406a-8f05-17bd28c0e431"
        },
        "item": {
          "id": "8cc7601a-d044-463b-805a-7f9333368f1b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "cdb4b907-c1e0-4091-b5dd-6bf473310537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4eb8d9-54c2-453d-9774-1d7c1d1bfe61",
        "cursor": {
          "ref": "8c5c8150-848e-4fdd-9fb0-1f4925f2ac04",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0962a5f2-1823-4892-bffd-d230ca72081a"
        },
        "item": {
          "id": "be4eb8d9-54c2-453d-9774-1d7c1d1bfe61",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "350bf885-6913-498a-b14c-f1cb0178b7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a66d13-8f06-401f-a778-0243264c750b",
        "cursor": {
          "ref": "ab374c64-7fc1-444e-8268-0d15a4ed2a6f",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "385eb12d-6f9c-4ea4-a461-c5879fb17bec"
        },
        "item": {
          "id": "f1a66d13-8f06-401f-a778-0243264c750b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "459cf7ae-7e03-4552-b791-660da2e77e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2dcbaed-d7ab-417d-86e7-12afe91b62ff",
        "cursor": {
          "ref": "690c2595-4c5a-4faa-ad66-32bd418c95ad",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "39113492-1eae-4333-8155-b43e76080b0c"
        },
        "item": {
          "id": "d2dcbaed-d7ab-417d-86e7-12afe91b62ff",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "44f63866-56d5-4d91-9b62-d684ef4b506f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d18e10-bf3a-4434-8358-994973ad8416",
        "cursor": {
          "ref": "f4a9f038-68be-4365-acb2-27f382c917ba",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c57b4cf5-d073-4d81-a320-23dbb6da4ca0"
        },
        "item": {
          "id": "24d18e10-bf3a-4434-8358-994973ad8416",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0289e645-7a5e-4695-bcb2-667c3ba9fee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6cd237a-6c49-40be-8624-366e4abe735a",
        "cursor": {
          "ref": "90a837ac-ab38-4bf6-ab29-af92fce5e1d2",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "117ec4ff-65c9-4250-9055-976cc79a68ba"
        },
        "item": {
          "id": "a6cd237a-6c49-40be-8624-366e4abe735a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6a71074f-984a-4bd3-8d05-cd3eaa91db73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab64cc5e-b5d1-41f0-94ee-2e733ccac23c",
        "cursor": {
          "ref": "6b84a8d6-cdab-4e86-aa83-6bcfc856f878",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e85e62f5-8d32-4a80-b1fb-c64c543c9ea5"
        },
        "item": {
          "id": "ab64cc5e-b5d1-41f0-94ee-2e733ccac23c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ee939463-0a05-4483-bd03-0c41cf5d8e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7135fc61-0dee-42c0-bd69-12878b5fd753",
        "cursor": {
          "ref": "c7c6ccae-6d40-4a94-bf6c-4878e044a738",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "40318300-b1db-4c5e-a713-14577bafe4f2"
        },
        "item": {
          "id": "7135fc61-0dee-42c0-bd69-12878b5fd753",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "afb34189-1c38-4cfa-88d4-7067a6efd963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c012236-9988-44b7-acac-57458c70d2c5",
        "cursor": {
          "ref": "871b7aa6-bd1c-4a0c-8693-3ac7c75a2948",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "46195232-b000-48f6-97f5-86e2e20257a1"
        },
        "item": {
          "id": "9c012236-9988-44b7-acac-57458c70d2c5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3bb483ee-2cb3-40bf-9ad8-00ea5245a2d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1b749f-5e7b-41d7-aa77-24c51e9eaf96",
        "cursor": {
          "ref": "b02de021-a95a-4f05-8b84-bdc303b122aa",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c8d17165-cad6-4589-a56c-345467ee90dd"
        },
        "item": {
          "id": "9c1b749f-5e7b-41d7-aa77-24c51e9eaf96",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ed0d2db8-f8eb-42ae-a315-4bb50f6c6ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "605de431-fc5a-4201-aba5-7d78cc45f013",
        "cursor": {
          "ref": "dd95625a-4c7c-4978-bef4-767e2be4688b",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b67d01df-22f8-4055-861b-ed8b2a2a2c61"
        },
        "item": {
          "id": "605de431-fc5a-4201-aba5-7d78cc45f013",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "806452ff-b5c7-42d4-99ec-b539ac9db473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be37c135-9ffe-4076-9ccd-d724f9dec00e",
        "cursor": {
          "ref": "686cd150-3f9c-4262-b04c-dd4a8d5c537c",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0f2aca2f-ad0d-4d84-890e-1d29bd9ba8cf"
        },
        "item": {
          "id": "be37c135-9ffe-4076-9ccd-d724f9dec00e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2c0cea91-09b4-4b42-83a8-711d388b27e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1688e28-5379-43df-9096-2d196f08f324",
        "cursor": {
          "ref": "ed84cf62-0d93-4aa1-88cc-a51c34f3b79f",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "0120f705-bb86-46da-8e4a-2cbe19c5e0be"
        },
        "item": {
          "id": "b1688e28-5379-43df-9096-2d196f08f324",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "fe8ac385-6759-4f72-af98-1be9c23c312d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99cfc21-5388-4848-a2de-845fa2788e5a",
        "cursor": {
          "ref": "358f13de-d426-4cb1-aa03-a7068ed3c60c",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1873cda8-f1d8-4dd9-b277-53efbeba8f69"
        },
        "item": {
          "id": "f99cfc21-5388-4848-a2de-845fa2788e5a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "dcf51a5b-320f-4700-bfaf-add9e909ba1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb5598f-7cdc-48f1-93d8-11380537ff4c",
        "cursor": {
          "ref": "345c238c-6c0e-4ff0-979c-3c079bdcebff",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c136df4f-ca1a-417d-b9ce-be4ad6135f24"
        },
        "item": {
          "id": "8fb5598f-7cdc-48f1-93d8-11380537ff4c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "508794fb-e339-40ff-a46b-6d42fe9cbb28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197f5ffb-3fc8-49cc-8889-ef45ffea4672",
        "cursor": {
          "ref": "c9774f7c-0249-4c13-a9a1-a652a4e6f397",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8ed5dd21-4262-40ae-b513-d599ea498d5b"
        },
        "item": {
          "id": "197f5ffb-3fc8-49cc-8889-ef45ffea4672",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9321332f-8e47-49b1-a8a4-e1a50afab92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7785709d-29bc-49bb-8a4b-4935d5c1a616",
        "cursor": {
          "ref": "daa1a699-9061-458a-990f-255dda4fdd74",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2fe99441-8d0f-4a7d-a77e-c02de8dbb7b8"
        },
        "item": {
          "id": "7785709d-29bc-49bb-8a4b-4935d5c1a616",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2c028c35-32cb-4192-9e8d-3ebfecc1e9b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "392c9382-69d8-4bc9-9352-1bcf437afa2e",
        "cursor": {
          "ref": "3eec98f6-627d-4e96-a4bf-83489f4c182b",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "4d9ea981-3f5a-45df-beba-536543866706"
        },
        "item": {
          "id": "392c9382-69d8-4bc9-9352-1bcf437afa2e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b5ba362c-9546-4b82-b101-7aee2239c362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca77b2c-0b1f-4f24-bb0f-e6bbea051aea",
        "cursor": {
          "ref": "3de2df24-ca93-4861-9c6d-d3cc2a410766",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2e9df159-c530-4793-bba7-cd74f73a711f"
        },
        "item": {
          "id": "9ca77b2c-0b1f-4f24-bb0f-e6bbea051aea",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8b7ac91b-b8d9-4911-9574-906ad37242bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72974508-a4c8-4bdd-a64e-f47a8c400427",
        "cursor": {
          "ref": "39cebfc1-f97e-4bb6-8655-631257adeffd",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "070bbaba-63e3-4642-87eb-7937908bd39c"
        },
        "item": {
          "id": "72974508-a4c8-4bdd-a64e-f47a8c400427",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5e04831d-d51a-4c5f-9002-0d70c045d618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0ffb92-bab8-4979-8a53-6d24173ac357",
        "cursor": {
          "ref": "646a77df-3ea0-431f-b0c0-61023a9b51cc",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0dbe39bf-446c-4624-ade0-dd88f7d28cc2"
        },
        "item": {
          "id": "be0ffb92-bab8-4979-8a53-6d24173ac357",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "45c8a27d-9540-4cff-8cb2-0d4829e1c477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54e7aad-be56-41e7-a437-620459603377",
        "cursor": {
          "ref": "37ed3a47-f1cb-40af-a740-177d6d2412f9",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a44a7204-8e82-42bb-8b55-c3edea6909c1"
        },
        "item": {
          "id": "c54e7aad-be56-41e7-a437-620459603377",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "bd5b4621-37ee-4c27-b476-50fc0f4044d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0a3319-fba8-4a2a-b576-15e401099a5f",
        "cursor": {
          "ref": "0cb57b19-0c7f-4f98-b469-af9c54ef212c",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "858dfa10-9cf4-4676-9925-b9b4e9434e63"
        },
        "item": {
          "id": "3e0a3319-fba8-4a2a-b576-15e401099a5f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7b7e1256-7577-4dab-bdcf-36aa972ff0fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb68bdbc-e72c-4c14-bb2d-97a888f82ba1",
        "cursor": {
          "ref": "40aedd61-606f-4979-867c-e50d4a48f41a",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f9a86e15-1a18-47f5-a26f-0e142aa3fcda"
        },
        "item": {
          "id": "fb68bdbc-e72c-4c14-bb2d-97a888f82ba1",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0731136b-f342-4a09-803b-88d3141f7aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc902a13-0695-4019-a4a9-4eaa818e28aa",
        "cursor": {
          "ref": "306643e1-cdfe-40b3-ba0c-a6ca7a55eaeb",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "0f6148d3-3c86-4c3b-996a-a8e935349acf"
        },
        "item": {
          "id": "cc902a13-0695-4019-a4a9-4eaa818e28aa",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d3aedf75-0e11-4acb-a0eb-718f20499ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec28063-4a36-46eb-8c65-3aa41b2bd873",
        "cursor": {
          "ref": "0da53460-96c7-4152-b6c5-f09eea165ee3",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e5403da2-0b2a-44a1-a38f-77a60136a39a"
        },
        "item": {
          "id": "5ec28063-4a36-46eb-8c65-3aa41b2bd873",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "20a06039-090a-40f2-a3ac-b8dbc6d1cde4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c924290d-5e20-4c60-a301-a336a937d36f",
        "cursor": {
          "ref": "9cfe94ec-3fdf-48ac-97d8-94123f004537",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0cf3fd27-76fa-4834-aab3-f306bf6397be"
        },
        "item": {
          "id": "c924290d-5e20-4c60-a301-a336a937d36f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "bad160fa-ccec-4888-8e98-8a41b8aba896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4073fbe8-4064-4f9d-8cd8-5ecfcf5a6e4f",
        "cursor": {
          "ref": "af73c107-c293-4f86-893a-cc4806787317",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b76daeea-2814-4acd-8660-01b8396e441c"
        },
        "item": {
          "id": "4073fbe8-4064-4f9d-8cd8-5ecfcf5a6e4f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "48704f1f-1efd-4b3a-99df-16b30a40b999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321b5b96-76b3-482f-8b31-18b9d8e10ebf",
        "cursor": {
          "ref": "e6b87384-ea18-4f6d-86ad-8e7a4c1e7f12",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "dffce4a7-30dc-4122-b186-8005f59164fa"
        },
        "item": {
          "id": "321b5b96-76b3-482f-8b31-18b9d8e10ebf",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8155791f-4004-49f0-baf8-1edb942c6910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748f2811-4539-4193-9dc9-317c67474868",
        "cursor": {
          "ref": "ddc70191-bffb-47a9-a1c9-dd122ef8232e",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e61388ce-a348-420b-a9da-32c93d316a12"
        },
        "item": {
          "id": "748f2811-4539-4193-9dc9-317c67474868",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "307822cb-b0c5-4b9f-bf62-62023989b3b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0164356c-9272-4036-833a-86efd82e8cd9",
        "cursor": {
          "ref": "2b7bca49-73fc-4861-ad7c-79d6cd262665",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "691e38ea-693d-43c9-a8d6-1c93640edae5"
        },
        "item": {
          "id": "0164356c-9272-4036-833a-86efd82e8cd9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c83f3908-ec67-4c9c-aee6-31e6012464cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f230977d-4163-4408-80f4-6f622c86ea05",
        "cursor": {
          "ref": "b89533b4-5366-49b8-8849-56749a934e64",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "fc64e8fa-3039-4bb3-8e71-755b07cd092c"
        },
        "item": {
          "id": "f230977d-4163-4408-80f4-6f622c86ea05",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6c91d558-55bc-4dab-91a8-46cd39ea176f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63dd1b3-13d1-4322-a2a5-2ac44644591b",
        "cursor": {
          "ref": "16afbc9b-86f3-486b-b37f-d3ee47127cd7",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "034f8b33-2f58-428f-b267-a99b25a8155a"
        },
        "item": {
          "id": "c63dd1b3-13d1-4322-a2a5-2ac44644591b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c52cf3a7-8945-4624-8200-d85832296517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973dff08-7ef1-4253-a5d0-bbe3d11ff000",
        "cursor": {
          "ref": "9af57b0d-6aaf-4b88-a07d-ef81a3eafe55",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0ab228a9-c86c-40c3-8541-d6f14a173d23"
        },
        "item": {
          "id": "973dff08-7ef1-4253-a5d0-bbe3d11ff000",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "11d8d7bc-88ba-4455-8db0-744cb01f9715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6805ee0f-2be5-449c-9f5a-7c883f47f169",
        "cursor": {
          "ref": "0ea2ab20-fe23-4118-959a-e99b07b9f98d",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a533e369-e284-4c42-8b74-a82815b8448d"
        },
        "item": {
          "id": "6805ee0f-2be5-449c-9f5a-7c883f47f169",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ea110147-e4bb-4927-a293-962f52d69a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5291876-a3c2-4c07-8311-b054586a4959",
        "cursor": {
          "ref": "4070114d-bd2d-4f74-bd57-e4a5bbebce15",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b33ef883-aee0-46ea-89b9-6d8c31ec4326"
        },
        "item": {
          "id": "e5291876-a3c2-4c07-8311-b054586a4959",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "754ab793-4ff1-4374-957e-d754c0803291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c55b9a5-b6b0-4b68-9910-1fc6efbfc01c",
        "cursor": {
          "ref": "8d48b8ea-91cf-4ed0-9536-1e8a5b05ee67",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "587ed625-569a-4f82-a51a-5fc5f935c366"
        },
        "item": {
          "id": "1c55b9a5-b6b0-4b68-9910-1fc6efbfc01c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "beaf5b15-4ac2-49ee-b13a-1160aea43f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1565e0-04e3-4ba0-ad64-87363a8acf90",
        "cursor": {
          "ref": "7805623a-b03c-440f-8ed4-53fca45f359f",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ae0deb1b-10dc-4497-b60a-43865af2452f"
        },
        "item": {
          "id": "fc1565e0-04e3-4ba0-ad64-87363a8acf90",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "aba30e53-6f46-4245-ab30-cb8670004037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd80e14-163f-4765-b571-217b3b851bc2",
        "cursor": {
          "ref": "6ef7a29f-f10d-47f9-ba4d-d1ccad11e3dc",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "65cf760a-09fe-4c02-8163-5683b247096e"
        },
        "item": {
          "id": "9cd80e14-163f-4765-b571-217b3b851bc2",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "da2ab4e2-60d9-47b4-b17a-612ed4d54e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af1efdb-05f7-4e91-90ec-5195e6124a34",
        "cursor": {
          "ref": "f033a56b-e019-4415-8d88-1ec17ef6aff3",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5be3b3bb-2586-4a25-9d42-0c35192a159b"
        },
        "item": {
          "id": "0af1efdb-05f7-4e91-90ec-5195e6124a34",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e21f7058-cd75-48fc-92f4-7c1d741dc119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14210023-14e3-41f9-a2d9-d843747383b4",
        "cursor": {
          "ref": "e93b3be3-e6db-4be0-bec6-544e51036631",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "70c2ea4d-09f9-4b39-a82b-7dab321ad399"
        },
        "item": {
          "id": "14210023-14e3-41f9-a2d9-d843747383b4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a80dae52-6d4e-406e-9aea-852144e493ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d1822e-fa6c-40fe-945b-44a8bb9ea717",
        "cursor": {
          "ref": "f1f6c9b8-6407-4cd2-9b2a-89166c5688f3",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a00b6f1c-65f3-4521-8de4-3c30c992a061"
        },
        "item": {
          "id": "72d1822e-fa6c-40fe-945b-44a8bb9ea717",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ca81d3a4-a6e2-46be-bb46-d4f27bc0e489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55659e45-89f2-4177-98f1-0927ba878d93",
        "cursor": {
          "ref": "c3ccf129-8dd7-4bc9-b6d3-93b03a70e155",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3ec8dcaa-af6a-4fc9-9411-bd2a669d665e"
        },
        "item": {
          "id": "55659e45-89f2-4177-98f1-0927ba878d93",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8f68a4f6-198e-4f40-9f76-14ac3d4a8a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a4c16c-aeee-4d57-8106-573547ad8f37",
        "cursor": {
          "ref": "42f7046c-e018-427f-acf8-86a303bc1111",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f4e03eff-c79b-4373-bc69-727cc0d8b272"
        },
        "item": {
          "id": "95a4c16c-aeee-4d57-8106-573547ad8f37",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3b49a599-f9bc-42af-97d0-d1fb6abef03a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee6efdd7-aa48-4bc3-8ed2-e40daf95abfc",
        "cursor": {
          "ref": "bc622038-82fe-420f-93a6-4492f7432149",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "aa86cbc3-11bf-4125-a19d-9e4c8f6d28ac"
        },
        "item": {
          "id": "ee6efdd7-aa48-4bc3-8ed2-e40daf95abfc",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f90eb80a-75c9-40c3-94f0-e10248e77154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44eb5ff8-b7ae-440a-919b-74699ce2a2dc",
        "cursor": {
          "ref": "fbb124bd-df70-4c78-b1de-d288a8ce6661",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "58e22fa5-bc03-4258-80d4-f6757e5a863d"
        },
        "item": {
          "id": "44eb5ff8-b7ae-440a-919b-74699ce2a2dc",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3f7c05a5-058b-455b-a1b3-37f5f00d9cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4bc1500-790c-45c9-b1fc-b6afc985982f",
        "cursor": {
          "ref": "81fc8ff5-a525-4631-b037-67220f07d34a",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "bdec7751-4de5-4fd2-8335-c693573a0953"
        },
        "item": {
          "id": "a4bc1500-790c-45c9-b1fc-b6afc985982f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f947fc35-9dd3-4bc0-aa08-eb1ab378ffe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f47ebe-85db-427f-bd71-c2f9b4cb7463",
        "cursor": {
          "ref": "fd76c918-7c77-44bd-a850-e66fb6739579",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "21a09ca3-48f4-4070-b729-9a426cf45dfe"
        },
        "item": {
          "id": "d9f47ebe-85db-427f-bd71-c2f9b4cb7463",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a71ce902-dee4-4730-9bd3-d5402ea69994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4615041-f48a-475f-bfe6-92a441baf00a",
        "cursor": {
          "ref": "f4833e95-fa94-4a0d-9410-c84f4e4b0352",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0681101f-56e9-4df0-9a3c-0341f4c98730"
        },
        "item": {
          "id": "a4615041-f48a-475f-bfe6-92a441baf00a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f1e719cf-7a53-43d8-8aa1-95c826f2a958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d2e6849-59e2-46a1-b230-a6e1ad601ddb",
        "cursor": {
          "ref": "e5d79c12-99cb-4bd4-b951-f577f70d1ca1",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0b43b820-2200-4cc3-9df3-4d2e37aa0715"
        },
        "item": {
          "id": "1d2e6849-59e2-46a1-b230-a6e1ad601ddb",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a1d7ab88-c331-43ee-ae08-d17f9e9a226e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56762b66-d0a0-4556-89ab-f870df0eb7cf",
        "cursor": {
          "ref": "97c6815e-9567-4d2d-b257-07becc0538e4",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b3d09fd2-d32e-4e1d-ae53-942f4e4d498f"
        },
        "item": {
          "id": "56762b66-d0a0-4556-89ab-f870df0eb7cf",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "725b1138-feaa-4320-b681-94f9a222c629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f184e5fe-ad78-4990-bd7f-3fdc2224693d",
        "cursor": {
          "ref": "a36ce2fa-0625-424a-95c0-4be10a5e21da",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b05863c4-7554-4764-8035-3ca65371efcc"
        },
        "item": {
          "id": "f184e5fe-ad78-4990-bd7f-3fdc2224693d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6cee7e24-63bc-475f-afd7-60e22d435408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c0f60a0-9dfe-412b-ba59-7df67f86b6bb",
        "cursor": {
          "ref": "d90dcde0-3c0f-4c7a-883e-5475df47880c",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3682630d-ea8a-4ea6-b167-61a453e7cded"
        },
        "item": {
          "id": "2c0f60a0-9dfe-412b-ba59-7df67f86b6bb",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "513a6aab-a1d5-456a-b12e-90e347d37b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f984a465-d058-4646-b7ae-399728d30044",
        "cursor": {
          "ref": "8157b167-3597-444e-a721-17377537f335",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "78ebf291-95ed-4e94-b2cc-f1b52772c2b7"
        },
        "item": {
          "id": "f984a465-d058-4646-b7ae-399728d30044",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "25443424-67a5-4106-888b-0be60a68e76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c2da35-358a-4934-8db4-a432d24716c6",
        "cursor": {
          "ref": "deece0e2-70a1-482a-ab56-8fa5031dd2cf",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7150ac37-b0f5-46d7-9218-a2a75e5897b0"
        },
        "item": {
          "id": "f0c2da35-358a-4934-8db4-a432d24716c6",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "95678775-dd02-49a2-ac58-3c48939bd7b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d3022bb-5eeb-46aa-a035-6bf76d9dd92b",
        "cursor": {
          "ref": "abe7370c-9914-4f59-ba4f-2a3c7144966d",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "06bd5dce-a301-4652-91d5-f1be0d139511"
        },
        "item": {
          "id": "1d3022bb-5eeb-46aa-a035-6bf76d9dd92b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "459cb604-8200-4b6b-812e-b3b31a9ada42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08c374a-7757-4785-b926-f18a62445110",
        "cursor": {
          "ref": "5644074e-28f4-46e7-8b6e-105e4bc1c07c",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b7c7deeb-7236-4143-b47d-70e128537706"
        },
        "item": {
          "id": "b08c374a-7757-4785-b926-f18a62445110",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ca4d5fd7-6456-4664-832d-a57c4bf45f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f19a41-5467-4fdf-b30f-377938d89553",
        "cursor": {
          "ref": "9eb1a89f-9e4f-49b5-a8ea-9cd4e3c46ff1",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9f08a7ba-2700-4d8d-a065-bef10565e811"
        },
        "item": {
          "id": "a6f19a41-5467-4fdf-b30f-377938d89553",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b32ab4b4-0c66-4451-97c3-437f663039bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a397a5-402c-404b-9526-c496ea5cf88a",
        "cursor": {
          "ref": "0a600b64-efaf-4425-91b5-690219a03827",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ffa7c680-2697-4062-a538-a432a91cf09c"
        },
        "item": {
          "id": "16a397a5-402c-404b-9526-c496ea5cf88a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ff6a9a0f-56cf-40ba-9c83-b823e58964fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24232a57-8f7e-49f1-8bdb-77e3424c503f",
        "cursor": {
          "ref": "11eb34a8-e9f9-4c80-ab00-1bfa218c06dd",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "464e6b7d-f55a-472d-a70e-6b816873342c"
        },
        "item": {
          "id": "24232a57-8f7e-49f1-8bdb-77e3424c503f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "15461a54-1d4a-457d-8326-cbeb5c8b7555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf16c0da-b7a5-4b2d-9e54-5e23f1d2e942",
        "cursor": {
          "ref": "2bfb5173-dfc8-468a-aa6e-87c482efa949",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5d010727-4718-4c6e-8fe4-d965ffe50c95"
        },
        "item": {
          "id": "cf16c0da-b7a5-4b2d-9e54-5e23f1d2e942",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c9f02ebc-7747-4ffb-bac5-4aa5b4ef4caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f160fd-7521-4f0f-b43f-482b3cccf846",
        "cursor": {
          "ref": "be5a9c63-026d-43ad-b01c-6b735c080e0c",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7306c26b-b0d6-4af9-8d15-408f045f9270"
        },
        "item": {
          "id": "46f160fd-7521-4f0f-b43f-482b3cccf846",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9d35707a-54ec-4044-a9c2-3789f7fc7cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b551f11-57b7-4bc0-a977-9862ac2d79a6",
        "cursor": {
          "ref": "cb6158a8-ca2c-4d66-b5d5-886ad7d90305",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "06de4cf8-c161-4fe8-a780-1e4f793d0969"
        },
        "item": {
          "id": "0b551f11-57b7-4bc0-a977-9862ac2d79a6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e7811f9f-3b31-418b-a30f-578e22a0b429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6ee748-fd41-41fa-b890-a6a51557f9ca",
        "cursor": {
          "ref": "303bf652-8fa0-4be3-b454-04980f53ad32",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "63e49ee4-538d-4794-a7f5-54c68c316bb8"
        },
        "item": {
          "id": "1a6ee748-fd41-41fa-b890-a6a51557f9ca",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7dac3506-9fa9-4934-a41f-5694d35756de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "279d61c1-ca8f-4e11-a92e-fc38b53f09ef",
        "cursor": {
          "ref": "69ec0392-f406-42b0-8001-cf7967e89dc7",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "73cc8b00-4221-4066-9f33-cd85bff5b79f"
        },
        "item": {
          "id": "279d61c1-ca8f-4e11-a92e-fc38b53f09ef",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4b6c03c3-691e-4ce6-add8-59eba635f7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae152388-d8d4-41b0-aff3-ef9aa2b7349e",
        "cursor": {
          "ref": "6d288afe-fcd3-4909-88f0-4f07d6bb6210",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "317a1f8f-a1e5-46ae-84d7-e441e496515a"
        },
        "item": {
          "id": "ae152388-d8d4-41b0-aff3-ef9aa2b7349e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0c0c274f-c32b-455b-ab84-d70e9fff428a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccdd1ed7-6f3e-484a-b3bc-1c71687d4684",
        "cursor": {
          "ref": "4e76987b-32fb-4e29-84a6-b8c754e3e02b",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "70e7674c-3180-46a5-a68c-b726c212bf92"
        },
        "item": {
          "id": "ccdd1ed7-6f3e-484a-b3bc-1c71687d4684",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e9d10de7-ae33-4db8-943d-eb7e59636ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2654d0bf-4395-4bfa-9d84-c6006c96bc3e",
        "cursor": {
          "ref": "2f0c5c31-1be8-4161-a0b3-fe79be29e96f",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f46b32f8-2358-48a2-85d2-ada927302636"
        },
        "item": {
          "id": "2654d0bf-4395-4bfa-9d84-c6006c96bc3e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7fbdb7f8-5eff-4d53-83be-0cbe987e35cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13127dbb-40cf-40b0-9b2a-9e0ff5a9b66e",
        "cursor": {
          "ref": "7375ee81-6a4e-47ff-bdb0-be8c960ccac9",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d3cd9af8-5e52-46b5-8eee-2d725429cf2c"
        },
        "item": {
          "id": "13127dbb-40cf-40b0-9b2a-9e0ff5a9b66e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "eddd7c35-6406-4fb1-bd03-939122e86775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febece62-3860-4842-aa9c-b9b2be84ca02",
        "cursor": {
          "ref": "14129522-2e67-43b0-9531-0b8084c156c4",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0af6be09-a650-4e57-87d3-c9425d50df3e"
        },
        "item": {
          "id": "febece62-3860-4842-aa9c-b9b2be84ca02",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "1f45f87c-32e6-42ad-b468-135e75195e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8081db-fee8-4c7a-b210-a897faa2bb4f",
        "cursor": {
          "ref": "3492d082-ce6c-4aac-a8e8-a1d5138a7f21",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "920626ae-57a1-4c9e-a39f-d179d7f6b0f6"
        },
        "item": {
          "id": "4d8081db-fee8-4c7a-b210-a897faa2bb4f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "32327da1-9263-4741-b2c9-bf7124f0aa49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b254ea02-29eb-4783-921c-e7c9f312ce51",
        "cursor": {
          "ref": "d75cf907-aba4-415b-a303-252cc45914a3",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4b938b07-da9f-416a-ab31-d544ffc0ab39"
        },
        "item": {
          "id": "b254ea02-29eb-4783-921c-e7c9f312ce51",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "92e270e2-1d96-48f6-ae8e-6004253f4dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ae3962-9133-4c67-9cf6-8889eb6945af",
        "cursor": {
          "ref": "baaea8e9-6b62-4fda-a660-7761e5c5d7eb",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "30554695-5591-4801-9250-332f36fb9b8c"
        },
        "item": {
          "id": "f9ae3962-9133-4c67-9cf6-8889eb6945af",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3b914003-c1f0-46b0-bdeb-1730c87d8281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b1d99d1-41dc-4654-8c48-85df2d75c342",
        "cursor": {
          "ref": "b9913603-d4ee-4b7a-81d7-366a64b3b83b",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a3eb888e-9802-4d82-8314-57be79362b06"
        },
        "item": {
          "id": "8b1d99d1-41dc-4654-8c48-85df2d75c342",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "78ebbace-15ab-447a-818b-1f6b5bb40579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32cc0414-79c0-4e35-83e2-4ba6c4b3d57f",
        "cursor": {
          "ref": "1d19fbac-e9b7-40f6-b768-906679a3fdfb",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "756e54bf-624c-4171-9b43-924666cc69b2"
        },
        "item": {
          "id": "32cc0414-79c0-4e35-83e2-4ba6c4b3d57f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c81e713f-ca2e-4fff-b69f-df0bad313671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2525751-dfb5-42a2-b334-824a8ae706e0",
        "cursor": {
          "ref": "e8a17b86-fd3f-4a53-99fe-57737b3d35bb",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0e52ced0-23be-40ec-bd84-df7758ab8941"
        },
        "item": {
          "id": "a2525751-dfb5-42a2-b334-824a8ae706e0",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "eb21b356-105c-4f31-a285-07bd73460a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3b0219-5685-43e4-bbe6-3f038ddca8f5",
        "cursor": {
          "ref": "4c00d79b-5db4-48c6-89e4-7ec4f730cab2",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "49a88d37-3b29-4c40-b0fc-31d243999d9d"
        },
        "item": {
          "id": "9f3b0219-5685-43e4-bbe6-3f038ddca8f5",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "82a123cd-08e3-4bd1-b5fd-15a5bd7a1444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926f24c1-1eb2-4aa1-8cba-e992ff0ead16",
        "cursor": {
          "ref": "6f1f0ddb-e740-4515-aa37-9e246214a6a3",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "dbe6edd3-c3d1-45bc-8e9f-a8dc97e2e8f3"
        },
        "item": {
          "id": "926f24c1-1eb2-4aa1-8cba-e992ff0ead16",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "63dd8c7f-ec5e-484a-9937-d6ac30ab9b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab164e6f-b5ae-428a-9004-f29592aed7ba",
        "cursor": {
          "ref": "3e252e0b-9079-446b-a890-4ddb1e7087c3",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "59b5466f-7d8f-4045-86d7-6720acb605f7"
        },
        "item": {
          "id": "ab164e6f-b5ae-428a-9004-f29592aed7ba",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "72735b14-946e-4937-a344-61754c45fafc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2aa5bd-ce97-46f4-bc7c-489b6a27a9aa",
        "cursor": {
          "ref": "b96e7917-07ff-4ff4-b1d8-a0a1c938c27b",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "59d3822f-e2e6-4cae-80d6-777b4b3dffec"
        },
        "item": {
          "id": "dc2aa5bd-ce97-46f4-bc7c-489b6a27a9aa",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0aacfd4b-b907-480a-9e9c-9866e0326cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c4878b-4f44-44b5-a928-8ca05beeda04",
        "cursor": {
          "ref": "c297aec4-9eff-45ef-b72a-50473f256f50",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5125b627-430c-41c3-8723-657cd1bb2ea8"
        },
        "item": {
          "id": "99c4878b-4f44-44b5-a928-8ca05beeda04",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9d177346-1eca-4930-9754-631efbaaceea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832859c5-7064-4dfd-b228-c5859da714e3",
        "cursor": {
          "ref": "eba3ad0b-dbda-4061-9498-48af5e30f817",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "387045d6-74c1-492e-9a00-2933f7863683"
        },
        "item": {
          "id": "832859c5-7064-4dfd-b228-c5859da714e3",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "31b73951-e8a1-461d-bcfe-f549e1594b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ba67dd-13d7-4177-9e4d-cef6f2a58c2e",
        "cursor": {
          "ref": "2bc17ab5-da47-4c0d-a510-4e48c3599290",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e3a293ee-3ee6-4457-880d-8afcb45e2440"
        },
        "item": {
          "id": "76ba67dd-13d7-4177-9e4d-cef6f2a58c2e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d78a886d-59c0-48df-8f2d-674949515225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad91720-9f1d-44ea-8370-28a842de4300",
        "cursor": {
          "ref": "c26b178d-a212-44c8-8c79-0a4f0d4af7ce",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "cefd0a12-9317-49b2-be32-ba246d33ade0"
        },
        "item": {
          "id": "5ad91720-9f1d-44ea-8370-28a842de4300",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e6f18480-2826-4604-a93f-8806160fa8e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6772d4b-c03a-4bc9-88ff-241862fc5906",
        "cursor": {
          "ref": "ec7c5c2f-edad-415f-8081-748400f4d521",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "714dfc9c-43ff-4b9b-9a10-5f11a915b49a"
        },
        "item": {
          "id": "f6772d4b-c03a-4bc9-88ff-241862fc5906",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e94f3afc-bfb9-4a90-85e0-ecda718b59b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e28509-7c22-4fc6-9f4d-d54c335bafd4",
        "cursor": {
          "ref": "81bd2f76-dc06-4e02-b0ec-71e9eb602abf",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a824f078-a7ef-4a9d-b544-138e0f57c97a"
        },
        "item": {
          "id": "05e28509-7c22-4fc6-9f4d-d54c335bafd4",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d5c6f20e-3fd1-4790-aecd-63571b73ff6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0508f43d-2b61-4bd4-829d-18c766f77e65",
        "cursor": {
          "ref": "575026cd-fff6-4935-a805-a7616728376e",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7e7589db-3ce1-4754-a395-c218a34cd542"
        },
        "item": {
          "id": "0508f43d-2b61-4bd4-829d-18c766f77e65",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8f81880c-3ee1-4f5a-ba00-b46b90cb78c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af67e943-4f93-453b-b31f-9e6e6f5289c0",
        "cursor": {
          "ref": "dd4d29d3-096c-4279-90e2-71085bc347ce",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7201615e-b5af-47cf-9372-5e6b714695ca"
        },
        "item": {
          "id": "af67e943-4f93-453b-b31f-9e6e6f5289c0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d6ec7687-700a-4813-bab1-8c9bff16cf29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8fa70c9-c0f8-49a2-9dcb-0602faba4a6e",
        "cursor": {
          "ref": "5039eeac-9121-4965-96ea-eeb366078c2b",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "87899a4c-e7ed-4b9f-89b1-d3cc19f13c97"
        },
        "item": {
          "id": "f8fa70c9-c0f8-49a2-9dcb-0602faba4a6e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "27b75fbf-a1c8-456c-8f95-27e40378c936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2544066c-1434-4172-b2bd-dfc21fb73f74",
        "cursor": {
          "ref": "6bc00b03-e59d-4e93-91f6-8587c59f6050",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "31590d26-a5ad-4b4b-aa12-af5660088b36"
        },
        "item": {
          "id": "2544066c-1434-4172-b2bd-dfc21fb73f74",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b46f87a9-48bf-4d44-ad01-7296cd1a904b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4ecc3f-d80b-4206-a970-d30ec1c0df21",
        "cursor": {
          "ref": "68ed7451-c42b-4fbf-bfa7-e2574cab1552",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c26a7568-3c88-4f33-ae44-c177d6fd50a0"
        },
        "item": {
          "id": "6d4ecc3f-d80b-4206-a970-d30ec1c0df21",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2c9e4d44-7204-461c-b1b4-8ff25a2281df",
          "status": "OK",
          "code": 200,
          "responseTime": 2079,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2553321-1345-482d-a81f-cf786ccf50df",
        "cursor": {
          "ref": "54220523-e716-417f-8be8-b8f1f7209f0e",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e912b1ac-2e44-4c7b-9c3d-dac068f79daf"
        },
        "item": {
          "id": "c2553321-1345-482d-a81f-cf786ccf50df",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e197b906-df60-41a7-8413-089d53c1abb0",
          "status": "OK",
          "code": 200,
          "responseTime": 2561,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "333899d4-2163-4b4e-8988-a71b7312b42a",
        "cursor": {
          "ref": "846506d0-5587-435e-a8b5-22f310f011f8",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "25ea69ab-06e0-4f13-a8e2-5e20a5463d2a"
        },
        "item": {
          "id": "333899d4-2163-4b4e-8988-a71b7312b42a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "755e9cc0-79da-445d-a17f-7c98f98fbcbd",
          "status": "OK",
          "code": 200,
          "responseTime": 2262,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "98225bad-98ff-4fe7-8bbb-b999d8a4ee4d",
        "cursor": {
          "ref": "16550aa4-eb43-4d01-a56d-deb1cbcfb2e1",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e6535b22-6320-4720-9230-ee9fca607b06"
        },
        "item": {
          "id": "98225bad-98ff-4fe7-8bbb-b999d8a4ee4d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ec2905b7-520f-43b1-921c-f0ff4cf37b14",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98225bad-98ff-4fe7-8bbb-b999d8a4ee4d",
        "cursor": {
          "ref": "16550aa4-eb43-4d01-a56d-deb1cbcfb2e1",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e6535b22-6320-4720-9230-ee9fca607b06"
        },
        "item": {
          "id": "98225bad-98ff-4fe7-8bbb-b999d8a4ee4d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ec2905b7-520f-43b1-921c-f0ff4cf37b14",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9b93e4-75a1-4ad6-ac3c-88d555d3e7dc",
        "cursor": {
          "ref": "9e4cb947-41cb-4bd0-b791-be4db0de5aa1",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b4e87365-ad74-487e-b493-552ba39351f4"
        },
        "item": {
          "id": "9c9b93e4-75a1-4ad6-ac3c-88d555d3e7dc",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1e952fa1-e6da-4e3a-968c-d08f4b67cc3f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0631f1c4-2f6d-44bb-bc6b-91bda946bcbf",
        "cursor": {
          "ref": "b5c833bc-bf86-463a-a62f-18aca6c46091",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ef6a5192-213c-441b-99d7-e85f8b6ccc68"
        },
        "item": {
          "id": "0631f1c4-2f6d-44bb-bc6b-91bda946bcbf",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ab32cb13-f039-4795-bfc2-7d056ac93a98",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}