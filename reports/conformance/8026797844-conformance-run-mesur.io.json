{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d3d92d24-b88e-43e5-971d-c1a3e6fbf4f7",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a2d5aadf-0a71-4032-80f2-24954f9dd299",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7b61e6ac-0fb9-4055-b0c8-7013fb6ac27e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "180842fc-0512-40a2-b929-a30e0a6747a2"
                }
              }
            ]
          },
          {
            "id": "c37ae1b6-31bd-41ed-99fe-7a1e5e34937c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0296f17a-9fc1-4b50-8ee2-7e7adab2e218",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2bc3d85e-de04-4f2f-b1ae-7ee0d21421f2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7d41db0f-690b-400d-98c6-339baf430b34",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e43957dc-79eb-4b75-99fe-a299773244d7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2244b1e3-edea-474c-baa2-432a05f4b1a7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e16e2cd-9a4e-4a19-aa0b-38a423e67b84",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0cb52226-16e7-46eb-a9c5-3e9682b91b76"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e99d9c29-deaa-403f-afed-4e8092373b87",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "68bcde4f-6d12-4d65-be8a-1eeebff238c1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2dee7cc1-1c96-48dc-b6b6-1b6eb55a23a9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cff3611f-2432-43de-bfed-076764e31559"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f5dc654a-5186-471d-ac4a-52cc3dc305b8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8b979c60-e6c0-4e0c-bed5-29977ad617aa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "649005f4-0407-4d26-91e9-6019027b7f70",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "453317db-aab4-45cd-b473-60ef0c0f8037"
            }
          }
        ]
      },
      {
        "id": "49526789-16d9-427c-b896-2c03b264ff82",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "914304c5-f156-4034-af28-312d27d89baa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b8c2c1c6-af8d-4e8a-ba5d-191d98f4d9da",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d1f3a886-45ab-44fe-8636-e04987f1da4d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3428dc5d-0df5-42c8-9723-78226adb1817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fcf175b7-c7c2-4584-8d51-a94d1d427f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "762fde30-c641-4e90-92b7-69ab23effb5d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca68690f-4b76-41af-99e8-8b67204b4497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8667e134-e69d-4d77-ba0a-cc6f729d7575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d8f42d-2c6d-4206-aa5f-d69ad6ad538f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66583cc-8df4-4f62-ae32-4ecaae594acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c4b93971-a222-4571-98a1-ab1ac9efdecf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "226dc112-755c-4f4c-9eb2-6bd2b6473b59",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "974bc8e9-ed81-459c-be7d-6b95554fba49",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d31f17b-7aa6-4c07-8239-5912885303d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c1670713-7c3b-448b-9e7f-5b0ac40df9ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cda127d-c32f-4410-b6f7-76885492ade8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ebb546c-7118-4bf7-8cd4-6005f168148d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "60b32dce-17cb-4124-bf94-37f0adeb2a0b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5060f811-2c77-48fc-b426-bcd27850740d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0e6f1f5-e5f8-4292-b4e5-d616553327af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "59b41565-f6f8-4b7a-9f7c-37b4c8f6954a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d9e1818c-866f-4d03-a8f0-3a7cd64c26ca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "182b9915-bfd9-449f-bb2e-bbe2bf86c57c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c2ad3401-557b-4bea-b1d2-8070bb44ba76",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "22611671-7178-4bb5-8433-8c2838b54293"
            }
          }
        ]
      },
      {
        "id": "eadd1751-6932-4291-81af-a05b353dddeb",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ab8c3a19-8766-4ac0-b9ec-60405f047690",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0d854d8c-2314-442e-98bb-d1ff57167df3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "10089d41-3788-4e0d-bc8b-9409b6f3d19a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead3570f-905c-4c7c-b293-02c95b500891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25d1ce6a-1c94-46b2-9b03-dba33b7f03ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e9ab70-b33a-42a5-a731-e6bd1a8e3b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0a56d9f-061d-410c-a6a2-9c68cfa66748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8e20a0-4e4f-446f-84bf-38e02f739fcd",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb159bb-52c5-48ae-8bea-c47801edea17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a950ba01-d2c4-4b22-9d4d-15b72ffc8620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f4aae0-91ff-45af-93b5-722baf1cb167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d7fe53a-9c63-4ee5-ac54-5fe7442a9e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c10802f-6ce8-467e-9dbe-4d549196e38d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "020d5d76-1a35-4108-8d94-bdf62d54f579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15fd5657-0f6e-4818-964a-3fa9e2c644e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37896c2-d2d1-4191-be36-70dcf8e3e1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e66cc9a-b06a-4608-b806-e0ccf82a23f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c92725e-1a9b-4e09-8562-2be67588b7f3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "143d6f0d-f576-4a14-b420-fbfcd6a2dfda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84a6774b-a90b-40bc-9801-06efe645a671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a8817b-af18-44e6-a616-9ecff5e02254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e68d530c-5b82-48ab-998a-51bd572a2b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3182f1e1-9b72-4b37-b5e8-89cc5f5e972e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a30bc7d-8733-491c-8d03-74ad1af81eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a128a8cb-4570-42f7-ae32-5f2ccfae4a7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab311720-6468-4d38-8ef0-66ebaffb9e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "461371ae-c927-40ca-a6fd-32ff41cb0b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a1f777-23de-4845-b3bc-c9ff48a4de02",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af0509a-8784-4494-9df1-c84af5e80257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3f359f5-3adf-4578-933f-23d9e746f03a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f51bf88b-df1c-428c-a049-378ff6966053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47776053-d1fe-4971-be1a-7681fd2e500c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ddaeb2-d1ba-4f6c-80ab-df94c21eb4ea",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c057ff1-283a-4a45-abaf-413036aeb4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff482ff-31c4-4a28-ae6c-48628a6ed583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb21d93-2d20-49da-a488-63c639c8271a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65a725f4-57af-46bd-bbde-3739b41168d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e532b3-4d5e-49fd-867c-a0acaa09312e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3bb595-1765-422c-a8ba-7caf033ddb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acca5ebe-3244-4d7a-80b6-beeb6b8f9b76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a3dc9f-23f3-4170-ac64-d8e2510ac8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "835382ae-2411-4142-b21f-1ca8dd16cf8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1dbb3cd-529e-4d27-b871-b7e3e6bc8c13",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a070b939-aef2-4a51-91fd-5bb8005dbdca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79ecbfb4-3bc0-481c-9319-e22d76103672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "336eeef9-044d-48e9-b777-872ec23cc5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff87b27e-0353-4720-b5ed-5dc9336dff56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c983762e-e45b-463b-a33a-35d0dd963b7d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be50704-cf5b-41a3-8996-63b235a57ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97b02018-d76e-4ba5-ac28-5fd39152c7e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72dafdfb-179a-445a-bf58-20f9056d0a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d3f68f4-2178-44cd-b412-5fe96917555b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f758a4c-f9fb-4065-a45a-4a9e950ea748",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03520e89-9728-4652-b1a5-2240bfe21431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd9af76c-5a56-4ff9-aad3-e3d78cd4acef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e88b7e2-89a3-4dcf-a2fb-7cae24dc9997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f3aa0c2-6bf1-4f61-96fb-f51fce5e1a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770de693-71ff-4286-8363-932c5f15e20a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83ade04-f4aa-4bd8-9843-04b8f82d56a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2fa90f5-5695-423e-81ea-63d5e0d49359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c30a8a-6a3e-4023-a68e-7dc3ddf897a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6aa399f-216c-420d-83b4-adfb60924484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c815ce12-4dda-48b8-910b-d104aa6ed33a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d46fd9d-3d96-4ff8-8731-ebb8cd104aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a0d5fef-1d4a-4a44-8825-7f429851e7b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0eaabb2-73e8-4176-a092-923548b7e3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38b685b6-9d0a-4d1c-a1e7-e8d4f07def8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3294bdf-aba0-4860-a9a5-c5e6155bbf5c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8ab5a0-ae96-460c-af45-b8bc338f34eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f90c871-cd40-45a7-9128-b843e1e925a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5eff861-0ea4-428c-9959-ed80b8bcda1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d804080-416b-4d38-b7f8-1dd4a3b5d23c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f094084d-3130-487a-a0a5-786fa63d4cff",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4017ab9-9096-4467-83e0-c2dda2b35d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "704c5b45-d947-4bc3-ac22-a363834f3d70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8c1c8f-b3ff-4806-bfcc-0c9a242ba4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "295007ef-eb56-420b-870d-0f2ebb5677eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75589081-7e4d-40ca-88fa-d51cfa2648c0",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38111a2f-6e7c-4843-8017-f0caa092933c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24b34065-7605-433b-8091-ea4b4b60f7ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78185c14-b659-44c3-b64f-bde9533a9f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "568ee2bb-da94-4b3a-86c8-1077c85257d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bbe6e43-51dc-46a0-8820-b8eecc80d277",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53dc019c-ca15-4786-8f97-e116314df276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58d86d6d-12ef-42d0-8ff2-50af9865f463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b45899-3079-40a2-b81d-a78bdb418a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e20c0cdf-effc-4702-9590-c0f4a3814abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27fd5d43-d056-495e-82ad-0d2d5830e562",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10d363e-17ee-49ff-bef8-a7f7ae1c6d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "459b8bc9-27b0-4b97-bd23-01c854707403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd22352-3599-48c8-8265-308c63c329df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c459fef-3ae6-433d-a189-962a373c4777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e09c1b-17d9-4d6e-94c3-07d9c9b55860",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be059c35-616f-4019-a495-c910d3b3dd85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6986193a-cb05-410e-96d1-67ca08e1683a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a49a057-f6b3-49c7-8216-eb0b87b41a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c454736-f07b-4c17-a982-ac31325c0f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2169717f-92f0-426e-a004-29a6fc9de7f2",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb0de4a-4e9f-4963-b3d4-a01530b5450c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f426b4a-b4e8-4723-a0f3-e7d00f38b51f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10dc6ac0-78d2-4061-b941-2c6ea68261b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28b84772-6b81-4476-aa5b-46d49e7fdde6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125031f4-946f-46a0-872e-1622ece251e1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1931a2f6-81a0-4cf4-8fd1-0c2b073da632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cf80e8e-da24-4d6d-a766-6d1d7d391876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98773856-de92-4a0d-8539-fd82335db0bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80a68ef6-a1ac-4af9-a956-2fe213ef9faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6064050f-3732-4985-9495-804ea4dfeca7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "527824b7-fa15-4283-b252-a0213ed4fb8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67e255d7-ead8-4a94-8541-7f3d19265c86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b744d8-1329-4500-9ace-8c3d7cee288b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6cf915e-ff70-427e-9762-a9a3cccd29b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70ee44c-2fac-4e52-9723-d27daf2e899d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ac2990-0274-4c73-a7cb-55a0d49273ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebede0fd-871c-4bdf-9608-27567c7e451e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2238823b-7ef3-404a-b1d4-c8b89e9d3f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6360692d-850f-4280-b815-090140da6509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac59040-f564-414d-80f4-f51f10048b46",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e989f711-13b8-4f46-9f87-9585734ae7e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b24a6d8-f8c4-40bd-8651-d4b475f4e217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c03513-368d-4cc6-af70-94d26eb49c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b3410db-b2d8-4755-b82c-3ced45904c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9db719-1422-4bd5-b55f-c4525a1dadb8",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad058a8-b754-4531-8fec-056a0d73194c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2d0419f-75dc-40ad-9563-2ad5a4d30f52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0242c4-fed0-49b8-afb7-b409ac7c643e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "03a30456-c658-4d6e-bd8e-06a92ca676cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885e9e67-d14c-4361-a935-a3a4ba59f22b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "694dbec0-4627-4cbc-9dca-d0658a1ae675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e4b590-413c-44d4-a1dc-a7679a3a66bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5bca2cb-4ab8-427d-8f79-df9ab75ddbdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "86da06d1-245c-471d-b064-c8cd1ae87f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29585cd0-7290-4dc2-a4e2-c6713d826753",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a527f5-be75-48fa-a01d-45a70baf2e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53e85934-55ae-4735-905a-7499f49285b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe223be-2f3a-4daf-8ae3-4f7f9a6b4318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "305eff11-8fe1-445d-97f9-f4d23d8c9d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3525b4-8e5d-4fe1-a846-de068ce0164f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c13f804-9129-442d-af66-48bb71b7bb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeedb61c-c75f-450b-8987-93ff04ddb0d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a2f742-818a-4445-afa5-78088881eecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "10968f02-d753-4603-bf72-e65d1d8b0f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5bf0726-1f35-4417-96ad-ac35886bc73c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76570231-b83e-466e-a3ab-ac1ed91e8981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15da2c41-04b6-407a-8e63-83a104998b86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67100177-6a9a-496d-820f-a6699fe39201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fee682b6-b186-4737-943b-f673c21dfba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b25946-1117-4455-850f-46b328369b38",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8ef5cb-0d2c-4f2a-b015-ca1933e8f07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a010be3-b6e9-47b4-ae04-257e88e89eff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475a4cb5-3d62-4ebb-bf63-7ba0bc6070b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "127d7af6-dfea-4301-9df5-55b269868f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53093764-c5d4-4ce1-81cf-e6b69e7f7b85",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe51f020-c48a-46c7-81b2-0f63a4146a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfd6dc88-d62d-466c-ae53-5d04f453a5d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bcffa6d-5d09-422c-9570-d528e53a0c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c81dd4a-8fb6-4215-bfc4-a83a76611ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a6fefa2-47aa-45f3-943b-6d311fe08166",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d65ea34-7b88-4a31-8171-e6fdedcdb54b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7818339-5cea-471c-866d-c7ddda71b145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c850fbf-473a-4224-a488-317e13cbe7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b3f9652-94e1-431d-b7d6-49d4cdaf9fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e92f4be-fc97-480a-b230-d5a99540609a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e161d8c-455d-4acf-b874-a8256f5ff6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16f573f0-3b87-462d-98e9-b0e5e95ef796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f2a75a-21a1-43cb-8d3e-af8fc8ad5414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "79f725de-82b8-4774-bf19-b5c3d3ffe740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08076c0b-91be-441c-b726-04c0e192ffc4",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8474fc52-9da9-4ac3-8c46-a350f3d346a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "407369c5-f61d-4b41-9605-cdb6c73855d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e742c5-94a1-481f-884c-1481bc942ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c76c37f0-517c-4a02-b0ec-a336c450a8a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69000be-5bd5-4b86-af97-c187e1bbd4c3",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c55199-c72c-4a28-bcf1-cb2fc344e62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6156113-4812-4b9c-bd7a-12b7d0d0cff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5319f9c0-9058-4c62-a0fd-5067640b412d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "fffe44f8-6cd6-4253-af61-c168d71547f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f801934b-21a4-40f7-b5e8-ee400fa99705",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "579dac1d-2da6-44b5-9fe7-985253ca0b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81c7cded-d139-4f71-b9bf-3d8dc35ccf53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b580a138-169f-4d52-add8-0e11db48603f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5085dadc-55f6-4e58-b6f5-25d99a15afb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048cbed3-c46e-422e-ab46-bcf992ff988c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4d9e6c-7d10-4426-bf24-dddc7f642816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4c70e8a-fe34-403d-97af-09407cf27cbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "961f029b-2dec-43cf-8194-600071ffb058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "70c23429-14df-45a3-ae4b-c07acb33cc2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d4386c-f4ac-43b2-bac8-52f70bdca396",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9372b1-10b0-4c2a-a3ee-a2b01ecc473c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd77f11c-239c-4c13-a525-c65f36a89e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6561b0d-ce7f-4002-acdc-21dd582c3ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8dfd7e73-bbb0-4183-b2be-6478cea2aa89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a534dc52-4f62-4309-a5db-c9b29e95f897",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8339723-68da-419f-be9d-cf4d5e04eff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15198e32-fb4b-4559-ab49-1d6ec9d4e15f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72b4209-27a2-47f0-a9be-ac11a74020fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b93640f-7ed1-4652-97e1-63911cafc645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f220e3fb-230a-4500-abd6-813002d46579",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901722aa-4a87-42ae-a0a0-2d6e9924be02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27956eff-5c80-407e-a701-b20f75066f52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ce2003-3aee-4382-8e7c-ab3720f63925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "26d6d68d-be61-4781-a31a-ea8ec897c60c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671fa4a4-00de-46cb-8d2b-448560cc8adf",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f98469c6-8147-4cc6-aab8-45601accaa73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c61e1a4-4e45-47d2-b3cb-eb28be9d50db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011e7a2a-1451-4b39-b69d-54f0b9218f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f667ee70-7d0f-450e-b1b7-afc3c1c1ab8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1712e4e-991e-460c-81f1-ac4edfc5f799",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d736e0e4-61b8-4d4e-8162-0673efd151e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e24009ae-4747-430c-9093-dd91d130b1c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ff780b-c2b0-415f-b05b-c67bb0c560e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c2d6556b-867f-4eb5-9d7c-cbfb525341fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0d0610-160e-41b1-9e6e-9ac20990d46b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd37ab25-34c8-41ca-96e6-d4563fe9e050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee248267-bb47-4c90-a2ee-dec20a38cf41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e34c0cc-53c3-41d2-b7ae-cfc4c78ca40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dbed5785-21b1-4ad5-936e-d7e2201cb23f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aabb428c-db1d-43d6-95f8-12997650f5b5",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f265788-b2e3-49ac-b9d5-e68c40dc5b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "366079bf-a784-4a1a-9f5d-10515de9eeed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0c1f2a-0c41-40cf-9f61-dd4752dae1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb5654a5-b96f-4daa-8717-edcaec683f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6debf4c-e00c-4601-9e58-77256676b518",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed625a8-9299-4a83-b5c8-18d4fb806fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a74a60d-540f-4b39-bd3c-24ef95cadac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a265c6f-673e-4f1f-b116-d1ef85639381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "24b7ad2b-5bae-43a1-9c1b-996521033b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ddeaaef-4ead-4c93-9c90-e4222207b450",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17bbf774-af51-41e0-9d28-31af4f9bceb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "929747c4-11c6-4443-90d3-164183c8a918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b60dcae7-84d9-4673-b21f-193f23e6524e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad2beddc-4056-44b4-956f-ecf99428b796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0f4078-d420-4d19-bade-b2204ad4e190",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8801a7ba-7579-4ff2-8c0d-2a48b8f7fb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "495b3787-0b5e-463b-8ab1-75fddeae7deb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1308097f-f0b0-45ce-8a95-9e5b51e805c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "83de5934-2f30-4a67-9247-88dfaf2ea5ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bfc85cd-ecba-49ad-913a-49d7ed05e550",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e837fff-3352-410e-9bf0-27a4a5e00c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ffab8ff-727a-4b05-ad7f-d4d8eb9cf6fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99c3213-9f9a-4e65-872e-3f6d80484531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "efaa9d88-0c81-4c17-a91e-b8beeb3fef57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "099b8b52-59b8-42d5-9fcc-6dbce1a3c636",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "837cede4-9908-4827-8bd9-e97a5d1c098f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68a287e2-2f02-45ef-a333-6c21db7719a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dad4ebb-1bfc-43bf-bf5c-16f413bfba66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb333c5f-a243-4635-b085-f85dc088ac4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4f3a00-d7d6-4c4b-beac-9cc9278e8e9f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb3922a-0b11-4491-9f6f-980b0ad4f211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd8829cc-cc37-48fd-be27-a9b3929724d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dfa3a53-211f-4fee-989c-d902b25b6138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a1c7ffbf-af6c-4d24-a350-d1a7eea8dc14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db9a625-c089-4f6c-85a5-72045e69ff3d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c6d1a7-21fe-4c0f-96b5-91145da1f5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b9ac952-f4ef-4358-a4ce-a0e5c9f3d4da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dabcb1bf-7ad4-4c78-a3c0-b555825a6a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3a0566e-bb21-4aea-a435-b4d739952876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9930d64-a544-4932-bbe1-ba0a2c98f9fa",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a33f9a57-a41d-4dd8-8050-c850560d03fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1598bbbf-07b0-4d94-b0e7-910bc3fe7e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f1f63ae-6756-4851-98a6-b0b44ae01090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "78b519ff-d94a-4278-8c2e-1142badc7a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa53b31-39be-4dba-b0fa-f1431396ea42",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a4be37-5003-4494-981a-b345dd685d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a0300b6-2ce2-4dd5-8028-34d390f3c36a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c037dfa5-82b9-4fb5-9689-7eff6e6881fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae88fa78-58f6-4e7d-a33e-3d37bdb61a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d7196d-deea-42a9-9d37-0609399d383a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e479c228-968d-420d-a5c5-ce8be670d9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3196692d-12db-4e32-9547-1c50314ca264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18ced51-6b60-46ee-b11a-24c369017ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "44f9c5b2-dfb1-4489-81ff-0426e17f9dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9b9eb6-d542-41e0-bd09-4d68fc62be64",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ca814f-6f58-486b-b736-737836471660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6395c2e8-d2d5-4ecf-90b5-6df93032e4a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7921ab1-c23c-410b-878d-1a883e8a76c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "067b670d-0917-47dc-8d66-b2415000fa7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad83569b-2089-4e9d-bef4-8ec08adb103d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c35cbd0-2584-4eca-8ce3-3c780e7106a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a692e95-d430-475e-be75-8534cc00e9e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b0bb548-11c0-48b0-b675-92940612c3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a6a75b25-1e3f-41f6-996e-5ae79b58c507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9e1c74-d0ab-4562-b79d-e230248ce903",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df0aa0a-3320-473e-8b25-11a20e371548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76e945c9-43b9-44d5-a50c-9864dffc1ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d76532-3252-45c8-918c-22e309f2189b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7097cf88-7fd4-4dcb-9d4f-c68cc2b93ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f272149-4947-4ef1-915d-43ab0823c435",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d2f4ed-f96e-456d-9b60-8419a886105d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f9d7aa9-c5a5-4c4d-9ad2-53cbdad5a501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e857a0-ae32-42c4-990d-3170ee28400e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "16bdca7a-f799-470f-af92-43cc86d6c522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5eed1a8-6560-4cce-84c6-5b571cc47cc3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d0043c-c208-4e26-8d89-c0a2b02fab59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7423c08-3fb5-4ae6-86aa-b470d4fcbbf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91fe2089-d29b-4034-be8a-77860bb93ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9be7b70e-40b1-4b42-9aaa-31089fa561f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7bdfb4a-0218-4b3c-be1c-8750f6a6d975",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e208be27-753f-459a-a691-e9625681e0cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccf87720-4ba6-4b44-80ae-011ac844a65e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf7e317b-73c2-4082-98a8-bd2330383a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e211c705-ba92-4891-96c7-455e915dc2a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f50a57-7dff-4c29-a642-1e5a9fadf3c8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0448340d-e3be-41b2-a63d-e413aa015b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec25da9c-2656-4272-85c8-0fde85881295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2baed5c7-0a5a-41ca-92fd-0a5efadaab4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d46745a3-8ffb-4cb3-a773-ac18b3906f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda1ffdb-fa68-424c-8844-84d67e10eee8",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf79a16f-06e2-4a2b-a376-e985985a646b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ca10486-52e3-43c5-98fb-a7274b99da27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "887f6f24-6cc8-4122-8ce0-47cbee5483c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "85d08759-2cd2-45d1-b997-4b5a8660c9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360702f5-9f45-4193-b2bf-1abbb3aff3c4",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6893c0ee-411c-4fd9-909f-5ad4ba5312bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b66bcd0-bc3c-4dcf-84e0-11b8e8cf4287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b410828-7d36-4b4c-b390-d266fa2e3313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ebec21f-2e0d-42be-b236-aa16b61b8823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd46678-f23f-45e7-9ff7-2541e7bda526",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08fd28c3-4fc9-4e8f-9da0-bf55d79e3f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b2c4691-56e0-48e9-8a91-e6b5646abdf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2aed42e-81b2-48e2-8e14-4ae3b3d4f9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dea86f39-4918-47a8-b0cf-31e4d941612d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afcec1b7-9a37-4d93-9b6c-418f6a7ef74b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6c2b07-7c41-47d4-b292-22861300faac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "093d4a18-01e3-475c-afdc-320651a3d8b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ffbd2f-0a62-48fe-80e4-25bf8129c44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "67b95e7b-b794-4f15-8131-3d0d68b2652b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f2265c-0947-4232-a1e2-ff457de6f574",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d78d13c-478d-4cdc-9197-806775f4bfbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11a0a4c3-e2d4-4fa8-9be6-5fa3000f196c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6b5a3c-25bf-4c73-9a6b-0dc4e81751bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1450d3ab-467e-415d-9c21-ba945f6ea54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e91658c-253f-49b1-bc01-a87b27b730b4",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "446d4789-8414-46ee-a4b7-fe73287fc199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e29bb77-5ca0-47dc-8856-94dd1cb99884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a6a89da-9865-46bc-9410-625e4ad2ed17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8ffc258f-9662-4a45-b740-17f7bc98eb6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "234bf853-19c7-4b96-88cb-2e56b1447a89",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0955c1c2-8e09-49da-a77f-e599c9f5deb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "448654b0-88a2-43d1-ae92-a410e99d6270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852b1c79-683d-4111-965b-f027d2be9ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b6f206d-7b3f-4c32-b5c5-2ea19a49eff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1038a285-103e-4e67-8ac7-e269db122265",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb535de8-29ba-422c-9a4d-5dc2657afbdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "081dc1ff-d6e2-4eb0-9ddf-2083e4a0c800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da817c3-16fc-4220-80b9-175d4b22d1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1051439d-04ad-49ef-9efd-7effc6211e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf59080-5bb8-4bfd-a43f-f834e3b0446e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce492cd-dc1e-411b-982c-12a064b46271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271bfe48-6055-44fa-8fa5-0442b3d4ea0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b38430c-11d9-4536-8bc2-0a6242c17855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2733ddc2-7175-4b46-b474-e7d265a75b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e4cd3a-c8d0-4f18-b9ab-8bff426b1949",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb1f519-688f-4b58-a9ef-12f1c317ea17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ff43371-5a0d-487a-abae-3b0a5a85e86d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c6e433-10de-4df9-94f9-25142f92a5df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "42cdf8a4-3fff-436e-8d8c-83f8797caea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c93d8d-6a15-4776-9137-8e39ebb0e36d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3153a2c1-76ba-4f0e-8a27-fdab4e92f133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78d131a4-09a9-4be4-817f-1f3c4fdf955d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12f5aee-ffbb-42b2-9934-48b582c01dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b37d004c-c28a-4b35-b762-8832d8eb46ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b19e70e-1d9c-4935-9feb-312ea1bbb476",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa55b3e-7f7d-4999-9480-ee7200f850b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fc50820-720c-482c-84b5-0970d35d6775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35288e7-2128-47c6-978a-fa5fc51f3f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf780d90-0afd-4f4f-9273-47c5ec47fff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6502363-7c66-4f8b-abd2-f6e9b682146d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f9192a-9fec-4ac6-a758-9a0987fc3c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1284a5df-a9f0-4054-9878-0483904ff2eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3a2469-904c-4c4a-ad10-da3ee770f867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d8d098d6-bf04-4364-a88b-7606ec48a464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d04b24-f7fb-408d-b0a7-f8eeb38df359",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68070c9-543e-474b-b1d6-34358c7266c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7a13a8d-667a-4883-9b53-e6b9184a6278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf913e35-b9b2-4a3c-b354-1fd95cccd05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb6bff67-d5cd-480a-9158-bee503b09e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f2a6b1-8aea-4d79-ab0d-525e35029995",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37ae7ad-2224-4ed8-a1d0-0629296132c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22c64cd6-2297-47f5-8092-a391672925db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea2b8d85-9ff9-46e3-9f5c-adc9c34f4e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b9ee4ec-0f9b-42d9-b3ad-482190e2d7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35dec688-cbae-4814-bdd5-e8b5131ce33a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a5695d-f773-454a-aaa3-60dc568ff5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f458e92f-0148-49ca-a7e7-b14c3fe9cd55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3205b112-079d-4e7a-b0f9-808fdcbf8760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43b6c12e-6683-4c95-b6c4-8e5f77f8fd04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c0d02f-4934-4af3-8ad7-0318fa7ea4ed",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf80a90f-07a0-4bd7-b45b-bb258ca8c0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd6c6602-891f-4893-b34b-e1e31ef12023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f909de41-9405-4092-bc93-bc5abf901485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "20cf91b5-878a-4b7e-88ef-7a30df9c9aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1206f93-3dfc-4a3f-92aa-a603534a2104",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6eee5bb-93a6-4120-8111-6a638ab82734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e85f1c1b-1ba0-40bc-9bad-7819b0149c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0e8ca7-028a-49fa-854f-30694e18ac08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e31445ab-a70b-48ae-84f3-ff645955c14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "904ef3b5-4633-4ab7-91c4-128149ec22b5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2fd559d-21df-453b-809e-211d791db0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0933e443-59f5-4d17-b250-0bca66f32627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d351f5-92ca-43d3-8993-130dc33b660e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fe597ca7-80e3-425c-9cb0-84369ebd47ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a25fd29-c142-464c-87a1-6179ec5d4cd7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f075bfe-afe5-4bcd-aa47-be84a8ea0fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d0575a2-84ab-4edd-bcc8-287e7d9d0bde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22830c5b-b518-4fb8-8695-f0a916b50f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3063d03a-af4d-4340-bcfb-0a2b68f614d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12fdf62b-5199-4632-a8b6-1b19ef4e37db",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d216404-5126-4023-b487-033360d9590b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ced4333c-84f0-4a8b-94b4-ca37737e4301"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61bbfd31-b0a8-424f-b6be-c70d3a3a1b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebdfc327-6990-4910-877b-da7c7782d4da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f38a1a6-a88c-49d9-bc3d-c520530ec4f1",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7661146-4e95-4c4d-9fcd-1f7ecc95181e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c183365-06e9-4082-82ad-9a6260c3a377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3249540-2dad-4ad4-97ee-710bf6b990a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "159a0b02-b4de-48d1-b003-b3f1046e757f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7993934f-90b7-4c50-9550-178d9e282fff",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "454c77b4-9c26-4b45-9eca-f03d392031ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97c0f2c5-617d-46a8-92f4-21ef325710f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92555777-5cd3-4e7b-8ada-89b02c6e4b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b74289e8-3c17-4897-b15d-4cee6cc7324c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b0af2c-b492-46c0-8e9d-8a219a7a278f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f1935e-88da-4b99-8999-7c8947ddd404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eddb2739-2679-4c14-ad46-89596523fc4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ce684f-2f14-48b0-b5a2-d775a97fe5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "399cc0ce-bd72-4188-a8b1-d51622257137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce96a606-4d4c-4c73-8e57-84a8f333eced",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8714f459-55cb-416c-bcf3-fed49e0fe908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b671ed3-8d75-4645-9950-5060253e48d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063e240d-93a0-46bf-9a85-1d9ff04971a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f612151d-371b-45b3-afe4-3c23764c4b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b8c0c3-8060-4397-8321-7e1f8f917497",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea45cfd7-bf3b-48a1-a012-bf4ec0d33c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "299ac24e-5cf2-46fc-9aaa-20a9e6a6918d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09837c8a-706c-4726-a29e-641e47021439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c6bf6df-4630-4ba7-b215-a7088245fafa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88bda0c9-3ddc-4a30-aa90-a87408757152",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ea10c8-302f-4ad6-96b4-2d89c02648dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c31295d9-89fd-4100-a6b7-95cf59d2d6a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d244d90-346b-404c-ae33-ccf2f056983a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "693c03eb-6050-41ad-824c-aefe17effafe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b366d4c-d730-41fc-8581-085b3640cfc1",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55549988-2bc5-4425-8344-293b9998a6e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37027dfa-6bcc-4bfb-bf06-e670885938a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8a9514-d7a7-4759-a4f9-23ecd55ab77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a537a9c-9419-4276-85d3-95bfedc13415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80eabfb9-4ada-48e4-b6af-886fff3c8c35",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aacf491-5bcc-483b-a5d9-242afbeb4cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "480c83b7-2460-4c2c-a6f7-4e751e72e8f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385871af-6b04-40d0-989d-58a19ad8d1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "73a9ecbc-daf6-4e12-92c7-8ee428d03a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5042fd7b-a12e-4ed8-90e0-e8f4cc899ac0",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ebb55d3-0aab-4317-a61e-1e1468fe3e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e1ad37-19f2-45ce-b96d-3df5d7e5e6ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9493d3a9-9df0-4de3-a71a-b50c370730bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "914e06a7-545c-4d92-9162-9b099a01846b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "322d7d42-93cd-46ac-bd54-7c69bec2f974",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3dd6923-b733-492a-a201-6bf8f0f73466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b846062c-3a8d-4499-8cb4-b0c8e88b31d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac501a47-30b5-422d-a630-490d21435e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1bcf91d-1ebf-4b45-a373-4c4b1ea86bb5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "897bbbf5-64f0-457e-8582-6447f74cc060",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "15a50f5e-9724-4e9c-a439-cd204a6caccb",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1bfe52-65d3-4c60-a3d2-7d14fcc3f073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ab15f97-afc8-42f4-a448-f9d43aca4c8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "023eea60-de72-4dfa-bb21-c5b6f5ce93fa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db52ade4-a09d-42a4-baa5-1d5353094a25"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1852052-93c4-4d6a-9c7b-793d20b4c1f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3380a4c3-a395-47af-b0fe-e8955bcc4a2a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e4698d5-6924-4732-99aa-6aa305232aa0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d3017d1-7214-41a8-a20c-fd97104c6c3d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b9aaf3da-bc9d-4fcb-ad5a-3e6e7148e539",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "16b2bd95-5b11-46b9-a4fb-ed2cdf1a3c99"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e8a0bf88-94c4-4547-bdd7-272ba46c436e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cf8d8771-2cd4-43f5-995c-267bb5cd0bf5"
                }
              }
            ]
          },
          {
            "id": "f7aba1be-c861-483f-9c64-0663215980e4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "72233e18-ff29-49b5-a5f1-902360e424e7",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "402a94c8-2790-4212-b06f-e030ff1bf01a",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ec22ec-cb62-4ca9-a429-ca243b8b0cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "56f32d96-b033-424b-beae-86eb681527b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed3da1c-7449-45cc-9bd4-1e84f0571d05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e85378a-f969-4eac-be29-b8063791d754"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "69087d53-c032-49a7-a980-c612be2e2418",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "781a03de-0de5-40c7-b568-b47160412c54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c0d15c37-baea-4b06-b5dc-78ec6456cfc4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea7a9fd7-4ead-4ea0-8ee2-e08c2b17393a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a780edca-be0b-4b88-9e03-51d35bc294ca"
                    }
                  }
                ]
              },
              {
                "id": "9ccfe9b2-260a-4f45-bff5-c3df1fcc1b14",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "284dcb95-1919-4801-ae79-3ad0c8141780",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e5e5589-4967-4476-b1dd-1da09246071c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3a0099a-ad05-467b-a5f3-e56f4b5e9f58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fc03dc0f-87d9-4ecd-9bf8-90c3fcd8a1e9"
                    }
                  }
                ]
              },
              {
                "id": "bb8d139d-a6a7-4c89-85f9-c58f671fa530",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6228d466-8d4d-4161-a66f-9ab18c8ed945",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2b06d52f-7aca-458e-ba4d-a3ae396b711e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d79f5e4-5bc1-4d8a-8b10-ea8768ed42ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "51f93a7c-2330-4da7-a971-35ea930d9312"
                    }
                  }
                ]
              },
              {
                "id": "02d8e647-fe39-4e59-bfc0-b9091236f374",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c1fa58f-9a0f-40dc-8cf6-5ef2f44d44b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "77be6b48-2ea6-45e9-bf6d-90f099ea4d15"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21f9b922-9133-4f26-bca1-75a781e35fdd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "04cd5e6a-0b15-45c0-afb1-df4369907513"
                    }
                  }
                ]
              },
              {
                "id": "9700e7a4-88a4-4821-907a-75ffcce9055a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb613f73-e49a-49a2-bcf4-bcec61c9bc11",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "58e9e9ea-f74b-4bd4-b97f-396d349e3592"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ade2202f-576e-41fc-a6eb-c3d5b562ae36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c32d1ab7-94ba-4a14-af8e-89807ccd07c2"
                    }
                  }
                ]
              },
              {
                "id": "d6e3b592-e206-469e-961f-a784d32cba46",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd767d8a-9578-4d94-942b-43f80408b7d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8b07f51a-a465-4a37-92e4-d8550dd2f8ba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8323115-889f-44f6-ab21-81d6c5b34996",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3bdfb232-9960-4e77-9a20-c342cf26c86b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "04c9a6f4-76ba-4360-b232-10de8180919a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "99553415-efec-4ba3-b1ab-36c5c92fc748"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ee110900-06fa-49f4-ab36-9e8058b78cc4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b8abb5c7-9604-43ea-8ebc-54876f8c3d54"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c375a34-ee01-4c7d-9e2f-4c38040cc8e8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9e94b8dc-02b4-4834-b030-77536773234b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "61541ab6-05d3-49a0-807f-934ba71788a1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "142da980-8441-4a1c-8bba-2cde3a9abc9e"
            }
          }
        ]
      },
      {
        "id": "5d57e4d8-fdd1-4646-b43e-8bd0d240d18f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8bc8b187-8354-4771-93bf-a8012fa07c10",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b65ceac2-c257-4ef4-9a21-93a1aab7c65d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "000197ac-4f0e-4e32-a16a-cd491ef2149b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35666bb6-cb0e-4d37-8f0d-e6a536c6d155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d927029-b41b-4b51-b297-60ed3175dd63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd39fe3-a2fa-4738-acb3-c42ad448a5f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5503f9c2-6e51-4759-a220-481c1801974c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ce620d-f480-4f81-b613-f02da8899de8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e50dfb1-e31e-4617-b519-6d9843b50a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cedf1f81-ef2b-4be9-803a-a6eddd0ef12b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69177cc-0279-4c25-8a24-0edffba3b28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eccd81b1-2add-4a7b-91fb-c2a909069ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789db5ed-5087-4c2c-b36b-2f65330c6550",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f428da52-aeb1-4cb2-801b-0deaf5669b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae92bc1d-2296-4fc2-86bd-a3736b5ef59d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b182e0-93db-4c36-ae17-2485c29e8bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12ef3e6e-c6df-4c81-9e45-4c15e816edf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f61a20-d864-422b-a815-e39114a801e1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a760c28b-1953-4916-9c32-2741e4ab960d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82ea7e8c-03f9-4c70-bc57-14d650f0ba13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7276abb9-364c-4bac-821f-35ccddb0a479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28eddc7f-ad8f-452d-93f5-de4f3a3477cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd53b550-2ee0-4a25-9ac6-48fded0d8c23",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0fa763-993a-4fb3-b131-f2ecf48ea72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e08b1de-3423-4e3f-88bc-a7b0affc6d1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efcb138d-3afe-49fc-a658-a31af8db08a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc0fc4b8-7353-4e54-8c64-79e811edb7eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3490862-609a-4528-acfb-3572d722b4fd",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ee46f4-2e8a-4898-a412-43cb33dbfb45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0662c8e5-0a3f-4765-a9f1-262430500e01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd46e174-6171-41f0-930e-a9bc6c306ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "768515f7-a2d5-473b-b3cc-b7313b5e4645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889bc83e-8928-4583-8408-d8463c597924",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4becf4-6fe3-4433-89d9-79dd49f7f69c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03a2c3ed-ff65-405e-b416-a4ed35a4ab0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf69f527-1983-4e92-ab84-ac3b69e626d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "55593eeb-6b10-4fd4-b882-e0356dfb20e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7f2242-4d2f-4283-9c61-690700b29b51",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1284326e-a655-4a2a-b5f4-ab3cf08f163c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb02957-8d0e-4759-9153-21e35428d1c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cea89ab-42bb-4509-8f2e-fb38157db186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "27b38fc8-bd26-4c37-b09b-19600d64dc4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5517505a-c5ae-426e-b4e1-2c1d7bf911d3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba0b43a-dd3b-4781-9d39-bc6242baab55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdf39bbd-a4b3-4ad3-9eeb-4b1b98af04d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb64dd6-5e87-4abf-844b-0344dfb54cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0783d58b-9aad-4b45-a431-75211e903cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e071dc8-5d8f-4ea3-bdd7-22d92127dffd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f7d0f2-70d2-4416-a92a-ab89f1fdf947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c950232a-5fe3-4d10-bcb6-ecf2d57d3b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2442e72a-68ef-40f9-807d-b0028ae3c583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0819073-7070-4bc8-951b-4fd36b1a024d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31517b43-6b92-464f-b342-afe151181ae2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "890c6ec2-8d51-47cb-bd7b-affae1e7a9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dde9192d-a38c-4216-a1ab-305a71006232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c76436-5d23-43bb-92c7-139e653ce29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "36e315d2-0698-4dde-b8b5-d3daccdf7dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f7d333-29b6-4e6f-a970-099051b3db9f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b00e90-958f-4553-91e0-f30a43e99408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21c695b2-71cf-442a-9d87-ac104adf6e4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba1d38ac-c6d2-48d5-8e6f-64f4bb0fc39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd60e29-ffc6-441c-9646-5d7cab1a7a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3dfcdee-14f8-40d4-804b-8498e3952d55",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a85c654-9699-422d-83b9-ec1ae9c826ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d80d387c-97d2-4bcf-9c8c-59cf23f428d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a38d832-e274-406d-996d-3f474d7db242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "986d9870-4388-44ae-8c4f-2ab15026553c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ba346d-9a54-4d4e-bb5e-2d3131c28024",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0958eee-0f72-4cbc-9c8f-55404d067a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f202af01-8312-45f4-9d5d-3757be085b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ddd9880-382f-46f3-80e6-eecae8350a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1c0f3ba-77ee-4be5-a1ae-83127e22a8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab47e524-9cc2-46f9-b679-9564970383a1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f0da9f-f115-483a-a6dd-73c4e1951f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff034a4-e6ca-4c60-a8c2-18ff305acc0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605625cc-04c0-415c-a57b-f5619fb17fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c1afd44-8efc-487c-934c-dc97659a2761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a263a1-b034-4761-b9af-5a006ead5373",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f68c26-42c6-4468-8af2-ae892637bb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04deb35f-4d0c-45b0-8b3e-74be9dcbdb1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704da527-6db0-42d2-bd6b-698ce9eeae7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e035edc8-259b-4b52-9896-5ddee1c30f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97422f32-2d65-4db9-a191-31a597b9f7d6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de285683-d52c-4d5f-824f-85729f883c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce33911d-2ebb-4e00-a527-612adc85de3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd982c3e-2385-4dc9-b83d-9c33ade75151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bb26f96-1860-4698-94ae-a3ee2ed2c878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6cf141-f2ee-496b-a7e3-feca8a88ad07",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d4019b-0458-4b54-a840-18d66f679e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46761a79-d1dd-4fcf-a2cb-1a09c4d853a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381ab912-0f74-4519-a99d-c5665c8ccc1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3d76f7d-6367-492f-9ae4-9890f87bb7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d0f4fc-bdfa-4d3a-9d03-972f84f8c59e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ef69a5-54cc-4429-9285-cff9d1384e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c7bc63-9ded-4d9f-acc4-59d8f2acee2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fbbbb91-8b48-44c7-a724-c0f37fc799ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c071abc-e2b7-47ec-a338-364968bc9af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a429795-8a77-4ce1-bcd1-901844d65af2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c6575f-801d-432a-9031-be141e04578c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4facded8-8282-4134-8bc6-6f48a2c13576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748c8965-771d-4c69-a546-f650e2574700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd6fb6dd-8d41-4ac8-93fb-167aa57a7d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab01308-514c-464f-b2ec-6f5890bf4938",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c8cae9a-09e1-4171-b8d8-da69620195bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fea4139-4724-465c-9e2b-51ba50be0805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21368064-977c-4396-8cee-467227e1506a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25d94476-4903-4e78-bb08-06887dcb22a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b959aa0-b823-441c-93ed-6edd21e18aeb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8d3df3-93ff-47d0-9f78-ce3ce8b560f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6c2bdb2-f260-462a-a8a8-22ab77a6e814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffed967b-0337-4988-9436-09c6384001fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b129009-78d9-4ed2-9e50-dacb2fb6d293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79080092-a7ef-4cfb-8756-03fb9c314e67",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76706bf1-b8e6-47c2-8e0c-98009bd800a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb23b910-fba7-48e8-b02c-49fed15b1f0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f113ec-5bef-4d16-9c06-e69c4b4feed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00b68466-859b-485e-a4c1-1c9a7483693c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a405dfd-119e-475d-84a0-1961468de4ce",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a22c39-8401-4120-a440-c9bfee9151e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b496665b-0a42-4585-bc9e-62cb0abc381e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db636b82-2d30-41df-91c8-c700d08eb778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42a32bba-df70-4c34-a8fa-ca3b58f56836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b35935-864d-4206-aea1-9e89241018e6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ec1607-8e5c-4624-9983-cfde108e05d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c1161df-ce6d-4a37-ad53-f1d694f90a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac071f2-8621-4932-a278-80987daffb7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d2e558f-b93e-4510-a36a-ae10562853d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2f54a5-61d2-4345-b70f-99dc390a1582",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48736b36-a564-45d5-a10e-7cc92556288d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c654282c-6609-4c7b-8dcc-800b133e416f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29984faf-c184-4475-9f4b-a5afe420b06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11903e42-1b36-4e02-8335-678bb198a565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91552c82-8e4e-4d0b-9577-8a9e6d231a69",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7bb41ea-886b-4342-b347-5b6e18ea8a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71849b04-6864-44f9-8f6b-fd82977bc629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec3ffe8-0fb0-4b29-805d-1422e1e53c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec1f16a-7423-4ef2-8639-fa58d82ec351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c8e18c-9636-4cf2-b7a4-47b284dc4840",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef60cd2-97c2-4259-b711-1bbe64e30c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7338603c-ba6f-4abc-9c11-b7f9309b4f4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb664e1d-1070-4afb-aeaf-dd2d96421879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a154101e-e651-4a4d-9e73-21263e202fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5536e839-2fc2-4020-9d63-3fe0cfa60d5a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d1baa8-81aa-416d-a555-a18439172757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "972b96fc-1239-456d-be5c-e63126948dee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e63fbc7-d083-4f38-b191-e45ddf7c8c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3604e3e-ac06-48a3-8508-24b10540e0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719ddca2-e306-40c8-bc61-88e7f81d38c0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "648f4921-2dfb-4df0-98e6-ef87a9908e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4096b685-967d-47a4-8899-e8e69b83186e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead1b72b-509c-4dd1-bd51-b641613c82c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a129ac76-b675-4e81-9a7a-d2549305a47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd791d3a-6d5a-4106-a457-a4a493d1e902",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d22ae6d-dcbf-4a5f-821c-5f9b2342ae36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ece0726-0414-4c7d-86de-adc4b5d2a9e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6729296-cf97-4e38-9fed-c142aea91e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05182b03-c250-4436-b260-73755424553c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c900d98-87f4-41ba-8dba-ef207fcf4c63",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0886c99-4141-4172-860d-030799615f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04f1b1d5-181f-41dd-8a39-94efb44c2847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c034ce5-2035-4ba6-9374-0f40a9912ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3aefca5-2042-4a26-ac39-53081b7d9d2f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cfcf9da1-8e8d-4b39-8aa7-1200f23831b8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8d91c0ef-5574-444f-949f-1dbc3ef0d25d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67bc8f29-7101-4192-a17f-865adfae9ee4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1c8af2b4-cc6a-4b1e-9580-145cf4714f50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da1fc00-464b-4566-83d7-4d91d0cd6292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "57da652f-906b-43f1-9d8a-0239975008fe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b4058b8-43e6-4366-ae61-ace0331be37f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f5ddb65-2074-488f-b885-f27944b6fa2f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ef7b87b-42b3-4c7a-97f4-7f480a0fa585",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ef88456-9661-4a16-80d5-fcf80cf9a36e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "386083d4-9107-4006-af48-7fa396941360",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b4d5113f-6fc2-4bfa-b2b3-14ad229f08f9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc352f06-8f45-452c-a494-f8590ffa861b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c4851214-8dec-494b-bd6d-90d8c22a4d65"
            }
          }
        ]
      },
      {
        "id": "b79b94e3-6202-493e-88b6-387a2f3c0649",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "4d5122ca-197f-4d42-9ed3-955388d1b9ed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e734b99f-c434-4ccc-beb9-37dae2400436",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e40761bf-d6de-4c4b-bd83-d5d872e41aaa",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40006fb-ad02-4ea8-9cfe-3bb7c3bcf9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96356e05-b228-475b-aaa7-fe468f5b48cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f673ac-593c-41fc-8c29-307c0b7b8ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "efb3cd19-51c9-4da9-a988-957a5c61fd57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170e5f4f-717c-403d-8bfa-046274f1990e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "007c7db2-56e2-43d6-8718-12d2230ab5a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beaaec76-3498-4ca8-82ac-b29ed722b72c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b2b0f6-bea2-4666-9d12-a398cbf3e160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "07af6c4b-5467-41df-8092-1e04a0bfb057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1077f00f-8e0b-4abe-8ec6-dd581e5aab81",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83dc3f69-1b1f-4119-952f-75a0a6c194cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0efd3f0d-7aa3-4b34-8646-61e8303fc24c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab0e56e-5fdf-4709-ba9d-fb0043298cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "26ad485f-ce1d-4136-a5fa-c547bfe18d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d54fe6-eca4-4985-ad6d-f23327e7b6da",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "396cd8af-18fe-493e-9bcf-b17bf58160cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69c900fe-4613-44aa-8446-f4db555812ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2d51c4-715c-4205-b120-78f3dee55e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdd1d464-2394-44f2-b315-a649d173de62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3eaadf6-ee3a-4781-8e6c-cccedada8062",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf42790-88a1-4284-ae7c-b2be07fd6b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b15be4a0-6a22-4690-a9e8-cab3a2254109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a8eef4-d6dc-4527-a545-5bc2f93146fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "113f1142-0f2f-41f7-af2e-b2c6cecdfb19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a682440-db3b-4c83-a0fe-d55cb03d608e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fa62cd-4c78-4347-8d3b-ed023e5062ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87bd00cc-29d2-402f-8574-4af219cd3cec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4e47bf-952f-465c-aca0-d27c3cc08d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "90908fb6-fdf0-4088-8fc3-def6674a915c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b84b98-c466-485f-99dd-5a662321eea6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3e0221-496f-4358-95d0-ab8f3cb5eefc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12351d5e-6022-4117-bd21-dba8de6f94f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e31bb71-651d-4752-b2b9-47cb284a9d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "49aa7d88-e4ce-472a-9ae4-8472708e07ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17454b7b-8ccd-45f7-8a41-48ce63ba96c2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a25a93a-7d45-4ffc-bbb3-25abb0cc29ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2da8679-d9ed-4c95-9536-d4fdcef359b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa6f080-c55f-4f21-a23c-39fd8cd61c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bf63860-c479-4109-99a9-8ee578315098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe8b259-5a79-403f-9009-1989a2ee097a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a393de-13c1-4077-970b-cf8c3fcbbc2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "599ebc3b-dc9a-4b5b-8d49-a21df113b2f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5be069-024b-440e-9578-35ecb898020a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f98caa-e410-4511-b144-a0f6f763a731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d824745-38f0-497c-b2ed-6ae108f4a07e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4941b550-621f-43c5-8780-d7f841647dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0516e07-fcad-4c83-a4c5-b516309ae7ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ab1ebb-8ad3-45e0-a799-fe68f7dd8e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d68d6532-b86f-42f0-8c7d-3ccd8f9f5a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78be75c-b06e-4c40-9b36-69719dbe6359",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ffee826-44db-4f2f-9dae-26382feb37b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f574941b-1f35-424e-9985-1d1f8ec50e3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbfeabe7-955b-4dd8-96eb-9ccaaa4e2d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9baad279-0b77-4860-b81e-4b325536c0d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b6937e-83b9-4022-87f7-7fcec7a5096c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2691c634-48cc-49b8-ae2a-3cc834d4c9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6d401a0-ea66-4d63-a175-f5edd721dac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67543a3-0de2-4ef7-bd2f-547483949370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e072c600-29b5-413b-877d-1e6c546cc0ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "befd70b3-0aab-491a-849a-b9290db5779a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d740f0-4380-4305-a1d5-5b3382104903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b90cc0-f553-42ea-a8a2-59ec0249dc5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554b0f31-8d33-4f5a-b065-61f6088fc6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e087a71-732f-45f5-8a1c-d295cee45408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebec29a-79b5-414a-9dbd-ef279bccc1a6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8c61d2-648c-4f70-9506-298c7d165fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cf367a7-171c-4d40-929f-76d9ac895184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ca91ae-3702-4bc1-a502-d910964cc994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "62ee049a-173c-4f63-952b-dcfb004df6ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddeaa81c-a5cf-413e-bb46-71d74961e019",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0bef32-9715-4aa3-b5a8-5e8a4b5c41e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e88e1d10-b9cb-4622-bdb5-dc064211ac35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c2cd67-9352-4237-9078-b0b8e69b4089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f93eaed8-baf4-4001-a2d5-6d7bf410a93f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6a39f3-3db1-45c0-b791-19c41819b54b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cafd9647-6c99-43b2-8fa9-e215fa539e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72fec5d7-2902-4574-a7c5-d2ed2b481337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0782ff8-6e73-4d2c-b718-e2b36875e614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cdad08e-4da7-4518-b09d-71831e43a3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac939cb-90e6-4efd-9f07-e0b3543b136a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db2eebc-6be1-4040-a7cb-2ebe93121e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41af16df-fe13-47af-a03b-0cd0ee7e61e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9210d3-b646-47ef-a6af-e3214177b6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a48ddfad-1021-4d32-83ee-21d509ebb5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784b6b39-095b-4129-b859-083e6db27da4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4acf2b6-c5dd-49d2-98bf-ef62361f2b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5486ee25-ea46-4c2e-895d-1c5f5ccdff4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5520ed-418e-4cf4-90c6-48dd1ffbf66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d9783be-b973-4531-bfe8-074d0b7d2c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d295365-36c4-4b18-8998-c6c1c141169c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94935b56-304b-4d22-a7cb-bde3de920b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ccc5c4-8b08-4848-9509-178bd0a4af37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e018f9d0-d50f-45b6-9f11-544a201ecf54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8141a31-ea9d-436b-982f-8bc55b26ec03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9696dc-3a77-4c6b-b8d9-d1625e1b133c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29fc8f1c-64ad-4598-ad2d-0773dd0dfd78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed138ae-0f5e-4e03-97b7-4b90e80cce8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed746f1-3358-41c4-b2e8-4a19082e4c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98e07d74-cfbf-47b5-adac-2ad0121baad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "502833f3-89c5-4de7-a662-63fed3f3ec42",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4067410c-985c-4110-bf96-991a5024493e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "450e46be-e686-4d36-8b57-c0b394253230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a96300-bedd-4a9a-a5ea-4ae9828e6621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18cf03af-ef0a-4f2d-a3a1-254e0f950015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4186de2-b072-4e92-8b18-3b085004de96",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8e2bab-a387-459e-b971-095e205d2d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "372f754e-48a4-477e-aed8-934477817a23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1889b418-305c-413e-9c4d-5a2c1b0433f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3567785e-9eac-4de1-85ee-fb00b7dba670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f4cb8f-d5f8-4f6c-80c2-f1a56e068ee2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19dd52c2-16ec-4beb-a4f4-db353d1f74a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7d29041-53e0-4cbb-ad42-40abe6effdd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "122e4788-8ef7-41c0-9a58-5d823f2cf875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "449662d6-67ff-4d08-b6cf-3a47dc83fb0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4899faae-f8f3-4b88-8476-41a464a01c4f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "032c04ab-55dc-4004-82c1-7051494f4f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dc06578-936d-4b32-843e-5cf17151f759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0ae0fe-a086-4fa2-bc19-2c4f0bef61a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b5e01bc-bdcd-49ca-beea-be0867f46e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d07254c-cb31-4ed6-a9b8-09a0d38a26b9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9c2656-8d69-44a1-8a42-47838379f7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44997911-1d6c-4044-a7e4-1ce9f9e4d8fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd6bc1a-7b81-40bc-a7ea-8d37af2001b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0209631-4a90-422b-8e3d-4aee941bb4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d765054d-d163-439a-b7b1-68d6c4fcd792",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39372642-bba0-421f-99b2-2b77e285c96e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64ddb7e3-227d-4283-816d-f6035a740b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f8227e-239f-4c6e-b51e-c42aa0bdcdd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "273eeae1-0235-49cd-a135-8260f772fb20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c121bfe-5985-48b3-a676-e55c3c10e17e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5908ec-2f57-4d39-87af-5d7672985da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25e9ff01-b5da-4235-8294-12e9782cfaac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1de5549-90c5-4079-8906-8f13e3fd29ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29eacaa7-04f9-4527-a789-ed4d349505b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4cc389-6725-41b4-b0f9-ba2e8dc25adc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f927d5a-f720-4186-bc92-666dbb2dbdcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf7364a-f8ec-49bc-9eb4-4a58e2a3c68f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8831386a-7883-41c5-b2dd-974cc8649a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "253796f2-bf9b-4d84-be34-47ec770fb5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b952ca3-8c5f-48a0-a482-0cdfdd5d2ac4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10bebf96-4c36-4c88-b3a5-703adffb4e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6e0176d-9075-4dc2-b603-8f4903ef793c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d485a7b5-9d43-4c5a-966c-983c4332e5db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de80d931-723b-416f-bf9c-0201507b79a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7fd8c81-473a-4fec-8947-0113960c0dfb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80527a15-9289-4047-bae3-35cc64b14f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e8ee443-8af6-44f6-a4e8-3659b3a0a101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69230558-f314-4871-b718-7120084f3556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cac1e626-6ae8-488d-b4ea-581e5242115c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44d25a1-49cd-420e-95ad-f10224e6417c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faac8252-1104-4ac8-8cb3-dea7808ce898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee7fcd1-af17-4eaa-8b14-f77e6177badf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3591c3-b9b2-4129-818a-54bfdf87346f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e17ca7a-2331-4f65-9abc-66298c920ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fed3285-9382-44b6-84f3-4158784998d8",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18593569-cc6b-4aae-9ae6-756571d6ff10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16fe4c59-b084-46a4-a951-2d66fa0591ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a012499-197e-4914-bab3-c543ef5346bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68bec2b4-9866-47fe-b24b-e381814b6479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21590691-7ea7-4a6d-b428-88439058f039",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31722112-41c6-4c02-a42c-96e3dd7dc4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c123a0c7-8935-4452-bd8c-2633aa548c46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104fbe9f-d95f-47e6-a046-8473fb034d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e108082-1e70-40e0-8c72-535e5059cc73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353df402-53f6-4b03-bd9c-5339bdef2323",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bfc2949-a58d-4904-aa2e-b2f4a11e876b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b035de24-1a0a-4e70-a2a1-469beacc82e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00addc72-7556-44db-bd76-8dc48c2832dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a933148d-8c9c-4a1a-908e-ccd98f027c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1de546d-58f4-4d69-8351-48a64a8af824",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2892a70-24ab-49f1-a319-3bae01c46663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2267cdb7-9ca9-4978-b8bb-a57229eefbec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66afdb5b-5ff7-488a-b50c-6165a16c7c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bc57620-1256-4ca6-b1c9-7fbc324a7b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a500bafc-1f5f-4997-8fab-9319a6e6bf5b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a226e9-0a5a-4625-9e6e-436ad861cf17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "007a7b21-5be9-4fc8-83c8-e75128f9326f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dbb4918-cf17-4a3c-9e78-439d7c1b7b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68c8b4cb-5802-4545-9437-26b3646554f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc2e13b-48f4-4c75-ae65-bddf4aab582b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f6142c-af5c-4d5c-83ac-878c3b9e5d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "688e1dac-346c-492e-88a8-e132ea2e7ba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c0033e-38e0-4114-aaa3-68d081795236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3465723-cea5-43f1-b106-a0c3882e9866"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c8f7a943-21df-41eb-b089-2297e805353a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3846d700-7953-45ec-8047-0e2fe87b1e33",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7711827c-e03d-41cc-8693-c278f9eda44e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3dc00235-07d0-4290-8251-9c6e3c194755"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18fed246-334d-4900-a4f0-0da67d4ebc8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6de7639f-fd29-4938-a994-b331f17084a8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "afba14da-de5c-432b-af60-25f613ab9f20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b871da85-f127-4e15-a4e2-eef412401576"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "44d130bd-7bd3-4c55-810e-3e5ab57a7265",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ffba0755-937a-4b31-8e32-60613540cb83"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7117b2e6-80a3-4d44-a085-c9a1f177ac96",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bcc6f324-30b1-41d2-b641-58815e0ee042"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a88ad03d-9aa4-466c-b7fa-6e9a83e49b4f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "06eaa5ef-f316-4e25-86f4-72c96612ce87"
            }
          }
        ]
      },
      {
        "id": "ceadc876-87c7-4a80-bd41-549241df4911",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6ff479cd-ba8b-4f6e-b226-a45700115d22",
            "name": "Negative Testing",
            "item": [
              {
                "id": "86a587f7-e358-4c3e-bc4b-36c63ce600f4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c9b185df-7791-4b49-86b9-47de15985f38",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6fc0bd-fcd0-4537-8c30-381f9313e0dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c99f861-a0ef-4e49-869e-038de99d1884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c6d8945-c37a-459c-8384-7748bcfe01fe",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "713c6253-2324-4d5e-8f6f-731220fede05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0046e7a7-5e49-450b-a7fe-7c5da744391a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed515b7-5b0b-41b0-bbfa-8fa37615a276",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4535a3-98d1-4113-bbe3-10eed8e85849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cc6f743-2bdc-4b26-891c-5ff7fb0d811d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ad2b53-aa17-4f09-994f-8f1ebcdb1b4b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5f3319-9b89-4a92-9be6-44d10c50eca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9478e046-b5d0-49db-941e-79123ac505b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bdf5441-729e-4ed8-a5b6-2b7cc91670c5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af5f67ad-be9f-47bb-8021-85b59ee9df65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d8519ee-1484-400a-b11c-78065b1a64ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48279045-f2ca-4a2f-95b9-bcdba7177ae8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "054334bc-ed4a-454d-9482-69626e6e96cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb8ae2fb-4258-43e6-8acf-f846a8c089c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1eedf52-5ce4-47a9-87a8-3a39ac2048ac",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ee9d98-2190-4cbd-a4e5-c584cd29bd8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbcf31b5-0c78-4f08-8654-218b32f72176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00bde25-de4b-441d-a9f6-4d492348c363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af761902-cde3-4215-95aa-c49318a592ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a5661a-1bd7-4c6f-a2ae-7c73d6591cf5",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7501b30-1f0d-40f0-80bd-e72692289a5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de6c4f11-7c64-4059-89f0-4d936f4cc4c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd43b016-c91d-4131-866b-3da3ae3d1884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01a930da-8510-43b5-9dc2-08bd335008e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af409155-ddd4-4b3a-85cc-ef60dfdf4068",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c455963b-1f94-46a4-86fd-cfc3d5454665",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f309acc1-afb6-4347-8e14-cfea04432b5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14c4658-118c-447e-a441-9e85d029bcef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "162c3119-5843-41b3-9781-a2ed39f8b7cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86df70a7-5609-4a36-8ee0-9796cbd2875a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c6e754-e72c-491a-ab7a-b109623f48b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42bb8c93-2b88-4969-a7bf-a93471e215c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "849caf33-f054-4d97-9297-4e0ffb4f75de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c866de36-2872-4995-bb7b-5a0e5dd9bd7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c677bf6-ac63-4d52-9306-0c663e92a2f1",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c129d923-6f72-436c-8db0-a6ab7be20c90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58ad9da4-6f2b-4476-8bc7-17e517b2f416"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "780194b6-752d-485a-8429-01c4a3490e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47664121-6549-4489-9295-894223053bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a0877a-8ff8-48dc-937a-d1e7e4fcb337",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895df1b2-903f-4a0f-8c79-2f4e1974e0bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e8da0ef-b7fb-43a5-98c9-75620f0bebf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cad036d-2633-4ba5-86dc-0f9fc67760ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d1188f-f62f-4ac6-a723-f3867a245ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d97e6b6-1a48-4af1-a366-3bdcb9f0c2b0",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9b8cf8-a8d0-4ddf-ab26-7110484f6a5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6e9afca-5780-489c-9b8f-4cf1830de757"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "002f3f37-c84a-4eb5-be72-867a213684fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c23c63b6-5655-4607-85b0-96d720eada01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd3fa5a-de21-441e-87bd-7e511f9bb9f8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24750283-c7fc-4ba0-b531-abf8853a3009",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4a21f79-f56a-439b-b200-562ceec19871"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82282372-6f7e-4518-958f-eb2075ca6610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fc40d4d-9ee5-485b-b7c2-8fdaa4380875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8942d9-3a45-45ff-99c4-247bf614ad00",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de8e1bc5-1381-4546-b908-9a89e3af4ce9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0b2055c-0553-4497-b14c-c0b720c69462"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2064054-7384-42fe-98c5-885aab74ed46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dff538cb-f320-483b-9e59-ae995e065dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe60c58-f77b-4e31-b839-b5cfc9971d86",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4480c8e7-b9bc-4821-a9bd-6785b1b531b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcc042b1-813e-4e7a-9b82-26de11598285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0923fe75-bf04-45b3-84ef-110434a3dc61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f36f6efe-e1c4-4974-9ab5-b2c8b7e7c86f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8cbd7b-cec1-4676-8a63-6f7e0e780a35",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65fdcc08-46d6-4eea-906e-dbbdb23a58cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c25e9de-cb94-4785-a708-f34631844c65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6a12d3-2a5d-4b8d-89a3-f4498641b0e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4a77aee-05e7-4299-84b1-fdf2e21dd781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4b5af9-00a1-4279-9616-f59b5954c64c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7eb6bb5-54db-46e4-91f7-b8bae0ba92da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e6e492-cd54-440e-977b-b1f6833cfcd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da47e99-e4fc-414a-927f-2bf5235b3dd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1ab96b1-c5db-4d4f-8fa4-70a24a2d95bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9010cd3-fb70-4487-b7a4-c20c68adfd17",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45dbda0-f0e5-4609-bbc8-c2da0cd8d20d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "233049a2-6852-49db-bf14-b6bd5484df26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a68d06-2de3-429a-8803-8f97eb126e1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10529cf0-524c-4d58-9c91-82eb44cd5e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1fee9de-00e4-4de4-830a-2dc414a46973",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5eaa34-12cd-4136-a17d-7af99320237e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e62b0ab-7e9f-4a5b-a67c-1c1a4c06a140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e892802-598d-492f-a9f3-0e6cb954be84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5e99bef-05ce-48f6-98d7-833ec9e014d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa98d15-6d07-4b37-9254-3a0d730603f2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c087d6bc-9bd4-4159-8a6c-1f530506a16c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40f618b4-dcff-49e2-a0b1-bf76c6249940"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2212861b-362f-4e84-95a2-31601b0e316f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b0120f9-b3ad-4287-bda9-c9a533a61931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac6ef7c-80c5-42a0-ad8c-2e85701584e8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b18be9f-e406-4e64-b42a-1d6ab7a6120d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b4128ff-49b3-4eaa-ada5-58b1ed35f430"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f35fb6-8697-43b3-8c39-a1b272e8fa1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea07b79b-a358-4175-9f35-4957462e5127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6386d510-32ae-4535-b03e-ce6ea5c64740",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f88282e-d1eb-41c2-ac3e-4ab361a57987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f25dfe-83fa-46aa-a63f-290ac399811c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eae3544-e0ee-46dd-bbc3-724ab6b1e980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2c62400-0d59-4481-856b-7215de1596ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49c4aa2-056a-4659-86c6-fb65f4333e15",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e45a4e2-d160-4eea-8104-f10f89183af1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9098519d-2bce-4067-a31f-50290d7793c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75483929-95f5-457f-8e81-590df8f7cc24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11f8b94b-4ba0-47df-8c40-869d27beef3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b3a754-051f-4641-b69f-9dd925ac0eb7",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aefaaa9b-349f-4ec7-ae13-1bf3cdc7b155",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9745b809-e933-4607-b5c5-573f6c85871e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed97985-d2ef-4b4d-858f-c334f46bca0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "289ff369-dab8-4d05-af32-bba9fef2c1cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3571a891-cb8e-4c1a-bbcf-65fd9d7f11e0",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516a1631-412d-411e-b8db-8a5ff6f871e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd82e8df-abae-4fbb-adfd-b5977f361b57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec160b7-d268-4f75-b5f7-98476e68d6d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8a120f9-a4dd-440f-a4cd-3a46821a14b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68023c45-7b12-4789-83fb-cdeda8edbeff",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd87309-3146-4159-ba37-70dbda09763e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc6457fc-b98a-4402-b290-4d6ae619c340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74cad76-dcbe-430b-9e9f-b5a8627b97f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35bdd5d3-4962-42cb-8d0a-e256f4486c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87643953-e04e-4894-89bd-3565595350c4",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9c0a60-32ac-4402-aea0-0df731d3f999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09818b6d-db22-4366-8d52-e2b6090c4aaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "003e8275-0826-4a19-9d7d-1119654bd9ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fd58553-a3ed-4ad4-bcb9-b44ea68f9d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f7772a-5857-489e-a4be-f33d725c9574",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972db25d-c5df-4d7d-be2c-917c09bc56d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c84c0485-04c3-4ddb-8e6f-d771b2f06991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25aa70dd-4808-47ea-b08d-34879a217220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67f05187-0e2a-4268-bb16-2dac1c72c1ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deaa6c8b-18cf-447b-b19c-551d4838f010",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09103e6-60d9-4155-905f-3931d9000bac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65b48303-db59-4400-9381-023006b104e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0128998-761e-479a-91a2-256ac217b7da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a04cf50-4978-4ef4-9758-f681c8295a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c41e687-48d9-408f-afd5-1a685b09ca9f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb9fa44-ab57-48ca-899d-2f81dddc6d12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "046654dc-9b7c-496c-b024-7063d285ecce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d827e9b4-97c7-403e-9e56-6c6fae316d22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc54a02e-b962-4ea0-8d87-e4283e11c3f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f93f37a-0c3e-4f73-b939-a92873bbf52d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580a2432-c6fe-49ab-8ae6-220d2d219161",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e9e8ea1-c8ab-4f36-ab99-c43fea60cab9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad474083-cea0-4cfe-afc7-64d2dc8c730a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25d8ecc0-ac66-4b57-ba40-a27d995df746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b433708d-5ccf-44cc-a354-52550968e258",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5bf0238-68c4-4c4b-b43a-28291f7efc07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29cb1f30-0346-4d85-b310-99815dd950c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c289edb8-5a00-4b00-845a-138335380a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c51b1bf2-0610-48d4-9b27-c7f66697970a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa85fd2b-1bd3-4bf8-8d16-dd8dc8db65b7",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21551e43-7a89-4592-8231-cac6969e1434",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6180e940-9ffe-49b7-a636-919f17d42d1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7717929-5d90-4402-ade8-42c24ed263e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4139f375-3206-495f-ad18-59fbc6528bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e95f92-79c0-40c1-b08b-f2b5f8239d5b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf2c938-ca53-4b81-b29d-f164cba9cc26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09ae9311-476a-497f-bbdb-f6f04edb454c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "734e63cc-52c7-4791-a3b4-7d8bf3f8a8ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7af11e56-0c23-4708-9d35-0233b8c8fa31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "405ccf27-7a9b-4753-9ff4-4176182f9190",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0956dfb5-317e-4153-b36f-9268d40e8f07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77e88e97-bc22-48e9-bf7e-9963a1169ff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5a3a25-7167-4367-9490-e26224f5353c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e660c3-5e44-4a84-b7b5-6ce1f235fe3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2abee15c-bf76-4b53-9531-233f3ea2a21f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6aece6-c59f-4d93-9f47-49e44dc299c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feadbba5-324a-4008-8158-b33a148f7612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f76ecf7-7c70-447a-9608-848f30c6bcbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cad0675-d40b-4f1d-96d1-fff4085360e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f752bcf-e9c6-40ef-b60f-6a6b6c27a895",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b4312d-74fa-4038-8dc4-416337f53b4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fe76901-ceb0-4861-a868-964685f2af3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af5a60f0-44dd-415b-b004-a00126aab39d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8f88eb6-8aff-4ee0-afa8-df97ee1d9a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3234e0-ed95-4222-b3d1-e08dd025fb2d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4487c4c3-be4c-41f5-92f6-0e6a5c820ccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebb87c93-16f8-44bf-8d17-cf2e0d5e11db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e9d927-d59a-47ff-a0f3-dd84b0d248e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3425f801-b58a-48aa-953c-b48eda1e7b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4828d54-4013-486a-bbf8-7b0236a0b81f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2112e475-3aab-41c1-a44c-4ac518864550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71c362cf-60d6-4ed4-a046-47d93106acf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef781e0-19c8-4630-87af-6fe213af12bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5ad3307-853c-4a9e-8073-136ce0530fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dcfe6d1-5e18-43b0-a5d1-bf04fec3cdee",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e8b6e0a-b4a1-45eb-b507-c247b44f55d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c573bd98-ed0a-48a8-806c-f87cf3fd1bd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f74c7fb-7ffd-4e81-bd83-daa3befb69fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f1473a7-d048-4937-b2f5-a3cb467b0b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da10d6c0-9907-4985-b73f-00c9fcbaa5a9",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa160694-0978-4d03-ae8a-6c1b61e4e500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f273ed1-4f64-4b41-85b6-8781f81ce1aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "138d75c5-347e-4a97-a256-f289897b3859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18433ad3-0558-40cc-9c75-1c544660543e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd1f95a-8154-47de-a899-92844f0365ef",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c99804e-f414-4069-9f47-818feca7646e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f6bd9b-8455-4642-a081-74e14c6cc96d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b131b88b-afc4-4489-97eb-4e7140cc4b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92c809c9-6ec5-4a79-841a-ce4c9a27be87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224a3073-a3d1-4174-b5ae-480ec2d26642",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc14ac2-a71b-4421-9de0-efe1ac1ddaa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eefc7fc3-dbf1-4981-b001-21e4d694512f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "575a437f-1019-4c5f-a548-25edb4cd2327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a4352a9-fb7f-471a-a194-2172e4741db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a14dd70-73e4-463b-86ed-c00b663198f8",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7bf19ed-4692-4b7a-ae6c-821357543f3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65082265-2dfc-4dec-9061-6dea574b8b92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd2a91f-d419-47d6-bde6-7432f6609cbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4196b51-6eb2-41f3-851d-0fa18f449a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc1d64e-814e-4dfe-9df2-0cb162f6e820",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510a2ee4-7563-4582-9345-aa79b8601e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9af549cb-5a16-485c-954c-0d1b408a8775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1580f1-13d7-4766-a661-d13cfadb590f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6206b218-94a5-48b3-bdc7-ace3015cd390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f92d93-8d95-46af-9040-f23c6ea5a5aa",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be79e2e-abec-435e-9563-e89da8ae3364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34793d35-4cfc-4c37-9581-8cefebd148d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc3797b-e1d4-4642-b5fa-36d71b9e05ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4339f3c-1695-49b4-8faa-21ebb10e3798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c20630c-e7b7-41d2-9c74-9ced82bfe8d7",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d2e8af-8087-47fa-8af2-cefd1c031c20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eef66f23-7d73-492a-bf59-b6bd585aeae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ed49b2-59a9-4551-a17b-9e7901c70e68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "293dbaf4-72e3-4215-9fea-6df17532cf8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74147d4-ca81-471c-ad76-ebc90bb17518",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25637351-ac5a-471b-81c0-a7dac4781cd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "775ee70f-72b6-4554-a73e-694b41dea42f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6475e5b-4490-48e3-a9c7-77232088e285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "710d54b5-b32c-4295-bf16-139f7e4737de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0ac04e-1ad9-476e-a8f0-ca07427c4074",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2690c292-7cf4-4240-a64e-17bdff203677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b41984d-252e-41e1-ad8d-f6c4f7417866"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8b4b69-5961-4a1b-8b77-a97b8be611bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5b03621-34c3-4424-8432-684110e1e2d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d398dc8c-b164-4cd1-93ed-48cd4e955070",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a900aed-6795-4819-8453-9643a179b1d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d63b4ab0-c705-4908-bdfe-0dfe50d59bcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db004574-c85f-4bb6-b62e-612715947b96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a8bcd98-16ab-4b1a-a8d7-861011f756f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f3bca52-3582-4a44-bcec-8a7c931af1f7",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46465592-6feb-45b0-b0ca-550982f5951a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e93db58-ca25-4020-bda0-d4567d6feacf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb31cac1-928a-428d-89af-cec4f283f480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03671001-6874-4d8e-a7a8-5b5e55e55dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421814b4-d084-4202-bc4b-0e385d4058a9",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d45795e7-9c54-4f33-847a-c4582e3c7050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9e65789-b02d-41ef-a91d-38f66b67bd26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce107dea-29a3-4648-ae6d-fa8d8d5c262d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd51558b-ec76-4b0e-833b-385abfa81b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3dba6d6-7ba0-48fa-a6a6-611ff41f874c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b17d43-2999-47b3-bedf-70611cfbe8a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1d6bd92-f36b-4d50-857b-63565b9cfcbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "240e4f0b-4632-4adf-9cb6-2b7b38c8acd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "163cdfb2-2349-4075-9d44-fdd1d939f1f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f362db29-634d-46ae-aedc-fc4881ac1199",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463eb6f9-16c8-4709-82cf-eb499c2f973b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21dcc034-194d-4d1d-bf91-86b5c1690407"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "008925f4-d4ad-46e8-98fd-d26c907e707c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43fb15dc-45a0-475a-800b-660450dba504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9761a507-3cd1-473d-a729-42869e8b832e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a4dc23-332b-402f-8f52-381ae6657df0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81033d9d-b40e-4ea0-8919-8dd7895ac3b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d40ef7-48c9-4e9f-a57a-8f030453152d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68eec341-5720-4ab6-96be-c2aba29c7f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2e7b56-3b8d-4369-9ef0-db47df29b7cd",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79db4a18-fce8-44b5-a904-650685bccede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40f9e9b8-896e-41f8-b30f-d611c93b430c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b62c1c-c3b7-4872-b6f7-40d9d29d7728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdf9647c-4199-474d-ad22-00b1d05f3976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49f768a-8eb7-4a20-bf79-88f0ec14f90b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6834e9d-3cbc-423c-9052-7bde9990fddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89429eb4-d169-4223-a016-ed8458a4f6a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f72235-0a9a-4718-a917-805a6f4829c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f1184e3-1adc-4bed-93a8-84d7040673fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f607d94-0c6f-4686-9d2e-4d82bfa2f11b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93377eda-7f01-40bd-b64a-08fe5a819b19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42983b5f-2a6d-4c0f-a248-1e4b8ab13c29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9f7910-3b51-4bd2-b71b-4923575c018f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "962968b0-bb16-4bd7-b4e5-4449a4e64e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc3be81-063d-453c-9f27-2c2d50ff10a1",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ebb138a-700c-4113-88a4-3173027c13ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe4d3c92-4212-43b6-a976-c8a95c234afb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "002973da-38d4-4dd2-85fc-fa924411bc64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de06abb-e6fa-4db1-a8c3-bea6e9b6dc1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f260ffe4-1e20-4915-afe3-b04f55cb8c11",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ea9816-7d5c-415d-8a5c-07784cbf8c09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3be17b95-91d5-4d68-83a7-1b020b8e327a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ffe5396-974c-4632-8bc9-d734be2232d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a664a41-e4e6-46fe-848e-ae09dd805070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "987952a7-021d-4c79-9a0f-39abdcf02a0c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f694c8-16cd-4e98-b390-0970798e9593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fe39bfa-9040-42d3-9133-48a789477409"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c755770-da59-46cf-abcd-7dcaef847340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb54d5e-93c4-4504-8953-7c7a0c281ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64310e93-7a35-459b-809a-ee48a6a91a8c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803575b8-401b-43c3-9d95-d384f14891f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a08012-ce40-4619-bb5b-83de1436769a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a686b2-eb80-43bf-97a1-919f9c0ac492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e63b97d3-e0ef-4eaa-b692-ec1c2f901cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c566ec1-bdf4-4e4d-a221-088c02b6e128",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795b6143-67a7-48d8-8f9a-64a038a4a859",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac5bfc2e-fcfd-4dab-82ef-31a4a10ac1f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "209b7b6b-77c4-4c98-8c1b-c12366ad49c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "937bc857-813f-4b9e-9258-ac7724d821be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a247bba-940a-4646-abcc-351ed3e1336d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddeef3ce-387a-4891-b337-bd3482d62e2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e27000af-b470-4407-aebe-8890292cbbef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26c8df6-df63-41d9-ba29-8a14efd0e045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f87577a4-dd2e-41e8-b799-82e335478484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e84104cf-0e1c-4a18-beb1-7600968a3b10",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c1366b-ae11-4a24-bc40-aa190bddf96b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82072bed-8af9-4550-8526-1c14bf2fe744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "747b857a-8328-4bbb-b105-3f8d5ca06e3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3b18ed1-ead4-4e94-9665-bc7015bfa37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba69a37b-ae7e-417a-b25c-f430a8f99842",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d246b3cf-198e-4593-9001-3d7ad7b19ef4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33a2135f-b76e-4a0f-abc5-b9ecc7a7c78f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3cd9c7-d7ff-4b3c-8027-e0ae32a05632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecb199b6-c9b3-4c37-aed6-3c39603fd65b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e77deae1-01e4-412d-b242-eebc14da633a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c04a04b9-a5e0-4d5b-bb69-aa206bc44274",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb97dedc-ade7-4bea-9c12-85e06f7413c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90455021-5dd1-4ad7-9c50-127ebc9d46a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2b5cfae-73f6-44ca-8267-7f450ef792f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df026bb3-a088-46f3-9f18-a651d686f8c3",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a2f4c0-0124-4b75-964b-37e62fd05996",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc1afb39-5b1c-4c89-9da0-26b15dc73dfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbea5a08-1e96-45b2-b951-a1fb48297ec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3dca9d8-2017-4d00-a35c-1d8e861238c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400e7f16-bf3b-4ac1-99c7-ce5d40c936e4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ec7280-1c8a-4216-a0ec-eb02450b8f97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c38c80d5-d61a-4551-b0b0-975042871fc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66497e97-4b4b-47ff-9b9a-8f0c1db338a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c57ea733-41c8-474b-ba76-feb126935677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338d6bd1-a8cb-4b0c-8555-f13fbc5b0536",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6868fb89-65ea-41e2-ad50-8285cd7ac17b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71b6a143-7486-4b72-a5ef-825570f29d38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "543ca835-ff5f-4575-bc68-99151286a44d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5a4b8ac-4ec7-43cd-8725-1dc8361a3f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e16791-3633-4565-ba25-fc1811ee35ee",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6510e91d-0278-4c11-9830-84223e8e7c5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8367cc77-4b34-4074-a8c2-3a5f122036fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1465b2-213f-48cd-a4fa-4e1cd68ba163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7042b44-fb83-4569-a63c-7217cf9fb9c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0f34e9-6fe7-4014-8972-220369f0442d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9decb079-c685-48bb-ab69-6c8e863571d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ac62268-861a-4530-8799-7df796e7c301"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed312b0-b7de-456e-bf95-4a3980944768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0003db1-629c-41a5-9925-aae4c33f6e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d787bb2-f1be-432a-b67d-4e4bd0dd4aea",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444dc66a-e834-48b3-8c59-2acb609afd96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff1ae66c-3e78-4204-ad90-e4f85508007a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4051589c-07fb-40e8-8364-dff3822ba3cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf34cdcc-fac1-4025-b5bb-d74a86804aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a51ab08-32f4-49ff-bae1-c333b4eaf2c0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3ef714-10a9-49c6-8c2b-1e52f0d2d1dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bff6149-05ab-4cda-81fe-a6c69ab2c83c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b54e819d-15ee-49a6-8b39-1055f28cbb0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27a83b79-2b90-440b-bc0e-022339f291d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee83301-7570-4e60-ad5d-f4e41671c54b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4825846-16a1-443d-9044-4c6e29673245",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c836321c-a591-44cb-b2e3-e3aa36d1d359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b092455-fc08-4111-af53-09837bca28af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c08066dc-64f5-4ef6-b697-67f3bba124b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cd5ffd-a791-40dc-af1c-1aadfd6bdd96",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde743dc-399a-4852-97b9-5c761b764ea2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c01e46f-4d8d-4a59-b457-c08ab1227064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a31b4bc9-4473-4d13-b585-725152aeed3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e3c72d7-9a75-4e22-8b9b-83073532e2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414a3c37-fa09-4bf6-b236-3bd2a1772d77",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaac91f5-9577-49f1-857c-afdf001d51be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1ae9d05-c87d-452f-9bb7-46a1ad54d22c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca89027-03e8-40f1-a59e-6df4ec29fb65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0831a3fe-097c-4dad-80fa-e839070f7b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c7ab85-66bf-4c4e-9043-0a458bb91571",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864f1e68-9cda-407c-a074-aa43e4b505b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76bd83e7-7b7f-4c41-a918-879e06ca137e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0008c9-56c0-49d8-a2a5-ef31dbf16ed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed3b547b-b29f-4f7f-b393-402858395efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b118f82a-c435-4fee-8839-8649c5747b20",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a8ed6e-ab9f-42e2-b91a-846c087414d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2700fc03-c2ab-4a99-985f-a6c5b0d2d39a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aabfc5f-e111-4113-859f-5071cba077a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b75acc9-3d1f-43c7-8db0-04070caa008d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e22d26b2-96b3-4737-9da0-bd26b069c093",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b536f3-19de-4bd7-8190-21e781f989a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b8dae4c-dd87-4f45-83ce-0dfb8501d406"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74efbcbc-03f0-4af4-9eca-ff959ad9c5f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "192713be-67d2-4859-bb48-c15f2fb69e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc0f50a-1105-4378-8558-8665390bb62c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7843e0d-af72-4146-afd0-0a3926ca6217",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b1b3253-f225-4eee-b11e-5a1e85501fc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "868fb23c-7aad-4e7b-9174-1e8398d0e9c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eae4c66-a598-47b4-968d-a4acde95808f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a8a104-4c99-469e-93d9-357c1449fcce",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8623d4e7-c8f7-4b15-9377-f9cad9559bd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7357f992-4ebc-41dd-b78e-f3112dfc6ebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6c8a22-2586-41c2-80eb-abd55365116c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eb373bb-04f0-4ae0-9541-2d8ac7936248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41242ce-544e-45d5-b05b-ae3acbdb5b00",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a364328-4349-419c-82d6-c320a14f6833",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20a8e4c7-7911-4768-99c9-919cb9010325"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96127500-e8d3-4082-baf2-f6038041bcff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63b84675-6980-472b-978d-fc952404717e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17913c7d-1b20-4a95-8095-ed0a0763aaec",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af0c422a-8592-4b90-8ccc-9d88ab4be4fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36e82f4d-69d2-45bc-a6db-c76da20c6481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb8b57b-7627-4221-8141-b9d9a87a7529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f89485d0-28f3-4a39-a0a1-bb4b5e7b601c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46fcb55-eaae-4295-befb-4b061ed195bd",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9dee31-ff51-4f1a-aef6-5f367cf9235e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f85d9e0-da27-4e0d-8349-13e1f398a9ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6669340-d9fa-4563-a8aa-991f7921a701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97cf60e6-bc9d-4739-8c53-423ba5864792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5667c3a-3ee6-4478-abde-a34365ca5d04",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "067048cf-46c5-4c4d-880a-20ec5b68f487",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b698b68c-2dcc-4cc3-a67c-f1c9b4f05d2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6dbc9e-2a60-40d6-bf31-50b5a7803c43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8d0e5f9-9bad-4e50-893d-e5e5306d8255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15d177e-026b-44fc-baad-68d758fa7e54",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29bd5335-a93c-476c-9dfd-692cb28ba631",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c272ad8-7186-41d1-8572-21f6f9e5ffd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "065514a1-7de8-41fc-82e1-5e564e39a0d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaa33bec-6e6a-4a95-b35c-777e9fbc1e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4520b9-7cd3-485e-a876-357f8ef13775",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9115482c-83a8-42f1-b35d-627526b08fc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "715d80e1-b2d6-4b9a-a369-9d1c418085ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "367d05b7-c003-4fab-ae2f-892ed392316e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef0e1aef-bcce-4ce1-866c-9c799d4c8b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a6fd5d9-b111-47de-b567-dcf3d2b4a285",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66999b0e-1bd5-4f3b-8604-4737389d628f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "405d1053-0d76-4b61-94dc-320763b8fcf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ab7657-0342-49c7-bc52-7bfba0e47919",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a598416e-c297-493a-89ba-cc8b34fa4ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b517d1b-ebd3-4d46-8244-7ca5e60f6558",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e596371c-68f8-445a-937d-72bc1228eed7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ec45857-48f8-4715-9da4-a8b7d6312ee6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a539ae5a-c911-4cc7-a346-392826ef5c96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feb3d04b-d4e1-47a2-982a-86fbf69d34b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff49f0a-b29f-458c-a8d1-317272246489",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5ff1d1-70fa-4d1a-a931-da8fdea3255c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea1d957a-bfd7-47c7-9503-121a5b97db96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5486430-e1f3-416b-b9a8-9a8b9d8d8363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26a970f5-e017-4685-b025-293b87c4d177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156a8012-aae2-4b17-a727-86253821e05a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805116a9-f490-44d1-b958-3b18489f1f66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05a760da-c20b-4fbb-a568-6a3a198994ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8d0115-1e59-4a8d-9274-3f385b3a9cbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "042f1bf2-decb-4247-991a-1d46d873ad7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b402bef7-df70-4f4f-88b8-ceeac7570a39",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c89410-ad1f-4dd2-a603-d54660116b65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7799c8a8-f621-40f2-acd8-ca8dcb7409d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2dbbc80-840c-4a3d-985e-e316d3ec188c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "247156e3-1e96-4cc1-a735-6f6449e6f77b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4177528-5392-4f27-9733-697558b256e3",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d49ed40-9f7a-41e0-8040-4baa98df3a13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5be55e98-81d2-451e-a8f9-188f8f58dd96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22db90f9-b3dd-4f6f-b490-1e75027157fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d623e895-ddad-48dc-bfb3-473673cf8bb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11b8ba1-a30e-49ca-9ba5-877c0b292eae",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786e1239-3bf0-48cd-8cbb-240139848379",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a108641f-f4c9-44da-bf48-a00e6b0d935f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "990088d7-101d-4f51-8913-e10dae773583",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "596f0360-7c44-4be6-8a83-2fe26fc65979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94dc1e3c-fd03-4cb9-b521-48d228fafb63",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d3d00d5-c34e-4d38-a00c-88dcd0555717",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "510d8dc5-1e04-4f14-b1b6-be99b1fd50dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ef444d-4f65-496a-8791-aae9a84da934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e5656a-d8ee-4dc9-852e-147da069d4f0"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0726a21-af3e-4e63-852a-26a4a1803461",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e220b5f-0ec2-431a-a496-80ca00d4cad9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3ed800e-b742-4615-85bf-5c19d74622d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0098daf6-5f42-4f00-b1a8-b9406b99cae0"
                    }
                  }
                ]
              },
              {
                "id": "400837a6-fa4b-44ac-8c0f-15dbee2183c5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "40fafd2f-ac82-4566-8807-0b26c2f9fe8c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc2e248-bd2d-4093-b402-52a35a80cbd8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1e51efab-f0fc-4ccb-a0ba-645f6b58f297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf6733c-b557-4670-85d2-ad37a7df18e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2bece9dc-f4ee-4d13-bde0-d9afd5236a4e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54b99c84-c00f-416b-a008-527e509e3eca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e042ecc5-3d6e-476d-9aee-af63b422d6f9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f490473e-c25f-4238-ba01-b05c48208b81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e0656ca-fce8-4790-8231-b29b7f97e452"
                    }
                  }
                ]
              },
              {
                "id": "f3dddb92-0aea-4031-9dec-89f76678ca78",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "219ea851-860a-40b5-bcb8-4f56b3cd52c1",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc8d21f-fc0d-43f5-94b9-e029b2d4c666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "10b7ee72-c0b9-418d-a636-0422c9b3f54d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e64b7ea-fbb7-4b23-b5b9-81bfe74eed10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d19e039-cc4d-4314-9a83-7dbd588e95c2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5d1476e6-8841-4870-abea-df15addbfbb2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "114d1952-b504-4f8d-a6f6-c77d99a708b3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e7d275a-d798-457f-ab5a-4b50b500c2d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "286c7399-0bdc-4381-be9d-7067b97e4057"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97d848af-d2a1-46ce-98ae-e5ee2324bad8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4354ec1a-54c0-4b59-a8ab-cdf0311d8817"
                    }
                  }
                ]
              },
              {
                "id": "f1ecb882-71cd-4c9c-95d2-bc33b5df21c6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "63ee6b72-c300-47ba-90cf-fff9be3aef3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fa474afd-f467-45cd-9f40-7a66f0c392bc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "246ae9f8-5c6e-4001-9be6-2eb5f553fc73",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7cefedc6-e63e-4657-9bed-efc2fa8d2268"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c66872aa-58b0-4590-bfdc-20586edde6b8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "14a567d9-7659-48d8-ad53-f34770bf84be"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7030f625-5987-413a-b79d-a3a5ccde41b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a1a6772f-d7c7-49bd-a523-1434aa2848b8"
            }
          }
        ]
      },
      {
        "id": "847af86b-007f-46b4-9249-b215c5802c73",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "06df76f3-5937-433c-848d-2f131c6db00e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6d47d68f-8c3e-4ce7-acb3-6802f65fefff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e20544e2-bdb0-4326-a2a6-3b0007127249",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9234d744-0da0-400b-a87f-f4e1daeb232e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ec00e6b0-ae45-4de6-a23e-a68e746d6093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11140e1a-865b-4447-abe6-711181f895af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05b5de68-2105-4490-a589-4a16c238c4c8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d01eb19c-10f1-4bca-b1c5-294fde9c1ebd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d324f646-e6a0-48ef-8faf-4531c2564bd9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c570e2ac-6f71-4523-83c7-b1bb00ddddd8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d7e87a9-dd46-4971-a1e5-98475f240499"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "45b15bec-f73c-495b-a98a-6652cd792ee5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3fdc4bef-4838-4de0-b4a9-948ca6c73c7d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "633b20b6-aca9-4b0b-b90a-1154bab46a36",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "34046ec6-5475-4d36-a17b-22d117043825"
            }
          }
        ]
      },
      {
        "id": "67906216-0178-486b-bb8c-6596e9e69ec3",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ab75d910-b40e-4e03-9f5f-190d0fb0d724",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6b246925-6620-4121-ad86-3ce0bd03ed0d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3d0c41a6-0592-4516-b901-9c189a78de15",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f14197-695b-4a35-a048-2b9485190dae",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0654d80-5faa-42d1-8866-fbd7fad4c8a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35b4e94-5e6b-434a-80a1-1da856cc9d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d500a2a2-447c-440c-9a21-ff9064beae24"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e8d744ed-96b3-4c8f-9c30-8fb8c188ef21",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8418aa10-994e-4f16-a0c3-76df288df007"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "310a7bae-4638-4cfa-974c-7c7791a39744",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9daed3fd-190b-4261-84cb-932fa07e6dd2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9155525e-3950-479a-acc6-9c5d8c2bfcd9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6032d20c-38d4-4cf2-a953-e51e4a5f899b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d2e6c2bf-fb57-49e4-9f17-75caf9bf517f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "962726a5-b20c-4cb4-8de2-40de5f2457eb"
            }
          }
        ]
      },
      {
        "id": "8172d44d-208a-43f6-b1dc-d38ef444abd2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "84f4ea48-007e-463e-86f3-f97a3da85bc5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bc9c0090-144f-4772-ac80-7274fb71e8fd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3f8334c3-7ea9-4618-be16-07e63ff25333",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd18ded-e47b-49bb-93f9-e2bb8e8a826e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "869256bc-c5bb-498f-a863-543cfd93f381"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63711f1-76fc-4d06-b983-9e602c1a7de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0a6dfb8-b9de-4978-bb2a-2c376c48d873"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d69dc42-f7e1-45bc-b79d-caf9f085205f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8293b7f9-9299-4dad-8914-ce32838120ee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "988594bb-057a-4e8b-b9e5-f1b0c2ae37d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d44644f4-eb11-4f24-adc0-2f3595a988cc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "41992104-b23c-4159-87ab-3934e7fa68b1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bddf1160-41d9-4a22-8514-847459a57782"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "70ef8596-e7d6-44ff-8f60-4757d47d6eae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a2ecb704-afd8-430f-95f0-b66b497eba2f"
            }
          }
        ]
      },
      {
        "id": "2479682c-e841-498b-92b6-818bc91556e4",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ae5db8b-3486-4b57-a1ec-e0385da202f6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0b8328b3-f538-4e92-832b-a712b030b526",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1b42b956-39f0-47bc-9fca-5062890abd54",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a90be9eb-b0e8-46df-a8e4-ee44f2add659",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9fab93a0-41c5-490f-9112-62e0e376aa23",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 71.72982456140356,
      "responseMin": 5,
      "responseMax": 371,
      "responseSd": 26.43364393246166,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1708734727663,
      "completed": 1708734757398
    },
    "executions": [
      {
        "id": "a2d5aadf-0a71-4032-80f2-24954f9dd299",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "250331b1-6097-42c7-8e8f-3db8cb0258f0",
          "httpRequestId": "dffce7d7-6cee-4993-913f-da157e3b6dd3"
        },
        "item": {
          "id": "a2d5aadf-0a71-4032-80f2-24954f9dd299",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a4b3c2dc-0bff-42f9-b483-718fbe450bd1",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 0
        }
      },
      {
        "id": "c37ae1b6-31bd-41ed-99fe-7a1e5e34937c",
        "cursor": {
          "ref": "9b26fb7a-fccc-43ea-90b9-4270a1f6c7f5",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "cf4173ff-d294-4322-b6b3-4ca0651d8876"
        },
        "item": {
          "id": "c37ae1b6-31bd-41ed-99fe-7a1e5e34937c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "daeb42d6-a4c6-42ff-9eb8-ef547eccf3cc",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "2244b1e3-edea-474c-baa2-432a05f4b1a7",
        "cursor": {
          "ref": "26302e52-f239-4915-84e6-577a60873785",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "854e836e-0913-4ff2-9f7d-fadd19ba5dc5"
        },
        "item": {
          "id": "2244b1e3-edea-474c-baa2-432a05f4b1a7",
          "name": "did_json"
        },
        "response": {
          "id": "ca71c7b8-87aa-4523-a013-cf7de639a709",
          "status": "OK",
          "code": 200,
          "responseTime": 371,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f3a886-45ab-44fe-8636-e04987f1da4d",
        "cursor": {
          "ref": "d5e3984d-963e-4e78-adcb-5d0aefc89b7c",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "392cf6bb-aa80-4450-80c8-32051990e5a1"
        },
        "item": {
          "id": "d1f3a886-45ab-44fe-8636-e04987f1da4d",
          "name": "did:invalid"
        },
        "response": {
          "id": "3b97c85f-c361-46ec-a0e2-6b8fb957f20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f3a886-45ab-44fe-8636-e04987f1da4d",
        "cursor": {
          "ref": "d5e3984d-963e-4e78-adcb-5d0aefc89b7c",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "392cf6bb-aa80-4450-80c8-32051990e5a1"
        },
        "item": {
          "id": "d1f3a886-45ab-44fe-8636-e04987f1da4d",
          "name": "did:invalid"
        },
        "response": {
          "id": "3b97c85f-c361-46ec-a0e2-6b8fb957f20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "762fde30-c641-4e90-92b7-69ab23effb5d",
        "cursor": {
          "ref": "a6dc2ae8-aafe-48d9-987a-4785ae55d562",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1cc5a189-39de-46a1-a552-6ce7d8ec2d3a"
        },
        "item": {
          "id": "762fde30-c641-4e90-92b7-69ab23effb5d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "24207c8f-81ff-4c71-a69b-4c7d75b9e400",
          "status": "Not Found",
          "code": 404,
          "responseTime": 146,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d8f42d-2c6d-4206-aa5f-d69ad6ad538f",
        "cursor": {
          "ref": "9235675a-26e9-4490-907d-2236bddf0381",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b9b2449c-7a73-42e3-800c-1cd7b85f874e"
        },
        "item": {
          "id": "16d8f42d-2c6d-4206-aa5f-d69ad6ad538f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a6cddb53-0255-49d3-8ea6-bf6bdea96e48",
          "status": "Not Found",
          "code": 404,
          "responseTime": 66,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974bc8e9-ed81-459c-be7d-6b95554fba49",
        "cursor": {
          "ref": "61671ea1-3b1b-4a76-b5a2-254fe57ec0e5",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7365d060-602b-445f-9c2e-adfc822966fe"
        },
        "item": {
          "id": "974bc8e9-ed81-459c-be7d-6b95554fba49",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f63374cc-4472-4ac9-baf2-0ae0b255339b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5060f811-2c77-48fc-b426-bcd27850740d",
        "cursor": {
          "ref": "68ad6aa2-8e6c-4f59-8671-b53168497661",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "cc3071c7-5a7e-484c-b8fb-59e106b1045d"
        },
        "item": {
          "id": "5060f811-2c77-48fc-b426-bcd27850740d",
          "name": "identifiers"
        },
        "response": {
          "id": "42b5ef61-6436-4389-bcb5-7e1b2943b06c",
          "status": "OK",
          "code": 200,
          "responseTime": 124,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10089d41-3788-4e0d-bc8b-9409b6f3d19a",
        "cursor": {
          "ref": "6bb0d12c-16dc-4c46-9ad2-d14a25ccffca",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "dd53c306-be23-4ed3-80ae-b33a9ae2a2cc"
        },
        "item": {
          "id": "10089d41-3788-4e0d-bc8b-9409b6f3d19a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bbf61daf-9891-463b-944e-768f3b5e8a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8e20a0-4e4f-446f-84bf-38e02f739fcd",
        "cursor": {
          "ref": "f7445b9e-a43c-4cf9-8d14-f32062bb13e4",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3c05fdfb-2571-4870-a113-ceb7b405ac15"
        },
        "item": {
          "id": "bc8e20a0-4e4f-446f-84bf-38e02f739fcd",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "40ba5330-7203-4a3d-9d80-0af558a0da8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c10802f-6ce8-467e-9dbe-4d549196e38d",
        "cursor": {
          "ref": "b5bc0ee3-6807-4c1b-ab47-0e33efcf07d3",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "999bf840-af8b-4183-b367-3841c2b58219"
        },
        "item": {
          "id": "4c10802f-6ce8-467e-9dbe-4d549196e38d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "82a83728-d0ab-4411-b633-910443a092a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c92725e-1a9b-4e09-8562-2be67588b7f3",
        "cursor": {
          "ref": "438ad3d2-52a5-4680-be38-fa90403ce101",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "51e07df9-3d01-4303-98bb-724d1d2d1acd"
        },
        "item": {
          "id": "8c92725e-1a9b-4e09-8562-2be67588b7f3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "11a6bd79-4573-4b54-b693-fbd2a2bf4b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3182f1e1-9b72-4b37-b5e8-89cc5f5e972e",
        "cursor": {
          "ref": "042ae1c1-8837-4489-b1d4-a7154a30af8f",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "57eed789-1f04-4894-a402-fee83ab5e62f"
        },
        "item": {
          "id": "3182f1e1-9b72-4b37-b5e8-89cc5f5e972e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b046367a-ff69-4f1c-82ed-d8a904038d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a1f777-23de-4845-b3bc-c9ff48a4de02",
        "cursor": {
          "ref": "2af65cfd-9915-41a6-8f18-d6f7efa71d3b",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ac19c8f9-a33b-4631-90d3-fd4b2331272d"
        },
        "item": {
          "id": "30a1f777-23de-4845-b3bc-c9ff48a4de02",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "79850265-af1c-4678-a189-e579d64151d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ddaeb2-d1ba-4f6c-80ab-df94c21eb4ea",
        "cursor": {
          "ref": "4bf3957a-e44b-4278-acb9-4fa6ea007db6",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "dcf233bb-1a5d-4fa9-8638-1938016d2e03"
        },
        "item": {
          "id": "48ddaeb2-d1ba-4f6c-80ab-df94c21eb4ea",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "501a4aaa-16c3-49be-914d-c363960f7379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e532b3-4d5e-49fd-867c-a0acaa09312e",
        "cursor": {
          "ref": "5f5500e3-3aad-4a5e-b3ab-e598c2a15fed",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "44c82e6f-cf64-42e7-875f-67237d2c9e12"
        },
        "item": {
          "id": "d3e532b3-4d5e-49fd-867c-a0acaa09312e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "cee0469b-a6b3-4825-bd7b-542205f07311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1dbb3cd-529e-4d27-b871-b7e3e6bc8c13",
        "cursor": {
          "ref": "6df9eed2-4c71-40c2-a787-b7d0339affea",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "bc5bd9e7-14c7-4e87-879e-4ae8480e784e"
        },
        "item": {
          "id": "f1dbb3cd-529e-4d27-b871-b7e3e6bc8c13",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7f967009-d848-4d0f-81f4-28b69bfe070e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c983762e-e45b-463b-a33a-35d0dd963b7d",
        "cursor": {
          "ref": "42811b52-b841-4d49-a4e4-02306d8dc3d3",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ec53d4df-d3b6-4f23-a61a-b8c1f33730fa"
        },
        "item": {
          "id": "c983762e-e45b-463b-a33a-35d0dd963b7d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3f34ab1c-305f-41ca-82f4-7b97370ee8b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f758a4c-f9fb-4065-a45a-4a9e950ea748",
        "cursor": {
          "ref": "64f7fd8f-8bca-49ef-802f-b7f9ebf237a6",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "90db243c-0d73-492e-a954-3193cddc038c"
        },
        "item": {
          "id": "1f758a4c-f9fb-4065-a45a-4a9e950ea748",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "be46d645-5066-4efa-b129-358fd63468b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770de693-71ff-4286-8363-932c5f15e20a",
        "cursor": {
          "ref": "b979261c-9a16-4928-b8ff-1fd0bd4e161f",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b2abd4a6-d5b7-4cc2-97e5-912a3a314036"
        },
        "item": {
          "id": "770de693-71ff-4286-8363-932c5f15e20a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d3afe137-732f-4baa-8e13-af59cc3f462a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c815ce12-4dda-48b8-910b-d104aa6ed33a",
        "cursor": {
          "ref": "ae24d2a5-b123-4439-bb63-8642243de064",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a14acdd7-ade7-4291-8779-d8c72e608a57"
        },
        "item": {
          "id": "c815ce12-4dda-48b8-910b-d104aa6ed33a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f9ef8080-af3e-4724-8e18-73fdbf8d1ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3294bdf-aba0-4860-a9a5-c5e6155bbf5c",
        "cursor": {
          "ref": "d9d6fdc6-1f10-4f26-a900-5227220f152b",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "47904c86-5244-400f-8d53-1577873a757f"
        },
        "item": {
          "id": "c3294bdf-aba0-4860-a9a5-c5e6155bbf5c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8bcaafe8-cb2d-46d0-a875-33fb90adaaac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f094084d-3130-487a-a0a5-786fa63d4cff",
        "cursor": {
          "ref": "086be804-85f0-4f71-89fd-422ec5132218",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a31c43f2-48de-49c3-8b1f-e3535cd368c8"
        },
        "item": {
          "id": "f094084d-3130-487a-a0a5-786fa63d4cff",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9744ae34-8a0b-435f-87f0-049dc271793f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75589081-7e4d-40ca-88fa-d51cfa2648c0",
        "cursor": {
          "ref": "25901601-3931-4f99-b768-dbed6b8fd93b",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "90dbfa7b-f806-4ac6-aaa8-2b71fb945b2c"
        },
        "item": {
          "id": "75589081-7e4d-40ca-88fa-d51cfa2648c0",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "19200c57-7ce9-4f0d-89e3-8dcd3d768d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bbe6e43-51dc-46a0-8820-b8eecc80d277",
        "cursor": {
          "ref": "362d5881-b7b4-4e54-a9eb-d381fcaa6b7c",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "378b78b5-d8f6-4956-910f-5169c170ff72"
        },
        "item": {
          "id": "0bbe6e43-51dc-46a0-8820-b8eecc80d277",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b409426c-9a1c-4590-80d5-85c12925e9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27fd5d43-d056-495e-82ad-0d2d5830e562",
        "cursor": {
          "ref": "dd7b3399-03c7-4122-b270-b752c392eaac",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "df03a7bc-2377-472f-a448-db9fc2bdb337"
        },
        "item": {
          "id": "27fd5d43-d056-495e-82ad-0d2d5830e562",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "10360cf4-f30a-4273-95a8-4ae95235ec4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e09c1b-17d9-4d6e-94c3-07d9c9b55860",
        "cursor": {
          "ref": "256329c4-1a4a-4c30-9acc-3e944707b2dc",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "09bec432-ac8d-4e37-a7c4-0bba41129741"
        },
        "item": {
          "id": "41e09c1b-17d9-4d6e-94c3-07d9c9b55860",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ab9c6b03-9c75-4293-acea-4f7385ad6f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2169717f-92f0-426e-a004-29a6fc9de7f2",
        "cursor": {
          "ref": "cb462614-f735-45ad-9bd4-18d0792aabf4",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "15f8af01-f9f7-4971-af60-4bb55ec2eeea"
        },
        "item": {
          "id": "2169717f-92f0-426e-a004-29a6fc9de7f2",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "dc70be57-7efb-44a9-ab50-c1dea2162661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125031f4-946f-46a0-872e-1622ece251e1",
        "cursor": {
          "ref": "5d4b0771-a9f8-4108-9c31-57876c4a3183",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9fda2cca-9c1c-4b51-9310-7a2ae0060c15"
        },
        "item": {
          "id": "125031f4-946f-46a0-872e-1622ece251e1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3941f12c-34d1-414c-8e51-3d0e498a6cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6064050f-3732-4985-9495-804ea4dfeca7",
        "cursor": {
          "ref": "a4a89ca8-44bb-4c7e-b222-27e124719ed1",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d939308e-ecf6-4d5a-91df-30a3cbada085"
        },
        "item": {
          "id": "6064050f-3732-4985-9495-804ea4dfeca7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "58ebf929-0eac-4625-8637-9004390e1b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70ee44c-2fac-4e52-9723-d27daf2e899d",
        "cursor": {
          "ref": "e75d54c4-08f5-4ad6-90e5-f3049d548705",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ea6158d9-c027-4beb-8814-8e4a5846717d"
        },
        "item": {
          "id": "b70ee44c-2fac-4e52-9723-d27daf2e899d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a08a62b1-4ab2-443f-8cb3-a9cf51017d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac59040-f564-414d-80f4-f51f10048b46",
        "cursor": {
          "ref": "e34043a0-ebd1-4981-bbf1-b85139569ac9",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5e6fc3f5-504f-4806-bfbb-9f8a821054dd"
        },
        "item": {
          "id": "3ac59040-f564-414d-80f4-f51f10048b46",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "95b1e039-d61c-413a-80bc-0e26c0101e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9db719-1422-4bd5-b55f-c4525a1dadb8",
        "cursor": {
          "ref": "ed39e7dc-aa4c-4ae7-9f6a-eaa9e92f5fb4",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2aecfea3-a1d1-42e3-ae11-628e5f023c97"
        },
        "item": {
          "id": "8a9db719-1422-4bd5-b55f-c4525a1dadb8",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ae2e4244-84b7-4fe4-b056-bb7a4ae45309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885e9e67-d14c-4361-a935-a3a4ba59f22b",
        "cursor": {
          "ref": "02ccd417-9863-48c2-a34d-c9ec541e1b19",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a9e398d1-be37-4cd3-80d6-dfa30a2927d9"
        },
        "item": {
          "id": "885e9e67-d14c-4361-a935-a3a4ba59f22b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d4c63647-ebb6-4a56-9561-ddb6bb6eaee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29585cd0-7290-4dc2-a4e2-c6713d826753",
        "cursor": {
          "ref": "3d74cadf-12e0-444b-a326-dbd4c98891c8",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "07015f11-defb-474d-8307-a1cb7f4e3527"
        },
        "item": {
          "id": "29585cd0-7290-4dc2-a4e2-c6713d826753",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "313be1c0-23bc-4f3a-9a9b-4b5c17559e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3525b4-8e5d-4fe1-a846-de068ce0164f",
        "cursor": {
          "ref": "4b13463c-3dec-4f91-80de-7bc3519b96ac",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "96737ae7-a9d8-483c-8859-085e2cf1702d"
        },
        "item": {
          "id": "6d3525b4-8e5d-4fe1-a846-de068ce0164f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ea849be8-0fd5-4386-b4c4-f050386ecee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5bf0726-1f35-4417-96ad-ac35886bc73c",
        "cursor": {
          "ref": "f855906f-17d3-4aad-9502-54bbda711451",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5b4d66cb-4747-4f38-81de-c39bde0d2494"
        },
        "item": {
          "id": "f5bf0726-1f35-4417-96ad-ac35886bc73c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "91cc8c72-074b-4249-ba0c-2adf0b58bf96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b25946-1117-4455-850f-46b328369b38",
        "cursor": {
          "ref": "575d1991-14b2-4a75-bfd3-61a16e942b94",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "265a7f48-fc1d-484e-968f-6b5f982d6e19"
        },
        "item": {
          "id": "e9b25946-1117-4455-850f-46b328369b38",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9a327969-b173-48d2-a686-f101d7e74c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53093764-c5d4-4ce1-81cf-e6b69e7f7b85",
        "cursor": {
          "ref": "f1f4f2e5-8139-4a7c-b79c-71aa01ae3963",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "db0bed14-240b-43b9-a720-e42007a0f20b"
        },
        "item": {
          "id": "53093764-c5d4-4ce1-81cf-e6b69e7f7b85",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "40e0b4ed-aeb8-4bd7-9e07-67fd4292e17f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a6fefa2-47aa-45f3-943b-6d311fe08166",
        "cursor": {
          "ref": "1620902e-44d1-4041-bec5-5dd659ef8c80",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "cc48f182-3101-4ccf-8b98-a2622133d373"
        },
        "item": {
          "id": "4a6fefa2-47aa-45f3-943b-6d311fe08166",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "cd32d986-07ed-474a-b791-1a3bbf8eeec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e92f4be-fc97-480a-b230-d5a99540609a",
        "cursor": {
          "ref": "2e808156-0e49-42e7-b1ea-b7edaa25bdbd",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0e68caed-3b78-46f1-9a73-0d65b07b0fe1"
        },
        "item": {
          "id": "1e92f4be-fc97-480a-b230-d5a99540609a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c26dec44-c95f-41e3-8c09-d5431fd5d38e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08076c0b-91be-441c-b726-04c0e192ffc4",
        "cursor": {
          "ref": "a45ed97e-1cb0-429b-bc84-6224ffa96639",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7d5ba64c-9a8b-4113-8a88-12c8544a60f7"
        },
        "item": {
          "id": "08076c0b-91be-441c-b726-04c0e192ffc4",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fcf0ab3b-56ce-41fd-8ca1-6736e1f5a1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69000be-5bd5-4b86-af97-c187e1bbd4c3",
        "cursor": {
          "ref": "eff0022a-a496-4fcc-bc3e-f3e41b1a14da",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "60f847c4-f847-42c2-a035-e1d14e716f32"
        },
        "item": {
          "id": "a69000be-5bd5-4b86-af97-c187e1bbd4c3",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e3b2fd3f-a2a3-4dc8-87e6-c782e0e7bf7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f801934b-21a4-40f7-b5e8-ee400fa99705",
        "cursor": {
          "ref": "b96d2a33-6f3b-4fcc-889a-1476598d7510",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a33d3262-9b73-48e4-910c-b2a382c1b492"
        },
        "item": {
          "id": "f801934b-21a4-40f7-b5e8-ee400fa99705",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4c3b1130-1daf-46c9-93a9-c6485ee9723e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 92,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048cbed3-c46e-422e-ab46-bcf992ff988c",
        "cursor": {
          "ref": "b5eb2d69-05d5-4d1c-bf18-47ba26d1cc87",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e832b644-666f-4795-9c97-60f941c8b709"
        },
        "item": {
          "id": "048cbed3-c46e-422e-ab46-bcf992ff988c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1a787fc4-f99b-4cc7-a2ec-58a4059d994b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d4386c-f4ac-43b2-bac8-52f70bdca396",
        "cursor": {
          "ref": "23616be3-7fac-4c36-9061-e546d4335446",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "fe0e13a4-c94e-473e-81b9-c1e1ea087844"
        },
        "item": {
          "id": "99d4386c-f4ac-43b2-bac8-52f70bdca396",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "04639448-3081-44cd-8d46-5ecfc6657b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a534dc52-4f62-4309-a5db-c9b29e95f897",
        "cursor": {
          "ref": "8f556207-ea52-47af-97d4-25ebeab9078b",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8e2a776a-dae5-4eaa-a206-3b58918078a5"
        },
        "item": {
          "id": "a534dc52-4f62-4309-a5db-c9b29e95f897",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "0ffdceb4-60f3-43bf-9a05-710524de5eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f220e3fb-230a-4500-abd6-813002d46579",
        "cursor": {
          "ref": "7fcff524-e0a6-4581-a171-09fa7884149c",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9870e08f-667a-41be-b89b-70ee330cc7ee"
        },
        "item": {
          "id": "f220e3fb-230a-4500-abd6-813002d46579",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5620904d-e7e3-4fb1-8ad5-08701d4133d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671fa4a4-00de-46cb-8d2b-448560cc8adf",
        "cursor": {
          "ref": "7f8ac843-5ebe-4c78-9fcf-0eecdba855e2",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "07f7700b-4959-493f-aff3-1bd0b1f8556f"
        },
        "item": {
          "id": "671fa4a4-00de-46cb-8d2b-448560cc8adf",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "91ba1934-e8ab-4777-810b-09c726832ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1712e4e-991e-460c-81f1-ac4edfc5f799",
        "cursor": {
          "ref": "5644d1d5-9b87-491c-9b22-db611687e88f",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "72f55ba6-e986-4083-9f5a-c6f1d609003d"
        },
        "item": {
          "id": "f1712e4e-991e-460c-81f1-ac4edfc5f799",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "25a063be-8bf2-4156-a646-f5c3d59e49b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0d0610-160e-41b1-9e6e-9ac20990d46b",
        "cursor": {
          "ref": "d4c9f7c9-8701-409e-a16c-ef76a7fd0dc8",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1ad9ad49-192e-479d-87d9-516a67fd0613"
        },
        "item": {
          "id": "fc0d0610-160e-41b1-9e6e-9ac20990d46b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "84572add-0e62-4614-bf51-2cc10a259ca9",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 80,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabb428c-db1d-43d6-95f8-12997650f5b5",
        "cursor": {
          "ref": "e1f5c5d7-70ca-4e4e-811b-379f65d5703b",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4294021a-6042-4c4d-8911-438810ed2e68"
        },
        "item": {
          "id": "aabb428c-db1d-43d6-95f8-12997650f5b5",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6fe682aa-8141-43a9-866f-ff6733c855f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6debf4c-e00c-4601-9e58-77256676b518",
        "cursor": {
          "ref": "0bd3a7ca-a54b-4e37-9c23-98588982f91f",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "724c8b19-cb43-4912-a581-2ee13c85c512"
        },
        "item": {
          "id": "f6debf4c-e00c-4601-9e58-77256676b518",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "54ff1aab-2c3e-45a1-9902-9a9883869598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ddeaaef-4ead-4c93-9c90-e4222207b450",
        "cursor": {
          "ref": "e1c6a6dd-95eb-4f89-adfc-e494dae9a7b6",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "07c0988c-24c4-44e2-8069-09cc5faf1782"
        },
        "item": {
          "id": "3ddeaaef-4ead-4c93-9c90-e4222207b450",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e4ecb0bd-5c3b-43da-8cb7-bf62bb7fcbb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0f4078-d420-4d19-bade-b2204ad4e190",
        "cursor": {
          "ref": "4e175ac0-de50-41fe-820c-b89744fdcdc2",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f1e9581d-3948-4bfa-ab52-d3058eddd687"
        },
        "item": {
          "id": "de0f4078-d420-4d19-bade-b2204ad4e190",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5ce9e02a-6d60-4776-8c30-419de02f3fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bfc85cd-ecba-49ad-913a-49d7ed05e550",
        "cursor": {
          "ref": "28dbe1fa-e032-4586-9fb2-7606b3d62bf6",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "46dad2c0-9eaf-47ba-867e-38799e7c7eab"
        },
        "item": {
          "id": "9bfc85cd-ecba-49ad-913a-49d7ed05e550",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d4fb3380-78c5-4244-81cc-a8c9edfde6f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099b8b52-59b8-42d5-9fcc-6dbce1a3c636",
        "cursor": {
          "ref": "32f4dcfb-6046-4ecd-be8a-6a89ac7227ec",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "644b6683-a9c4-4b30-bca9-804378c2f7ec"
        },
        "item": {
          "id": "099b8b52-59b8-42d5-9fcc-6dbce1a3c636",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "8a0c4d19-a371-490b-a0a3-1daf01b0c533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4f3a00-d7d6-4c4b-beac-9cc9278e8e9f",
        "cursor": {
          "ref": "d8ac61ba-e9e5-47ed-8850-fc4120e710b2",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b04a1b39-473f-4d55-9e47-7a0bc5b8b798"
        },
        "item": {
          "id": "fb4f3a00-d7d6-4c4b-beac-9cc9278e8e9f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6863a7ce-3f82-47cf-9836-155e0528e4d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db9a625-c089-4f6c-85a5-72045e69ff3d",
        "cursor": {
          "ref": "ecda3c96-a4f4-4c77-891b-52642606ae0d",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ca52d2a6-3335-4a8f-b0a9-d52c20cf6e35"
        },
        "item": {
          "id": "3db9a625-c089-4f6c-85a5-72045e69ff3d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4a819033-d86b-4382-8520-64c3e5f57e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9930d64-a544-4932-bbe1-ba0a2c98f9fa",
        "cursor": {
          "ref": "87817359-4fa9-4993-858f-1d612c27e7f0",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8da337f5-4e48-40b5-9b0e-c3da2940accc"
        },
        "item": {
          "id": "d9930d64-a544-4932-bbe1-ba0a2c98f9fa",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2730d995-df61-4d0c-90ae-c1554da79b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa53b31-39be-4dba-b0fa-f1431396ea42",
        "cursor": {
          "ref": "a2779dce-b5bc-45ca-9cef-ed44e0ea30c9",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "de08552a-3bcd-408f-9a5b-dd046c38806e"
        },
        "item": {
          "id": "1fa53b31-39be-4dba-b0fa-f1431396ea42",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ff96b851-2bdf-4424-8169-d07a9cd7078b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d7196d-deea-42a9-9d37-0609399d383a",
        "cursor": {
          "ref": "ee979340-de19-4609-a04d-8c3cafdd04f5",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8305acb7-eb95-4e46-a38a-8a190d2e74df"
        },
        "item": {
          "id": "b2d7196d-deea-42a9-9d37-0609399d383a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "04332e09-1473-4792-a92b-35b4caa1e3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9b9eb6-d542-41e0-bd09-4d68fc62be64",
        "cursor": {
          "ref": "dc4cecb5-5973-4a53-a8b2-363fd2187d4b",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "5d33465c-cd4f-47a1-9ba3-3e6fbce7bde6"
        },
        "item": {
          "id": "0f9b9eb6-d542-41e0-bd09-4d68fc62be64",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "cba323b4-dd95-4549-b153-3546d00d515d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad83569b-2089-4e9d-bef4-8ec08adb103d",
        "cursor": {
          "ref": "1bf3146f-1e29-4b68-bff6-0c958a562e11",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b2fda817-dc41-479a-9aef-5a1943f821d6"
        },
        "item": {
          "id": "ad83569b-2089-4e9d-bef4-8ec08adb103d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9a54c7c1-e4d2-4c9d-8551-341749131489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9e1c74-d0ab-4562-b79d-e230248ce903",
        "cursor": {
          "ref": "73206ecc-1f6b-496b-a555-af422aafbcd3",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9ae28169-6feb-46d7-8c4d-a57c9e1ca6ca"
        },
        "item": {
          "id": "9f9e1c74-d0ab-4562-b79d-e230248ce903",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "507a1592-652c-4cf0-b2a8-4634c4234ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f272149-4947-4ef1-915d-43ab0823c435",
        "cursor": {
          "ref": "736f8fcc-100d-4a6e-a053-cb67bf8a8823",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "633c27ae-386c-4114-863a-9b07c732d5a7"
        },
        "item": {
          "id": "9f272149-4947-4ef1-915d-43ab0823c435",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "08b99cd4-8e7c-4c6b-b499-9fd3caa43504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5eed1a8-6560-4cce-84c6-5b571cc47cc3",
        "cursor": {
          "ref": "be5a54f8-fbdc-4d4e-9978-121e7930c38e",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "edf364ee-06ef-49e8-9c85-a5d18c814d16"
        },
        "item": {
          "id": "a5eed1a8-6560-4cce-84c6-5b571cc47cc3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ff26ef86-b514-4cc4-bd42-0b6afe6ca51d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7bdfb4a-0218-4b3c-be1c-8750f6a6d975",
        "cursor": {
          "ref": "f2fb4e75-9fa1-45fa-a8c4-ecf31e249ebd",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "07243972-e8f0-4b92-ac5f-07f30628d7d4"
        },
        "item": {
          "id": "f7bdfb4a-0218-4b3c-be1c-8750f6a6d975",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c9d74b7a-de4e-4953-bb7e-b13f8c6d6c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f50a57-7dff-4c29-a642-1e5a9fadf3c8",
        "cursor": {
          "ref": "6864d643-6cc5-492d-9922-96b3f330d940",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "54284481-cfab-4c95-9090-a2d32955fbeb"
        },
        "item": {
          "id": "63f50a57-7dff-4c29-a642-1e5a9fadf3c8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "fface5ae-4e6e-4eeb-9120-a7d3a5e6d9f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda1ffdb-fa68-424c-8844-84d67e10eee8",
        "cursor": {
          "ref": "655b50bb-963a-4ebe-bb24-afb4e2ff54ec",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1e5953c0-9005-4198-8e16-ee3a94f7743a"
        },
        "item": {
          "id": "eda1ffdb-fa68-424c-8844-84d67e10eee8",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "92782f57-8151-4e12-bcbf-9f8403c4fe3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360702f5-9f45-4193-b2bf-1abbb3aff3c4",
        "cursor": {
          "ref": "1725793e-da49-46e7-ac8b-8078434a941e",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b70951b3-48bb-4c36-9a37-4fc19fb35bf5"
        },
        "item": {
          "id": "360702f5-9f45-4193-b2bf-1abbb3aff3c4",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9f287a78-6fec-4bd6-8c69-b87b93331e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd46678-f23f-45e7-9ff7-2541e7bda526",
        "cursor": {
          "ref": "3a3bfb20-897d-4a2e-8ba0-c2d9a2572fa8",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b229994b-0de3-42af-ae9d-b6b7aa94ec90"
        },
        "item": {
          "id": "0cd46678-f23f-45e7-9ff7-2541e7bda526",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "091b2d8a-fdf6-4bb4-a560-180c272789a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afcec1b7-9a37-4d93-9b6c-418f6a7ef74b",
        "cursor": {
          "ref": "909ae952-3b53-478b-88e9-048082ef6b2f",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "824f5d79-3faf-49f1-a6e8-76ebfbede581"
        },
        "item": {
          "id": "afcec1b7-9a37-4d93-9b6c-418f6a7ef74b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "79daa675-b0e3-4563-b01e-5cab6b23bde6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f2265c-0947-4232-a1e2-ff457de6f574",
        "cursor": {
          "ref": "35d1a119-e672-43b2-b8a6-8b3c00dd7ae5",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8b994988-1dd4-4563-af4f-13927a1ebecc"
        },
        "item": {
          "id": "c3f2265c-0947-4232-a1e2-ff457de6f574",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "91b203cc-e199-4da1-a4a1-8d19d019b95b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e91658c-253f-49b1-bc01-a87b27b730b4",
        "cursor": {
          "ref": "f6c5c4b5-d43a-48a4-8d14-4ee4145e5529",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "365db368-e270-4531-bb16-e3e3ea7cfa63"
        },
        "item": {
          "id": "6e91658c-253f-49b1-bc01-a87b27b730b4",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2c58e427-f64f-48eb-9966-3b3f939fd8f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234bf853-19c7-4b96-88cb-2e56b1447a89",
        "cursor": {
          "ref": "59d1b912-deca-40e2-939b-1f85fde60fa9",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b1fe587f-591c-4198-a4f8-856d35b3cc6c"
        },
        "item": {
          "id": "234bf853-19c7-4b96-88cb-2e56b1447a89",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "621eb1d9-90da-4ed4-aff4-4bd9ff0f5c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1038a285-103e-4e67-8ac7-e269db122265",
        "cursor": {
          "ref": "4fa478b1-b217-44e3-9160-0da093310d27",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d29f096f-3dd0-45a7-8e1b-98dd009087c7"
        },
        "item": {
          "id": "1038a285-103e-4e67-8ac7-e269db122265",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0080e2df-c281-46a7-ad46-663a9a549703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf59080-5bb8-4bfd-a43f-f834e3b0446e",
        "cursor": {
          "ref": "86d4c0c6-3ea9-4e37-b96d-f4f3b982f55f",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6c9fa858-6321-4abf-9f08-2b432df87564"
        },
        "item": {
          "id": "eaf59080-5bb8-4bfd-a43f-f834e3b0446e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "45d552f9-9ba8-41d5-9356-11cfeeab6ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e4cd3a-c8d0-4f18-b9ab-8bff426b1949",
        "cursor": {
          "ref": "cc8cb191-8a76-4837-9777-f87ff50a4161",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "665d1cc7-d27e-446f-861d-d1946a3f5d05"
        },
        "item": {
          "id": "48e4cd3a-c8d0-4f18-b9ab-8bff426b1949",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f64b6de7-2718-4721-a6f9-ce5c95f68d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c93d8d-6a15-4776-9137-8e39ebb0e36d",
        "cursor": {
          "ref": "60c966a3-3c97-41e4-bd75-c2122d8d216a",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d6726abb-d641-4148-a363-f01d742ff04f"
        },
        "item": {
          "id": "f6c93d8d-6a15-4776-9137-8e39ebb0e36d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6c5a093a-e20d-4b02-b78c-c2fe5d517312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b19e70e-1d9c-4935-9feb-312ea1bbb476",
        "cursor": {
          "ref": "e7cc0f34-cfc1-4de4-a8a2-4c5d2fce7de3",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "06672726-f4a5-4608-9bec-c17c67dd92e5"
        },
        "item": {
          "id": "1b19e70e-1d9c-4935-9feb-312ea1bbb476",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e42acab5-c8e2-48a9-a9c0-ecadec9316be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6502363-7c66-4f8b-abd2-f6e9b682146d",
        "cursor": {
          "ref": "f584efd4-20bb-4e13-8fb6-4caf844aa09d",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ce235d14-059d-4550-9924-0ad720b3893e"
        },
        "item": {
          "id": "f6502363-7c66-4f8b-abd2-f6e9b682146d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a91f2718-41ff-4f73-b26f-eb0769503a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d04b24-f7fb-408d-b0a7-f8eeb38df359",
        "cursor": {
          "ref": "b3a700fa-a7c7-41ab-a5db-92cfb7e8a71c",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "963fe3c8-6b0d-4f0d-9e18-a0e816006da1"
        },
        "item": {
          "id": "f1d04b24-f7fb-408d-b0a7-f8eeb38df359",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8e7fad99-4452-4701-8706-e0f15639a17f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f2a6b1-8aea-4d79-ab0d-525e35029995",
        "cursor": {
          "ref": "07577a78-e834-48b2-b8f3-d695a17b64e8",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0f58b3e6-8b8c-48ee-a40d-f7053077befc"
        },
        "item": {
          "id": "62f2a6b1-8aea-4d79-ab0d-525e35029995",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0686d68b-9e13-407c-a705-5929a3521897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35dec688-cbae-4814-bdd5-e8b5131ce33a",
        "cursor": {
          "ref": "cc5298d7-c006-4f7e-bb59-52395e146804",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "10c48051-1217-4000-865a-d494d8301af8"
        },
        "item": {
          "id": "35dec688-cbae-4814-bdd5-e8b5131ce33a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "63a5d242-57b8-4ccb-8456-e89eefa1df13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c0d02f-4934-4af3-8ad7-0318fa7ea4ed",
        "cursor": {
          "ref": "b8ec8a54-6a8f-4c74-9266-2bf42972bd3d",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2fdb7272-db98-4618-a1db-9986a8a957b5"
        },
        "item": {
          "id": "61c0d02f-4934-4af3-8ad7-0318fa7ea4ed",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "16b8b457-6960-4375-b0ae-b6fd08e70d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1206f93-3dfc-4a3f-92aa-a603534a2104",
        "cursor": {
          "ref": "49e9375b-4a57-40e5-94d4-356fd73e8998",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "19fef372-b998-419d-b7c5-880aa7808b11"
        },
        "item": {
          "id": "c1206f93-3dfc-4a3f-92aa-a603534a2104",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "bd9727e8-4dbd-4ad1-ab2e-b3b4a029b897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "904ef3b5-4633-4ab7-91c4-128149ec22b5",
        "cursor": {
          "ref": "84e513b6-bbfb-4153-9f26-9cc2d229a6f1",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "03a36ae0-f7e6-423e-8dc3-6280de986dda"
        },
        "item": {
          "id": "904ef3b5-4633-4ab7-91c4-128149ec22b5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "961b850c-aa26-4b15-a121-b174373e1ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a25fd29-c142-464c-87a1-6179ec5d4cd7",
        "cursor": {
          "ref": "eda86a50-560d-4a6c-90eb-3bef5d322ad0",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9e40f052-4a76-4a89-99d0-6dff0c57f931"
        },
        "item": {
          "id": "8a25fd29-c142-464c-87a1-6179ec5d4cd7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "86447030-b607-418c-963e-4abc5d395293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12fdf62b-5199-4632-a8b6-1b19ef4e37db",
        "cursor": {
          "ref": "6d97f3ab-25c9-497b-9c21-10d375a30fdb",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "30557da7-e021-40aa-abb4-8ab18993a047"
        },
        "item": {
          "id": "12fdf62b-5199-4632-a8b6-1b19ef4e37db",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e2fec498-712e-4e10-ab69-b53f5ecf5728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f38a1a6-a88c-49d9-bc3d-c520530ec4f1",
        "cursor": {
          "ref": "f8ce8d2d-9c20-4b35-873a-3e4ed5c105da",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "15454c58-b52a-4ed1-8343-12b52257b9e5"
        },
        "item": {
          "id": "1f38a1a6-a88c-49d9-bc3d-c520530ec4f1",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4fc6569f-99de-4979-86f3-67156eaf4666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7993934f-90b7-4c50-9550-178d9e282fff",
        "cursor": {
          "ref": "45f70f80-a61c-426e-9561-8f2a96fca96e",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "35ef9fc0-908d-4818-ab31-50556ac91ac7"
        },
        "item": {
          "id": "7993934f-90b7-4c50-9550-178d9e282fff",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9b8d7621-28d0-4b40-a988-3eb9039a539a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b0af2c-b492-46c0-8e9d-8a219a7a278f",
        "cursor": {
          "ref": "4c8cfabe-af60-45c6-9eb9-907fa61a6371",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c7891f47-7d91-4312-a6fa-36bd7ebe1be9"
        },
        "item": {
          "id": "54b0af2c-b492-46c0-8e9d-8a219a7a278f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "219da388-7bec-4b8f-b6c6-473d390eba0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce96a606-4d4c-4c73-8e57-84a8f333eced",
        "cursor": {
          "ref": "124e7fde-9173-46a3-85e5-71e3bb386baa",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c872b85f-65ad-4189-9266-0bb6e5c20f79"
        },
        "item": {
          "id": "ce96a606-4d4c-4c73-8e57-84a8f333eced",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "237fbb12-b922-4d6c-8dec-4384abc7ba48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b8c0c3-8060-4397-8321-7e1f8f917497",
        "cursor": {
          "ref": "2a8ab81b-40c3-4359-9506-9463e7e18e27",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a58c62a4-5389-468d-beb1-bd52357da1c6"
        },
        "item": {
          "id": "04b8c0c3-8060-4397-8321-7e1f8f917497",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "198a35f4-6700-4772-b8c2-e063cc81dd26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88bda0c9-3ddc-4a30-aa90-a87408757152",
        "cursor": {
          "ref": "58497ab7-1268-4253-97c1-cc0969fc5e61",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e6ba4615-b111-48e5-aa97-ea99f10ee918"
        },
        "item": {
          "id": "88bda0c9-3ddc-4a30-aa90-a87408757152",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "39d78140-2eb8-466e-a814-2bde26fceb8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b366d4c-d730-41fc-8581-085b3640cfc1",
        "cursor": {
          "ref": "f54abb33-57cb-4772-a725-fddbe9898e37",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "42d51bf5-6c9b-4be9-bf67-92664141df72"
        },
        "item": {
          "id": "4b366d4c-d730-41fc-8581-085b3640cfc1",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7d76d91a-2802-43f7-9f22-e8bea418b139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80eabfb9-4ada-48e4-b6af-886fff3c8c35",
        "cursor": {
          "ref": "e790d1d3-2f73-409b-94e7-67e37f36de5a",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "65795ba9-ce3c-4d69-b543-0a0901ba120e"
        },
        "item": {
          "id": "80eabfb9-4ada-48e4-b6af-886fff3c8c35",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3f94e8ab-a26d-476e-8211-3ad3521bc549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5042fd7b-a12e-4ed8-90e0-e8f4cc899ac0",
        "cursor": {
          "ref": "726cc832-9b71-4629-bd2a-e7ea433d68f7",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "62fbe4f9-ee65-40c5-8f7c-9f176cc9b910"
        },
        "item": {
          "id": "5042fd7b-a12e-4ed8-90e0-e8f4cc899ac0",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "63ee7ad1-4206-4b69-a267-2c2b8afebb22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "322d7d42-93cd-46ac-bd54-7c69bec2f974",
        "cursor": {
          "ref": "10c37d26-bf70-49cf-b9f8-b7af61f2a900",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8ae4d9a2-3cb7-4a3c-8d66-07732206a241"
        },
        "item": {
          "id": "322d7d42-93cd-46ac-bd54-7c69bec2f974",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7a6412be-dd70-4927-b780-9d036d1b8c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a50f5e-9724-4e9c-a439-cd204a6caccb",
        "cursor": {
          "ref": "041c0dd1-b29c-400e-ab96-a3a87287d02d",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3c1ce14b-0300-4bbe-b367-38f7aba1a668"
        },
        "item": {
          "id": "15a50f5e-9724-4e9c-a439-cd204a6caccb",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "aa8ce59f-6211-49af-903b-73c6a64c2a29",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402a94c8-2790-4212-b06f-e030ff1bf01a",
        "cursor": {
          "ref": "c5311fda-09cc-4621-bd59-60e405cd6db2",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0b9e841d-5b88-49d5-8417-4d921461c993"
        },
        "item": {
          "id": "402a94c8-2790-4212-b06f-e030ff1bf01a",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "9257ddc0-aa26-4b21-8f39-f54b55f2f11f",
          "status": "Created",
          "code": 201,
          "responseTime": 109,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69087d53-c032-49a7-a980-c612be2e2418",
        "cursor": {
          "ref": "858eaa8f-6723-4358-8358-c721c62f5400",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b782d502-176d-4718-a441-cc55e56c9f58"
        },
        "item": {
          "id": "69087d53-c032-49a7-a980-c612be2e2418",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8c9cd08c-1e46-4ee9-8d6a-e6922b277551",
          "status": "Created",
          "code": 201,
          "responseTime": 310,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ccfe9b2-260a-4f45-bff5-c3df1fcc1b14",
        "cursor": {
          "ref": "4b37d05b-5a25-418c-965c-ffba0eda4bac",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f8a7fadd-2e09-465d-909d-eb7f0bcf31ef"
        },
        "item": {
          "id": "9ccfe9b2-260a-4f45-bff5-c3df1fcc1b14",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ea50566d-6f08-45c4-b0a4-fb6174c20e56",
          "status": "Created",
          "code": 201,
          "responseTime": 104,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8d139d-a6a7-4c89-85f9-c58f671fa530",
        "cursor": {
          "ref": "71b6ad36-544f-4433-881f-671978522957",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6327ac49-4d13-4fc2-912e-b6cdb87440b7"
        },
        "item": {
          "id": "bb8d139d-a6a7-4c89-85f9-c58f671fa530",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "023b51e7-085d-40de-bc71-ff30025a6f97",
          "status": "Created",
          "code": 201,
          "responseTime": 112,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d8e647-fe39-4e59-bfc0-b9091236f374",
        "cursor": {
          "ref": "87f4ce5e-fbac-4af7-9bc1-e16b28e25eb0",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "fb0126a4-9fbf-4093-b4ad-27d752d8fd13"
        },
        "item": {
          "id": "02d8e647-fe39-4e59-bfc0-b9091236f374",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "819a52cc-e8e6-40f9-a5ce-5e150d5f4ab4",
          "status": "Created",
          "code": 201,
          "responseTime": 93,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9700e7a4-88a4-4821-907a-75ffcce9055a",
        "cursor": {
          "ref": "b465fb1b-489f-4d8d-ba40-c2cd39577474",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3fc2d3a0-b647-411e-8b03-a50f7b5f9eef"
        },
        "item": {
          "id": "9700e7a4-88a4-4821-907a-75ffcce9055a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "50c5b7ed-dc01-4a38-85d8-0eccb77f1fed",
          "status": "Created",
          "code": 201,
          "responseTime": 93,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e3b592-e206-469e-961f-a784d32cba46",
        "cursor": {
          "ref": "51b90501-c051-49b4-b24a-103a29b8374d",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "79a61bc2-4eb3-42a0-b371-1eec65428470"
        },
        "item": {
          "id": "d6e3b592-e206-469e-961f-a784d32cba46",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3a8e55db-0d28-4c10-9389-69687cb0af13",
          "status": "Created",
          "code": 201,
          "responseTime": 93,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000197ac-4f0e-4e32-a16a-cd491ef2149b",
        "cursor": {
          "ref": "0a5bc173-b234-43cd-9e6c-681cf0398886",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7d016857-d991-485e-9f4c-c1da3e1b0e62"
        },
        "item": {
          "id": "000197ac-4f0e-4e32-a16a-cd491ef2149b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cbbdf9b5-aeb6-4aec-a3f5-53e6bef990b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ce620d-f480-4f81-b613-f02da8899de8",
        "cursor": {
          "ref": "9141365d-2035-4d03-9c59-e94f2c55405a",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6b0acc15-bad8-46c4-9664-3469b753181f"
        },
        "item": {
          "id": "b3ce620d-f480-4f81-b613-f02da8899de8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ce109659-2e09-4562-9dcb-d47684129ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789db5ed-5087-4c2c-b36b-2f65330c6550",
        "cursor": {
          "ref": "3b6d819d-4f8f-462a-b682-8dce1e5475be",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2da99f2b-848f-4b1c-9c02-afaec4e47b3e"
        },
        "item": {
          "id": "789db5ed-5087-4c2c-b36b-2f65330c6550",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "27393f34-ce2e-4785-9797-601e78b04809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f61a20-d864-422b-a815-e39114a801e1",
        "cursor": {
          "ref": "d69352d0-d86e-4860-9ace-71cf641506ce",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0ba16041-3c41-476f-9fce-19d21b0dbadc"
        },
        "item": {
          "id": "d7f61a20-d864-422b-a815-e39114a801e1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f8701cb3-eaa7-4953-be0a-0a207efe6861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd53b550-2ee0-4a25-9ac6-48fded0d8c23",
        "cursor": {
          "ref": "1d529003-54c6-4861-9031-f364348b21d0",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3e923727-0feb-4ac1-b18a-ac2b0f457b2d"
        },
        "item": {
          "id": "dd53b550-2ee0-4a25-9ac6-48fded0d8c23",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2454ad75-d2d6-4737-80f0-7172c47bff98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3490862-609a-4528-acfb-3572d722b4fd",
        "cursor": {
          "ref": "1deeaad4-10d3-431d-bf36-8fed3cfc81d2",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "33e7debf-c43a-43e6-8874-12ac675028c1"
        },
        "item": {
          "id": "c3490862-609a-4528-acfb-3572d722b4fd",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "618f36d2-6725-400c-aedb-a5a53a1492db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889bc83e-8928-4583-8408-d8463c597924",
        "cursor": {
          "ref": "98223a6d-710f-4d11-a7fb-9594f23c5e1a",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3e7274ec-51b5-45d7-9abb-41b172be928d"
        },
        "item": {
          "id": "889bc83e-8928-4583-8408-d8463c597924",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1ef1ff6d-8982-47f4-b72a-6dfb7448b7f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7f2242-4d2f-4283-9c61-690700b29b51",
        "cursor": {
          "ref": "b4f9d10e-bac6-4112-b3b0-a26ff81a33e7",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7b16ea4c-0426-473c-a1e0-6d3f3139d46d"
        },
        "item": {
          "id": "0a7f2242-4d2f-4283-9c61-690700b29b51",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c1078389-4ead-479d-bfc4-498d5c751f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5517505a-c5ae-426e-b4e1-2c1d7bf911d3",
        "cursor": {
          "ref": "068c4357-e201-4fd6-af1d-869d49ed0375",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8a1e9cd8-6d6d-4ddd-b667-223b2d755c68"
        },
        "item": {
          "id": "5517505a-c5ae-426e-b4e1-2c1d7bf911d3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3c22955a-2fd5-4f0d-8f01-3f36e1a1a59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e071dc8-5d8f-4ea3-bdd7-22d92127dffd",
        "cursor": {
          "ref": "31071347-4c9b-410f-9c56-5c08ea84d12b",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0da47d2d-ac1b-412d-b014-e3d7efeea40b"
        },
        "item": {
          "id": "7e071dc8-5d8f-4ea3-bdd7-22d92127dffd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e9eff4ed-2e54-4587-bc78-20a7faf4f6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31517b43-6b92-464f-b342-afe151181ae2",
        "cursor": {
          "ref": "369dd6fa-bbb5-433f-97ba-e56b08e7d0f7",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0f02073b-352a-4655-8120-0df300f544cb"
        },
        "item": {
          "id": "31517b43-6b92-464f-b342-afe151181ae2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "abfc0196-c028-484e-bb9b-a81093a77d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f7d333-29b6-4e6f-a970-099051b3db9f",
        "cursor": {
          "ref": "055f1d71-cc6c-42ef-bf27-f7c6df8520f0",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6483cb66-5c37-423b-a39d-a9384554f0c1"
        },
        "item": {
          "id": "e2f7d333-29b6-4e6f-a970-099051b3db9f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "23ff0332-dd3c-40b3-a39d-ab1dc17a43d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3dfcdee-14f8-40d4-804b-8498e3952d55",
        "cursor": {
          "ref": "a673d0d9-9e2b-4340-915d-37781e06c5c9",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "114ae226-8d33-440e-8b49-28cd2bdcd1d8"
        },
        "item": {
          "id": "d3dfcdee-14f8-40d4-804b-8498e3952d55",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0389946b-ce7b-40a0-bc8c-5b0d46aee3fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ba346d-9a54-4d4e-bb5e-2d3131c28024",
        "cursor": {
          "ref": "d3c2dc90-78ef-4c27-8af2-f0fec3bf4533",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "27ffcf55-447f-481e-b9ad-9378c3179ee4"
        },
        "item": {
          "id": "51ba346d-9a54-4d4e-bb5e-2d3131c28024",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "492572d6-e251-44e6-8394-58a77dc15611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab47e524-9cc2-46f9-b679-9564970383a1",
        "cursor": {
          "ref": "29243ae2-6d06-4f39-b2e1-d85982f8a2d0",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "de8cfd88-5800-4e50-9755-f0790e2b5a0a"
        },
        "item": {
          "id": "ab47e524-9cc2-46f9-b679-9564970383a1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c8b35f60-df66-4926-ad88-86b1048c8f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a263a1-b034-4761-b9af-5a006ead5373",
        "cursor": {
          "ref": "8d43a2e9-5549-464b-a64b-3223224dc33f",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1b5f57b0-0462-4e2e-bffb-4ff7a5547c85"
        },
        "item": {
          "id": "08a263a1-b034-4761-b9af-5a006ead5373",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ee838308-0122-4fd4-ad27-322fbe751c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97422f32-2d65-4db9-a191-31a597b9f7d6",
        "cursor": {
          "ref": "4c85757d-37aa-4b2e-86ea-4124683fd3dc",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "170663c4-6450-45c1-a361-525fcabc992d"
        },
        "item": {
          "id": "97422f32-2d65-4db9-a191-31a597b9f7d6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "41ff2832-e36a-4f71-9bb8-455e70a3a7b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6cf141-f2ee-496b-a7e3-feca8a88ad07",
        "cursor": {
          "ref": "7a484e1c-afda-4385-a77d-7be567af717e",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5e15de19-023f-4805-94f8-158546dbf81c"
        },
        "item": {
          "id": "1f6cf141-f2ee-496b-a7e3-feca8a88ad07",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "faf05f8f-e5e9-4f70-b6c8-1559deed2e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d0f4fc-bdfa-4d3a-9d03-972f84f8c59e",
        "cursor": {
          "ref": "8f096d8f-840c-4294-aff8-ea7e7b812843",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5edd3cda-0326-4369-8ee8-c445d0790f59"
        },
        "item": {
          "id": "c3d0f4fc-bdfa-4d3a-9d03-972f84f8c59e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "12261a22-a3ff-45ed-b3ed-a6130c7091e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a429795-8a77-4ce1-bcd1-901844d65af2",
        "cursor": {
          "ref": "e71fa6dc-242f-4ac2-b84d-4a980b492168",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f8ca5528-cd4f-4769-ad89-7ffd98a4fba0"
        },
        "item": {
          "id": "8a429795-8a77-4ce1-bcd1-901844d65af2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "28395779-2d92-4ced-8df6-f3e52ed3805f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab01308-514c-464f-b2ec-6f5890bf4938",
        "cursor": {
          "ref": "f160f64c-48eb-4c78-8ca3-c36d192877e6",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d6e80320-d525-43fb-97a2-9b31a84e0f1a"
        },
        "item": {
          "id": "3ab01308-514c-464f-b2ec-6f5890bf4938",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c816eb82-becf-414f-9f11-c7ae375bd786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b959aa0-b823-441c-93ed-6edd21e18aeb",
        "cursor": {
          "ref": "59c81530-953f-41c0-a7d4-8a7735e46cee",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9fd60ed0-0e3d-4b0e-b39a-a9b49d064411"
        },
        "item": {
          "id": "3b959aa0-b823-441c-93ed-6edd21e18aeb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "931be177-b8c1-435f-93f3-bf5abbfff5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79080092-a7ef-4cfb-8756-03fb9c314e67",
        "cursor": {
          "ref": "e0b5b79d-156f-4196-b3de-0053d7ba9244",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "fb01bb00-b481-4d29-a59a-993c1c984ac2"
        },
        "item": {
          "id": "79080092-a7ef-4cfb-8756-03fb9c314e67",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "acf775d6-65f0-4ce7-abb2-ada2a506b4a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a405dfd-119e-475d-84a0-1961468de4ce",
        "cursor": {
          "ref": "6377c7d1-e011-4480-b014-82b79fe31a8b",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "faeba275-7587-4983-827d-06d4a42315fe"
        },
        "item": {
          "id": "1a405dfd-119e-475d-84a0-1961468de4ce",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "93921ad8-5358-4f9e-a3ed-7f29da94eb1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b35935-864d-4206-aea1-9e89241018e6",
        "cursor": {
          "ref": "badcbfdf-a6ba-44f2-bb22-2bdbf4df1d63",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6bbf49dc-173e-4fd2-a66b-3330d80cd059"
        },
        "item": {
          "id": "76b35935-864d-4206-aea1-9e89241018e6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ac73b96c-0b50-48e1-8137-c130740f1185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2f54a5-61d2-4345-b70f-99dc390a1582",
        "cursor": {
          "ref": "fc9258cc-7b1e-4c9c-8e3f-11b7df5c14a1",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3c0b41b9-9e36-4e33-84ea-5d4630639ede"
        },
        "item": {
          "id": "fd2f54a5-61d2-4345-b70f-99dc390a1582",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "80fe17a2-81a5-4cb1-86cd-aa6ee691117c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91552c82-8e4e-4d0b-9577-8a9e6d231a69",
        "cursor": {
          "ref": "3b26c985-a18a-4b44-9e0f-8a61f43b31a7",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "353c9695-0a90-4e84-a424-4a08dc86cba9"
        },
        "item": {
          "id": "91552c82-8e4e-4d0b-9577-8a9e6d231a69",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3122ad60-3142-4bcb-8f93-2d98cb670f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c8e18c-9636-4cf2-b7a4-47b284dc4840",
        "cursor": {
          "ref": "bc10884c-3ebe-47c4-a097-84702a1ff9ff",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5d01f67a-7727-4e42-ae90-74f4c4d67876"
        },
        "item": {
          "id": "83c8e18c-9636-4cf2-b7a4-47b284dc4840",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cdeb49f4-e2fd-42be-9f98-8afa6fc6fe1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5536e839-2fc2-4020-9d63-3fe0cfa60d5a",
        "cursor": {
          "ref": "8aa3983a-1194-448a-b3eb-011328f07569",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "eef97583-59be-47e2-bbf3-a58e78f41cbe"
        },
        "item": {
          "id": "5536e839-2fc2-4020-9d63-3fe0cfa60d5a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ab8dee08-611a-431c-b004-b45c89b83d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719ddca2-e306-40c8-bc61-88e7f81d38c0",
        "cursor": {
          "ref": "b051f032-8cf1-4534-86d0-ab33ef2cacfd",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "32a4f85c-d787-4341-bc24-59b6f6472ad7"
        },
        "item": {
          "id": "719ddca2-e306-40c8-bc61-88e7f81d38c0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9b730f29-0644-411e-9754-2aa5317ec57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd791d3a-6d5a-4106-a457-a4a493d1e902",
        "cursor": {
          "ref": "c0e237ee-6aa4-419f-9a56-a9a05e41b34d",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a9b297bc-783d-460f-83b1-901a92dd13d8"
        },
        "item": {
          "id": "fd791d3a-6d5a-4106-a457-a4a493d1e902",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1c6c6fa8-cc7e-46e1-a46b-6bded19c41e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c900d98-87f4-41ba-8dba-ef207fcf4c63",
        "cursor": {
          "ref": "9e583288-2f94-43cf-819b-a36f1189ada1",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "31e7ea95-1b22-45f2-a497-8262b194bd72"
        },
        "item": {
          "id": "4c900d98-87f4-41ba-8dba-ef207fcf4c63",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "8bf5e35a-ec52-4e24-817b-124685a9ef94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d91c0ef-5574-444f-949f-1dbc3ef0d25d",
        "cursor": {
          "ref": "c05eae0a-cba5-49b6-9420-650bdb987352",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "79dad993-6388-4fc7-934e-868ab4f97a2c"
        },
        "item": {
          "id": "8d91c0ef-5574-444f-949f-1dbc3ef0d25d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "83f3d5f3-c218-435a-bea8-0a5cd39925fe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40761bf-d6de-4c4b-bd83-d5d872e41aaa",
        "cursor": {
          "ref": "fce7cc4e-bc95-41c8-9177-22e2ff78914e",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "80c08fb3-e23a-4034-9049-2cfcdf5717e0"
        },
        "item": {
          "id": "e40761bf-d6de-4c4b-bd83-d5d872e41aaa",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "80f413b3-4eee-43ca-933f-e973b8aafa1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170e5f4f-717c-403d-8bfa-046274f1990e",
        "cursor": {
          "ref": "20321a95-2445-44af-9c8b-a31fdef2ea82",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6034da81-ed90-4327-b9bc-981bf0524775"
        },
        "item": {
          "id": "170e5f4f-717c-403d-8bfa-046274f1990e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9da8f42c-9902-4943-8145-526567da6b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1077f00f-8e0b-4abe-8ec6-dd581e5aab81",
        "cursor": {
          "ref": "4aa3133a-de80-4c1f-8d5e-3a4ce076385b",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b914101d-9116-4064-8eb6-b1dbf8d16b73"
        },
        "item": {
          "id": "1077f00f-8e0b-4abe-8ec6-dd581e5aab81",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d23b7b2b-ddef-4b22-b8fb-d42f51d530cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d54fe6-eca4-4985-ad6d-f23327e7b6da",
        "cursor": {
          "ref": "a9346822-9670-4473-a3fd-55d6a339f240",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "dbf1a06b-45f1-457f-be43-0c22fb397d5c"
        },
        "item": {
          "id": "10d54fe6-eca4-4985-ad6d-f23327e7b6da",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0a98e13f-f263-4137-80af-f08ecd3ff6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3eaadf6-ee3a-4781-8e6c-cccedada8062",
        "cursor": {
          "ref": "2567c3b0-2384-490d-8e04-b0906418ee19",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e6267cad-73b6-4483-ba41-66edcbb254aa"
        },
        "item": {
          "id": "f3eaadf6-ee3a-4781-8e6c-cccedada8062",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a3d0f046-af2f-4c7d-877c-8b472d71f32c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a682440-db3b-4c83-a0fe-d55cb03d608e",
        "cursor": {
          "ref": "e3cdf930-49e7-4c3d-a403-b61e8499812d",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "59210104-522b-4808-9db1-b32f02891f56"
        },
        "item": {
          "id": "4a682440-db3b-4c83-a0fe-d55cb03d608e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "80abcdf6-3b4b-464f-9d21-fe3ee2475eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b84b98-c466-485f-99dd-5a662321eea6",
        "cursor": {
          "ref": "4089fafd-7dd3-42da-bde7-011421a4bd98",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d775d60d-b9f3-40d8-88f4-8a91a34adfad"
        },
        "item": {
          "id": "75b84b98-c466-485f-99dd-5a662321eea6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2c711535-31ae-4d0d-a06f-e7626f36a94e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17454b7b-8ccd-45f7-8a41-48ce63ba96c2",
        "cursor": {
          "ref": "cdfc6073-f163-4280-8e27-a7fca5c5b8fd",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "54b456ab-c1fc-422e-9eb8-b21cebc9d9fb"
        },
        "item": {
          "id": "17454b7b-8ccd-45f7-8a41-48ce63ba96c2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ad42d588-b84b-4f5c-ab6a-bb618dc65db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe8b259-5a79-403f-9009-1989a2ee097a",
        "cursor": {
          "ref": "c64137c5-4a91-4dc5-89fc-2fe05865b47c",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3adba013-cbf0-4de3-ae86-a2c533a6a2c3"
        },
        "item": {
          "id": "4fe8b259-5a79-403f-9009-1989a2ee097a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7e291050-4fff-40d9-b155-e7c871cabff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d824745-38f0-497c-b2ed-6ae108f4a07e",
        "cursor": {
          "ref": "22a09e8a-34f1-4158-8daa-391ef5893eaa",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "507c90ae-ed33-49f5-b151-fdadce50254b"
        },
        "item": {
          "id": "4d824745-38f0-497c-b2ed-6ae108f4a07e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e0cbeb29-da71-47f3-8486-c3bba5860432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78be75c-b06e-4c40-9b36-69719dbe6359",
        "cursor": {
          "ref": "0a64672c-dfee-4177-bd23-55ce3c6dd309",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c63bbdc5-29e5-4b4e-9242-30f291f77b3b"
        },
        "item": {
          "id": "e78be75c-b06e-4c40-9b36-69719dbe6359",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "529bb667-740d-49e7-9d87-8a1fdfd8ba36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b6937e-83b9-4022-87f7-7fcec7a5096c",
        "cursor": {
          "ref": "c9bafcd0-a70b-4618-a029-775f6f59d02f",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "be25c69c-f170-4647-8653-4f8e52a7bf6a"
        },
        "item": {
          "id": "50b6937e-83b9-4022-87f7-7fcec7a5096c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "fa2ca3ad-36d6-42e9-be3d-4061cf6f4792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "befd70b3-0aab-491a-849a-b9290db5779a",
        "cursor": {
          "ref": "b5bd6e94-0af5-4108-94f1-a608b94d8280",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "22949629-35b4-4f07-baf2-cb9e8d8010d5"
        },
        "item": {
          "id": "befd70b3-0aab-491a-849a-b9290db5779a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e958bcba-f416-4368-afef-a8589b4dfefe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebec29a-79b5-414a-9dbd-ef279bccc1a6",
        "cursor": {
          "ref": "f401415e-b2a0-4792-a28a-917a1c1b0596",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "761249e1-ac99-43e6-a7ee-a0b9bda66a1a"
        },
        "item": {
          "id": "cebec29a-79b5-414a-9dbd-ef279bccc1a6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1adbfadb-b3e8-48f4-8ec8-7b6a0b59bc75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddeaa81c-a5cf-413e-bb46-71d74961e019",
        "cursor": {
          "ref": "3cce5661-a33a-48e7-90b6-82f3cd9f1843",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d22c64b4-c5b9-4c4c-b946-56f88bae93ad"
        },
        "item": {
          "id": "ddeaa81c-a5cf-413e-bb46-71d74961e019",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "308d19d9-c803-4c21-bfe9-3965eaab209c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6a39f3-3db1-45c0-b791-19c41819b54b",
        "cursor": {
          "ref": "3f3e27b3-ecfb-407e-b036-a024d53610c0",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "236dd31d-0f25-4eac-b734-2ec12b3ec587"
        },
        "item": {
          "id": "8d6a39f3-3db1-45c0-b791-19c41819b54b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a9176a52-1009-46a3-91b1-1d10acfbe851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac939cb-90e6-4efd-9f07-e0b3543b136a",
        "cursor": {
          "ref": "dae23528-3cfd-49e0-9042-22913bcae809",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b6983437-39b0-4950-9df8-8a7f67618bff"
        },
        "item": {
          "id": "1ac939cb-90e6-4efd-9f07-e0b3543b136a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "cb8d3acd-b326-4e69-8640-bde84cdcd23c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784b6b39-095b-4129-b859-083e6db27da4",
        "cursor": {
          "ref": "a4c6328c-ec42-44f3-b094-d613ec54e09a",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "55a5bd65-f986-406c-8f1a-3e1ff3efad5a"
        },
        "item": {
          "id": "784b6b39-095b-4129-b859-083e6db27da4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "cfcc70d0-5fce-4be0-9b87-524eba11c79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d295365-36c4-4b18-8998-c6c1c141169c",
        "cursor": {
          "ref": "229a2603-d35f-43ae-8f1a-8b887f07282f",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "af6681ba-5afd-4d95-9137-28fc2b92a938"
        },
        "item": {
          "id": "5d295365-36c4-4b18-8998-c6c1c141169c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3eb8b535-782e-4ac7-ba7f-e765cf4ce7df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9696dc-3a77-4c6b-b8d9-d1625e1b133c",
        "cursor": {
          "ref": "595fb3be-ee6a-42f5-9612-25b6f79ab5e7",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "149d84f3-194a-4cd8-8813-24f9e656b08b"
        },
        "item": {
          "id": "0b9696dc-3a77-4c6b-b8d9-d1625e1b133c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b1d1f2be-13b9-40c8-be74-21c6cb961f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502833f3-89c5-4de7-a662-63fed3f3ec42",
        "cursor": {
          "ref": "e0bed0b3-730a-44e3-9ae6-80a04bc6278d",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d0f0fbb4-c62d-48a6-9e66-b88838621069"
        },
        "item": {
          "id": "502833f3-89c5-4de7-a662-63fed3f3ec42",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5deda7db-703d-480a-8e64-8dbe140bd7dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4186de2-b072-4e92-8b18-3b085004de96",
        "cursor": {
          "ref": "5ec08226-5bb3-431f-9603-ed72a1abbbd5",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7d5f6568-e512-4cd5-8c2e-309bfc82b879"
        },
        "item": {
          "id": "b4186de2-b072-4e92-8b18-3b085004de96",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "62d67c0f-5070-416c-bb45-8787694740ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f4cb8f-d5f8-4f6c-80c2-f1a56e068ee2",
        "cursor": {
          "ref": "8115daf7-412e-4e98-8ccb-4ddc42aec1c3",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1dc1cc32-814c-4843-a3ad-6210d77fa12d"
        },
        "item": {
          "id": "36f4cb8f-d5f8-4f6c-80c2-f1a56e068ee2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a15d80b6-ef7f-45b0-9127-24b37716d41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4899faae-f8f3-4b88-8476-41a464a01c4f",
        "cursor": {
          "ref": "9c9f3779-57a6-4ba0-8597-0b3fe264271b",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b7969ee6-6168-42c4-9d53-c5a82d12a101"
        },
        "item": {
          "id": "4899faae-f8f3-4b88-8476-41a464a01c4f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ebf3aa0c-eddd-4d25-9871-556a65463788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d07254c-cb31-4ed6-a9b8-09a0d38a26b9",
        "cursor": {
          "ref": "9bde86a0-5111-48ad-a1f5-6cdb9707617b",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0efcc86e-213a-4169-bbaf-86b6ec017f07"
        },
        "item": {
          "id": "9d07254c-cb31-4ed6-a9b8-09a0d38a26b9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5aa6d406-f71c-469a-beb4-5802a2c43e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d765054d-d163-439a-b7b1-68d6c4fcd792",
        "cursor": {
          "ref": "ec64f838-b295-43ec-81b7-8ef750c4c691",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c1919ebe-cb5e-42c6-b220-d35f85c5e2a5"
        },
        "item": {
          "id": "d765054d-d163-439a-b7b1-68d6c4fcd792",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ff9ddbe4-b698-4241-8fde-e16927f5f41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c121bfe-5985-48b3-a676-e55c3c10e17e",
        "cursor": {
          "ref": "f97188cc-5ba2-4622-8b94-c1a7a90c2b6a",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "dbdaa318-9df5-4f1e-93de-ddc141a25761"
        },
        "item": {
          "id": "6c121bfe-5985-48b3-a676-e55c3c10e17e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b7d0d8e3-72c7-431b-bd11-aea7045631c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4cc389-6725-41b4-b0f9-ba2e8dc25adc",
        "cursor": {
          "ref": "699ad342-a431-41da-97e8-aa94adb8c562",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "370e7a6d-5324-44b0-aa86-c3f08aa4fd68"
        },
        "item": {
          "id": "ad4cc389-6725-41b4-b0f9-ba2e8dc25adc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c4baa79f-ad53-4979-9392-2be3ffde3995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b952ca3-8c5f-48a0-a482-0cdfdd5d2ac4",
        "cursor": {
          "ref": "6ab5818c-1452-4f09-8a2f-c86fed3470ab",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1efbd638-663d-42ba-b991-7581991ad313"
        },
        "item": {
          "id": "2b952ca3-8c5f-48a0-a482-0cdfdd5d2ac4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d62c9946-4db0-4be8-bbcc-9493ccc132a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7fd8c81-473a-4fec-8947-0113960c0dfb",
        "cursor": {
          "ref": "b965b25f-1018-4865-abf2-cabd23fda454",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3a18caa5-8346-4e05-aa38-2c16b9ec9a35"
        },
        "item": {
          "id": "d7fd8c81-473a-4fec-8947-0113960c0dfb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d9e72966-fafb-4c48-b52b-6c8f08a78c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44d25a1-49cd-420e-95ad-f10224e6417c",
        "cursor": {
          "ref": "9b958d0c-5f8b-4dfb-8b0d-c3de291908a0",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8cf9acd3-0f88-4425-9fce-053608f2a2bf"
        },
        "item": {
          "id": "e44d25a1-49cd-420e-95ad-f10224e6417c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b2d44eb3-8a4f-4adb-b0bd-5447e2655281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fed3285-9382-44b6-84f3-4158784998d8",
        "cursor": {
          "ref": "e0c7880f-4772-4065-a9a1-83b57a1a2fe4",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6d60c1ab-71ef-4634-a81e-885a83cb6fbc"
        },
        "item": {
          "id": "6fed3285-9382-44b6-84f3-4158784998d8",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4c8bbf59-ff03-46ee-b23c-25a9d99ce761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21590691-7ea7-4a6d-b428-88439058f039",
        "cursor": {
          "ref": "a02f5330-2d0c-4d4a-b2c5-6f6de4dcd019",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a8cafdcc-4314-4c12-93b9-295e2c00a24e"
        },
        "item": {
          "id": "21590691-7ea7-4a6d-b428-88439058f039",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2cec23a5-4325-48de-ad4d-2472469c32db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353df402-53f6-4b03-bd9c-5339bdef2323",
        "cursor": {
          "ref": "3d81186c-3328-4bc6-8f79-a2a116a56cc8",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2c1022a7-eb5c-4a55-86ea-a081dd394e23"
        },
        "item": {
          "id": "353df402-53f6-4b03-bd9c-5339bdef2323",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f2ca472a-daf2-43b2-9a10-fe4adaffcd92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1de546d-58f4-4d69-8351-48a64a8af824",
        "cursor": {
          "ref": "e7bb3ac9-b27e-4662-ba0c-0f44f6d5ea6b",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d5d00a8a-4192-43af-ae46-a97948bff5ed"
        },
        "item": {
          "id": "a1de546d-58f4-4d69-8351-48a64a8af824",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d2a6fe09-d469-4158-ab09-c4799ac36dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a500bafc-1f5f-4997-8fab-9319a6e6bf5b",
        "cursor": {
          "ref": "4ecb6705-db34-4d1e-8f26-2595c83743b2",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ef3d0ef8-58d5-4788-a1ab-78e8b2fe9848"
        },
        "item": {
          "id": "a500bafc-1f5f-4997-8fab-9319a6e6bf5b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7729a888-af89-4a93-ba6e-40c8f4d84a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc2e13b-48f4-4c75-ae65-bddf4aab582b",
        "cursor": {
          "ref": "1fc91b5d-7816-417f-a55a-c46bb9af712c",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c93b6f07-60bb-4b70-8be4-79d55377e2b5"
        },
        "item": {
          "id": "2bc2e13b-48f4-4c75-ae65-bddf4aab582b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0c5969d1-f36b-4fb0-977e-de1f50971018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3846d700-7953-45ec-8047-0e2fe87b1e33",
        "cursor": {
          "ref": "2abf0980-e520-4253-b974-c7f9b2257d4f",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f2584031-36f2-4542-b97e-54bf14b0812f"
        },
        "item": {
          "id": "3846d700-7953-45ec-8047-0e2fe87b1e33",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3db11199-b895-4991-a0b9-e692f6a7fd48",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b185df-7791-4b49-86b9-47de15985f38",
        "cursor": {
          "ref": "62a8920d-594c-4ac0-afea-75fbe20446ea",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5b03ab6c-f0ce-4673-b142-56987446d8c2"
        },
        "item": {
          "id": "c9b185df-7791-4b49-86b9-47de15985f38",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cdf68dd4-134d-4a33-956e-5c676d4a6fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c6d8945-c37a-459c-8384-7748bcfe01fe",
        "cursor": {
          "ref": "4a7c6830-31dc-4559-9cbf-d4b788c6feed",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ecacfd21-9834-4973-9be9-590bbc351f64"
        },
        "item": {
          "id": "0c6d8945-c37a-459c-8384-7748bcfe01fe",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "62a564ef-2351-47b4-8011-2da2f7f05ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed515b7-5b0b-41b0-bbfa-8fa37615a276",
        "cursor": {
          "ref": "df71e911-5976-4019-b63e-ef3878d3a3b2",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "07d692da-af08-41cd-8610-9d41b684a992"
        },
        "item": {
          "id": "9ed515b7-5b0b-41b0-bbfa-8fa37615a276",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ad5b3376-7fe0-4c03-968e-10c5d0c95a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ad2b53-aa17-4f09-994f-8f1ebcdb1b4b",
        "cursor": {
          "ref": "f766eba2-cb34-4cca-90bd-ee18e2d037e4",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3ed965d7-f845-48ed-a152-73cbef640b18"
        },
        "item": {
          "id": "52ad2b53-aa17-4f09-994f-8f1ebcdb1b4b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "806b578f-8193-4942-9109-1a7fa95486ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bdf5441-729e-4ed8-a5b6-2b7cc91670c5",
        "cursor": {
          "ref": "ebbdf4ed-3337-4b12-8d95-0ed9674f6434",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d5f06f1e-764b-41e0-ade0-fe9d35fb3640"
        },
        "item": {
          "id": "8bdf5441-729e-4ed8-a5b6-2b7cc91670c5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a1efab2a-5f75-4e6f-8ae8-c0aef765b6b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48279045-f2ca-4a2f-95b9-bcdba7177ae8",
        "cursor": {
          "ref": "61756032-a4c6-46f8-af2d-d4db4f0d199f",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b87c0c7a-e4e1-491e-9ae3-e1ca84a4f973"
        },
        "item": {
          "id": "48279045-f2ca-4a2f-95b9-bcdba7177ae8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "03a202a1-4ce3-421d-9c83-b0156ca9560e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1eedf52-5ce4-47a9-87a8-3a39ac2048ac",
        "cursor": {
          "ref": "848ba3a4-16de-484c-98ab-d51123ee63a7",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b876ee59-e65a-4215-83e1-6d519b84569a"
        },
        "item": {
          "id": "f1eedf52-5ce4-47a9-87a8-3a39ac2048ac",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "43fc470f-b6a5-43bd-a96f-93ae79709745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a5661a-1bd7-4c6f-a2ae-7c73d6591cf5",
        "cursor": {
          "ref": "60f777a9-fefb-4c15-8245-6a81d3c3c45e",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2c736076-b648-4dc6-aa2b-ecf5287d0f8c"
        },
        "item": {
          "id": "b0a5661a-1bd7-4c6f-a2ae-7c73d6591cf5",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "354d8015-4b23-4ff3-86e0-1a492c7484e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af409155-ddd4-4b3a-85cc-ef60dfdf4068",
        "cursor": {
          "ref": "c01688a6-2d35-4f93-b530-9bf8c8b483ec",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1428af67-7a01-41e9-bdac-94a6e56be16e"
        },
        "item": {
          "id": "af409155-ddd4-4b3a-85cc-ef60dfdf4068",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "73a4550b-1fb8-49c9-9895-918bdede238c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86df70a7-5609-4a36-8ee0-9796cbd2875a",
        "cursor": {
          "ref": "1e318551-b049-4750-a7cc-857c0323beef",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "db19c5e8-46fe-4d55-a9a4-ee3feeb4af0c"
        },
        "item": {
          "id": "86df70a7-5609-4a36-8ee0-9796cbd2875a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9bde01a6-f549-4ef9-9fe3-5249c5931220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c677bf6-ac63-4d52-9306-0c663e92a2f1",
        "cursor": {
          "ref": "d691b144-4efe-4a9c-ad0b-8b2f4e4fb23d",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1926b97b-32b9-43e4-815d-8309ad895bb3"
        },
        "item": {
          "id": "6c677bf6-ac63-4d52-9306-0c663e92a2f1",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e0d20286-944a-43e4-851c-fff399f8ef9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a0877a-8ff8-48dc-937a-d1e7e4fcb337",
        "cursor": {
          "ref": "4dd521aa-e730-4086-acad-1ed707bde075",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c4941887-dc3d-4e2d-bbc3-53db3f5d37a2"
        },
        "item": {
          "id": "b9a0877a-8ff8-48dc-937a-d1e7e4fcb337",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "db49dcb5-e493-4008-99f5-840579da62a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d97e6b6-1a48-4af1-a366-3bdcb9f0c2b0",
        "cursor": {
          "ref": "f1516c7c-d647-4ab4-8761-3578909c2588",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a8d13f63-4e92-482e-8c1b-153b43fa2900"
        },
        "item": {
          "id": "9d97e6b6-1a48-4af1-a366-3bdcb9f0c2b0",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b1f5f544-8332-474d-8d56-88b25f790d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd3fa5a-de21-441e-87bd-7e511f9bb9f8",
        "cursor": {
          "ref": "cea9fa57-b695-4e90-ab99-e05568e61457",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "bf6be6b4-c94e-460e-bb84-9d2c004978ad"
        },
        "item": {
          "id": "8cd3fa5a-de21-441e-87bd-7e511f9bb9f8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b878eec8-318f-4086-ad46-8c66e9bd5408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8942d9-3a45-45ff-99c4-247bf614ad00",
        "cursor": {
          "ref": "523c0229-696f-4e3f-8dea-3068c13bd904",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c317ff2f-0984-44e4-8718-0a1fb44ee356"
        },
        "item": {
          "id": "8d8942d9-3a45-45ff-99c4-247bf614ad00",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f027088f-0380-49f4-a255-6370e65b626e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe60c58-f77b-4e31-b839-b5cfc9971d86",
        "cursor": {
          "ref": "a4620274-71c2-4fe4-b893-74f138b160b9",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1a6fceb6-8b6e-4223-9116-777a8a909889"
        },
        "item": {
          "id": "fbe60c58-f77b-4e31-b839-b5cfc9971d86",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "43b73a72-4574-4d0c-82e1-1d17c31f068e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8cbd7b-cec1-4676-8a63-6f7e0e780a35",
        "cursor": {
          "ref": "20d9bcf0-a245-46f4-aca5-dd9d3234c32f",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "32227070-3dd1-4899-b255-becb3fc23c69"
        },
        "item": {
          "id": "1d8cbd7b-cec1-4676-8a63-6f7e0e780a35",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9b2357d7-5759-4657-ae9a-8bab19985436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4b5af9-00a1-4279-9616-f59b5954c64c",
        "cursor": {
          "ref": "b3f6f5e2-9030-4f2b-a3f6-89bc9ebf2e0b",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "eecc8250-0012-42ba-ba50-049fc9fd4850"
        },
        "item": {
          "id": "7c4b5af9-00a1-4279-9616-f59b5954c64c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d491c70c-a10a-4d3a-bdb0-233b7bb3f932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9010cd3-fb70-4487-b7a4-c20c68adfd17",
        "cursor": {
          "ref": "77dabb68-b9da-48ab-8c48-aa7d850f1881",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "08c121b0-3cf7-4d7a-a8b5-cdb2be6dc592"
        },
        "item": {
          "id": "c9010cd3-fb70-4487-b7a4-c20c68adfd17",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6514d098-9e16-479f-ab95-ecfc6d7817b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1fee9de-00e4-4de4-830a-2dc414a46973",
        "cursor": {
          "ref": "5033aaf8-42a0-4787-8de0-df8779cdc8f1",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "020c70c1-a38c-4fda-ba2d-8e9704368891"
        },
        "item": {
          "id": "b1fee9de-00e4-4de4-830a-2dc414a46973",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "917a70d9-435b-4fcb-accb-76608b5f4cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa98d15-6d07-4b37-9254-3a0d730603f2",
        "cursor": {
          "ref": "ff98c309-b87f-4d0c-82f5-9218433d2ce6",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7585a5f9-cb3f-4853-a68b-d62526bc89e4"
        },
        "item": {
          "id": "1aa98d15-6d07-4b37-9254-3a0d730603f2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c6c1b7fb-65bd-4f24-b226-38119505f9a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac6ef7c-80c5-42a0-ad8c-2e85701584e8",
        "cursor": {
          "ref": "3ae3b968-d1ee-4e0c-8599-a1b1146072ec",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "31450434-bf40-4fd2-8bc2-ab3f8295b746"
        },
        "item": {
          "id": "4ac6ef7c-80c5-42a0-ad8c-2e85701584e8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "53213b21-7741-4a27-94d9-7c1e650e501f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6386d510-32ae-4535-b03e-ce6ea5c64740",
        "cursor": {
          "ref": "ee0dad21-3e24-404b-93f5-347f25234cd8",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b7d012ce-86b5-4316-b30d-d22a9ab76b7c"
        },
        "item": {
          "id": "6386d510-32ae-4535-b03e-ce6ea5c64740",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "53fa7719-32e2-4242-8e04-644c11182827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49c4aa2-056a-4659-86c6-fb65f4333e15",
        "cursor": {
          "ref": "52b3a436-d000-439d-a546-e48cb1bd1089",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "646c97e8-02c4-4f6b-949c-103b220a0e28"
        },
        "item": {
          "id": "c49c4aa2-056a-4659-86c6-fb65f4333e15",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "25b1a3e9-4885-419b-bd23-56e9648c32b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b3a754-051f-4641-b69f-9dd925ac0eb7",
        "cursor": {
          "ref": "9b01faa6-4acb-46d8-afa1-4329769d1855",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2f0aaf31-9357-41cd-bdc7-e80550e80686"
        },
        "item": {
          "id": "94b3a754-051f-4641-b69f-9dd925ac0eb7",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1add1d45-f790-4cf4-bf67-db1c866c6543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3571a891-cb8e-4c1a-bbcf-65fd9d7f11e0",
        "cursor": {
          "ref": "08bdae3d-31a6-49d7-bc75-2f771339aba3",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "92bff01e-acee-4dc9-b5ae-19a2c6baa03c"
        },
        "item": {
          "id": "3571a891-cb8e-4c1a-bbcf-65fd9d7f11e0",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5139e33a-b9c7-4140-97bc-326e1d4b4f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68023c45-7b12-4789-83fb-cdeda8edbeff",
        "cursor": {
          "ref": "40758ff4-10b9-49c2-acad-ef0597f1fad5",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "528e6ca6-4bce-452b-bd8d-3be2fc25c60f"
        },
        "item": {
          "id": "68023c45-7b12-4789-83fb-cdeda8edbeff",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a9fc6171-a7d6-478f-b96d-d5e9f15e9bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87643953-e04e-4894-89bd-3565595350c4",
        "cursor": {
          "ref": "e9126f30-b738-470a-96dd-d216a90a5fcf",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3a2936b7-cfa0-4c29-a162-8f2360aa67b2"
        },
        "item": {
          "id": "87643953-e04e-4894-89bd-3565595350c4",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4ebfdaba-0055-4f3b-b969-9f6ecfb8decb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f7772a-5857-489e-a4be-f33d725c9574",
        "cursor": {
          "ref": "78070baf-8464-498e-b25a-ccd3806fcb66",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1f023d41-6684-4601-be63-ccc5a5138136"
        },
        "item": {
          "id": "49f7772a-5857-489e-a4be-f33d725c9574",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "95d0a165-1310-4e3e-8981-5e799b6aa54f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deaa6c8b-18cf-447b-b19c-551d4838f010",
        "cursor": {
          "ref": "ad760f02-32fd-4886-a0dc-3f2b6e4c38a0",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ff049dff-579c-41ae-a321-70a899fba061"
        },
        "item": {
          "id": "deaa6c8b-18cf-447b-b19c-551d4838f010",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "677f8cb8-436a-4584-a751-818c6fe2f0ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c41e687-48d9-408f-afd5-1a685b09ca9f",
        "cursor": {
          "ref": "1674932b-c03b-4675-80ae-aebd4f1e5afe",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "02eaa40f-38d7-46a3-b856-e2a425eb59e1"
        },
        "item": {
          "id": "1c41e687-48d9-408f-afd5-1a685b09ca9f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7243bbf3-13fa-4347-a5d3-a78043e65c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f93f37a-0c3e-4f73-b939-a92873bbf52d",
        "cursor": {
          "ref": "be559598-0de6-4da3-a7e4-92d0964e3472",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "63b1809d-4fdd-4470-b1cf-01bc41c7d9bf"
        },
        "item": {
          "id": "9f93f37a-0c3e-4f73-b939-a92873bbf52d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "15827b17-aad2-4416-8781-f9bf23aac310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b433708d-5ccf-44cc-a354-52550968e258",
        "cursor": {
          "ref": "e190275e-dd63-4cb9-b133-0207b008a23e",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "122f392b-e07b-477a-ad81-80da8918b98e"
        },
        "item": {
          "id": "b433708d-5ccf-44cc-a354-52550968e258",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e6eaf27d-a5ac-4527-b0ab-3e77b059ac11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa85fd2b-1bd3-4bf8-8d16-dd8dc8db65b7",
        "cursor": {
          "ref": "c90184c6-4339-41be-9cd9-d07588fb6256",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6401479e-38d1-4571-a095-4f73fda6da1c"
        },
        "item": {
          "id": "fa85fd2b-1bd3-4bf8-8d16-dd8dc8db65b7",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7967c444-8028-4d3c-89c1-b6e895781b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e95f92-79c0-40c1-b08b-f2b5f8239d5b",
        "cursor": {
          "ref": "399f45e8-118e-4be1-97c8-5fb88f605293",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "507e0e6a-2375-40b7-aae0-744d0fde0a18"
        },
        "item": {
          "id": "19e95f92-79c0-40c1-b08b-f2b5f8239d5b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f6b93ca2-effc-4c0a-97d7-657d0fa53ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "405ccf27-7a9b-4753-9ff4-4176182f9190",
        "cursor": {
          "ref": "a013cb24-f4d5-42d8-8bb0-3896e7b9e63a",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ffd29d4c-c18b-4087-95eb-3c0d3c86dde5"
        },
        "item": {
          "id": "405ccf27-7a9b-4753-9ff4-4176182f9190",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ecb22300-2fbb-4335-a74f-59f454ae963b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2abee15c-bf76-4b53-9531-233f3ea2a21f",
        "cursor": {
          "ref": "51d221b5-d46b-4d15-a696-4a3234c3a3af",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "05b85e02-0f13-43b8-b41f-290bea6375b3"
        },
        "item": {
          "id": "2abee15c-bf76-4b53-9531-233f3ea2a21f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f5ae9536-9949-456d-aebe-269d52632ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f752bcf-e9c6-40ef-b60f-6a6b6c27a895",
        "cursor": {
          "ref": "f7c194bb-3c67-4e0d-83ef-7a6529d1b638",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "586399e5-1180-4a79-8a49-47e97249f333"
        },
        "item": {
          "id": "3f752bcf-e9c6-40ef-b60f-6a6b6c27a895",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "04949592-1ccc-486b-851c-9e70515c73f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3234e0-ed95-4222-b3d1-e08dd025fb2d",
        "cursor": {
          "ref": "2cfc9115-b5a8-4d7c-bdc6-288e7941a6a0",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3fdfc38e-5b34-4a9d-9fea-2a20476cb476"
        },
        "item": {
          "id": "ec3234e0-ed95-4222-b3d1-e08dd025fb2d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "75cabaac-ac90-4248-9c11-58c29b645b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4828d54-4013-486a-bbf8-7b0236a0b81f",
        "cursor": {
          "ref": "dbb2a686-8b33-47e2-85a2-2acb33f37e39",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "cc1d2a0b-14b9-4d8e-bc97-c57f8619dc2f"
        },
        "item": {
          "id": "f4828d54-4013-486a-bbf8-7b0236a0b81f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "93a7d4e7-8773-4d8e-bf23-b4e543b3c061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dcfe6d1-5e18-43b0-a5d1-bf04fec3cdee",
        "cursor": {
          "ref": "06783ae4-2f39-43ed-8cd2-013f16c5ff4f",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4ea43b6b-3e35-4492-830e-1ccbefa96935"
        },
        "item": {
          "id": "7dcfe6d1-5e18-43b0-a5d1-bf04fec3cdee",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "edbb47da-7252-4efa-a4c9-cf17e3649b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da10d6c0-9907-4985-b73f-00c9fcbaa5a9",
        "cursor": {
          "ref": "3c6c1bac-c30d-45bb-ad17-8abf6beedb2b",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ff986a63-1c1f-48a7-8173-f28805b226ee"
        },
        "item": {
          "id": "da10d6c0-9907-4985-b73f-00c9fcbaa5a9",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "dc4ee7c0-fff3-42c0-a0f4-4828eb4e2f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd1f95a-8154-47de-a899-92844f0365ef",
        "cursor": {
          "ref": "f9019fbb-3f84-4d5a-99eb-52c5ccb7ec1a",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6f5510ca-7f56-464e-83ed-b59a9455ff45"
        },
        "item": {
          "id": "8fd1f95a-8154-47de-a899-92844f0365ef",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ba7ebfe0-1a3f-4e81-85da-ce6c5eb94291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224a3073-a3d1-4174-b5ae-480ec2d26642",
        "cursor": {
          "ref": "dd0e0ff9-8246-4e31-8e8b-433341e82696",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6fd0373e-29f2-44fd-8079-630c38ef0c0b"
        },
        "item": {
          "id": "224a3073-a3d1-4174-b5ae-480ec2d26642",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "abb8a00b-b519-4279-b10b-b63f5a2bd62f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a14dd70-73e4-463b-86ed-c00b663198f8",
        "cursor": {
          "ref": "41e775c6-898e-4b73-8f40-4cd883b62658",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d5be3c10-0fd4-446b-9584-0921418008f5"
        },
        "item": {
          "id": "7a14dd70-73e4-463b-86ed-c00b663198f8",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "512566c1-fb90-43a1-be83-c3cb6500eb6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc1d64e-814e-4dfe-9df2-0cb162f6e820",
        "cursor": {
          "ref": "25be55c3-00aa-4273-8986-1f48578ea33a",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f8902aca-3506-442e-be5e-7ec86497633d"
        },
        "item": {
          "id": "7fc1d64e-814e-4dfe-9df2-0cb162f6e820",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "db5a75cc-66af-4572-ace6-5cb4c429c3b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f92d93-8d95-46af-9040-f23c6ea5a5aa",
        "cursor": {
          "ref": "ac63f333-f77c-45d0-95ac-d4bf5cfd39b8",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3424c36b-a9d8-440f-8650-605d685ea010"
        },
        "item": {
          "id": "b1f92d93-8d95-46af-9040-f23c6ea5a5aa",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e51dbaaa-c0cb-46ea-ac9c-e7d5ba5fedea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c20630c-e7b7-41d2-9c74-9ced82bfe8d7",
        "cursor": {
          "ref": "a8f9e7dd-a656-4ecb-b86e-1c6d198f1e55",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9bd2b112-dd46-4d0c-bc6a-37e0c503d60b"
        },
        "item": {
          "id": "7c20630c-e7b7-41d2-9c74-9ced82bfe8d7",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "cc943f1d-5529-44bd-b5f1-73150ea98491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74147d4-ca81-471c-ad76-ebc90bb17518",
        "cursor": {
          "ref": "6de4749b-88f9-420a-9347-769aee71e3e5",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8fd896d8-8d8a-4f6a-8517-ad615c1c6179"
        },
        "item": {
          "id": "f74147d4-ca81-471c-ad76-ebc90bb17518",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1acdc876-c303-4d3c-b8f1-383726e84dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0ac04e-1ad9-476e-a8f0-ca07427c4074",
        "cursor": {
          "ref": "926fed6f-a82f-4d50-84be-4c8dc5a98241",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "cabad0d2-a35c-4c4a-8bc0-cb5c9b843119"
        },
        "item": {
          "id": "3a0ac04e-1ad9-476e-a8f0-ca07427c4074",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "47b27238-70dc-4df6-9035-d5a405082242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d398dc8c-b164-4cd1-93ed-48cd4e955070",
        "cursor": {
          "ref": "8fc21251-a199-49b3-a20c-3c6d43a06e3d",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7176b2d0-6503-4d16-8619-e49f30c53785"
        },
        "item": {
          "id": "d398dc8c-b164-4cd1-93ed-48cd4e955070",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "851ccde1-04cf-45cf-a4fc-2a8f6e8c7b44",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "6f3bca52-3582-4a44-bcec-8a7c931af1f7",
        "cursor": {
          "ref": "ef779036-4ac8-4384-b678-d1de813dc1c3",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "79629f3a-b57a-48a7-b5d9-9c9a836efe06"
        },
        "item": {
          "id": "6f3bca52-3582-4a44-bcec-8a7c931af1f7",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "54fdc097-e015-4330-8c54-c8f3cef395dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421814b4-d084-4202-bc4b-0e385d4058a9",
        "cursor": {
          "ref": "2d9c3137-11dc-40e3-bc6c-f06f62c301f5",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e216afee-da86-43cf-ac70-d067363a0951"
        },
        "item": {
          "id": "421814b4-d084-4202-bc4b-0e385d4058a9",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "411cb19d-0114-4680-8e5b-d1fda031b70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3dba6d6-7ba0-48fa-a6a6-611ff41f874c",
        "cursor": {
          "ref": "acd72c18-a657-4fa5-aeea-d29ee1574af0",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "bbcfa833-8ca2-4671-93ef-8a45eee13ea9"
        },
        "item": {
          "id": "f3dba6d6-7ba0-48fa-a6a6-611ff41f874c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "baafc595-b78d-443c-9be0-38ac8795bfd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f362db29-634d-46ae-aedc-fc4881ac1199",
        "cursor": {
          "ref": "b86992a1-b92c-440d-8b36-114ac8149aac",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "99671f9c-5eb3-4e1e-8428-5876ca053691"
        },
        "item": {
          "id": "f362db29-634d-46ae-aedc-fc4881ac1199",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3c70cf3d-de3d-486d-ae03-97a87d3859cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9761a507-3cd1-473d-a729-42869e8b832e",
        "cursor": {
          "ref": "e9c19166-6091-4d45-b337-228c6a1564b4",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "557cbaef-680a-4194-9238-cb1e8ba18c98"
        },
        "item": {
          "id": "9761a507-3cd1-473d-a729-42869e8b832e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "29e6cf35-54b9-47d4-916d-b55eb03d258e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2e7b56-3b8d-4369-9ef0-db47df29b7cd",
        "cursor": {
          "ref": "2b9e472c-3708-465b-a3c0-0d6d9c190e0d",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3add7df2-d664-451c-b413-2a9db99db799"
        },
        "item": {
          "id": "ed2e7b56-3b8d-4369-9ef0-db47df29b7cd",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9c40f8a3-c69b-4c75-877b-ddc895415584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49f768a-8eb7-4a20-bf79-88f0ec14f90b",
        "cursor": {
          "ref": "00aa1d1e-059e-4b11-b7cc-bf2563ee14fc",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a8123e73-65b7-4596-a9e8-3f761ea137e3"
        },
        "item": {
          "id": "b49f768a-8eb7-4a20-bf79-88f0ec14f90b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "91fa15bb-0241-4562-b8c5-35e919d3ca78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f607d94-0c6f-4686-9d2e-4d82bfa2f11b",
        "cursor": {
          "ref": "d339ce79-8db4-467f-9502-73758734086a",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7a232bb4-0c02-463c-83f9-72502bb913a1"
        },
        "item": {
          "id": "8f607d94-0c6f-4686-9d2e-4d82bfa2f11b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b8f02097-3551-46fc-9cf4-363265ef1282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc3be81-063d-453c-9f27-2c2d50ff10a1",
        "cursor": {
          "ref": "57071d66-e3c3-49d9-91dc-e09edc6fc8a8",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "eb5a63b6-59b2-4a96-b0c6-15c0c42ee91c"
        },
        "item": {
          "id": "7cc3be81-063d-453c-9f27-2c2d50ff10a1",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "56734170-5a28-486f-be17-0ff36675ffb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f260ffe4-1e20-4915-afe3-b04f55cb8c11",
        "cursor": {
          "ref": "8e607613-26a6-4d53-a443-72f6fd4d5b2f",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ccd25eb9-ed32-4821-bb2f-36b236774ffe"
        },
        "item": {
          "id": "f260ffe4-1e20-4915-afe3-b04f55cb8c11",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d043ee64-5c8e-4982-b32c-4b29b99101fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987952a7-021d-4c79-9a0f-39abdcf02a0c",
        "cursor": {
          "ref": "800f5d71-1142-4a16-8439-8d63ade671d2",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9c9598af-3f0b-4f10-ae03-002ca2331851"
        },
        "item": {
          "id": "987952a7-021d-4c79-9a0f-39abdcf02a0c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "832cb47e-4b0f-4efc-b4a4-4fd93ecfba69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64310e93-7a35-459b-809a-ee48a6a91a8c",
        "cursor": {
          "ref": "f00784b2-6e8e-4a67-8110-c66321154968",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "eb13d12a-a644-4a97-8282-61c3e17a23a3"
        },
        "item": {
          "id": "64310e93-7a35-459b-809a-ee48a6a91a8c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "663955e3-9ced-4c2c-9c2b-a418a64b917e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c566ec1-bdf4-4e4d-a221-088c02b6e128",
        "cursor": {
          "ref": "6cc62ad7-f4fe-437f-a579-0bbbc864226c",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1b17272d-47e7-4343-9f3c-599c2da014ef"
        },
        "item": {
          "id": "2c566ec1-bdf4-4e4d-a221-088c02b6e128",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c0d861e8-f3ee-435e-9fb1-93c829af75d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a247bba-940a-4646-abcc-351ed3e1336d",
        "cursor": {
          "ref": "4f3210f3-8828-44c4-a5a2-ad4831216afc",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "401d1bec-84dd-4eea-9488-480eb7b32060"
        },
        "item": {
          "id": "6a247bba-940a-4646-abcc-351ed3e1336d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3fe633c0-fb6b-4479-8220-9fe6775f2ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e84104cf-0e1c-4a18-beb1-7600968a3b10",
        "cursor": {
          "ref": "2f266b8f-74aa-4379-bfef-aacf19c49845",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a0b33835-953b-413b-89d7-7c5cfbceb36c"
        },
        "item": {
          "id": "e84104cf-0e1c-4a18-beb1-7600968a3b10",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f6c48ff3-7ef7-49a7-9084-8f8676022283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba69a37b-ae7e-417a-b25c-f430a8f99842",
        "cursor": {
          "ref": "611835f8-69a2-487f-a92c-849e90f5dfe5",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5b496c54-c1ff-4ff0-994c-2c2cd8328d07"
        },
        "item": {
          "id": "ba69a37b-ae7e-417a-b25c-f430a8f99842",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "19dc0226-8559-4804-8da0-1eb116d3e7e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e77deae1-01e4-412d-b242-eebc14da633a",
        "cursor": {
          "ref": "0250a53d-1152-477e-ab5a-b1c31c2100c0",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ba6aff4b-ca18-48e3-a5eb-9a6d0865013f"
        },
        "item": {
          "id": "e77deae1-01e4-412d-b242-eebc14da633a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b731bef0-021c-402b-9300-ad3c261bd0f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df026bb3-a088-46f3-9f18-a651d686f8c3",
        "cursor": {
          "ref": "05666f94-f227-4ccf-b5ac-20b6e10a4a3a",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b4993444-e16e-462b-ba21-d48acdec21b0"
        },
        "item": {
          "id": "df026bb3-a088-46f3-9f18-a651d686f8c3",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "055e2d94-4bf6-49c1-9de1-e819f00aad7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400e7f16-bf3b-4ac1-99c7-ce5d40c936e4",
        "cursor": {
          "ref": "61eaaeff-43d2-46dc-b125-7e2b1fb6271f",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ae96f6b6-8d13-4409-a456-4ada8d05bb22"
        },
        "item": {
          "id": "400e7f16-bf3b-4ac1-99c7-ce5d40c936e4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "06001d18-62aa-49fd-a6de-1262b8361374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338d6bd1-a8cb-4b0c-8555-f13fbc5b0536",
        "cursor": {
          "ref": "8b8577d1-6c81-48dc-b80b-32fa2815e08c",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "be9bef84-b868-4e8f-ab17-df6efecfe5cd"
        },
        "item": {
          "id": "338d6bd1-a8cb-4b0c-8555-f13fbc5b0536",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "959fe7e8-7076-4ff8-9bd1-01b73daf9f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e16791-3633-4565-ba25-fc1811ee35ee",
        "cursor": {
          "ref": "29e04e50-6b22-4f6b-839d-e2556c3b3f4d",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "0c12ae2a-41ca-466a-990b-ee50c46b9b85"
        },
        "item": {
          "id": "b9e16791-3633-4565-ba25-fc1811ee35ee",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "df7db27c-e352-4410-86f1-8b0029b79b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0f34e9-6fe7-4014-8972-220369f0442d",
        "cursor": {
          "ref": "45ed1c80-dcae-4b8a-b4e8-fb9e83fd62ef",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "c53d881a-7a64-46d7-a113-7ed0a3d47301"
        },
        "item": {
          "id": "9d0f34e9-6fe7-4014-8972-220369f0442d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2b4f81fb-c3cc-415e-8939-bf9ec00f0758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d787bb2-f1be-432a-b67d-4e4bd0dd4aea",
        "cursor": {
          "ref": "81f9dbf4-3bb3-4d3e-a516-014fc80f032c",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "219fd8d6-cfef-4dc0-8a2c-dc636535866a"
        },
        "item": {
          "id": "6d787bb2-f1be-432a-b67d-4e4bd0dd4aea",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d9a9c248-41d0-4294-b8c1-65f960626dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a51ab08-32f4-49ff-bae1-c333b4eaf2c0",
        "cursor": {
          "ref": "2d37da79-d7e0-4c47-877e-952c0aca233b",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "9a55ab2a-7e6d-4a15-9f9a-dd25f7f18e0b"
        },
        "item": {
          "id": "5a51ab08-32f4-49ff-bae1-c333b4eaf2c0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3f07f635-0bb4-4798-b201-cf2efd21d44b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee83301-7570-4e60-ad5d-f4e41671c54b",
        "cursor": {
          "ref": "5d8e37d8-a98d-4779-a36d-ad59dd73e149",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "b274a06c-d570-4997-9217-b67784170b3a"
        },
        "item": {
          "id": "9ee83301-7570-4e60-ad5d-f4e41671c54b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d19c902f-4c07-4e81-83ab-23626d42a636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cd5ffd-a791-40dc-af1c-1aadfd6bdd96",
        "cursor": {
          "ref": "24b138dd-b9af-40a9-a78b-c58d38f4e384",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "3093cf40-30e6-4acb-aab5-aafa95b963f6"
        },
        "item": {
          "id": "08cd5ffd-a791-40dc-af1c-1aadfd6bdd96",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "585bc58e-cf72-4017-a3d5-9ac9b874a3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414a3c37-fa09-4bf6-b236-3bd2a1772d77",
        "cursor": {
          "ref": "fefc4661-ab17-4a2d-8a87-02e78fa5bdfe",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "0e5555c4-d65a-49cc-bbb9-e07c8f5fbb1a"
        },
        "item": {
          "id": "414a3c37-fa09-4bf6-b236-3bd2a1772d77",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f47605ae-323b-4fe8-8792-0a02adf0df2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c7ab85-66bf-4c4e-9043-0a458bb91571",
        "cursor": {
          "ref": "0cab1a07-29c5-463e-b594-362747d08f50",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "32d91653-4336-4e88-83bc-be12885c7f2b"
        },
        "item": {
          "id": "b0c7ab85-66bf-4c4e-9043-0a458bb91571",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "13866ba8-a08f-4983-aa16-b4b8a8370c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b118f82a-c435-4fee-8839-8649c5747b20",
        "cursor": {
          "ref": "35547928-a25b-4968-9fed-21093ce899fc",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "f863a204-838a-43da-8536-4600b7c7fa01"
        },
        "item": {
          "id": "b118f82a-c435-4fee-8839-8649c5747b20",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "56a354c8-8f4b-48de-bc2a-5b26a23b987a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22d26b2-96b3-4737-9da0-bd26b069c093",
        "cursor": {
          "ref": "736531b1-5e36-4aff-a4b9-b8d2f4764057",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "586d8fdb-35c5-4fe0-8df3-12498f21696d"
        },
        "item": {
          "id": "e22d26b2-96b3-4737-9da0-bd26b069c093",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "86148fdd-c1a3-4441-989e-32beccfa6c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc0f50a-1105-4378-8558-8665390bb62c",
        "cursor": {
          "ref": "fcd4b2a4-acb4-496b-8431-0bf78ebcad60",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "c9050261-ff25-450f-9f59-1fba188acd8b"
        },
        "item": {
          "id": "3bc0f50a-1105-4378-8558-8665390bb62c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c8203727-7ac7-41d9-92da-2a5c180e4c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a8a104-4c99-469e-93d9-357c1449fcce",
        "cursor": {
          "ref": "8e0003f1-5e4b-42fd-b922-df45783e30ea",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "812712ee-52af-4cd7-ada4-6ff03c918432"
        },
        "item": {
          "id": "11a8a104-4c99-469e-93d9-357c1449fcce",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ef3b15f1-c98f-410a-91b4-b2187b7ecd31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41242ce-544e-45d5-b05b-ae3acbdb5b00",
        "cursor": {
          "ref": "cdfcc4bb-f8f5-4e40-8336-b0c61130a905",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "9d7862cd-d966-45d1-8330-a2bfd056fbc2"
        },
        "item": {
          "id": "c41242ce-544e-45d5-b05b-ae3acbdb5b00",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4c32ab40-9fea-475e-b865-05f99ee91a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17913c7d-1b20-4a95-8095-ed0a0763aaec",
        "cursor": {
          "ref": "99d3436a-def8-485f-8b8e-bfae34f2f278",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "3520f341-60d3-4e95-85f8-2be7b84afa50"
        },
        "item": {
          "id": "17913c7d-1b20-4a95-8095-ed0a0763aaec",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "bfc79504-bdbd-4c2b-86ce-2cb1b23622be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46fcb55-eaae-4295-befb-4b061ed195bd",
        "cursor": {
          "ref": "92ab952a-6101-466f-bae6-24a9dd5498db",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "cbb238d4-a347-40bb-9379-ece57f6cd036"
        },
        "item": {
          "id": "e46fcb55-eaae-4295-befb-4b061ed195bd",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b29b714d-493b-4a0c-b4a7-69643c93fd2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5667c3a-3ee6-4478-abde-a34365ca5d04",
        "cursor": {
          "ref": "1332d0a9-3108-4a2e-97e1-c73eccf6f774",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "b549063c-5875-4ddb-a1f9-e23198be8826"
        },
        "item": {
          "id": "f5667c3a-3ee6-4478-abde-a34365ca5d04",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "eaab693d-eea5-4d47-8877-f08fd9899f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15d177e-026b-44fc-baad-68d758fa7e54",
        "cursor": {
          "ref": "d0199460-fc4e-4075-92e2-3b84d6fae361",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "2207bc4d-eca5-4b03-935b-fd3caf8fe86c"
        },
        "item": {
          "id": "d15d177e-026b-44fc-baad-68d758fa7e54",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b24e7f02-9b44-4669-ba42-bd633c13b842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4520b9-7cd3-485e-a876-357f8ef13775",
        "cursor": {
          "ref": "758ea681-5e5a-4905-a73f-53fad14ab8cc",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "00f07c50-ef1c-49cf-86ee-07855dc0bbd6"
        },
        "item": {
          "id": "8f4520b9-7cd3-485e-a876-357f8ef13775",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "39bcf8b2-e582-478c-a524-59808f3ca1ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6fd5d9-b111-47de-b567-dcf3d2b4a285",
        "cursor": {
          "ref": "9cdb0c47-c279-4a4c-acab-5edef5f28be1",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "33584dbc-a21f-4668-abcf-633f997c6cce"
        },
        "item": {
          "id": "2a6fd5d9-b111-47de-b567-dcf3d2b4a285",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "44c3d222-7b3b-4ab5-b05d-b6e4723f6869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b517d1b-ebd3-4d46-8244-7ca5e60f6558",
        "cursor": {
          "ref": "a9193761-b9ac-47f4-927e-30349a46eaec",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "2e779d88-915e-42b3-970c-6ac125457786"
        },
        "item": {
          "id": "1b517d1b-ebd3-4d46-8244-7ca5e60f6558",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "074fcfd6-ccd6-40c8-9d9c-9fdf0f101c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff49f0a-b29f-458c-a8d1-317272246489",
        "cursor": {
          "ref": "437554ee-3c2a-4037-bfb8-3ea14cb4248b",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "b031f656-f3c9-47fb-8103-dd5898fbce0c"
        },
        "item": {
          "id": "6ff49f0a-b29f-458c-a8d1-317272246489",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "13f82bd2-3a81-4b84-906f-e56c7ce627aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156a8012-aae2-4b17-a727-86253821e05a",
        "cursor": {
          "ref": "3de616c9-3afe-4e9a-84a5-02398d712cc9",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "c28a19dc-2dcf-4eba-8cf7-1ce7a2365df1"
        },
        "item": {
          "id": "156a8012-aae2-4b17-a727-86253821e05a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "15b5396c-48b0-4106-9b6e-4df441e9f887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b402bef7-df70-4f4f-88b8-ceeac7570a39",
        "cursor": {
          "ref": "af4a6b37-d81f-4776-8105-66453379e22f",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "1cca3693-261e-41b4-8ab5-41f11b5379a3"
        },
        "item": {
          "id": "b402bef7-df70-4f4f-88b8-ceeac7570a39",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "72c03ba2-1064-4f54-b03d-921a53c6c208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4177528-5392-4f27-9733-697558b256e3",
        "cursor": {
          "ref": "415d2386-0e73-4566-81ef-9b08b71cf250",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "0b40a146-83c2-4bdb-8b6d-b56c34d82e51"
        },
        "item": {
          "id": "c4177528-5392-4f27-9733-697558b256e3",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0f58953a-4e06-4cd9-a016-b12ebc4d27d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11b8ba1-a30e-49ca-9ba5-877c0b292eae",
        "cursor": {
          "ref": "9f547947-6fd3-4865-ae9d-51eca0f26fcf",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "0a9222b2-6581-4f18-9a8f-d1f435019a4e"
        },
        "item": {
          "id": "e11b8ba1-a30e-49ca-9ba5-877c0b292eae",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7f1d355d-9e02-4146-b26e-1ebec31944df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94dc1e3c-fd03-4cb9-b521-48d228fafb63",
        "cursor": {
          "ref": "4e7e5e32-52e5-4a55-961b-fd89469ca746",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "1765bb7b-8dab-4317-a9ba-307c9bd789c2"
        },
        "item": {
          "id": "94dc1e3c-fd03-4cb9-b521-48d228fafb63",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a1af8089-0469-45a3-bd7a-20d9e97d5821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40fafd2f-ac82-4566-8807-0b26c2f9fe8c",
        "cursor": {
          "ref": "511bc7db-71ab-4436-81e4-78e7e438f614",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "46b1f5da-7afa-4979-a7d2-2de284b8a04e"
        },
        "item": {
          "id": "40fafd2f-ac82-4566-8807-0b26c2f9fe8c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9cd45769-162a-4d94-a718-d6e558f8227b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219ea851-860a-40b5-bcb8-4f56b3cd52c1",
        "cursor": {
          "ref": "ba27db7e-c1d9-4bd4-9ecd-c48ebcaa7e42",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "b2766dc8-c33c-4ef9-b94b-db71dcaf1657"
        },
        "item": {
          "id": "219ea851-860a-40b5-bcb8-4f56b3cd52c1",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "144ceea7-03e1-4d93-9b94-70a5e1275600",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "114d1952-b504-4f8d-a6f6-c77d99a708b3",
        "cursor": {
          "ref": "9b6242cd-1714-4a6c-b819-8b6fdc7b1988",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "a0b98755-7e33-444f-b532-a4ab6b67c446"
        },
        "item": {
          "id": "114d1952-b504-4f8d-a6f6-c77d99a708b3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "830c7857-e3cf-4b19-ab3c-272172f6c77e",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ecb882-71cd-4c9c-95d2-bc33b5df21c6",
        "cursor": {
          "ref": "66fcd221-6a5f-4f21-92a2-1f66b34fb77a",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "21ffa227-f7a9-403e-8027-eaf211675c3d"
        },
        "item": {
          "id": "f1ecb882-71cd-4c9c-95d2-bc33b5df21c6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f4d7703d-a161-4be9-9ec6-aad231297431",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e20544e2-bdb0-4326-a2a6-3b0007127249",
        "cursor": {
          "ref": "dd561900-0f59-425d-b3d2-79f438bdbaa0",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1d3c359e-5eb5-4752-9119-c851a2fbccdc"
        },
        "item": {
          "id": "e20544e2-bdb0-4326-a2a6-3b0007127249",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ec590398-211e-4bc1-ab7c-e7205381d77f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e20544e2-bdb0-4326-a2a6-3b0007127249",
        "cursor": {
          "ref": "dd561900-0f59-425d-b3d2-79f438bdbaa0",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1d3c359e-5eb5-4752-9119-c851a2fbccdc"
        },
        "item": {
          "id": "e20544e2-bdb0-4326-a2a6-3b0007127249",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ec590398-211e-4bc1-ab7c-e7205381d77f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0c41a6-0592-4516-b901-9c189a78de15",
        "cursor": {
          "ref": "4eb46bce-1ea5-4c40-a5b1-e54b533ca808",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "137be9e3-6f1e-4fc4-b697-2b87ad9103f9"
        },
        "item": {
          "id": "3d0c41a6-0592-4516-b901-9c189a78de15",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d64006c6-4ecd-43b6-a2ad-ad95a30d8e88",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8334c3-7ea9-4618-be16-07e63ff25333",
        "cursor": {
          "ref": "7ad5e98b-3d7f-4c33-80d9-7f41aa1907af",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "987af5e6-968c-456b-b4f3-48da9254a61c"
        },
        "item": {
          "id": "3f8334c3-7ea9-4618-be16-07e63ff25333",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8d66cb9c-aa1f-4506-9c48-1ac6d21af962",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}