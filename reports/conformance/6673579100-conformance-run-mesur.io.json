{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "29c7b4c0-cc12-4a46-b651-f05f9154d396",
        "name": "Clear Cache",
        "item": [
          {
            "id": "eab633e4-9a79-48dd-a113-09079f87bfa9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "071563c8-8482-470c-b978-678f73de588b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a13b2c5f-ed39-41e6-b14b-45745157a7a9"
                }
              }
            ]
          },
          {
            "id": "80f4925d-4e0c-40a8-b8dc-0149a5c499cc",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ae1edc1c-07a3-4fe8-aa7c-767c981176ce",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0edab432-41a6-4927-b4a9-4e4e9a7901b1"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8a9967ca-47b2-4aa2-bc92-ec8e6cb2315a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d235c2dc-e689-4a90-8592-889bea177498",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9e33f49c-747f-48f6-9ecf-8b253e2ce913",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f4e6b07-101b-4894-9314-294ef27838a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cc7a16eb-bea8-4797-9710-9b53367f3a93"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f3a5399b-0bc8-4f71-81bf-0d3f9a9cf932",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "75822b70-4e8e-4c9e-9d41-e227318cc2ee"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9ee8c28c-358c-4d11-91b8-738f861544cd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "60e82f5f-df1b-4251-b024-5551d1402c7f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a41d878-3cda-4e5d-9c3c-873d3a5e34aa",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "36589bbe-a845-4559-ba94-270dd249da61"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "30747e9b-34bb-470d-abac-51ccb249fd25",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "46757ad1-fc14-41e3-9524-8eb07bbc761b"
            }
          }
        ]
      },
      {
        "id": "7ec9efc4-be65-4350-9834-dd0c007423e6",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "abf39131-4b98-48cd-864c-e10c645b7861",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ebf96c4d-ad39-4f29-afe6-0fc487027dec",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dbbcfda0-a060-434f-9113-edf545188331",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31988284-8ecc-4d54-8300-9d39c8769161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b292319-b644-4529-8a01-5b722045e3cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d88fbf4-e989-4e28-94c0-1b3061fa4238",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb0203c-8ee4-4ddb-81c4-73979907d4df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b4ff449-f1cc-4917-9d92-c91a49bfba33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ccb35c4-2db0-47e4-a84b-bd478600b888",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e043cf-f84e-4385-880c-6ca9b0a87d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f20c695-7f51-4865-b92b-cb35d465caa5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "df902432-e6b5-402a-83ee-7ab8add79542",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "10908be3-1572-4441-8663-b953774743f3",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6921f278-d129-4459-8abb-821a0b303310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "057cdc82-1a21-42bc-bad6-3470a62df0e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d74a29-cb9d-4799-bb3a-6400cb9ca637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d41fe569-fd71-41c3-8058-be25661732cf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "128bfa53-707e-4902-8cf0-918b462a99f5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "55874c15-1bcb-428d-884a-ae614efb4655",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0924c9b-7d09-4b2f-83f4-3ca849cc5c36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a30456a6-b191-4815-be04-86190f757b99"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee34a891-96e4-41aa-9c5f-1387a4699103",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f31b29f4-2dc0-4266-9169-3f2052c7ca36"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1fd34315-ce1c-477a-8671-8edf70fd3fef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cf37119f-fad4-4a76-a73f-fe3af08ff410"
            }
          }
        ]
      },
      {
        "id": "e17d3f01-183a-4bb3-a616-3b8d8d7813ac",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "98d2a0de-87bf-4c6c-8d7c-0eeb483ac80a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "18ec32ec-c4d1-4f92-95a3-f83497b2c4fb",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "03dc6003-0c74-4cfb-8a35-69e63712b313",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1e739a-14f5-4724-ab66-01a6e39ca09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1296d0f5-b251-4501-a4b5-9d1216804c83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad8ba2c-b4df-4a20-9e9d-436a29f7f4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1aa9cc99-5e55-4252-b3b8-d18758730770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad49f61e-dcf7-411e-ba96-78bc66ef7e19",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3964fe-bcaa-4899-ba0c-6dbe1a326487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b9bfde-9d5c-46b9-98e7-15aec330c04a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b512e8-e2ed-4f5e-9362-e074442d4cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a3ccf0a-3bb3-49c3-b822-1785f6a71a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8a0e3d-2cc5-490c-a17e-72d099b44456",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c1f47b-1362-47fa-a86f-caea67cc1a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4649e46e-86b4-49cb-90bf-b431ad2f076d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0126cb19-88b7-44b2-921f-c60d4ce118f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7785fd24-04a6-46ef-9e8b-ae704f8800cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445a343f-e70c-4ae5-a5b1-415e1e142423",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "549f621f-cf02-485f-9fb9-03ea5ecaeada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3a29aaf-e862-4096-8a3d-c4a61fd510fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74074b84-9ae1-4660-8fd4-1a5af2e015b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8824e87c-bac3-4aaa-b736-d7f9c6190509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592b3d6a-8d40-40c6-bc0c-40539d56618a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ef93cf-784f-417e-9231-b668920c7911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f5fe54-b246-4df6-982d-808d19b0c439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a987827c-d5f1-4855-b606-fbed8ad216a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35692221-9cbe-42c1-b217-124c9db224c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208fca11-c736-4b8e-bce1-dba08904b01f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62f6691-4a01-443e-83aa-c6dbb7c983c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9357d828-75e8-4c03-bf90-18561c389685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd760998-d899-4487-a745-29d4357ffcee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8e2a802-60d6-4457-9799-80d0d6fa4cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "853783c8-ced6-4835-8bd4-92e07799c878",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af19a2f5-d626-46db-8dfa-11678bd38b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a83b2e-e6b9-4410-94fa-36b9ae5a3507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4f0840-eb1b-4bfe-9564-612fac5cd062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13fbc62f-543b-4615-93ee-c15aebcb321d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8dc1ec-9d22-4995-8464-b1fd79300558",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "516f36b5-bab3-41cc-a080-49e53462efac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2922c5ef-595e-45ea-ae5a-9058460670b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24530c1-ecc0-46f3-bc6a-d5cf43308adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "475835c9-5673-4da4-817f-885f90e296da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ee8e10-a627-4924-bcf8-089d1d52480e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01666d3-34b1-467b-9f06-532f336ffcfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9f0ac94-fadf-4d89-9d05-1c456c9dcf45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f37740-73d0-4d43-925a-1d7462ae2305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d742f39a-ac5d-4531-b1a2-22aa21ef9083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84643709-32f1-422d-9fb1-fe788fef0caf",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1991ff-3cfa-4210-a36f-345b7407d924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4af7901-2858-4bd5-b116-edab618a5fdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87fb7221-fa65-4e66-a251-e8dd6785ecc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b144b40-eaef-4408-9a3e-9de8ea9e0187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074d4dc7-c8a5-4f80-9193-1eccfb02dd34",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd7d200-d83e-4e3b-b30d-962005397012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e87584-521b-4406-a494-46c3d95f76ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c697d3-e144-4eff-b389-5202e1b11a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe8ef2a8-d1b4-4029-ab4f-aecafb41994c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc45bb3-9785-4001-abaf-a98808389239",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90344aab-f094-41a8-8eb3-71bbc829ad29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a877b54a-df9c-4b0a-9358-2948f5261ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a92d27-9d66-4925-b99a-bba4ca403d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb9315a1-f0d1-4d75-99b0-fc3bff00b5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8d9754-abe7-4bf9-aa60-2ab19f8d56db",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6840e823-bd45-4d48-8f70-64256c291479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07205f82-460b-4817-a050-ca0f0d170353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d70ec69-c558-4b12-94f6-79d900d484dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2f757ad-406d-4d4d-b8cb-217a6a0a0619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6037da20-f908-4dd5-818c-8aec3ec99b01",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf305bf8-d657-4e35-a949-4571ee938793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30fd4f75-b211-452c-856f-294f961259e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63593c0-f70e-4015-bd81-10579530f775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f11cde2a-2d69-4a67-b12a-9927b890b02b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ec755b-c177-4976-ba1a-c93904d5d800",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08fb9136-9837-4421-997d-18544eb872ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "536d49b9-814f-4127-8ece-b46a8423f9cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02d71ef-940c-47f8-bb96-319bb8135449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18075223-a3b2-48db-8015-460529ee3591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b399d4eb-e3c9-4319-8c8e-eadff2c09e42",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ab86ce-8896-42a8-90ae-a652fa15d17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4350c075-654b-470b-bcde-0ca1e6d9c2a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96de571f-e19e-40d0-92ad-4fc5d918c096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8a17f08-ab54-4634-8e78-ee5af995a11a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0782e233-f960-44c8-8766-a27a71b3a858",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00c3ef9-0d62-4349-90c1-02d60f013cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f76773d-37bb-4960-8360-07f8f16d2f63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76722f1-706e-463f-b34c-0d4f6433aa22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6bc6802a-688d-42ee-947c-4c216c85f88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ab43a2-26e3-4c82-8af7-286b21a918d6",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e4474c6-62fc-4e7c-b3e8-3f9f676d9a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24f9fdb7-cae0-415a-ae08-27e8f97e127d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1fb33e8-1950-4886-adae-a1cfc0b2efe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c17c26f4-250f-46ab-8bf2-d5a827ac8e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5729c39-88eb-473e-8415-a1afcbc4a3c1",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60015aa-0105-4c60-9904-23ba57472c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fed6c1b-07da-44fb-968c-5e8b243ee929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f931aa-cb3f-4c45-98c9-2c68cbfe026b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "45114e28-5b69-4d77-b7df-fe9715911f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f8b30e9-cd65-4d46-ae7b-1da2d515167d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d185102b-ea4d-48cb-80d5-734a7b2f2b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a7bb2b0-2fe0-4ffd-a96b-1f9363ce5908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7593a191-68b7-41eb-b162-d35221491dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5853976-c7d0-4860-a562-bbfc05b6aeb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de45ff6-f47b-49cc-8b6a-becb963ebbcc",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2af8cd8-4ab3-485a-9226-977a7d0fae92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94127ca1-489a-4831-90fe-fdfbe14034f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c493c3a7-58dc-4e83-adf3-755dbbf0a727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f7c60d5-96ad-4d36-9bff-34f7b959e13c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801a1526-7ef3-4912-a438-998c5cb07ee7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7023cba6-5c3a-42c1-8413-5d4f1c6179c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7515ad4f-0484-4c44-bec5-4025958ba7c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726e6bf0-4e6a-442f-ba34-a7d033d85b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f9a3c57-9422-4615-8706-8038a84ce466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda8b3a1-2668-4684-9631-2044efb443b2",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abdbdae5-0f1f-49eb-af8a-01dc11b4476f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e74cb49-c17c-4a20-8459-98a451cc5fc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9273e3ee-ac75-42fa-8e87-60e898119017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ff8f13d3-e6e0-470c-8ac5-4421cf1a5f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "287a3436-8104-4f0a-9e97-dc2829a6695b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b1b3e2-cbc5-436f-b70e-a284465b8a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc5cba5-9b98-403f-a9f3-0288a4fd64db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa554de-3030-423f-b0c7-76333bebadfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9d65056-dcff-4407-b6a9-83d576c808df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7596971e-f511-424e-8306-ce9af8eaa193",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "694fd674-b03e-4849-822a-d25fdec6dcb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8c3ff88-0b76-46ef-a824-4985d8d85c41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f68fc800-ccb1-4ba9-802b-d060236ab93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9abc349e-eb4e-498c-9a77-98078b92d871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52cb5af4-29b6-48e0-a7af-b3941332f276",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e38b91-957a-4923-9a52-bbaabfc60b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff706b2-0d83-4a26-b6dc-9c6ca5fca790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9171450f-29a1-4eb8-9cb7-70efe8151625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c5e7ff0-d1f1-4e65-ae6c-ae14759d4b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6c3aa9-81a2-4249-9853-1a261ada65ab",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d151e0-8e6c-46b6-8e1d-6ca806b2574c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6088f056-0a66-4584-838c-26e0ea96c9d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caeef8dd-1e70-4724-90cb-bff493166ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "06bbf399-156a-44c1-9c23-3529a18e3f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1159f8-5cd3-4999-9a42-c7f32a9a0077",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f565e931-e1b7-41fd-ad38-d6149b1c2d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68454d06-3ffa-4770-a09a-00a5ab0dc229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a6f9dd-9e11-4440-a673-3a18bce85342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c903af6-557b-4d96-b095-9faef9e09316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e80e61-66e9-466d-aef0-3f694d8341d4",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f208b13-5c38-4c29-8f00-50e9a31766a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb2e6739-e636-45be-8ac6-333b027ccfe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206b37c2-194e-4440-8d09-f241354422b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fc3c52a-d927-405f-a36c-cacdb0ea27cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96d60a1-d660-409d-8c68-7806c5f54758",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c045243d-e716-4e2d-a5a1-957629b42c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c1f4951-263b-4291-bed2-505a8d65fa56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2cd9272-71c7-4483-8f4e-dcadb06e97f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "924e6f89-30d4-4cf5-b539-3cbbdf615983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2042386a-a0d3-4e0f-9e55-b69e3ed4c700",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4728a7d4-0f2a-4cd1-9d7d-63a633515934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02261c44-107f-4a96-b7e5-23e6d114e546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97cec111-a4b5-4c37-8885-5802882d8674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "72c44b09-ea1e-469b-b626-549fccfd08c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c940216-3444-4643-8ab3-8f248c89af86",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "858c5818-d4b4-46eb-a64a-4e3511d3af86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a0966d1-e684-4d39-a878-7f57f5d05917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4a794f-9eb8-4728-8f6a-6e7e2b0da21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec83d723-de17-42f0-b691-107070e049e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e51a0d-43b7-4295-881b-091cb8ee56cf",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "620ab65d-7c65-416d-b8b1-f194154bba7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7299b0ba-56a1-4700-8e6f-0c40fdbf3f33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50cb08b-e935-44a6-b505-e8571e6d832a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f5aac4-bcd1-4165-879d-28af01dc7fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33cdf05-212d-46a5-9788-156639cf205d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ca17a7-501f-43fc-b5b0-37d62a8e39a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c5e6215-3c9e-443a-8856-c3042a22fa83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f52e76-3a48-4f06-ae16-b6053e683edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "11af8492-f0c9-4efc-943a-8bbee64bd6ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707eb0c6-3d8d-440b-b2c2-d809f0a61836",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc308a8d-ab19-41d9-9528-eb94bd8d0eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86517729-6003-47a5-b396-283e827c3f46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b35f7d-b251-455e-a04d-497d0d7a8158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "bc2f8953-72dd-4fee-898b-268ef2a342e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab44b934-639b-4a59-a3a8-0a695f4f05ea",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ffcf985-8a2a-48d4-9e45-1dcec7c5e24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d011f0e8-3b9f-4d32-89c6-43e070d29698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441bfddd-ad9f-43f6-a223-970c22ef0ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a83e89ac-0ce6-47c5-a280-437db838cb85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0bc7bfb-b6d7-4e3a-a269-f00526c1c78a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ebdbcf-ab5e-469d-a083-703adff33e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "836ac0ee-b49b-48db-b772-748d9aa481ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9489b6-ac2c-4cbf-ad1b-565fe2e50e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "79a5f53f-b6e1-4997-8ecf-481d443dcbb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074767e2-7006-4cf5-b661-6fa78a3d9b88",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b365ed4-da64-44c9-9636-8545ccd95cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11919619-1981-4d9d-a9a2-a98e4eb63991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2085b87-5e00-4bb7-8530-c5242bc36fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e19638d6-6bc8-47a5-878f-b8a1216eb606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94fce4fe-fbca-41f2-8f35-ca7426ac7215",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34616acc-8a83-43df-b26e-6ee8b10db93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5690330-1051-4709-8ee1-f5ffc51fd2dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bec2f70-99bf-48b7-a049-5607388c79f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1287a08f-cd62-48c3-955e-1f3b65b2e0c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e01d259-ff16-4c09-b111-1c9ede270c80",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc139eba-4243-4089-8e1d-d5b528e60e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5d3f995-8a6a-4fad-ba1a-4b1fd5d384f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312df54e-8bfb-4cf7-9fd2-8cf8a33258cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "532f35bc-3efd-46bf-adba-de93dd22341b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3834c084-7f13-4190-9da3-9076610eef9c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b726c6f-17b0-409f-a678-2da4ab740529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f630f7c3-6fa7-4b7e-9f81-40f411b08e87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31459e9-5c6f-489b-a535-42512ac3f3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "41a903c1-cde4-4c18-9f60-e4edbedfd652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d723ca2d-d373-4cd3-bf15-a3a88ed7b271",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49cc84a7-cd8b-4676-b7d6-e1adee36c158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "049cbaf0-3e93-4c4d-85ca-426c63ad31f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac8d87e8-0b83-4db5-9377-cfa215be244c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "fe6c3651-9083-4ed2-a649-45830ce5df2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9317c154-2b66-4e41-badf-c86c77e0873f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8909af74-56fc-4c17-98e2-6747a1a23b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07cc651c-b911-4c94-a0a6-0d7c561079f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e9ffea-7599-4960-9dcb-d5bda3bd7f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d3415f1-0a51-4332-8bfa-e2138ba13402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d802a3-c930-418c-8621-f697a9533c36",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f306ba9a-ccab-46f0-a898-689355d594ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e253034d-ee61-4c1b-b94e-79ca7e3d9457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052ab945-e5ff-41d3-bcc1-2e52429ab49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e076125-2511-4bb4-8533-10e98ee4dcc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e238362-af51-41e8-b648-93f7effdb6be",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c74ace8-ef00-4e6f-8496-6b058ddea6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f510886b-a194-4d33-8ebb-ba76ecdbc841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca30fcb7-0475-4571-94d3-67b01417ea3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5398b554-fcfe-468c-a101-5487bb35b6e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba437045-f08d-4703-88f5-18103b0df927",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "143c391b-49bb-4338-bd0a-71b5c0d07cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8772c64-3eb1-4128-8099-3372ae719174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56e9942-b65a-4d06-98e2-52362e7ae1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cdcb5e1-2815-4813-9a70-ecd7f272ccab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa1478d-afab-4236-8eeb-be13deb98e03",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1ab672-6008-4dd9-a7d0-ca8d03bd33a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bf6cd1a-3fd1-4278-990a-9a7bcba81e74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d827fc-3a16-4fed-a5bf-ac081f712372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fec0eb12-4afa-496d-9a8f-0b3082b52370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13014d3-34ec-4b19-98a6-556478227210",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2afc5c88-f57d-4c9a-8304-356ebe943059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51134069-e8b7-4d4d-926e-7c011d511b03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "836083da-4b3e-4897-98c6-a060f50f9480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6339f153-85aa-4f24-a5b9-c53957e9c829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70bbbd0e-0bca-4a4e-b9b2-ba057d90e8f8",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8383b5ce-6b42-4cb4-9e06-03d4f8a46e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6da85f2b-b1f3-408a-aebc-b7a7976726c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4239b541-fd5b-41e2-925e-6c48f2dc6fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "355f2d9a-ed47-4fe1-96dd-c789ccd4f4c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870327cb-8351-44c6-abb6-ed467ff42292",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "603b053a-5561-436c-8297-4836a07a10d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "513f8bc9-a927-493d-9bab-a9710e9f113a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6caab58-efe0-46df-b3a3-1987152e48a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "07f67919-cd50-437c-ac95-e7ef3dbec8d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c346ff5d-337f-4129-9f67-1fd1169540ed",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f901ccb-35a7-49f7-8780-1b3586b6c90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42208f73-765e-43e4-8e05-456ee72d3783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6bf2be-d977-4bbb-abaf-a9cbf728dce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "422066b1-4e68-494f-8012-797466f62a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b8bcb9-0c0c-4d74-9a74-b225810d7c9b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19cb8c9-d306-4a49-bfd2-b6439ed05c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2ea8eb2-be85-42c8-b64e-634c97c7e078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b224e6fa-1316-49d5-9239-f82d7b61620d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "edc9589f-ffc3-4bbb-8428-796b9f27aae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec7ab5a-1f4c-4cc2-bea3-a4628b8d4798",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2180363-1fdb-4878-ad81-0fc3be6ca4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad816f44-0995-40bb-8d67-41f300294139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4017d6b2-8a78-404d-8ded-9aa9d7939f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d2d79e3-7f5d-4874-a2ce-972b80e6040a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ee02a1-1f11-460b-818a-194361940738",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9fd4338-b967-475c-b5f4-3b8cf00a7b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b9bbf6-79be-400d-8d33-85b51f73addd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420cf033-23e8-4d98-84c4-b2415fbfa550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "615766fe-dc83-4726-999c-fc5817ea58b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ad6da7-0614-4fe6-8d99-e32665cad9a7",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc2466b-2e0a-4277-ae75-dfbc76db2927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9a211ba-8dd0-43a4-b107-f900e51db777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e64d149-1f08-491d-a3fe-2d58bb2246d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb4b46b2-6a6e-40d2-9719-9b224f19d42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a75e99a7-5ac7-4fda-976b-428a75311015",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb26c30b-4d28-4421-8080-b644b4b9d1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6635252b-ac7e-4314-9cf1-7718a690b08d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c9d91e-1efc-4191-8a26-0a15e74216cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b311283a-643d-429d-b56b-9bf2aaecc9ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "945dcec7-8cec-4707-b284-cef15290a431",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff407ae-884b-49ad-9c6d-accb79e4a891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded16164-03a8-49e8-a0ef-bd8d17a9d1b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3f0aa3-4973-4b5a-bd19-75428001564e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c90686b-e0ef-4db4-9ece-328cc16587f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c5c2b8-bacf-4477-bcaa-370598271b62",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf0339c-a91c-452a-ba66-6f3500b7cd20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfa64d2d-658f-48dc-babc-ca10a8eacb93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe6814c-bd74-494a-a36d-4051d4e7cc96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cdd1f14c-5e07-4d00-9855-b9a4c1616d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7511118-40ec-4833-9b22-9324d4a6e67f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "327aba13-df81-4842-ae68-0df69b23da53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "996a0661-7dc5-4328-9569-dbcf7840c352"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfc906e-25cf-47e1-81d8-9d05d433dba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "62f2d990-8f99-45a6-9730-dbc9a095d3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b40761c-41a6-44b8-9a51-2af42f0cb065",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d693daa2-a99c-42df-a131-d627c3e4f3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c2cf4c7-57f6-4100-b907-091481c14f6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94803b6-0d90-42c1-894e-787145a326b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f338b2c8-ee88-4768-a8c3-1005659b9484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ababb3-2fa1-441d-95f5-fedb406f4e62",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30d0cbd-87ff-41ee-a2e5-e5a2c92df137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb5519c-5e59-4911-871a-9ab4341709ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94579f81-bd28-4f0a-a48e-17a45a2973ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e47ea96-33b9-4f75-b5b6-b2b0828e818c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e8797ad-f217-4d15-89e9-f9643324d1eb",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8924a4-1cbc-4110-bc84-2d77e981eb5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b53012-2d0d-408f-861d-e618dfd5e254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e702e00-c0d6-4bc9-ad52-0b0a609457a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e148c07a-cd2d-44a4-9d30-14476dd076bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ec66fc-9c2c-4181-b501-153a9a249671",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab691eb-d4b1-4346-8c46-644b27b68022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e5af2f4-7bd9-420e-9f24-781ac9a27a90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65400d8d-83dc-4d12-8047-196978262252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb8e00c-0a97-4ba1-bda1-67eace3bfaa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4616052d-5d50-46f1-81e8-e2dae9df5b3a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f55ee20-90c2-4051-b1f4-ec18eccc3453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "091c7bfb-f981-431b-8172-4f6e67bbcdea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d9c6e6-91aa-4ed5-a331-70a3ed9b032c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fa775c7-5318-48ca-b78a-cc3e410a8f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6359c50-2d81-4ecb-9d0f-544ae55e309d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a0eb19-4a70-4202-9634-258837645884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7744e2b-dd5b-4f09-8a8b-a680a0fad121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44817ad4-ffe2-4aea-a466-d6b30e6cec66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dc31c31-2757-434e-985e-f9cd7a89b81d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa7d057-26fb-4c67-be3c-d965f967531e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d83ec6-7852-447d-99e0-cdf1dbdf25e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0588a092-5448-45f4-9be7-7df4158ca812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7487d9-103b-4ad6-8224-ab04933f4db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b50dd6-2e91-4701-9c90-557ed5d0ec22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e31004-ca0f-4482-96f5-755a0071e316",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eed1ecb-4bb1-4904-aee7-c6611cf9c119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d5cf899-702a-404b-b231-9d70fd9e57ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804cb47e-31da-4f31-9e36-6a4b91945d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "46758b8f-570f-4896-851e-6932e6f116b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c79dc5-4e9d-4274-a615-aad790dcc03f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "679c33d4-0c6c-424e-8a22-33a08c44228d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96e13cbc-5437-46e5-b05a-9be2d9ea3bd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fb6ea0-8f26-424f-9dbc-81f6a2fdd3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc763cf9-7e1a-4385-a80d-74f834ca4c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48c116c-aee2-465f-9604-4d6b04b068ec",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cade229-a4f3-49b3-bc82-b75123896325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "291b3a7e-c06d-4afc-8eae-9a3a265b9cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b90da55-ff11-4ce3-94cc-0bb6ac9fb7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "15ac6fb9-84cd-429d-9364-65eee29b6308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97014e23-61b9-4288-9cfd-379e8a33db41",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aec1da0-fc4e-4fec-ad37-4c210ed931aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c1f1cbc-9298-447c-8cb8-e9a7fa4c3491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb17fd8d-fc86-4efb-947e-5b21af8a9c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff71f9e8-6e7f-472b-94e2-2b1e2001404c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d12293-a361-4f27-a584-82e43cf4c7ec",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc729950-f1eb-4b16-8bab-a77cff4b90b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5af7aa0a-88be-48f1-8564-073130f6897c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c271dfc-2068-4ba5-aacc-0b0de097d866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dda9781-02ff-4613-8014-88e3cdd778ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e7e61e-58e8-458c-b4cb-53d19f4d9a32",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "330b87e3-e0bc-41e6-a6f2-fabe9afca652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dbd6821-54fc-4d73-ba14-9616dac1cc46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0815ce9-4bac-476a-bbf3-fa774138a0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e13dcf0-5222-4445-b44d-4d2316958428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22cf3c91-30fd-41c6-8fe0-928ad094aebc",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "036052d1-e1b2-4d29-aa59-773d29d65ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ff4384-ed16-4a3e-87d3-caa69ca6cbc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3500f7ba-6aae-477f-bf88-21f07d0e8d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a858e96-7d7d-45b0-b63b-5cbee9567320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4d5360-ade7-4f77-8d96-b8dab6abe37b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ed132f-2259-4e5d-a127-90bf307568e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5994aed-1b10-466e-8024-ed2fec63d875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8406899-bdaf-4f54-b832-180a9ed56972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "97224ec0-538e-486f-88fc-c31bc394d2e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6fd7d8-1bad-4ad4-addc-514578c4f5e6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d524c3-6040-4f2b-a7ab-65646cd81173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd1a713e-d3ce-43cc-bc6b-df0d1116ebd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb389c05-ee65-4310-826c-2fcc05d6ca2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e056c9a6-8c8e-4973-b1d8-529dc92a0d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61187ab4-5ca2-45f2-997b-f1a726e6fc69",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6656a86-8c0b-42de-adc3-0008bece0535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c941e96-9d98-45f4-ac6f-d9864f57cca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43481a7d-f132-4621-a679-825e0b7bcf46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5996d3cf-b251-4064-b6e7-e93f5f2136ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7187a7fd-e6cc-46c6-a9d8-594577b8b8ec",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7eb6997-6c2e-40db-917a-174ec5f7a9ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "222f287a-87ea-4c39-9c98-b4ccc36e501e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72134edc-b5c2-4090-bc7d-d423b473aa8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "831a1292-f332-45aa-ae00-7bf86a5efbf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930f3177-3575-4554-8317-4344720244ca",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba53291-3dc1-4be9-a422-e888eef9f8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52bc2b7b-7130-4069-8c90-8d4b4a62fb46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f55c0f-79b8-4e10-ac77-d7cf57d5b86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47001b88-00cb-43b1-b760-2e6533ea1d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788e35f2-3fb7-4aac-8e75-e612d27916a4",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0853135-044f-4d05-9a21-76d07acba2c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c83d952c-e570-4ed2-9a10-946cea69bdef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc31c0b-0d92-44b7-bd7c-6a55b30f5f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "de5eaa34-9d15-4d0a-b405-dfbab4b44ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79392fa0-f066-4ffd-ad07-3d58a90e7909",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "827fc24f-6c49-456d-9411-a73626f1b396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2133aefd-3cef-4085-8d48-2726e07a20b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a203e2-37da-4e1c-8bad-21c56ef763f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9e146b0d-4090-4f75-bb13-d6a61641af38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eecb65f4-d2a5-4449-9a9f-fc290b4e17e9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e37145-c7dd-476e-86a9-bb3bb34605cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4261404a-1252-4c1c-9392-01165ad3195b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda219be-7725-4426-a6ae-d2b6183191f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a39ca169-163c-42e4-884f-fbdbe46364dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f0d4bc-b851-403c-bd07-a8e968234ef9",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "524aac28-3241-4814-b23f-88d4e52b593f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a486485-aa2b-4f42-ae42-43f08e7c8f24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab6b30d-a823-41fa-a2ef-77c93a35a7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf3e85b5-f22d-47a9-8233-8d616d697ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712bbe13-93c2-45b1-b51c-330e3b8fbab3",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8627aad3-b33b-496e-bf74-fd3afd533038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e73a72b-63c3-433b-9764-9d0378714d29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8cfa480-19c0-41bc-88d1-1d09b486ae20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e243e8e7-c644-4589-a4c1-ddddb4335ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd5b707-5815-48e1-bf39-7dbc8c6d9d97",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "955e9641-3ecb-48bd-86d0-c4b33e236c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4bf84e3-d2c3-4d06-8f10-4fbeed27d848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596fe330-9da0-44ce-93c9-d8b451fccca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b6af70c-f062-47f6-852a-621d59736c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c250e2a8-1029-468a-be81-348f00b13a43",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f1c2d9-60d1-4773-b452-49c39146d6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea28be6-44ba-46a4-a2f4-930e66aa4096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33eecff0-bd5b-4bd4-a02f-cb4433a5141c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e417e1c2-0d16-4374-85b3-bd251ea146ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f003c7-fd43-4d0c-9101-e84d74ac1431",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d5ec83e-484d-44c0-b878-ebd926b8fe2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eacd7aa5-3084-441a-85c8-0bee8d92be75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d97e76b1-ee6f-4e29-a6e1-cb98c9f67be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "73057dc3-cf30-4535-b539-46ed856e29f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a8a0788-c394-4964-9114-4e03115813ac",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ba1bf7-7620-4e6c-a0a7-1f80150a3c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09c0b51e-d7c0-4c7b-b5d9-1fd2f9dcc472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510bc4f4-b4e4-4076-a3c3-6aea32c3eda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd95bacf-b492-444f-ad79-65ad761da854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd6b4ba-068d-4a47-bca8-e0205391808c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "087f9a91-5789-4fcd-87d1-6ddbc6bfe05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "444aa742-7b62-466f-9bbb-09247780c2fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641a2092-1017-41a6-b9e5-7a07912c9101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7addde22-2fad-4ce4-86fe-5eb5bca83200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4316f754-432d-476c-9386-1c7164f92d34",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f210ba6-fc2a-4963-878f-b87fa6fe76c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c62da2-1935-4aae-9c82-19ecfe64aa91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a6c699-2032-4a9a-9009-fab46cb79ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f9cb31c-5157-4282-ab6b-54912548dacf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4854607-9656-4b70-98f3-0c33bddeb18a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cebb9d53-2902-429b-8539-ebf12fdf8af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ea66678-3171-4cb1-a7ff-e685c29151aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2ee8eb-4d96-428e-90e8-968d74cf9b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "abd28be1-1084-4506-9b31-55ca672adda2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b6481a-cd56-48b7-9083-c68aa2cadf4d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "721648a0-80a9-4a5f-b3ea-8bbd5f9b41b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d3893d6-ff05-4278-9d8b-f88927198d89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8853378c-1914-4632-96c0-ba370ae8ef41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5233f3c1-3128-4dfa-a164-b7aaaf0c232b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db686e2b-f46b-41ed-83ce-205cd5d1ea12",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29822c06-9c21-4b41-b6f6-73f26cb818e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e5d4c403-062d-433b-af3f-c0d2880f0b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e568ef61-31e6-46e4-a740-f76b9eefed08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d78f280-965f-4c8f-a8c3-9625700fd478"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b219fc53-337f-4435-9032-28d128043f5d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "42c3e202-26da-4e3d-8e7c-524122b25767",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f140a9e-79e8-45e2-90de-6e82cf4fdf54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a26496a-f53e-4167-bf11-f66d8371f82c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cbe34b3-4eb8-4831-b925-e26483e3bacb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74fd40ab-9fc3-4c4a-bf00-168ebf82d7bd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6bd9818f-6dab-416f-93fc-b6ed636e0418",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fee8921c-e611-4ee0-a5a5-2b8af968157a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "114a43b5-99ac-4e3e-b747-8f5245112019",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd06bbce-5f68-46a2-885c-c097add42fe6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "26ba295d-4fde-4ee2-bded-5ccc40042d52",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c84ac04f-ea8e-4d18-8127-0771ce5c1e7c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "347f9823-bdee-454a-a76e-c75dc78f5270",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "752fd3c3-0a64-46a0-8c56-2bc9a5dc98b8"
                }
              }
            ]
          },
          {
            "id": "56e3e64c-3334-483c-a8e1-437ebbef8b34",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9faaf0ca-f4ac-4fda-9a52-8ecd70afcc11",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "65b2fd8b-68b3-4e7d-af73-47650b3d6c6b",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4488da-2c37-46ba-94e5-170fe66a8455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2391a2a2-4356-43e5-8449-394eb4e66f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c97ecba-1260-4e41-903e-8a787de6d3a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91d40724-ef96-4c77-bd24-317d565e0b86"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ed170cb5-51b8-42ac-a3d3-d2fa770414a6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe9ead56-2df8-4a2f-89d3-c2d04ea3cef7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8aab2c79-01a8-4955-b838-1ceb3e77aefb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eabd861c-79a8-4bfb-9494-b1c610993c85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "21102a97-75df-4f3c-9c70-e08648935cf0"
                    }
                  }
                ]
              },
              {
                "id": "1a4c70a3-bf9a-47b9-958f-8b5e3a5670a0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "153e8f16-7e0c-47ac-908f-81b0ca75b2c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cf263f87-0bb5-4587-8f0f-b10e4234d137"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "447880d6-8a5a-4c19-9ff6-40df3aabb57c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8ac44743-8469-4271-8a59-84ac199a65d9"
                    }
                  }
                ]
              },
              {
                "id": "f03a8379-a70b-40e3-9a5e-19fcbdf2a8a3",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a657c615-4c36-42f9-b920-93b3e416cd8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "280efecc-e01f-48cc-a596-50e247f93b66"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0555e0d2-d5e6-498b-80f8-5d5f5407111a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6fb2c1d6-c7db-4c7b-aeb9-8ce58e9fe333"
                    }
                  }
                ]
              },
              {
                "id": "1a7160cc-a81e-4d70-b5ce-57c88a32d274",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a40be80a-e487-4e1c-b79b-58c5dc7ca2fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bedfc0df-1e00-44ca-b6ca-36a72d6fe205"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62ce997c-7fcd-400a-a0de-035fbfdc3868",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d3ed7b77-e6cc-4efc-a595-b2cd8ddb3f7d"
                    }
                  }
                ]
              },
              {
                "id": "af8eeee3-68d7-4e7d-ae51-abda30d3cfc3",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd8f2247-9e4f-45c6-8067-70901a77e1f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "23fcdc73-776f-4c46-9f52-49f80cf76023"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ee5c3f3-6268-4baa-af19-fcf24932e53b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a342b7e1-7b18-42a1-b594-fd50fd4744b9"
                    }
                  }
                ]
              },
              {
                "id": "c6ed10f2-5192-4131-bd32-43f879f3ad5f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f097359-543e-4977-a2c8-77ac5154b15e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1c9c8de5-6973-4f5a-8815-6de9dd7a9c9a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08fff5f9-f5d6-40af-b6f8-f60994886c15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e108f2be-a48b-4295-a8ac-be28698e9a3e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ac139869-18b3-4acd-b252-1120088a0064",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1c1e20ae-56e1-49d5-a1b7-716922a7c5f4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e3a3458f-730b-42fc-a2d8-0b13cb1dbb4d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d1080c67-6038-4336-b093-85a9fc777af8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e076320-94c5-47ff-8b8e-b97d793c5aac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a0f30c12-7c0b-41ae-9169-eac30889d729"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b1bd59b4-d402-4457-a196-8b40d3f9765f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2d1f99f7-4c1e-4c50-bbe7-967c4134e448"
            }
          }
        ]
      },
      {
        "id": "b12c4eb4-2f79-458f-8d88-627d6353c2b5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "da17d7ea-0901-4bd1-935c-09d51f002be3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9d5bd25b-b0e4-492a-a535-4619d2f1763a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4f1b3cb2-e4ec-48d1-b9a9-da4d56f8b8df",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f24c86a-13f3-489e-9723-097536ffa859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "191da324-425a-486b-9dd1-47524c51b73c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5589dcaf-2fa6-4f6a-a19d-d1af08b892d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "28c7df13-b1d3-4f06-8e47-7f96fc719730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5209275d-9b55-4bcf-b94f-007df48f181c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1949a52a-f099-47e7-84e3-eb88d56e2011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fa95125-2b02-4489-95fb-71cd8c0fd77f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582c3a08-6b17-44d8-a99a-f90311f9b463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "61c382f4-380f-43bf-9707-63f475fdf742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2144e2-8f3e-452c-acf1-59c50fb729b1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e4597b-0a24-4d9a-a0e2-a12a55be4ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "345271c8-3acd-461e-864b-983bbb36431b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0aa76b-965a-4b08-ab55-644f1b856415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c1c8880-14a4-4e6a-867b-7441c8716322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6ed968-2550-4e98-b1df-7da7dd158cd2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8361194-6898-4145-b85c-34e917779562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4825185-0a32-4d31-8a09-d1d364b40d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5f5079-4bdd-4430-843f-23bda86d551f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9811f4b3-a23e-4f37-a551-f014f08d77e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf0939a-0f24-4229-9a88-b594fb033685",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "386fc510-a219-4b28-b476-ec8dfd388b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d6f3337-d34e-4d1f-af30-26e62ba9032d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b7dc764-cb21-4b57-a29f-4f1b4fd91d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f8d0bf9-83ad-425b-ace1-dba3004a01d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526e2341-bf44-4dbc-b37d-cbd0e9bb7a84",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e576e0-413e-4656-90ce-7694296517ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a424aa6-d7ad-47ff-a197-9d843cd56a44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80d6050-aa1e-432d-bd45-fe5ea3f2d08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "69fcae9f-cb2e-4c60-81e0-bc075be6725b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62898462-9861-48b8-879e-f754c77a2996",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1798c5ac-9454-482e-addc-b178665158a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2426f1c-0691-449c-8645-c2f3268d5119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839bf6f0-b1e0-435b-b0b6-34280e2a415d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7b35257-eb6d-4a6b-b1d9-923cc5506c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e017ff-3661-4959-8c39-8663d898c75e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4659fc5-ba50-46ff-ab04-3838b803ffcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b25b288-7f44-4fab-9682-c9cf05bf69f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b452b8fb-950e-4705-9f71-28a022e61f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5beae62b-fc23-49dd-a9bc-1e2ab4763359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c6330b-c207-4dae-8400-7b9a05ef495f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05834224-4c85-4912-90b4-55ef2bb66a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fae457ca-e988-4ec6-a2c6-0e4af4e1feae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf183c7-d310-4972-b25c-e6d97f0c9d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d91af1dd-c3f5-462b-bb56-ad4c2fb230ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869d98c6-7dd5-4fd9-85ab-68138579322b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d07cf8-8a8f-4a9d-abf9-3904e810706b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ad795cb-58ac-4dcc-bbc6-500acc973eb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a087f1-e831-4658-b843-309e1200effb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "576fe22d-b7bd-4c22-b90b-01a77af170b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fdc56e4-8c37-41e1-8c70-d12e0c1c3b83",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2683057e-3f0e-41de-b092-03ae8d0c163c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c70d2ff7-5c39-409f-b080-34012a53ebed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26379d03-fee4-4866-9fd9-5af691dff523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c3fa4b9d-d2e2-4e92-b8ff-8e46067f9e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a9ae0d1-9114-4526-a5c0-8b40292a6ff6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12fa3ec3-be6f-4c2e-8126-96dd4f020bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b9e272e-4cfe-4280-9586-c14bac084701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bedeb379-919f-43b3-ac43-2a108f108327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b6a5edb3-7f90-4eaf-8473-4b99a08bde49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c19abc7-09e2-42a2-b844-66852a9849fc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ebd7de-b6e6-4a75-b2b9-4d84073167a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfa3a223-7e37-45fc-a708-0b960334557f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3239d2ae-5149-4b26-ad14-124aed566ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7ee75b6-654e-4096-8a53-610bf264341d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6de2506-9b84-48b7-8e5e-73ff3c922d6e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "131fb705-d7c4-4969-a1a0-a1b1878aa65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43843d2e-f267-48aa-a34d-b8054486df86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44817ec-fb26-4d5e-a1a9-3746127240e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "570f28e5-b122-43de-8ef4-574f6ece1ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f82259ad-2841-4944-9bf4-457bfc425cce",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f558ea29-c0a7-4966-8bc0-ad5700f87d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26891f84-007b-424c-88db-299c681199a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effd7932-6db7-41fd-b05d-d58997d5e582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "501f7c69-df29-48bc-826a-bfab9f24fe1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf407e7-c758-4648-890b-70af58ead78b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39aa7a9c-a648-4c83-9d28-53bdc8afb214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0fed3c9-3f47-4e14-8b3e-b6eba9d7a490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c5f8e8-f0df-4a1b-9956-492fe9751c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "89bdef01-529c-44bc-97bc-a7202e88dce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f709f747-27b6-40f9-af95-5ddc999bbfbf",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f3e8cbc-4eb6-403f-bf78-4d6a935c45ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c9e1881-c53b-4833-ac65-2b68c8d69e71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e581b83b-dac2-4a0a-95f3-240b2063c939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4118acac-7be9-4fef-9aec-42ed053e5ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d132d72-939f-4f81-b267-1e62e2317679",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6830ecd2-c622-4205-83a2-b75a8fc006a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "113cbc21-12e2-4156-bc1f-3f014909c2cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f536b44-c84e-411b-8cd3-0c564a608fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6fe303f-10e6-4c01-8969-e90267470461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bccb02fd-80d2-460d-a6ca-549dd35cbb41",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d61507-0ccd-455d-b4fe-0ed4485639c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a47944f-4ca1-4bf2-af4b-8616e2a89c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a1dcec1-1b51-4bea-919b-b471fe187e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34f2b93d-7546-46f7-b3c7-955778595f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607aa449-78ed-4a47-96ae-4daedc60528a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c635dbe6-9757-4043-935f-c396e5156a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e3e3444-705d-4ae9-89dd-ae9b27d59734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4159fb59-be19-482c-907a-a8e772885b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d411f98a-d47e-4b0e-ba23-21194996f196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e9e090-f978-4562-ab85-9ec4e3f45812",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "720a0eb4-b172-4abc-ba14-93fd88ba94d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "525cac24-46a6-4f9e-82b6-63e88ce48fa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa6885d9-cf0b-447c-949c-bbbe211cbfef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "949a4d52-de3f-4dad-ad8f-eed86724fca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3477ab8b-3ccc-4032-bef0-e8204507be77",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d932f88-4548-4970-a4fc-442e186a45e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d6ce23-753a-40f8-ac9b-41435c0c2550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "625f83e6-11b0-4faf-b6b2-d0b40b75bdec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b4db8b0-087b-43ec-8714-911b89be60c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5afd5ff5-966b-4029-be2e-1dbac128508c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f799af2-fcb5-474e-90a5-da880c305aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fa70e1f-6632-4bbf-a054-4f4efaceeaee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac3eb86-4486-474d-ad06-d5ce7b0884de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c0c184d-ebd2-455f-bb56-251cf1293852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30b9b19-7691-4b28-aa26-d7ba8f5cd6c1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d26e48-dc97-4dd7-99c8-943e7d5d7764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38f2904d-bf3a-4bae-beeb-858dfb6c877f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde20f76-023a-4352-b375-1a513db3059b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1589041c-8fe6-4f30-a7f8-8a8ad74131c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63926c71-6605-4285-9d8e-87975770501e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39f7a6c-27b4-4bb4-90fd-8549970a8072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "050c2af8-0881-47a4-bb4a-1f9c3c20934e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85b9324-4ed0-4c40-8682-dd422802d1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3161397f-5deb-4809-bc88-bd2be3cc77b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01bb1fad-2758-4a71-8c4e-406efa72eb8f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a886b22-5c76-4846-931c-971cb7b80909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b938db58-bf65-4be1-b1cc-3cc8e7f3e84a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd28e21-8171-400a-8e73-2a9863d401e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c052763-5fff-4721-a99b-a8fdec554a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f4876d-b4f5-4242-a1a8-b633948d3d56",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5248f6-b843-4afa-a44a-d9ce38730d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77ec8971-ddef-4f5e-b519-305e5da9783e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da286cce-a0ca-4fa3-8f5d-244fb3cb709c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c032b646-80f1-4024-9a91-4c5be0364687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f812607a-ed68-43c9-8b2b-d5fbd85ba4f5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac62ea91-33be-4f0a-8094-ccf0d5933643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c45e9636-9592-46bc-9d47-328e1598fd5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9aaa1c-bd18-4cce-8e54-11404c06c785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f96c83d-dd9c-40a0-8fae-5a854985b93f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6861b98-2dbf-40eb-a898-7b2667a8506e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1f2cfe-3f1f-4315-bdb7-52c2adb0ca3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d31bd52d-1bef-472d-b0f4-e5f602a189e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b4a2f8d-e42f-4a22-bbe1-6ecab8b7eacd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3da503d6-fc8d-4736-8260-30a36c582491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aba4613-6156-48af-b631-730ecafa2fbc",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20c2ea6-f7f2-4c69-9f80-f124c1345676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af05a3fc-ecb0-40d9-a915-3179f45f669f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1440de-4dc3-404d-a74e-9ccbbae18886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f54eec5f-59bf-4c54-bf75-b8c4d40cdf0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc8aabc-9c2e-4da4-9480-0c500ef7802d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a5a05d-6de1-4757-996d-1989b35a696f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e24cf79-fc9f-455c-8986-e845226731d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed3c4f9-e9f2-48d7-8015-3b9e05e289a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45343df2-fa13-499c-b2c6-8fb0aef415d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b9e4cd-65d1-422f-a0b5-30f0a226928f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe364c4-7726-4725-8d3f-74ba23f2bda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ff8402-dd65-472e-ac01-d599ab44e484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb4f60b5-5441-4aca-aa51-01fc766166c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e61695cd-45ad-477d-9687-22537cd334c8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3cfa7fa9-699a-430c-894b-e38b163acc54",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f119275a-7595-4776-b149-3db9bb4ffc6a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b167a604-4840-4912-88f7-b43e29b3ca9a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "32b87d2f-4ab7-485f-837b-f72f8fba1eb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ad0b49-3b57-4f7b-8be1-105fddb00ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3cc888b8-c2d7-44ac-acef-198f21f0f5ab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4b79115-df7b-4e59-b6eb-2004c0f724c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86abbe0e-8af9-4699-b9ea-5d48c364c01a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "34a9aa27-d5ec-44a5-99c6-a3343f858cda",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb9f95f4-3e20-4896-9627-6ec05947e654"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03832aca-2b28-42bc-a4f5-bf54333573c6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "39b3c867-5cd7-4510-a826-940072b44e7d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e5fc52e9-da33-4a60-8ea5-76031bb1ba2c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "39435fbf-2632-4228-9076-53c0b498b1c2"
            }
          }
        ]
      },
      {
        "id": "36aa66e2-01c6-4477-b90a-6710aa4847d5",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "a1105129-b9a4-4949-912c-a44f88d1eddf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d66e05bd-87d0-496d-b106-28870a7f0f50",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "58b511bf-f30a-4462-9774-321f3e5a983b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa1925bd-b74e-49e6-aa8f-9c111fb2d28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab9f954-e45f-49d6-9833-fc485e881e23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62893b80-0c45-4084-80f0-6c01cc9beb53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "28afc8f6-198c-419d-8187-1746ecd7b746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db07624-dcad-4fd8-a9dd-4c39db8a58c5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75a9955-a313-4a68-b7e7-968ac6a44ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53b84724-e005-4fc2-a689-95a6bfac82c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d74a9a-3522-4063-9c9b-d3aceefc2577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a969c8f-c2b5-4ec5-8410-97f7f98943f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbe5ea9-31ab-4cf7-8100-d07e1cf7953d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6871d5f3-eb2a-43f1-8dc1-4e0eaa635551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c84ae2ab-023f-40b2-b8dd-d8f37e1473d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a853859-88a9-4c75-a865-6fe3cadf4e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "773ac69a-f2fa-4027-9557-0d5bf15cbdb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d11bfeef-8d95-4b8c-91e0-e848c11d7588",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29ef6ca-c9ec-4f84-bfbb-9d7ba9c671a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "056d02fe-d0b2-4369-a7e9-4a171fb684ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba929579-0a42-4c00-8061-6b5d5261aef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "acaf6e2d-c0d6-4775-92a8-dca5f93ebec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf594e1-ae68-43f8-8675-df5f8ce765f2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3953fb63-ff24-4e97-8c4f-6184685dbf2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d6b6663-b33b-4c32-a457-7feb1704127c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd986ae-3549-4aef-99c1-f683a60c1b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12529957-a6f5-4b9b-967c-e747aa6de2cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b3594e-0e5d-499f-8faa-0bb17667c752",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc539ea9-cff4-4493-8703-ba67bd08776d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee2ba5ac-bf0a-42e9-89fa-c730a2188d60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f156ab-df60-4a1e-9bfe-44aee8bbed8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e2bd527-5e69-4476-b89a-0474bad8115d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97842c9-5f87-458a-8da0-f9719edab91a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f50a5a0-d4d0-467e-bac6-b0a161529a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b522c22-2abc-4ad8-a5eb-8854c8349bbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c137b5-8c6b-4022-b3b4-5487f28443ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc471575-b948-44f6-a433-9b43de655f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b19c0a0-b300-4626-87a4-e37745e5b7df",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d09e76f-0961-4e59-be0d-8488b5a5c92f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cec8da7-9e28-4734-b341-74470427d95e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a33b8b-f1c5-4187-9050-390d00255256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0d4f315-7387-4c41-971c-4975488338ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d433a910-7c9f-4d0f-a497-a0abe9bf347b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e03f8a-ba12-40e5-aaab-d0a38d168e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd35852a-f73b-458d-b640-7eb14b723280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2906df95-09d6-4a65-b25c-210c8133c8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e4e82e9-617a-4933-bfb3-a07143af2e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478ce401-98fd-4ba5-9aa4-31c54b758445",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e31302-074e-4e32-81b5-2baa8091a932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f87cce23-db81-4d12-98cf-4fa8bd9e3fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf3ee5c-3104-475f-b19b-d0c756020b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c68ebfc-b188-45fa-b78c-21900c3a2d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "218ffc59-ff25-4125-8d87-792d55388261",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94fa806a-d0b9-4ad9-a4ec-358221660c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6801febe-9bb6-4f80-aa5d-bf7b694e999c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e2ea04-0324-43e0-924d-f057c1f37e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "37757499-4c3e-440d-b7dc-0fe3e35c4bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20eb44f3-4596-4212-95f6-88b8cf6b5bfb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2c38ca-5bae-46b9-90d4-4505d42f58c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73bb75e8-007c-41b6-af24-8bfab0a0a3e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ce9e7f-7e4e-4c31-ba78-07a31a295ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fd8db5d0-6b23-49a6-ac8f-049469f29625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829f4354-2f7f-4e3b-ba56-b5f446b49a39",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289b8324-ac65-4a31-baca-c0a312913a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb5c3c17-5949-406d-a1bb-ee5b683b088c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d8f41d-a71f-4921-bc92-219eafedd9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf722fe-95ab-42b3-9469-f75a2c9d38c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2486e004-8749-43a9-adc1-fd3dacfc1ddf",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4cf403-5b6f-4306-852a-f57abf8f0eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6721534-9e0f-4ac4-9289-9f1e5ae6f695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb73b80-9c83-4e49-b9fa-7232385c1687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d911100-eacb-4f3e-8979-1b7dc3e125c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf88ff57-11bd-4a8d-bfaf-8d122f5dbb26",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ebe56c-02de-4c86-a993-dd999c5dce87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac692fb7-99a1-4772-83ea-950975f15164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed5054c-8f77-4ca7-aa4b-b463ff434076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "964d1cc1-9301-46ba-8452-0e1d0a5545f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a884d473-8b38-411c-b7b3-baa5bb2c9b97",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d595e2-501d-4275-ba5a-f34492273c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c979283-9deb-4515-9e3e-a3bbc20ad723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79c0698-c9bf-47d6-853b-cedaf460d87d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a741a6f3-e8c2-4fde-9397-954527ea9dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab4974a-50aa-489c-944c-a956df49e9e0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c30cae-cd77-4828-a6f6-903d711ca128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0997c90f-ccb2-4c61-9e6c-e86594aaf0f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eed3fae-63c3-4d64-8178-7cec404959b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "52987a0e-ee30-4254-9b33-3dab375c3164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41068a6-1c29-4bea-a79c-d513eb519437",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "703cf7ca-7a44-43dd-9098-26b63b2f77a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "775d2368-6801-40c5-994a-ee2e25807c1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e30ad5ac-90c4-4d0f-9cb7-3d8b2e744481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7192cc9e-2a8e-488e-a831-cc5ada7f0dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912c1828-5c7f-4415-ad49-8d729447e88d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8791bfb3-daef-48dd-8fd1-27af5fff61bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5dd8ce2-e2df-40b6-9d94-071a28edea9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac8da66-0fcf-4c29-8ffa-3a448f637d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87b1c9a5-3806-4b7c-8424-b4178e689f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6396f9-51f7-4289-a7da-f00997262d22",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce8aeaad-a3e8-4a57-898f-3db1c0d4bbe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "900d8733-4bfa-4564-9059-634fa00764b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d2c8dd-0b71-402a-ad01-9b9e1a168616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e288abd-171a-4df7-83cd-c0a7872bca9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c612952-d63b-4103-8372-9245a991f8c9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6cd1001-6c92-4be5-a82a-7a7fa86637a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d29a00-2c62-4f76-871e-bff1611011ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a3c09a-f5f4-4492-8135-a1d97d7ef3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "737793c9-ef78-441b-abbc-cb5f95a17d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d017fd-a3de-40f2-a93d-bf1fbfedab3d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "086cb7d6-ce60-422d-8822-6e079e21ede9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e866409c-c6bf-4dc2-97da-01dabfd39323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f760b51-8263-41a2-81ec-6145f1e5c408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70b8d765-cfaa-4ca3-953c-db29ce95f578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b6889c0-32c0-437a-8396-4c329cd54faf",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceae892f-f2c3-45d0-b25a-97687bc876d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f59814e-44d3-4602-85cb-ad358457ca22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f359b9-4263-4444-8f03-512a699cb7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1654c64c-b2cb-4ee8-a2da-8b33ee21312a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17a34fe-7840-41af-af14-5c46ed2c0c1b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefcf302-f5e6-4c35-9531-7c1c40f37458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bd8ab43-5df9-4104-bb60-9a3ddf4d763e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd616d5-d365-4a7e-b4a7-d89851d8c492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a33ff28d-2d88-46d2-a02a-32b42c238553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e0b275-07da-41c9-a312-d1628939ebe7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db770e3c-b3a2-443c-a313-8981d0f7b1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ca199e5-64d8-440e-8008-1bb6db84f16c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b5b780-49dd-4d7d-880d-8e0c84534271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7961feb-ed58-4752-992d-8296dbd38d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50cf8e0-d4a4-4e4c-b54c-a4221be3d182",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f8ba34-9877-46ac-9927-575264d174d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69d45b1b-734e-47e5-97d4-0fade86fe5b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af74f63b-8f13-4fd4-bec8-8ee4941785b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f659d1c-288a-4712-921a-d99ea8be1510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6adb5cd6-47d9-4dc7-92fc-644854ed38c9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd50d19-96ba-4483-9f74-992a658fa608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa17cb68-5dfa-406e-94d4-388d83fcc35f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33accd89-aa0c-4190-973d-fd31c38fdbee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bfb406e-c84c-41fa-8260-797ee19c3232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6b4e7c-f643-4f2e-ab8e-bc3d6309fe68",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef69fb9-83b4-45be-9c07-78d07750cd4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb5202e-20b2-48e0-9c32-a11718b40e4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44307e5-884e-4cfc-a798-8d2d963a2fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a2e87a4-0a03-4454-a5e7-7a2fc01be643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe4faf4-222c-4d1e-90fd-fa7a737f0ede",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6556da6-a35a-45de-9327-07f4c8675a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bf774e7-c756-4ca4-9028-6b820dc05e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85fb645-5390-4eea-a701-41a160419b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff998b6a-a0ff-4f58-9e9d-9e44d3a568d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f75de0f-0ec5-41c3-a0df-683fccd77d57",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc6fb0b-1a19-47a8-9b2b-775868ff5354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c17fccb-b86c-4a9a-a8c3-5ca1842567b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ba117d-d4a9-46b2-b2ae-b48c88b08295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f389b056-2483-4f04-b5ff-e023c9e2de25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b92714b-615f-4041-ac3d-48d42dd40e8e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a96f8f-a876-460f-be83-cb30d5367ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "532ee981-e055-4ac6-b467-ca46f9fd189a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ee4a15-1f3a-4f98-b40a-800df21e7587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "198a2c05-0ed4-42c0-861a-f908eefa33d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "502eadaf-42f0-4686-8ea8-e7c3f70ac2f3",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32beb85-028b-4a1c-a286-eb0e868b60e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db1d3058-de65-4cdb-9719-a477504d9e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da8b05b-7a8a-4892-b8dc-95286501cb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c22bf754-1e30-4c54-8fd9-4a0c18e31f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb0e5bf-6863-44b6-9c6d-e59961b3ad0d",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "757ed0cb-4eb6-4baa-914c-5030be0a2114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2ab0070-e7fd-41b2-9557-eaf7a2cb21be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd6d308-644b-40aa-ad6d-75d1c68231ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54716dcb-66b3-40af-bce8-56ad64f30f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e15753f-e62f-4f5f-b339-7faa4462c49a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5752fe-86bd-4d2a-ba74-8c1aa61d8190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fe92ea0-1d03-444e-aca4-ecc1fec826a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0b1ef4-6242-4927-9eba-4a2627dbcb53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7a1e8eb-e20b-4cbc-a13a-0fd84d9aa072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ddbbb2-2964-41f3-99f6-b1fe13333faf",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a32d0e-3f10-45d4-8cdc-7a91275a2dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bebb1254-30b7-45da-bb41-1f6384828068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53cfbe14-1e4d-4aba-913a-3a2c8a3ef1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5abef1a5-296c-4a82-a14b-ca0f98505250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f9d3a1-24e2-4010-b08f-1ac8047a4171",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12e0690-d693-41f2-9193-6c77dea590fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c532add0-1e3f-4c02-a40b-7bb629697a8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a925af3-3c07-4b4b-83d4-211422d5e6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f136f924-0837-4870-9241-a0d6e7a88824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0492d4-504c-4e74-b22b-3fb934b229f8",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2c6361-f5ae-418e-a190-fc0b9f1584f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "137cabd1-f383-4156-b0bd-c99218d3a9f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ecd7f95-3eb4-4257-8add-7e6c75eabedf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ba48d57-551c-4f88-942e-5ce9b45445b1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a551b6b8-f929-4639-97fc-f46cf3a0c9bc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0cef54ed-764e-4206-b882-85075a6620ea",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b890392-78df-44da-91c2-dd8ab7df88eb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "95ee7337-0036-43b5-95cd-5e689816bf95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e493c17-4e4e-4696-bc33-8ff16ca41afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd48a405-22c9-4917-9cdb-3caf048bbee9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e25582ec-865d-4572-a609-ed18344ac30f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e47163b-ef22-4e30-a319-db845bc4781d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7ec5668-8356-4b4f-9231-add27ce1f508",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2bbbd36e-4933-4af3-b431-5c5ed04a3a97"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f14ea3d7-595f-4d94-bcaf-7050caaac66c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "23a55fa5-1894-46df-9b79-b1d415c91396"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed848849-528c-4033-b6a5-4bd5cb2e51b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a12f1ca-d89e-4fe6-8a31-9f0854e82df7"
            }
          }
        ]
      },
      {
        "id": "41be7a4c-da18-404a-b63d-aa23c3845d5f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7427dbe6-b6e7-479c-b815-96a6f2071646",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d25094b8-f07d-49a8-b466-658ad432deca",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4b25b76a-fa80-46b7-bdfd-39a9b204f2d2",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb5bf21-353d-41a4-ade0-38d6e257cc44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4823afb-e23c-4114-a7f4-cdae40fd337d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d8b0a3-3397-4a93-affa-3808c2d7ea92",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e71b1e-cad8-421e-abe4-b9c6b4530394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c91d2f90-9d02-49fc-95bd-b202234204ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89690b45-7ce6-4e0f-9af5-ea7a129036e6",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d12105-dcfd-43af-be2f-3a95985eeba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d596141c-8601-44a8-826f-efb2c2d01105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d0b10c-9167-4570-a1b4-8a1fe76c1b03",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27054810-7d57-4a65-bb56-ea62e1c3604e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "520adabb-fb46-40ba-bc66-fb48787eec92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dbc9374-08eb-43a8-9df7-432410f675ef",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b77ff6-5b05-41dd-9401-19b9193d32b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a6c6e5e-813d-4822-9a72-2e3c7f28ae52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90bdf68d-6ab1-443e-bade-49ef589b7db8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb12f43-09b2-4e43-9c0c-d7156452367c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d19f2cb-69fc-4c79-b44c-58ac60a7e6d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2b60be-8137-4c07-8b07-85e520162139",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e94e5a44-6883-454d-8133-4424ea8e1ae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa59d8ce-9f41-48f5-9ae2-00e57cd569a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5dc0eaa-ff7a-447b-b3b4-756f797521bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a727e4d-b27f-4366-9e4c-45ae0bd3b84b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d9e659-beb6-4484-ab0d-7da2429b276f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a18e46f-a6a3-4b75-9472-212ddfa83f47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f147ec6e-88cf-4776-be38-0a4c25e57e13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42777acf-fd4f-4f9e-bfc1-52bc82a3b9ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "705cac86-acf1-4ec8-bfe7-e7b02137c973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "288edf41-fff5-4962-841d-af582d8c5088",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec97344e-a107-4bed-b5a2-7960495b9990",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abd740ce-bfeb-4fef-aaed-50f96db20a78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b29d99-176e-4f03-b404-ea1648bfdcba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92fb50ee-fa2b-4d3c-a94f-386b0cbc71e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c5bfea-7966-4868-8a3e-d47659e39144",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d8b0d7-7acc-489c-8bb2-8e72ac928b66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df41de27-ff76-42aa-b7fb-a4803298cf85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "940ccf7e-485e-4dc4-826a-4796a70e4425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49280b51-92aa-4c9d-a83b-8e5810bc8951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "615e5ec1-53df-4e49-b1a7-740c82e6a710",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d38ae612-d4a4-42e5-8fef-a44b8316ed2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a11e7328-b2cc-4ba1-a2c8-f93eda1f75eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d242bc-fde8-41f9-afc0-d1632819fc3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e020bf6-5774-4ddc-ab11-8a066169262a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1dcd54d-5c88-4891-83d5-3e47f8c2d04d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8340147b-acf5-4940-a1d2-2dc3c3352302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54bf3128-9d2b-4d39-a0d0-c081eba9b22c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7fc4242-02ad-4819-a341-dbf737fa4079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b9092e8-5165-4551-831c-b09bb0de4da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce47141c-7b07-4739-8bff-749a02b08823",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d27ea56e-c134-494b-9dd9-2bd36369e0bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13a4c4a5-e3e3-455f-9ac3-4aec1ba9678a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02db9cd8-bcc2-40bc-bfe2-4e87471b3e5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35b9edaf-2bb1-403c-8900-cd3d793f596a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7128634e-6519-4e9b-a2aa-6c6613471087",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ebe3d47-128d-4c1c-a5a5-7314082563ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a00b25c-8d01-4ae8-a6f0-4f348dfba6b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28650230-d477-49d1-af78-6377de35c3e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4991194f-9229-4b89-97c2-7b4023eca37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c37b1b3-1d5b-4d29-9458-4531cf313cce",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425fc246-61f1-4340-b271-b6780a4f4237",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c34ee2b4-a33d-4f14-9d7e-a7bc63e260f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4f92e3-4d49-459d-8f8b-8a29fa437d4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0620c675-dac8-4e1c-b4b1-265dda7afa0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9006fa34-25d2-4965-a012-1f11f53cdb39",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4415880d-57cd-41c7-b161-72f27b83426a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfd33b97-e1b5-476f-b901-6c19b4752457"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ee9745-95c1-4d11-9acc-f7aaa959f25f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12506e62-41fc-49cc-b71a-cbd765291b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8fd752-797b-40a7-9f5d-c4859d663e9a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a0f367-544e-41f0-ad51-127c1ddb9a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c75ffc4-1980-4404-ac1b-54bfe8280cd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ced917-e52a-4149-9479-fdfcb0a13ac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf30f12c-1b91-49b8-8712-2c17cd37ee99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b3dc56-cc06-4f03-80de-2775c0023408",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83acd0d-12fe-4bf2-9e3f-fad8f678165f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b950986-5273-480e-81f5-5d71b3e91b06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92ccd43-9569-45c0-a311-444ad0a97f22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abf6259c-06fb-4402-b7ae-424a9cfdb591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f000e0a3-a6e5-42c1-9521-ec8ab32c69ed",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac51656e-ac5f-424d-a075-554cbb9e19e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c889edcd-858b-4e15-b9f0-313a53d71efc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc14505-5d98-46ae-aab5-945ec12c3f73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fe21363-aff9-4ed3-8bbf-efcbde149dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd2d1dc-8cdf-4d18-b3d0-cf603fff3c8b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e0d88e-f69b-435c-9ad7-d07bd5d36b40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f3b19bc-4398-4a31-b617-3fc6c3b1303c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abfa8ca5-b959-4b50-be90-89b36b4bf657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79161b14-53d6-408e-9a05-3961c08c6eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac40c7e-fc5c-4725-9e32-c8806e6ce1b7",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f48e773-b268-4b33-9097-4b8a536b6966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f1e5033-4635-4ff1-afe8-8689c71a88a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb192d8-f2c9-4e0a-8856-5dca5d7979d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44612235-0814-45be-a652-0a2434537574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c0bfa2-a696-44e8-a8bc-43e42a719024",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c8f10d-127a-4400-861d-0570ba6e5d65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5554f48d-84f5-4c7d-b76f-d41520bbccdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8d7429-b566-4283-a71d-cae44e83ff2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9245559f-4aa0-4b18-9a32-6236975fef4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d70257-6482-4f7f-9dda-b635dee1ba86",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09968cd6-a7eb-4e10-ad8f-f8b0e4f067e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f05199-75f6-4416-bcc2-1bca8d9fa055"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60b75e9-8ec6-4453-813a-48803bac37a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d536ecd-bae3-47bb-810f-4d51f4be3528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641c7e92-16f9-4698-afd3-54754f560e68",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d211ed0-d2d8-4994-a0de-b9ac04e90853",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc678dbb-a067-4a80-a175-176a1faa287f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f50a89f-b84a-431a-88e8-d0a391118a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc24c1c8-0b2d-4fb6-baf2-a94128dca0e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a62f6cea-c9a9-4628-a46e-857f2c2de72d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4d8223-c3fb-4f36-ba93-35682dcbc5cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d04cf48-dccb-400a-adbd-c6b2fbf82f12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45bcdc0-9002-4f00-b8aa-c98d085a76ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "547fd9c2-a2af-4ab9-a195-dc22e914432f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b905b40-57e2-4f86-8d8c-f021051e9ca9",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc3696c-413d-4967-980e-760a8c4626ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53269f86-96ba-4d3e-a57b-4cdbfa278baa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f59d4f-a142-4f20-a097-c3ab00ca16ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5923e856-61ff-45e9-b0c4-20730c787a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1b9cdb-884d-4514-bcd8-7b3ba1c2449a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73bd452b-66c0-4040-83bb-30fda05b6173",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ac03cb3-562f-4411-82cc-c9eda21cb793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f293da-c6fe-4178-9fe9-7c947638860e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eb828ec-a64f-4029-8aa4-3170dfb9271f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f62558-e2aa-4a79-abb2-1a11cfeadf7d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee21c18a-920b-481f-b5f6-2d50c8107da6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef02f89b-31c9-453d-b550-3d11e5245c63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcae1486-ee7f-48de-bb68-05190b3dc05f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d839c7-6d29-4490-8e95-de81148c0913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c4e5c2-1a4b-4f09-ade0-849af1714357",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd3a2d8-3c8f-4cc8-b0a5-c3bbacea5890",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9724d916-5670-490f-8e74-a817527c819a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81995d30-e9dc-40d6-b6be-8defc84a94c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "987ada1c-9935-4860-a614-0cb77fa4329c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41dafa48-5207-4a14-b056-9dfce5b79887",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5bfb52a-ae38-46c0-8222-798c58618896",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dfe1b8d-74a2-4b31-83d5-fd0ad288a039"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8558e009-3bd7-46b6-859e-6820e02060d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f08f6377-d5c0-44d4-8f53-d50b25ba4561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504bc7b5-99b6-494b-a99a-65e2e523c132",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39130249-6304-4371-97d5-99319117cca4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85496cad-1c7f-4a37-a636-58ad201cf70c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81572955-1d73-467a-9f83-ae61deec787f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf4ae49-94a1-4a67-b6a7-4f2355681cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec8de4a-06c4-4602-8293-fb2f0c8ed7c0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53cd44c4-034f-4702-b268-5d13c2fde3ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0401c47b-33e8-4078-93f3-0b56879b3de2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "047a2bac-aa89-4d6e-95f8-ebc8aa2d9f7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a7b029-5fea-4111-b6d5-bb5d9b62bcd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42cf2a24-6979-4088-a8c5-31b72066a159",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "babf7284-af0b-41a1-94cd-e18706e27a0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22df4b3b-6d4a-4354-b6cf-4049a05f4054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a24887b-bdad-4e66-9b33-07efa8392682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3bab811-a2ba-4d86-b46f-b50e38c233eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef199cfc-b788-425a-86b2-8b17b21a3ca3",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f845735-2b31-406e-a6a1-adc3950fc5e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c119058-ae30-4d76-bfc3-e120dc01c0fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63000afd-d99e-4bd5-99a9-a981e7462b56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c9ace87-2683-4e8f-9915-37dfcd1c4f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ddfd02-1d72-4517-b52a-3b748b74bb53",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a84e94-bfb6-45c6-b295-c72badfa57c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d6f0073-1789-4f6e-90fd-9b49df7f89b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3066985-6497-495e-9ba2-cf599d412ac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9d0c642-0c7a-46ee-afcc-2f81a085bf3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec997c56-87ec-4a2a-9f22-08a72400f144",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70cbfd59-4956-4316-b858-2745dbd17d41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02975134-6a9d-4e87-9a10-aa8e8df954db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c0dfb5-48ce-43b9-a561-17b46a1f1ca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bea6b6f-5d2b-4ad7-a26c-6863d0f84e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549e0ff0-52db-4676-b3e7-99b877cfeea5",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9880840e-5fda-403f-9360-04f342a561ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ebc3b56-bf46-49e7-b943-ad1776bf94f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0431fd0d-fc82-4c7c-a859-9511393529d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "517c6cdb-8d02-462f-80ca-e4e896c69140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2b8009-f23c-4a8c-b6ee-5ef28bb8f942",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0060791a-d7e1-4ec4-9e42-12057d51dde7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a681461-a93f-4381-9956-d6a5c6cd28f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad18ab73-ff0b-42e3-b282-3647cdf32c2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "031f48d2-4750-4227-aaef-59c9a9b11c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56dd92b9-4a39-4435-bd86-4a13ab41c0e3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc472c8-4cb9-4eab-8f17-ed7673f5e3e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e5d82b7-1b2c-4756-8d70-7a2152f93dd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc083c3-8d9d-4425-9794-9fb4c451d70b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "532d2237-820a-47a8-aecd-b8b8ee8a07bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1feeec-f46d-4818-b6c4-9813f1425a25",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9887155-0b6a-41b6-aee3-ab89941708f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f259266-1292-4d03-bfdd-a4d5fafebaff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be12c73b-de06-45ae-9e6c-74eb496c55cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf875e03-0a0c-42cc-8494-a88b13002855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf127c2f-0af2-4252-aadd-e98a9d441eda",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c8426d-5283-4bcc-bb57-bf91f09357ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2f149a2-6ab6-4eb4-af15-66a5b9486abe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53e3642-d827-4acf-8c92-4d7e6258dd28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c64aa6a-5256-4d22-b39b-cc6ad404da25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a205380-7315-4cf0-a2f9-dce27e30d7a0",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b6175f-8e65-4082-8a26-4642b0164030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d1c4514-d1fa-481f-8e68-0f8e774aac8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a1b204-7dfb-449e-b8fc-5859dc12f947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "951fa0e8-3f88-42af-9494-34607de39a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9e63cd-3e59-419a-8d87-c90d61ff63c7",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ada514a-88db-4915-be86-811ba6f329b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d91c959a-a1ed-43e9-9e4f-ac136cb6fe86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04d5d30-51a6-4fe5-8765-a35cb3dff273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd7de3c-5dde-4643-a797-5af310943bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4e5394-93a8-41d1-853f-da28168b5b98",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5b9b66-25be-4594-adf9-963b34cc2620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae49d8f8-ce9d-4c2e-9489-e5e16f7eb520"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f8593e-49b8-4a47-9f32-0a4e40824b5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd5fabb9-7ac2-4718-b724-99e8607a8ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a4f3b9-37ff-41ed-9ff3-f06361e6088c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff068dcc-6461-4e1f-9e1b-a9645b559955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f25fe07-cd5a-4dfd-bc99-0b83afd45f93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde325d1-eaa8-480e-b803-8d7d73d90e09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8534ace-e8d7-41d7-83ac-c2e3bfd2cca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b83bd1d-3ba0-4d88-b268-e00f5007d145",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e08eb2-0cc6-4c30-b617-8b5d456fcf46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f731173a-7507-4537-86b1-e2b6ff64c79d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d60091-f27d-4a5b-bd47-356aa11604cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6b3db51-740c-4abb-b7fa-d86990b1645d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6423c6bd-3608-4861-b0eb-2c02cfedc8ef",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b149e5-fe98-4ddd-862b-01d6fc55e6a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aa8dc5b-20b1-48ba-bf5d-2ee269ee17bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a946b86c-8cfd-456a-b30d-9631597b2e0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "364953f5-a686-4865-9fb0-8dfd34016ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe697f9-e2b6-49e4-bb9f-f176b9cdfafe",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ea3892-30fe-47ae-8949-0259dcdfe8ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8013b92-3036-42fa-abd7-2d4f5ece7a44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49cad7fd-d4b1-4101-b0fa-2cae176108a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef408ac-ae6f-4ddd-b369-c1275e6bc27d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1040c899-92ac-4a2c-b950-f12971873f88",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55dd0e12-f29b-45bc-a9e0-c8aa437855d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "606a8633-f395-4a6e-b0f9-a13ca78a8589"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2deafb49-9e48-482e-9dbb-81b1d2639917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7536fe8a-ca0d-4c84-9f15-481c685067ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb82d5d-ca5f-4adb-a4e8-c5578212f44f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f96616-44d8-4b85-9bc6-5c922d00394c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "919f79f9-cf4e-4b14-b049-1c9b46e6d573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ed506d-7fc5-4d01-8b8b-6ef4daefe440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f38891e-603c-410c-8ff9-942a51a7c5d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e77fa717-2d3d-4cae-a156-086ee8efb77e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfcec9b-7940-43ed-98a4-2f72bd733d38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3929f197-2f26-4239-87af-c8be20f3d4ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd21cf68-37b8-49fb-a9d8-b7d36705b1b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2121d656-8113-4f6f-acbf-0c696d76799c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ec4271-4c0b-4410-b3d6-d18ff7aa8655",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da398d8-e001-42d6-9648-70bbf0959846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d5a1e70-09a0-4eba-aa24-f32ea79fc661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b360094e-3ff1-41c6-856e-b0ec15f93f33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e7b00e-41ec-471c-8d97-fd7f6d8d335f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08d64cf-16fe-4dbe-b89d-4a9b06929be1",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1a3e10-aae2-4509-bb6c-920af1a700e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "409bc71c-b0ea-482a-8274-5b69ba140759"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dee5fdc-0b9a-4dbf-8979-939a9ae53f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c736b15-a8dd-4e55-b25a-597cb84ae9a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7cea34-df6b-423f-81fe-0bf85d9084d0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9ee0a7-cfcc-479b-9d62-ad86cf63e4c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b46c21-6207-44da-8020-fdb29155cfac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a902ed-8c48-4cd4-9d4c-089a9c158f3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74b22df1-8bf3-4440-bcd7-2f41192e5a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f3ab1d-fd73-4607-93a9-7b281af0014f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4401fcfa-636f-4935-a3a0-b332630b31c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4838d681-5b27-40ce-988e-0d9805285357"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b000f6-c177-423d-9b05-dec242c06da8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9769a676-6b07-4260-8507-c4f9b8d66405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9469252-4476-4b41-b897-274f780759e8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758c30b1-dab5-4df2-ab00-c1a80992e214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9cc0c73-414a-411a-bd36-1022dea0665c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "196e9aab-0860-48d4-a5aa-d336860db378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3162d06f-7ecc-4980-9dec-6190392dda5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b642ce-e6dd-4103-94c0-b902239fa546",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4273bd8f-a928-42d2-ab3b-b0661e7abc88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ea4dabe-b5eb-4bd0-b33a-8ceff9f52ac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98534c02-f695-44a6-9b66-03b7b4317ef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20bff480-c0b6-46f8-83f0-eca02b3cb358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef6c273-668a-4e52-b78d-26d0ff2b69f4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1faa4f9-2f94-4e9d-ab40-20d213d76556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c9e6bd2-a062-428c-8729-ee867ed1aa46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c9e4b8-acb6-4431-b40b-b710f9947a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3a6a427-890f-4696-acb8-bf9aea50902f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428c170e-b2d5-4300-99d3-14c36666515e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63fb7007-4033-43b2-a541-69d9fe3ebd08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9de6c11e-20e0-4588-8a10-38736800a93c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "285b7caa-8ad1-450f-8c27-8b0bcd864c1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0670dba8-d143-4f15-9235-5f2b49964b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4484ce-170f-4a37-8c9d-9ab358658d20",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf12deb3-0340-4732-9254-c925e7a4cc22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75e5e57a-a46c-4cfd-9544-47ab408c05eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6b7ae8-7464-4837-b675-4453c23c2110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74b1bd84-03b3-45fc-8b1d-f045038ecdd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "655605df-902f-432d-9360-de7f17384a53",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215b35da-3b1c-4e8d-919f-ca64fd2cf5b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19390661-7d63-4210-bb84-cd4c5682fd14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a53d2b-8923-443d-b308-f0faad85b057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1035ed92-347e-435d-826a-e989eb11cb69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1924d6b3-5f5c-4937-b8b4-4ae1e9aededa",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f91d91e-4a43-4ae9-8cac-10c08b2faf9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b31a5ea7-c2d2-470b-a1c3-59f766d5d47c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32581d4c-147a-40f1-8ad1-b6d3602e73b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88e2765c-6999-4945-9d14-51525ffbe825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719fbde2-7dbe-46c4-bdab-0e444cf76d05",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad376556-aac3-41f9-987f-cf33c56cf643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "927f286a-2873-456d-9974-a9bb05bfa721"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16151ef9-63c6-414b-b712-2a95e4a7d461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75367c6a-b6b6-499c-9b72-7a0a285e2a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8284a233-4299-49d2-802e-b28f03363c1f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29de5d63-0363-4044-9a87-771fc855580b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "483bc8e0-84e7-4794-8f61-ed543f51bad6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41a7b10-fe80-4ef4-8447-137bdf698bb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "528de4f4-0126-4d54-af9d-178c0aede248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207a5449-b9a1-4663-ad57-f34e386ea7d2",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e55d20-efb4-43d1-a967-5874ea43fb52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb0490e8-48e9-4910-93d6-af2ff2953b62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c168a5-5931-4968-8d99-d6d17bcee552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29b52b94-a034-4d24-849a-a6441f3a7aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1721d9b4-5147-4412-a14b-8ff190ee6850",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046070cb-e7d5-4036-a4ed-e10d5e52e339",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a9d3e1b-dd9d-4a95-81ce-f2568bee6c67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "612aa9b3-5040-4977-8a45-197629036604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b71c3da-9481-4016-9516-2a2d63e4d8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf591d28-4d33-48f9-86ef-e4b68b518f5b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e7be8c-b283-4008-87d3-187aa44b19a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5adb79fc-8135-42dd-b5d9-b90ede8d8814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fcec341-3125-4536-aff5-28cdf2701976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1381c8a8-ca75-4691-9b6c-1db36962f493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6807aa29-12a9-460e-a93d-95ed2e6404ff",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3017ddf-950a-4de2-99e1-5c4649dc4704",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0edf5424-59c4-4e22-b366-d60542dc5763"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49f86a2-545b-4d31-a5f6-47245ad9ae39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20f87d44-97c3-4a90-9754-af34b8cc9609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bbc4305-b5d2-4dd9-8733-307e5837b224",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18de02fd-4a61-49d3-85e3-291ca6f6bf99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c12b620-49b4-4041-bdca-9b59881b6009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6754aeff-73cf-4887-b62c-909a42facaac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c97988d-ca68-44ad-873d-afb8186b77cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3be883f-8739-46b2-9597-6495fa738cbe",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1bfabd-348c-4b4e-8abe-7a483fbda859",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfcf34e4-a052-40f6-9960-c4ffec648f3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4acd865-4e79-43a0-b613-337c458e7fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0cc4797-4ad7-42c8-95da-8665712b309c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d7ca47-e239-46bc-9bf2-8cc723b8197c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a893a64-7c61-464e-85c2-0e91c702f4f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb341535-5a60-469f-8a45-ee7a139368b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7ee6a2-e0c0-4400-be34-906f5532d69f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f247c753-91f7-4308-ad1a-1360b63e1dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1588876-153a-4482-b2c7-f6304c91520f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a01760a-6d8f-4be9-88d8-a6ecf44dc226",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c80280d7-1b22-4f41-9c14-e8289bc4f99b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d751ed88-8e1a-4be5-b7a5-c7f58e278336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ca42b7b-eae7-4531-a70e-72ff284b5e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71dad08a-6f7b-4b1b-adee-987275fa90fc",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf6f0ee-4b45-40a7-bbec-fbeb6e354eb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef9fef60-3bb3-4aed-a2cb-da58d57200a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3a2fde-8613-4444-aa0b-c16ec3913494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a13c14d-cf34-400d-83b0-ed27664bf0c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d5ea6b-267e-416a-adc2-32a2fe1ce77e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ad5efa-bd1e-4ffe-81c2-19ee3bc1ab79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27e50dbe-896e-450d-8791-339cae957a4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a122b7-575a-4a18-b715-c31a181811fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5504ec0d-1c0e-41cd-a841-6c62a02f4a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e5d8c9-a9ac-4639-be07-018eb3ad6703",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8abb17d7-3e3c-44f5-9d8c-576b93e2fbad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b15c5af5-f03d-4df9-9d7f-2d983f0cf3c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e9e218-cd17-49e9-a0bc-7755d1825e2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeea66c6-419e-45c4-a0a8-38653e18c012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5620bee-e914-41f7-b655-933e269da395",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e69b3c-ebbe-4956-ba0d-71585b4d323b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "198d4130-279d-4829-82b7-9b707f78dc19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bffb7109-d355-4639-86e4-e4da5e46f51f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9c28f55-9241-4853-8926-82bf1dfa577c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb38727-2957-46c7-84db-ce3d9c423cd8",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6016f10c-2d3f-4126-8ef3-a014faa434c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7b45538-5d6d-4d2b-a88d-b6ff3cc3b387"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ebc26a9-d2e0-4122-8ec1-0b32f040c6e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce89cb53-604d-4271-9a01-ba976a8b3804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3803af5a-28d8-4ca4-8a64-a5bc7110984a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4686fca9-0c47-4b71-b144-b88ad88b9209",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6626e274-804c-4e08-9500-ab191e58d61f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcef5d64-979d-4c20-99c4-a30b6167786c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94e0fe3c-7834-4524-a0f1-e64448a5e148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "987f679d-7d7e-4b34-b9e1-1cc5bc2da3c8",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd80209a-edef-49a4-b5b4-ed7f5bac5ac7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7f219d9-2fd3-4a68-8de4-954e6457ec0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b46adf0-a006-4233-a40c-56f45a9265eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "105b4960-7a77-47bd-800d-4d1c02d3ea2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf7a212-a871-442c-aaed-519d0c17e36c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af4340af-4c96-455c-957b-f7c753a7fcbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d40a2284-1a30-4987-b6b2-43ed478780b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "597033ab-7c77-436c-8c8f-a0fd8ffb4559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34eb4353-3887-4669-b58f-325b545010d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e430de22-58fa-4c44-93a8-6e3bc9c29313",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc6d9ef-0d43-4367-b00d-ed34bce449e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d61171c-8eb9-490e-8345-8be575f6e487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7177147a-1b7d-4dd0-bf3e-a5a5be4c343d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f917d26-6696-4fa7-933b-4b64dd831196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d18ffdc1-58b9-488b-86e8-6fcf36541a23",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36564aea-d7d2-4481-8466-3ee9d8bc5563",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2aa0c94f-2ba6-4e37-9db0-215a2e666eb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab3eead-0412-45d9-8ada-3b000aafe8c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9c16353-d292-4f07-bf5f-a2c3be200e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e543d8c0-10c5-4ca1-b652-8858cec01ff4",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b5965a-d5ba-4c1a-b8f8-aaad6f2c944b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "011a5ed3-01af-4723-9ffe-0a4f6c5b65ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f119d449-e194-4ce1-a2d7-2bd3b8fa91d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97e87329-2fd0-4932-b1c9-2d80256b252a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a321fe01-b70a-4abc-a7e9-0bb59213c409",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21ec5ee-5bfe-4fbc-a214-96b86425bbbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d04aadcf-1adf-4c5d-847e-5b7ef9fd275f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "091a6000-6300-431b-88b2-287998a8b233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebfe84ec-d615-480d-814e-e50193886348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a171dfc-d2c2-425e-902c-327e89ceb79b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d003fd-c7ab-402a-be2b-1563a59d183a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e15ece7b-cdc7-4da3-88cd-6cabe7a592b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9d8988-222a-4bc0-ab67-973ff54c893c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8455bf01-fc52-4600-b110-f9805513321d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d2618b-a56f-437f-8a2b-7ad7e174af22",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea11d537-42d2-4e28-b926-01ea0ad3a4de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5ec4cf2-5e8b-446e-96d4-371bfb4b7160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b479d299-8bc2-41b6-960f-a5a234a8ea10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ed07256-0721-44ea-bd30-305f73470b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10180a1-ef3b-4400-b7d6-f4e66021e621",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb4e05d-7c98-4324-bb43-f2c0e28b1277",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "631e6d50-b515-468c-bf7b-53b3079a01fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9127ab-45e4-45ae-9e89-df8a10cc9c1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "717c1459-8680-4c63-84b1-a37cd2a26bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a4ba5a0-2758-48c0-a2ee-a272287a63ca",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd625769-4cff-4355-b5c3-cb397584d347",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e4493b1-f996-4df4-bc54-b175e2d261bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "049dc8a9-0dfd-4890-a142-39e2fd7a3179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a09e4c9d-c702-4f3b-ad2d-9cc34b0b813e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4ffef0-5e3f-48a0-a2b5-cc8dd2192b82",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862fafc6-d3c7-4436-a71e-526b0d7b77bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26058a21-fc1d-4054-9fd1-0feeb9e8e733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d578a39e-b395-40df-9436-736b61a70f46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8bbbb49-1e2c-49c1-849d-2c8bd5da40ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc98478d-7b71-4ab2-ad3a-822a57c61fe8",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55aa4a61-dde3-40fb-9bee-fb04f8644420",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8f66c68-9f14-4f45-85e9-a630f311a0b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44217730-ec43-4299-874a-785822d1d50b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62d3a8c6-b9bc-49c0-be6a-29ad4ced745a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e16a3b7-0a09-40f7-8358-e7b160042c48",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b56ac4-aecf-4cc4-8b49-67ae1eb15efa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2aee8400-fadd-4192-857b-ea8bf541eca9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ece1271-6f3a-4e2a-8932-eea4dd2838c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd487f8e-7860-459a-b36d-bca2dc0d2bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00015572-2c19-4526-9bc6-a8e8023f29b3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce36a775-a13a-40f2-a8e0-a6a9ee30cf72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7a48680-0eaf-4c23-854a-f8b6145f492e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f13f339-c22e-4c90-92ce-0eedb37d223b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "503e974c-f0f3-4b83-ac30-f778b8287cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd13a1a-ee00-479f-96b9-542a2015e021",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919e290f-617f-4d95-93cb-f1c4c8b927dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19ad76ea-d6a3-444e-a426-6929105e91c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bb68b6-f15e-44a5-9696-63a35c75c687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e11a6c49-f9ce-4cbc-9cf4-06fb6a48477c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d2e793-4106-48d1-9c98-152026118dc3",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88bee192-baca-4844-a376-1a6ec5fe3413",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d45dbf93-fa4f-4f01-aefc-ece4ac35be81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a49faf-1cde-4d96-8c70-1b0cbb2a9910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc946ca5-45f4-4b10-8f64-bbf1d04f9ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028718bb-c8f3-47d9-be80-936080f35104",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06bf3d2-0b54-467b-8ec4-31c9a7f34490",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2a78197-e1e8-42ba-a6c3-573b7cab5a25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19165da-3b36-4f74-b272-733a79094f61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b41c93e-8871-4373-b8f7-5e43a203d44a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc551b95-e244-4bc3-9e80-6dbab6670abc",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7124e9d2-9487-49a1-82a5-b8e093f5b675",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "940caa28-e354-406a-a982-0bb37eea7b65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34a5f7b-1d47-4fe0-96c9-bb08f0177855",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f59212b7-b991-446f-b079-17ff79506df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1efe3a-2d2d-4584-a0d8-94aa534b8ada",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26cfdd2-bbae-4c5a-b2c9-3dfcd94fb807",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7411600a-762e-4506-a2a6-82b1fafe4f26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4253c64f-c308-4ed8-a063-f409b416c932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fd2d10f-eb27-4ac9-b836-80c46b5616f2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dbc204ce-bb6e-4913-a13a-ecff8816fc7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1739269c-bd0f-47d2-8fdd-9b31ce36d1ba"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3608f568-dca9-4ed9-85a4-9ac483821903",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b15f3af5-5558-43fa-9a1a-d88a1d3b5396"
                    }
                  }
                ]
              },
              {
                "id": "7acdfcc5-bebe-4bf8-a037-e1815d126504",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c459c57e-a0c4-43d9-a961-68f97e4b0872",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea676c3-7d53-42f8-8d9b-55eccebb500f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8eb4c8b7-2088-4822-8d81-6fb7c2c8b248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f4e605-4910-4636-b0bf-58d45b58223f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7e10b338-a13f-4a29-8794-1354fa2be836"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29b16852-7afb-4942-9300-6d5e967fd5cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "afe75c0b-11b8-4f8f-9eb5-0d4b73cfa80c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "000e5aed-e0e7-4bf5-834c-6c4f7af23a3a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cdc4a47e-334e-4cff-97bf-ae16e81fe121"
                    }
                  }
                ]
              },
              {
                "id": "8894b7ac-f8ec-4aee-a91f-8264d8dc3fd6",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b12dc7dd-d303-4f37-88d0-8458aabe7570",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ceaebca-63f8-4cd0-b210-e85fc7ae9229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6dc1c065-b7d3-4dab-967c-53a0ea32e560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a4b05d-0ad1-488b-9e8a-9818069da282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e26cec44-53ec-4331-adab-a0d632d9cc99"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "451b4c58-092c-4a49-aaa6-1afa27e37738",
            "name": "Positive Testing",
            "item": [
              {
                "id": "13939bc5-e5a4-4539-91ba-cf5aa33eb4e5",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0c964cc-d8c8-40b3-bbcd-3b698f9787b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5e536c9a-8dc2-4da1-a5c8-4d8cd36ec6c5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23f1a6d3-f49c-4391-ad82-aa28e2af6e5a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16acbbc3-7ded-4da9-8654-52aab7849dba"
                    }
                  }
                ]
              },
              {
                "id": "7fa1108d-c3e1-404b-8a00-3c485c91e7da",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f038ce79-4489-4473-bfc5-9d4b6ddad8b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8636db35-978e-4ba6-98db-71f0a883984c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d21be7bb-21f1-46da-9440-98d0c7d1fb74",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1239d12-1bc2-4cd0-9938-4f1b838315ca"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5554a475-f31e-404a-b461-2cee451cfd88",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "63f6cc32-c11c-4cc6-ab28-b6be8276f6c2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ddeeb2c-6c0d-4c53-bd6c-c5feb77cd360",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "19756d95-eac3-4171-a152-a94a2e3c27ea"
            }
          }
        ]
      },
      {
        "id": "6ec7cae2-6d5a-48bc-b15a-69ad174b9847",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "353e49a3-9bf3-40b4-aebe-4fc215644a29",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5321a523-e60e-462f-a3cf-103b7be7a856",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d280bedb-f452-4819-979c-4a78829c62a2",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fcd18a1-6d3e-4c55-9a6d-15c1094ff4e9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "69da9cda-9fa0-4b65-abc5-e5920f08e32c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be1c4af-5b6d-4e41-8d41-7efafe35fae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab03e084-ce68-4e25-a7e5-7a8915a545b8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "316c318f-461f-4918-942b-ef0b1d237884",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2407ef82-e21f-4219-8de3-0849aa3b0a5c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8c952d4-787b-4233-ba58-8865a6ec7706",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36cb99fe-cbed-466f-b6c7-94a48810dcd5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "620ae58b-cbde-460a-a4dc-f894bd94c3eb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0e8aa036-73f8-4ab5-ad71-fa80aca78990"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "98e0b6b8-31a8-4ddf-a289-366b8eb78c1e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b4d6f179-cfe3-4696-be25-7b9ae7245f20"
            }
          }
        ]
      },
      {
        "id": "a1a2f52d-3be7-4273-9ffc-0e329e3eb4b2",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e9be2661-65fc-4aa2-8d72-6104f5dd71ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0da95eb9-76aa-40fd-82b3-f4f3ac26c952",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6c7f5ac6-d015-491c-8352-618be028a59b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304ec5ae-a469-49d1-bfb9-0802afe8ab80",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60352e6e-c096-4f63-9c15-3e6dc8937402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48368413-7afa-41bc-a4c8-1b1816fff591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a8c3968-9b23-4276-8020-9f87aba49980"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76072f52-cfe1-4c8f-8386-bdcd3d96f259",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88b6816f-6570-4874-b88c-2f5c828c6b6e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ae9740f-33f4-4b49-9607-e3100f22bfce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c489c420-b6eb-4d1d-9e75-066278d4ff92"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b55acbd-3307-4a4e-a876-57ce089ca059",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9bc5dec4-1ad1-4ad3-8cce-bb3f42764e0a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "debd95e7-e1ac-4bc6-b230-2eae5459d59c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "21d9acfd-c0db-415d-9ed6-51fbd2a8afcf"
            }
          }
        ]
      },
      {
        "id": "cad8c2ad-0d1d-40ea-b00e-ccadf15a6297",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f7937263-fe59-4c5f-b8ed-31ff02e55931",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6d32ac2d-316d-46cd-95b1-ba9d02692c01",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e0756668-94f6-4966-9882-16f65dd1a324",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "572255a3-cd52-4153-8945-d9c98fa42c57",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33687e86-aec7-4d22-8baf-de8a7f37d195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b873a2dd-13e6-4b10-9c6a-aa060bc67d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65c4c66a-fcdb-470a-a7cf-36eb68458589"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b282442e-7fd0-4dab-96d4-d0918d7c244b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3419995c-488a-41f0-8367-b96e07be2338"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb7342f6-4f3a-44bb-a1f1-255f81348740",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bda8b247-bd14-4366-9b92-8c77cae888ab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cffbba13-cfe3-429e-828d-16f6981dd866",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ab9f51a5-70a6-498f-8a63-76152a1debae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "89964f11-1960-45f6-b804-8424d20b37a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7eeea70-145d-4168-9dad-e9cfb964808a"
            }
          }
        ]
      },
      {
        "id": "d4565c17-a8ac-4ef2-8ce0-d868d868c041",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e08272d2-6a1a-41ce-af23-89f47083e13f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c71c333c-dbfe-427e-9b56-3e25f5d1fecf",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d419cfcb-4e54-4fb9-b983-f498b90e95bc",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ae548e40-6e1f-47df-9f61-a279c80aadb6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "db14aba3-50b8-4dfa-8117-ff82e0dac18c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 9.691228070175438,
      "responseMin": 4,
      "responseMax": 257,
      "responseSd": 19.755419249408845,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1698453139056,
      "completed": 1698453156310
    },
    "executions": [
      {
        "id": "eab633e4-9a79-48dd-a113-09079f87bfa9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "80facd37-6da7-445a-beae-ca915c8c7e82",
          "httpRequestId": "8dbebbe2-3545-41b1-9380-275e284da39f"
        },
        "item": {
          "id": "eab633e4-9a79-48dd-a113-09079f87bfa9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "10d63cfd-f3ab-448b-afe5-3fa742519a76",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 0
        }
      },
      {
        "id": "80f4925d-4e0c-40a8-b8dc-0149a5c499cc",
        "cursor": {
          "ref": "1d1ab335-cf3b-48be-8bb0-09b52405822b",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c240b811-fe85-45cf-8fac-d996ed267933"
        },
        "item": {
          "id": "80f4925d-4e0c-40a8-b8dc-0149a5c499cc",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6ff50302-57ff-4f4a-be66-8f5e490a9b92",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "9e33f49c-747f-48f6-9ecf-8b253e2ce913",
        "cursor": {
          "ref": "b20d8c55-ca74-4381-a67c-7a342cdd5f0c",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "641f85e9-e578-415e-8cbb-a49edc66a166"
        },
        "item": {
          "id": "9e33f49c-747f-48f6-9ecf-8b253e2ce913",
          "name": "did_json"
        },
        "response": {
          "id": "211b3ba9-3e19-4154-bd79-db1d8223a3f3",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbcfda0-a060-434f-9113-edf545188331",
        "cursor": {
          "ref": "b6d8b996-357b-40cb-8cac-a20c84d27101",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "59508d1e-92c1-4235-82f3-295bd290c9e1"
        },
        "item": {
          "id": "dbbcfda0-a060-434f-9113-edf545188331",
          "name": "did:invalid"
        },
        "response": {
          "id": "e0a72ea9-159f-4677-b9d4-1666b819215c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbcfda0-a060-434f-9113-edf545188331",
        "cursor": {
          "ref": "b6d8b996-357b-40cb-8cac-a20c84d27101",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "59508d1e-92c1-4235-82f3-295bd290c9e1"
        },
        "item": {
          "id": "dbbcfda0-a060-434f-9113-edf545188331",
          "name": "did:invalid"
        },
        "response": {
          "id": "e0a72ea9-159f-4677-b9d4-1666b819215c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d88fbf4-e989-4e28-94c0-1b3061fa4238",
        "cursor": {
          "ref": "309c4575-e75a-4ded-b01b-35806ded920d",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ec73e2c4-513d-4bec-8b62-11f2beb18795"
        },
        "item": {
          "id": "1d88fbf4-e989-4e28-94c0-1b3061fa4238",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2af72c61-682b-41da-8c38-de1e8f3ef3af",
          "status": "Not Found",
          "code": 404,
          "responseTime": 49,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ccb35c4-2db0-47e4-a84b-bd478600b888",
        "cursor": {
          "ref": "72ca494e-1c6b-4c04-8517-d1ec934eab1c",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c9aadd9c-547b-4631-8770-49a9495b395a"
        },
        "item": {
          "id": "2ccb35c4-2db0-47e4-a84b-bd478600b888",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e430ed62-0f0e-4e1b-b166-08d29d59ffdc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10908be3-1572-4441-8663-b953774743f3",
        "cursor": {
          "ref": "79ac83d2-dc53-4886-8272-7bb259448300",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "32e95df6-6c1d-4866-920e-4ab9d96cf744"
        },
        "item": {
          "id": "10908be3-1572-4441-8663-b953774743f3",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1cf2f3e1-d675-4302-a00e-c08de446b8e2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55874c15-1bcb-428d-884a-ae614efb4655",
        "cursor": {
          "ref": "1021a3f2-037b-4697-8593-a5fc9db7649f",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "869e4658-d63e-412c-953d-b71945e898a2"
        },
        "item": {
          "id": "55874c15-1bcb-428d-884a-ae614efb4655",
          "name": "identifiers"
        },
        "response": {
          "id": "f4004dc4-b0cd-40b2-b7fa-d16cd0b37eb7",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03dc6003-0c74-4cfb-8a35-69e63712b313",
        "cursor": {
          "ref": "ff043c2b-2a01-4381-96bf-4eb48e510d00",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1d8d45e3-cb58-49a3-a923-7d2cee27b0b6"
        },
        "item": {
          "id": "03dc6003-0c74-4cfb-8a35-69e63712b313",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9d6f83df-8037-4176-9278-38953db3bab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad49f61e-dcf7-411e-ba96-78bc66ef7e19",
        "cursor": {
          "ref": "20fd29ed-df63-4ed2-b096-60337a285af4",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e6b0ed3d-c8fd-46ed-b6b1-460a8df6b716"
        },
        "item": {
          "id": "ad49f61e-dcf7-411e-ba96-78bc66ef7e19",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7b2fb538-ebae-4d99-b1fa-3d041426e4ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8a0e3d-2cc5-490c-a17e-72d099b44456",
        "cursor": {
          "ref": "c50142fc-00df-422d-9f05-9b8e8f7abcd0",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "498bd730-94ef-4857-bdbc-f3d91864af84"
        },
        "item": {
          "id": "2c8a0e3d-2cc5-490c-a17e-72d099b44456",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "cc015e28-4eaf-4313-a56b-5c01446990f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445a343f-e70c-4ae5-a5b1-415e1e142423",
        "cursor": {
          "ref": "cd9b5749-f25d-4b0b-b401-1d96967d6373",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "bd266eae-5543-404d-ba95-038236db4582"
        },
        "item": {
          "id": "445a343f-e70c-4ae5-a5b1-415e1e142423",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "22f1db3c-abef-429f-8b54-b5a236b9cefd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592b3d6a-8d40-40c6-bc0c-40539d56618a",
        "cursor": {
          "ref": "78383799-95a4-4e9d-b6aa-31dc686bec70",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9b7ddf6a-4e3c-4775-945a-465e96fc8cb5"
        },
        "item": {
          "id": "592b3d6a-8d40-40c6-bc0c-40539d56618a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5979692b-61d0-43de-a825-91b75512712b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208fca11-c736-4b8e-bce1-dba08904b01f",
        "cursor": {
          "ref": "94eae5c5-6d6e-4461-b1ab-fc4b8f32eb39",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "fe47bddb-6e39-4337-b07f-34c21a54516f"
        },
        "item": {
          "id": "208fca11-c736-4b8e-bce1-dba08904b01f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8e590dad-6cbf-4117-b2fb-4bd9818c3b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "853783c8-ced6-4835-8bd4-92e07799c878",
        "cursor": {
          "ref": "b84874f0-78d5-414d-9164-be4c16f2cf8d",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c8314711-a70d-4c18-ba53-1cf4b8db64a1"
        },
        "item": {
          "id": "853783c8-ced6-4835-8bd4-92e07799c878",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6cec2c59-e89b-4b75-946d-5f186dfd030f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8dc1ec-9d22-4995-8464-b1fd79300558",
        "cursor": {
          "ref": "e3f712b0-631b-4e97-b8c4-7fab40eab162",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c2013220-efaa-4d4f-9162-e49e0887e2f8"
        },
        "item": {
          "id": "fa8dc1ec-9d22-4995-8464-b1fd79300558",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "bc5bf98f-0a05-48e6-b9d5-cffc3db91b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ee8e10-a627-4924-bcf8-089d1d52480e",
        "cursor": {
          "ref": "e1c8c7cf-a0f1-46a2-a0e8-d71a5c76a846",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9698c0da-e44e-44e7-8361-fb691b5b6b00"
        },
        "item": {
          "id": "50ee8e10-a627-4924-bcf8-089d1d52480e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "20006c52-cad8-4234-940b-3394a8251d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84643709-32f1-422d-9fb1-fe788fef0caf",
        "cursor": {
          "ref": "1c210c3d-ebdb-45fd-9a01-43e93f71c1c3",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f14382d7-3c28-47c9-a146-0c596f2b3a18"
        },
        "item": {
          "id": "84643709-32f1-422d-9fb1-fe788fef0caf",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "83a86948-a008-4be0-9af2-85e34c00cafa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074d4dc7-c8a5-4f80-9193-1eccfb02dd34",
        "cursor": {
          "ref": "9eac41ed-05c1-4f28-9f77-50b6de5809c8",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "548620a8-4633-4012-ba7d-a0159a622bc5"
        },
        "item": {
          "id": "074d4dc7-c8a5-4f80-9193-1eccfb02dd34",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d6fa0944-8136-4a19-80a3-1289cc942f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc45bb3-9785-4001-abaf-a98808389239",
        "cursor": {
          "ref": "a7fccd59-62f9-4fae-8154-83a9005d1daf",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2e1b8c90-0632-4ff1-becc-75cc741f6212"
        },
        "item": {
          "id": "3bc45bb3-9785-4001-abaf-a98808389239",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c732150a-2fd0-4c54-acb7-9b1a6dc0bf30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8d9754-abe7-4bf9-aa60-2ab19f8d56db",
        "cursor": {
          "ref": "e67a4ab0-8e34-40ed-99cc-dd5403427b9a",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5c4f217c-8392-40da-afd9-089f29172961"
        },
        "item": {
          "id": "2c8d9754-abe7-4bf9-aa60-2ab19f8d56db",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ff8a4a61-f7e6-42b5-b23b-389f50e1c5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6037da20-f908-4dd5-818c-8aec3ec99b01",
        "cursor": {
          "ref": "4a26be16-f5dc-40e5-9231-bddda35a070a",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1d754ae8-d912-4b2a-bf9e-5c12b9576a28"
        },
        "item": {
          "id": "6037da20-f908-4dd5-818c-8aec3ec99b01",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9a282791-019c-4db9-93fc-6c062008e7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ec755b-c177-4976-ba1a-c93904d5d800",
        "cursor": {
          "ref": "4bf7033a-ff66-4bfc-800d-e2cbfaa8776b",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "37b74dd6-a60c-4799-b276-723b1280d048"
        },
        "item": {
          "id": "b2ec755b-c177-4976-ba1a-c93904d5d800",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4d03a358-2481-4099-b7d2-cf558ce78b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b399d4eb-e3c9-4319-8c8e-eadff2c09e42",
        "cursor": {
          "ref": "f94d626e-a588-46a1-99cc-20dcf7cdc7bc",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "af417e64-d4d6-4ba3-9fb1-614cad4c1b60"
        },
        "item": {
          "id": "b399d4eb-e3c9-4319-8c8e-eadff2c09e42",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ae385d21-1df1-43ae-8181-4543e7d694b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0782e233-f960-44c8-8766-a27a71b3a858",
        "cursor": {
          "ref": "adf0015e-b142-43fa-991b-8b538a0c571d",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b1009756-ca9d-431e-ba41-78bc6b6309a4"
        },
        "item": {
          "id": "0782e233-f960-44c8-8766-a27a71b3a858",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9575b84d-b005-4ee7-9eed-f6569cbde15a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ab43a2-26e3-4c82-8af7-286b21a918d6",
        "cursor": {
          "ref": "8866f0c5-b0a3-4e36-8dfe-010ba6327ae7",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5c51a4aa-6e07-425b-ba5c-1dc9581f3dd3"
        },
        "item": {
          "id": "85ab43a2-26e3-4c82-8af7-286b21a918d6",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "eb2c944a-2de0-40bd-acfe-0d443b269f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5729c39-88eb-473e-8415-a1afcbc4a3c1",
        "cursor": {
          "ref": "444f0d7b-67de-47a1-b73b-f65079bc4049",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "57ac2481-8621-48ba-9d94-c979b2ecfae9"
        },
        "item": {
          "id": "f5729c39-88eb-473e-8415-a1afcbc4a3c1",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b2a07d1a-368f-4196-995a-70c3dd5bd775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f8b30e9-cd65-4d46-ae7b-1da2d515167d",
        "cursor": {
          "ref": "b6114373-3ff8-48ac-b5df-43ce435eb0b7",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a9215f75-d4f1-4f97-98a1-5319f413ef1b"
        },
        "item": {
          "id": "2f8b30e9-cd65-4d46-ae7b-1da2d515167d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "839c91f7-2a34-41ad-9894-d5232714a25f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de45ff6-f47b-49cc-8b6a-becb963ebbcc",
        "cursor": {
          "ref": "cb4f6898-721d-4d0e-8168-118283eb6005",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "42c75ea4-0c69-4f07-883d-e84f80ddb046"
        },
        "item": {
          "id": "8de45ff6-f47b-49cc-8b6a-becb963ebbcc",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "05578da5-eac4-403f-80f0-6dd5b02111c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801a1526-7ef3-4912-a438-998c5cb07ee7",
        "cursor": {
          "ref": "bfdff4b3-74f2-4610-bc56-7db6ca2a97bd",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b6717b6d-0dd6-42cb-83af-0462ffa17fd8"
        },
        "item": {
          "id": "801a1526-7ef3-4912-a438-998c5cb07ee7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8ea67cbc-8307-477e-931e-c99f93b89f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda8b3a1-2668-4684-9631-2044efb443b2",
        "cursor": {
          "ref": "77dbb021-96ab-414f-91ec-b7ba630280f5",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9b3b9e87-2ace-416f-94f0-9d3158cf7fa6"
        },
        "item": {
          "id": "bda8b3a1-2668-4684-9631-2044efb443b2",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2875fc7d-434a-419e-88ec-d9a62ce00d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "287a3436-8104-4f0a-9e97-dc2829a6695b",
        "cursor": {
          "ref": "bd9f806c-7e33-4183-a20a-0485fb52646d",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a46a1401-6d74-4fff-869c-1606ece4c269"
        },
        "item": {
          "id": "287a3436-8104-4f0a-9e97-dc2829a6695b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7f8ce511-f2f3-49f1-98a3-e81826d240ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7596971e-f511-424e-8306-ce9af8eaa193",
        "cursor": {
          "ref": "7af16e48-4aa4-4595-a18f-49a7880069ae",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "0ddb05f0-38fe-4d43-9b56-47e3ceeb046c"
        },
        "item": {
          "id": "7596971e-f511-424e-8306-ce9af8eaa193",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "84d0bce1-8950-4414-9068-eecade77968b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52cb5af4-29b6-48e0-a7af-b3941332f276",
        "cursor": {
          "ref": "31369601-0abb-4ab4-b9a1-de4b7461fc16",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "56931cbb-b92e-4542-af57-0e95376cbc10"
        },
        "item": {
          "id": "52cb5af4-29b6-48e0-a7af-b3941332f276",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "153314bf-867f-4db1-bcff-22287bd793ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6c3aa9-81a2-4249-9853-1a261ada65ab",
        "cursor": {
          "ref": "8daead67-2b3d-421b-bb5d-078d084ae328",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1d6287f7-3d04-4272-9c12-5965cdf365db"
        },
        "item": {
          "id": "cc6c3aa9-81a2-4249-9853-1a261ada65ab",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0af8302c-7470-464f-8893-872d35a179ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1159f8-5cd3-4999-9a42-c7f32a9a0077",
        "cursor": {
          "ref": "9872a490-f80c-4a47-8ec4-2b698ce1811e",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9eaf6b7f-abbc-4579-8e25-cf2856bf961a"
        },
        "item": {
          "id": "8f1159f8-5cd3-4999-9a42-c7f32a9a0077",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a9008a90-cad5-4d97-a07d-bc6b237c40f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e80e61-66e9-466d-aef0-3f694d8341d4",
        "cursor": {
          "ref": "55a57279-54f3-4549-ab42-5b931ecb6c1d",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d0303376-e9a2-4170-ba6b-5f406d7bbbc6"
        },
        "item": {
          "id": "30e80e61-66e9-466d-aef0-3f694d8341d4",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "02690854-b9e1-48fe-ad7b-aef5b3f31eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96d60a1-d660-409d-8c68-7806c5f54758",
        "cursor": {
          "ref": "c8707b89-44c8-4da7-af68-0009f4c7f7f0",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "cd99c181-0648-4b20-b42d-5dd78f4a1787"
        },
        "item": {
          "id": "f96d60a1-d660-409d-8c68-7806c5f54758",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a25e86e0-7651-49fa-85c6-a79b30186a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2042386a-a0d3-4e0f-9e55-b69e3ed4c700",
        "cursor": {
          "ref": "85212853-e7dd-4dca-81e6-f89a64f70015",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1d0ba9c5-b7c4-4c71-9d76-d275c635677b"
        },
        "item": {
          "id": "2042386a-a0d3-4e0f-9e55-b69e3ed4c700",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d305ba5d-2a8c-439e-8e8b-62842724ce0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c940216-3444-4643-8ab3-8f248c89af86",
        "cursor": {
          "ref": "55ec38c1-f0e6-440b-96cd-1a39a1cc050d",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d2e68b5f-ea89-447c-ae6d-d9b0db7b2d3f"
        },
        "item": {
          "id": "0c940216-3444-4643-8ab3-8f248c89af86",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a3685e0f-33be-4603-a32a-d3f4441e3ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e51a0d-43b7-4295-881b-091cb8ee56cf",
        "cursor": {
          "ref": "84fd3d55-7992-4cea-86d9-22aa5d41a3ed",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "92a41c19-9bd4-4690-a8c1-e47cc79444cc"
        },
        "item": {
          "id": "43e51a0d-43b7-4295-881b-091cb8ee56cf",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d4686f28-33fe-4df1-829b-ce45780ffc50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33cdf05-212d-46a5-9788-156639cf205d",
        "cursor": {
          "ref": "3a658c35-502f-491c-b014-2d54b4bf1421",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5f239c2e-cf12-4017-91dc-27fbd3861fd9"
        },
        "item": {
          "id": "b33cdf05-212d-46a5-9788-156639cf205d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8504c3dd-931c-4c81-b5c4-5d7b957bec57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707eb0c6-3d8d-440b-b2c2-d809f0a61836",
        "cursor": {
          "ref": "3a1ff3a8-cf5e-4870-bc32-e00364675f8a",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "cabd2278-91dc-4cb4-9de6-a095799d0875"
        },
        "item": {
          "id": "707eb0c6-3d8d-440b-b2c2-d809f0a61836",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3b9ab260-c7ad-438d-9e2a-337da5cd2070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab44b934-639b-4a59-a3a8-0a695f4f05ea",
        "cursor": {
          "ref": "243756a7-3207-4df7-bb3a-3a7df4faaf4a",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5dbcc1d1-2776-422e-a1cd-42580d067e2e"
        },
        "item": {
          "id": "ab44b934-639b-4a59-a3a8-0a695f4f05ea",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e8bff149-f966-46e3-a169-521fb7c1a1d8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 54,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0bc7bfb-b6d7-4e3a-a269-f00526c1c78a",
        "cursor": {
          "ref": "b6cc997c-00b1-412e-ad27-885682b4a030",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "748ac916-ae7a-4be0-b204-fdf877a62a01"
        },
        "item": {
          "id": "d0bc7bfb-b6d7-4e3a-a269-f00526c1c78a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3bff9888-7c64-424b-934e-b774c4aace9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074767e2-7006-4cf5-b661-6fa78a3d9b88",
        "cursor": {
          "ref": "8f3ed82e-b207-4ef0-9dc8-d832c3516c7b",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5504a932-118b-4e65-adae-cec8da863eb1"
        },
        "item": {
          "id": "074767e2-7006-4cf5-b661-6fa78a3d9b88",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "741bf3bd-a22f-49a8-ba3f-b5937291ee6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94fce4fe-fbca-41f2-8f35-ca7426ac7215",
        "cursor": {
          "ref": "5ed8abda-ef28-4d75-b531-15be7892f88b",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6d5c8287-6af8-4237-80cb-ba556730ad7d"
        },
        "item": {
          "id": "94fce4fe-fbca-41f2-8f35-ca7426ac7215",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f5e42998-5507-4ba5-92aa-2d12fea668c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e01d259-ff16-4c09-b111-1c9ede270c80",
        "cursor": {
          "ref": "ce7d4f1d-980e-479d-8de6-faeb7a1dc645",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1c3325c5-d5ca-4c7a-9c6c-e7a73004b127"
        },
        "item": {
          "id": "6e01d259-ff16-4c09-b111-1c9ede270c80",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "bc30edc1-bcad-4ece-bfd7-c579042aab5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3834c084-7f13-4190-9da3-9076610eef9c",
        "cursor": {
          "ref": "1563df41-11cd-4ab5-ae00-51b159d2f953",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8677994c-b81b-4996-8a93-1852d1203089"
        },
        "item": {
          "id": "3834c084-7f13-4190-9da3-9076610eef9c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "596c1bc8-16f3-494b-a176-d4f9365cd805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d723ca2d-d373-4cd3-bf15-a3a88ed7b271",
        "cursor": {
          "ref": "ea09701c-109c-4393-89d6-c6253944c793",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2f7ebbb5-e087-4662-8208-cfc40e7004ab"
        },
        "item": {
          "id": "d723ca2d-d373-4cd3-bf15-a3a88ed7b271",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7bcbbdde-037a-4abe-b609-b5292fbf0933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9317c154-2b66-4e41-badf-c86c77e0873f",
        "cursor": {
          "ref": "ba1b4b3a-109e-4bca-b762-b6cf97510d66",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9f93619b-cc1d-4cdb-ae17-576c1124efcb"
        },
        "item": {
          "id": "9317c154-2b66-4e41-badf-c86c77e0873f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ee40ae67-43d9-4c58-be4c-aaafebc0f37c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 55,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d802a3-c930-418c-8621-f697a9533c36",
        "cursor": {
          "ref": "1f5ce9e3-4e33-4b63-a941-8b3f7072edc3",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e9f5beba-3ff1-4944-aeca-49fd63bd9653"
        },
        "item": {
          "id": "e0d802a3-c930-418c-8621-f697a9533c36",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "367a44ae-fb80-4687-9480-0fb68cdd778d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e238362-af51-41e8-b648-93f7effdb6be",
        "cursor": {
          "ref": "92414878-7b62-408d-acd9-80fe9929806f",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a8c69e70-86d6-43aa-b954-59a913fdc240"
        },
        "item": {
          "id": "1e238362-af51-41e8-b648-93f7effdb6be",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7a472a01-6edf-42f2-a730-3f744f66374a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba437045-f08d-4703-88f5-18103b0df927",
        "cursor": {
          "ref": "6fba4230-cb88-45fe-83d6-b2db8470b7ec",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "06f8c808-909d-46cf-a953-acf536c91aa2"
        },
        "item": {
          "id": "ba437045-f08d-4703-88f5-18103b0df927",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "393b7124-95bd-495f-b75d-d29e4844de1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa1478d-afab-4236-8eeb-be13deb98e03",
        "cursor": {
          "ref": "7286b94d-104f-47e5-a75b-dd54e685cb27",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9d4bb082-d13f-491f-add3-c8e1bdbd242c"
        },
        "item": {
          "id": "daa1478d-afab-4236-8eeb-be13deb98e03",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f0be9e0c-9539-4a30-bce8-3102a5b45696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13014d3-34ec-4b19-98a6-556478227210",
        "cursor": {
          "ref": "029a66b6-558b-46aa-b609-eaa89738a4bc",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7770709e-cba0-4688-8903-788342d89ed5"
        },
        "item": {
          "id": "f13014d3-34ec-4b19-98a6-556478227210",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "20a51e13-8023-4605-95c8-6863f82af089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70bbbd0e-0bca-4a4e-b9b2-ba057d90e8f8",
        "cursor": {
          "ref": "0e2ab29b-617d-4369-93a8-819bb4295781",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2df54ca4-2c77-474d-a308-63834f5e2b75"
        },
        "item": {
          "id": "70bbbd0e-0bca-4a4e-b9b2-ba057d90e8f8",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "eafa8af0-441b-4029-b5e1-073084b26159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870327cb-8351-44c6-abb6-ed467ff42292",
        "cursor": {
          "ref": "3191326d-d2d2-4e46-90d0-3cb2e4924046",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f5ec6725-e0bd-41f1-8bbc-1b967c2c803d"
        },
        "item": {
          "id": "870327cb-8351-44c6-abb6-ed467ff42292",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4adb88df-aa16-41b1-a54e-646fc3be777d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c346ff5d-337f-4129-9f67-1fd1169540ed",
        "cursor": {
          "ref": "f9925c29-e4c2-4b11-a638-c6218c7755ab",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "040ca909-df14-446a-bcc4-2af1389e8e02"
        },
        "item": {
          "id": "c346ff5d-337f-4129-9f67-1fd1169540ed",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "547426b2-aa7d-4083-bf4e-937e3b088eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b8bcb9-0c0c-4d74-9a74-b225810d7c9b",
        "cursor": {
          "ref": "1158838a-d4c5-4633-bb68-f5b591a301ae",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "30c60645-b224-427b-9854-bfbd968918c1"
        },
        "item": {
          "id": "04b8bcb9-0c0c-4d74-9a74-b225810d7c9b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2b41c0dc-bce1-4ebd-8d7b-43d15ee0bef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec7ab5a-1f4c-4cc2-bea3-a4628b8d4798",
        "cursor": {
          "ref": "72136390-c6d1-4de2-a7c1-5deccb565446",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "35724d0a-6167-4385-8448-179e3b6cc5fe"
        },
        "item": {
          "id": "0ec7ab5a-1f4c-4cc2-bea3-a4628b8d4798",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4b1969d2-8bf2-4506-a617-98780fa7816d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ee02a1-1f11-460b-818a-194361940738",
        "cursor": {
          "ref": "ccded310-2678-4a55-8d24-c3c9a4532ee7",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7eca9f4e-0984-4b81-b301-b50887275186"
        },
        "item": {
          "id": "d6ee02a1-1f11-460b-818a-194361940738",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4c308bea-ba72-4ea1-96a9-f1712af2e397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ad6da7-0614-4fe6-8d99-e32665cad9a7",
        "cursor": {
          "ref": "5a10bd47-ce05-4936-8624-96aefca99e7c",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ac94f6d6-b3c9-4301-8c7a-712e3d86860a"
        },
        "item": {
          "id": "46ad6da7-0614-4fe6-8d99-e32665cad9a7",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a965083b-e2cd-45f1-a95a-3de2ff9c337f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75e99a7-5ac7-4fda-976b-428a75311015",
        "cursor": {
          "ref": "4d6027e0-7549-4804-aa75-6d32a4570b92",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "dcd2beec-383c-47c1-a4e0-a2c1ef3699eb"
        },
        "item": {
          "id": "a75e99a7-5ac7-4fda-976b-428a75311015",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "dce082cb-0808-47ea-855a-b097f449ccb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945dcec7-8cec-4707-b284-cef15290a431",
        "cursor": {
          "ref": "a8f37afb-b42f-49bf-a32a-0abc9bc8086b",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7d079a4f-603c-459e-b1ee-3e1ec7f101c4"
        },
        "item": {
          "id": "945dcec7-8cec-4707-b284-cef15290a431",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f3e84ed1-7114-4a3f-8759-47334cd5ee84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c5c2b8-bacf-4477-bcaa-370598271b62",
        "cursor": {
          "ref": "1db2e23a-1429-477f-9838-b5c087787b28",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "0fa9ae8d-b7c3-453f-aa4e-8ffad52c7942"
        },
        "item": {
          "id": "c2c5c2b8-bacf-4477-bcaa-370598271b62",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "46951965-fac1-4eac-8962-f1c9095dd07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7511118-40ec-4833-9b22-9324d4a6e67f",
        "cursor": {
          "ref": "fffe20e0-74c2-413f-a2b1-9195a1f80d34",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4f198fe8-6f3e-494c-a6a1-773fb962e189"
        },
        "item": {
          "id": "a7511118-40ec-4833-9b22-9324d4a6e67f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b1af8696-200c-4c6c-b587-697ef315979d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b40761c-41a6-44b8-9a51-2af42f0cb065",
        "cursor": {
          "ref": "616e1b04-a350-4b35-8e81-5c3de944cd88",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e51798bb-c6be-4ca6-bbcf-bd1272c1d136"
        },
        "item": {
          "id": "7b40761c-41a6-44b8-9a51-2af42f0cb065",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9155c23d-2c9a-41f4-9ef9-d5110c0b97b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ababb3-2fa1-441d-95f5-fedb406f4e62",
        "cursor": {
          "ref": "1dce5580-9487-4965-98f3-d19fffbbc3c8",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0dba004a-af36-48cc-a7c3-916713e50fdb"
        },
        "item": {
          "id": "12ababb3-2fa1-441d-95f5-fedb406f4e62",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "42f8ee59-e9ec-46e6-8168-399f744e587c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8797ad-f217-4d15-89e9-f9643324d1eb",
        "cursor": {
          "ref": "e4d4bca5-7823-4bda-9766-0625fe1684b9",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "95ba35af-9290-4a6d-9511-22f6386ebc52"
        },
        "item": {
          "id": "2e8797ad-f217-4d15-89e9-f9643324d1eb",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c82e9e27-fab6-4eb3-89d0-9b7ee46436f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ec66fc-9c2c-4181-b501-153a9a249671",
        "cursor": {
          "ref": "961db298-5ac1-4a1f-922a-92f87cdcfcae",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "eb6e5adb-30c6-46e8-a880-f458fbc58537"
        },
        "item": {
          "id": "54ec66fc-9c2c-4181-b501-153a9a249671",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c479af5f-2aea-4cb7-ba5b-1e81a5124829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4616052d-5d50-46f1-81e8-e2dae9df5b3a",
        "cursor": {
          "ref": "b0fb22b8-afd3-41aa-ab6f-110cb7ce829b",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "02ccb986-2c70-4b71-ada8-53632f889a2d"
        },
        "item": {
          "id": "4616052d-5d50-46f1-81e8-e2dae9df5b3a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c4a09c50-c799-4f97-a54e-e3345822f83f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6359c50-2d81-4ecb-9d0f-544ae55e309d",
        "cursor": {
          "ref": "6e9f1546-7e7e-4cbc-8181-0ed151ebd362",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2b705a83-104a-4a12-82a7-9daf0b379f45"
        },
        "item": {
          "id": "e6359c50-2d81-4ecb-9d0f-544ae55e309d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8a7b89db-e78e-4e09-8617-f4228b2471ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa7d057-26fb-4c67-be3c-d965f967531e",
        "cursor": {
          "ref": "1256d8ad-cc74-4e0f-ab3f-9a6501eee68f",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9d0c658c-2f0d-4cdd-91e9-97cdfda67958"
        },
        "item": {
          "id": "afa7d057-26fb-4c67-be3c-d965f967531e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "12359bd2-9048-4311-a4fd-4f54171c5e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e31004-ca0f-4482-96f5-755a0071e316",
        "cursor": {
          "ref": "77f66ad7-e5c6-4437-be83-8449588f0ed8",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "12af3b3e-c5b8-4fd4-bbe8-1b1d2cdf555a"
        },
        "item": {
          "id": "f3e31004-ca0f-4482-96f5-755a0071e316",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "9e7b01ba-7a98-4297-b657-732e277158f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c79dc5-4e9d-4274-a615-aad790dcc03f",
        "cursor": {
          "ref": "6482ca07-84d4-4469-bc3c-3b6c962d7c40",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "46817fa0-ceef-4aba-9ab8-1ddee506c75c"
        },
        "item": {
          "id": "03c79dc5-4e9d-4274-a615-aad790dcc03f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b9968012-bfcd-4e33-8b6e-b56968124208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48c116c-aee2-465f-9604-4d6b04b068ec",
        "cursor": {
          "ref": "efed5a95-d1f9-4618-99d4-ee349fcd8a44",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6a2cfc58-6beb-466d-878c-7a4a02a179a0"
        },
        "item": {
          "id": "f48c116c-aee2-465f-9604-4d6b04b068ec",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f8741ae5-4c09-41b1-9025-862888045f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97014e23-61b9-4288-9cfd-379e8a33db41",
        "cursor": {
          "ref": "5f9cd040-d47d-486d-b2ea-f7e06ec76aaa",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "fdaa84ad-7d67-480e-9b1d-71db7dff21a8"
        },
        "item": {
          "id": "97014e23-61b9-4288-9cfd-379e8a33db41",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "028d26ce-7b07-4403-9683-0b5d46347aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d12293-a361-4f27-a584-82e43cf4c7ec",
        "cursor": {
          "ref": "a1a9baa7-d6e6-42ee-958b-c0e21460c3ef",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "60a5086b-4fb5-4cf6-a168-61ef69f9896c"
        },
        "item": {
          "id": "64d12293-a361-4f27-a584-82e43cf4c7ec",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a30ac0dc-f5a8-468b-82e9-0589b8ffe626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e7e61e-58e8-458c-b4cb-53d19f4d9a32",
        "cursor": {
          "ref": "82ec69d0-b23a-4275-a968-313456728dee",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bd9f987c-9d59-4ce7-ab46-cbb2cbc4f4c8"
        },
        "item": {
          "id": "79e7e61e-58e8-458c-b4cb-53d19f4d9a32",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c497f66a-7963-4038-82ad-666155e66961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22cf3c91-30fd-41c6-8fe0-928ad094aebc",
        "cursor": {
          "ref": "53a9b75b-191d-48a7-bde9-dff5e8f9c6f8",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "fcfc14ab-c30c-4e9f-9660-5f9dc0882498"
        },
        "item": {
          "id": "22cf3c91-30fd-41c6-8fe0-928ad094aebc",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "74b1712a-ea9e-4100-831e-9a1807c17c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4d5360-ade7-4f77-8d96-b8dab6abe37b",
        "cursor": {
          "ref": "9defa088-0e61-4b16-9128-08446cd77247",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "cc814729-9881-401d-a812-e461604e9443"
        },
        "item": {
          "id": "6e4d5360-ade7-4f77-8d96-b8dab6abe37b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "866d555f-14ac-4beb-9e6b-06f32be31327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6fd7d8-1bad-4ad4-addc-514578c4f5e6",
        "cursor": {
          "ref": "6ee059ea-0d7a-4fbd-a377-8626670119c8",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4a0adb3b-4716-405a-bd6c-a3786db82777"
        },
        "item": {
          "id": "dc6fd7d8-1bad-4ad4-addc-514578c4f5e6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "13b86339-3833-4921-abc2-d7cd6ce00e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61187ab4-5ca2-45f2-997b-f1a726e6fc69",
        "cursor": {
          "ref": "ce683a1a-aacc-443c-ad22-7f14d2fd6f78",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "cc5c8efd-a8d2-4dfe-b91d-7013c55334b5"
        },
        "item": {
          "id": "61187ab4-5ca2-45f2-997b-f1a726e6fc69",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6b915696-32af-4364-b7be-f95f46ed4553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7187a7fd-e6cc-46c6-a9d8-594577b8b8ec",
        "cursor": {
          "ref": "28866f6a-8d2e-40cc-adbd-df4f6464ad61",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2fdbaca6-afe8-45e9-93c9-42c4c52ea897"
        },
        "item": {
          "id": "7187a7fd-e6cc-46c6-a9d8-594577b8b8ec",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "aa3f0bee-aba6-4bfb-80e6-982e1e5a34f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930f3177-3575-4554-8317-4344720244ca",
        "cursor": {
          "ref": "e3450252-60c0-46ce-9143-48582a31fd1a",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2f05c21d-4246-4d52-ad92-7e767dd500cc"
        },
        "item": {
          "id": "930f3177-3575-4554-8317-4344720244ca",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4668c3e4-4dcb-43ec-8ab1-35e6d386ac58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788e35f2-3fb7-4aac-8e75-e612d27916a4",
        "cursor": {
          "ref": "aac6846a-3389-4ffe-8f88-721e272faa53",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c4e19f39-97bf-47bb-a7a2-f7d64a7be529"
        },
        "item": {
          "id": "788e35f2-3fb7-4aac-8e75-e612d27916a4",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "003883fb-8de7-44f7-86db-f21009e63a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79392fa0-f066-4ffd-ad07-3d58a90e7909",
        "cursor": {
          "ref": "5c47e402-a93c-4cf6-bc43-44be008a35ac",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "99d3c71c-d701-46b1-8515-4b96fd075a42"
        },
        "item": {
          "id": "79392fa0-f066-4ffd-ad07-3d58a90e7909",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8d725dbe-dfe7-4399-90b5-2e06bbe88675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eecb65f4-d2a5-4449-9a9f-fc290b4e17e9",
        "cursor": {
          "ref": "baa646b0-784b-475e-8b15-d0b1793205d6",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c9c16fb8-9c71-43a8-aac3-17261a6bcd15"
        },
        "item": {
          "id": "eecb65f4-d2a5-4449-9a9f-fc290b4e17e9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e1427bcc-f6f2-446b-8b03-a4513e7e76bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f0d4bc-b851-403c-bd07-a8e968234ef9",
        "cursor": {
          "ref": "7d2d43f1-8de3-4172-a2c3-9e4ae2c3d6e8",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ba78eea8-f0ca-4b21-85a3-786f1b578aaa"
        },
        "item": {
          "id": "96f0d4bc-b851-403c-bd07-a8e968234ef9",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f405cabe-91e8-455b-afdb-479fb81b4e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712bbe13-93c2-45b1-b51c-330e3b8fbab3",
        "cursor": {
          "ref": "1e69823f-14e4-4976-9c36-4fba506338ed",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "325b619c-b61d-40d6-8b8c-8ab83b84890b"
        },
        "item": {
          "id": "712bbe13-93c2-45b1-b51c-330e3b8fbab3",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a227af1f-1233-429c-8a87-9af2141458f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd5b707-5815-48e1-bf39-7dbc8c6d9d97",
        "cursor": {
          "ref": "2b6fe1b7-3e9c-4654-b2b2-4bef3c80534c",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "706ff291-3dce-4f2b-aa09-0606d886db93"
        },
        "item": {
          "id": "ecd5b707-5815-48e1-bf39-7dbc8c6d9d97",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "71d1cca5-c76f-46cd-8984-a8a94e5805c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c250e2a8-1029-468a-be81-348f00b13a43",
        "cursor": {
          "ref": "0389dcd2-5714-4336-8d04-e20fe22b5204",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6bf76a45-4cda-499e-b9bd-330814974ee6"
        },
        "item": {
          "id": "c250e2a8-1029-468a-be81-348f00b13a43",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4b1ec503-d07d-4622-aba3-092c115b82eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f003c7-fd43-4d0c-9101-e84d74ac1431",
        "cursor": {
          "ref": "a79643ac-bc20-4d1d-85dd-b1ccd518089b",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "820b3440-e1d0-4b08-aebb-5a0856431a5b"
        },
        "item": {
          "id": "a9f003c7-fd43-4d0c-9101-e84d74ac1431",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "af546fd1-4fb7-4fc4-91f4-dc203ca1be23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8a0788-c394-4964-9114-4e03115813ac",
        "cursor": {
          "ref": "31e9ea5d-4948-43b9-a94f-040a8629d7e2",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2e3a9ad5-3c91-442f-a4c7-9b0573555ea7"
        },
        "item": {
          "id": "8a8a0788-c394-4964-9114-4e03115813ac",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "36e966bf-69c3-44ef-804c-ca8caeb04645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd6b4ba-068d-4a47-bca8-e0205391808c",
        "cursor": {
          "ref": "f6290519-d010-4293-8e69-bcdf3c61258f",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ef3c77c9-6bea-4dfa-9d65-a8b8d2a9c55b"
        },
        "item": {
          "id": "6dd6b4ba-068d-4a47-bca8-e0205391808c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8a98cd3a-c77c-420f-b664-9637d23e8eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4316f754-432d-476c-9386-1c7164f92d34",
        "cursor": {
          "ref": "d2d9fd12-611a-4721-8eb0-6655ffde440d",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "01e0e657-f985-4e00-8d6c-cc249b28402f"
        },
        "item": {
          "id": "4316f754-432d-476c-9386-1c7164f92d34",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d38a6beb-245e-42c8-8e9e-8d13e0fa8ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4854607-9656-4b70-98f3-0c33bddeb18a",
        "cursor": {
          "ref": "2125a427-408a-4032-8b3e-3e3efdd83762",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "25e9e307-f224-4a40-98a0-ba2efd2b2bb0"
        },
        "item": {
          "id": "c4854607-9656-4b70-98f3-0c33bddeb18a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "fdbec850-03aa-473e-af7c-0a3097ddc151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b6481a-cd56-48b7-9083-c68aa2cadf4d",
        "cursor": {
          "ref": "51079643-5ec7-4073-8c7e-850002843902",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3195980a-89fe-4912-bd79-1d0959459931"
        },
        "item": {
          "id": "12b6481a-cd56-48b7-9083-c68aa2cadf4d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "160aa9b2-ac11-4137-8be5-3ee8c7583f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db686e2b-f46b-41ed-83ce-205cd5d1ea12",
        "cursor": {
          "ref": "ab197ff8-03c9-4878-960e-4858ed3b46e9",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d173d930-de13-4539-8758-514907b6bea2"
        },
        "item": {
          "id": "db686e2b-f46b-41ed-83ce-205cd5d1ea12",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ec8e4604-fc79-4782-bc15-58556127b265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c3e202-26da-4e3d-8e7c-524122b25767",
        "cursor": {
          "ref": "6e0524f6-2efa-4f02-8952-d7bf36248d87",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "737a1b8b-c4de-4702-bea7-bd0bcdfb8805"
        },
        "item": {
          "id": "42c3e202-26da-4e3d-8e7c-524122b25767",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "fa2ce05e-47ff-4fcb-a88f-f2fec2e2db6f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b2fd8b-68b3-4e7d-af73-47650b3d6c6b",
        "cursor": {
          "ref": "7f027e3f-1308-4f09-9ed7-6dc05d7c22f1",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7e09e387-9609-46c1-8918-f38a5d8e1f53"
        },
        "item": {
          "id": "65b2fd8b-68b3-4e7d-af73-47650b3d6c6b",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "e9761766-4c06-4831-bb43-3c500eacf615",
          "status": "Created",
          "code": 201,
          "responseTime": 62,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed170cb5-51b8-42ac-a3d3-d2fa770414a6",
        "cursor": {
          "ref": "9bb21d50-892e-4dda-9f3f-4d9ecb722c8f",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "2af36075-c376-46a4-a491-36996ac5217f"
        },
        "item": {
          "id": "ed170cb5-51b8-42ac-a3d3-d2fa770414a6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d923813b-d152-4029-8b88-3c4cece5227d",
          "status": "Created",
          "code": 201,
          "responseTime": 78,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4c70a3-bf9a-47b9-958f-8b5e3a5670a0",
        "cursor": {
          "ref": "9cd5d7d0-0f06-4b6b-bb31-f92d1b181771",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "997624c4-3158-419f-8805-96883f624ffa"
        },
        "item": {
          "id": "1a4c70a3-bf9a-47b9-958f-8b5e3a5670a0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "25c97877-0e84-499d-ae74-a62c837ed9ad",
          "status": "Created",
          "code": 201,
          "responseTime": 31,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03a8379-a70b-40e3-9a5e-19fcbdf2a8a3",
        "cursor": {
          "ref": "8a92c86e-06fd-4f18-a4f4-3c72412d4c9b",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "21eccbe8-7aff-4667-96b6-6d791a49b0ab"
        },
        "item": {
          "id": "f03a8379-a70b-40e3-9a5e-19fcbdf2a8a3",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "22b9e304-4f4d-4fd6-88fd-4610e46d03e5",
          "status": "Created",
          "code": 201,
          "responseTime": 32,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7160cc-a81e-4d70-b5ce-57c88a32d274",
        "cursor": {
          "ref": "0f5e63e8-76ed-426e-af6b-48926838e2d6",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2bb51107-c006-4cf6-9e63-1fbfe4a91f15"
        },
        "item": {
          "id": "1a7160cc-a81e-4d70-b5ce-57c88a32d274",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a55afb4a-31cc-46c5-908f-7d3e744f1b49",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8eeee3-68d7-4e7d-ae51-abda30d3cfc3",
        "cursor": {
          "ref": "1318f580-7c09-4cc0-9f8b-d8a55bd48ad1",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "fa430c82-d16f-438b-b891-8fecb60132c6"
        },
        "item": {
          "id": "af8eeee3-68d7-4e7d-ae51-abda30d3cfc3",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "44567908-587d-4756-85ea-fd80ca3b2d77",
          "status": "Created",
          "code": 201,
          "responseTime": 38,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ed10f2-5192-4131-bd32-43f879f3ad5f",
        "cursor": {
          "ref": "31ade5d3-9763-447c-a18d-6c3a2c52bd13",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2d1aabdf-2cd1-47bd-bb35-19363f0bf5bd"
        },
        "item": {
          "id": "c6ed10f2-5192-4131-bd32-43f879f3ad5f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a1ce1d37-da25-4e9d-ab23-ae5249f05246",
          "status": "Created",
          "code": 201,
          "responseTime": 32,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1b3cb2-e4ec-48d1-b9a9-da4d56f8b8df",
        "cursor": {
          "ref": "5128e3b9-2cad-4184-86f5-e419bcebcacc",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4937e6ed-7d92-4583-b339-2569021acdd7"
        },
        "item": {
          "id": "4f1b3cb2-e4ec-48d1-b9a9-da4d56f8b8df",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a99d6157-fd5b-4d1f-8d5f-1e1bd445049b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5209275d-9b55-4bcf-b94f-007df48f181c",
        "cursor": {
          "ref": "e88cbb5f-a1b8-4e9b-b51d-2219333be688",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6b74793b-f4fa-4154-831e-cb9d55942a07"
        },
        "item": {
          "id": "5209275d-9b55-4bcf-b94f-007df48f181c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7bda8fd1-f332-434b-91f7-ba28dfb20f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2144e2-8f3e-452c-acf1-59c50fb729b1",
        "cursor": {
          "ref": "e4a91daa-a3b2-4b5d-8e1d-428aa70945ae",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f50db12e-6c34-4eb4-b1b5-da3fa31071b6"
        },
        "item": {
          "id": "1e2144e2-8f3e-452c-acf1-59c50fb729b1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d96b1637-f709-4bde-8833-7108ce4fbc55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6ed968-2550-4e98-b1df-7da7dd158cd2",
        "cursor": {
          "ref": "477abd41-037a-4cab-bf2b-640b39fecefe",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "791ced00-8fc1-49e3-9a50-ac45ac71ae40"
        },
        "item": {
          "id": "4f6ed968-2550-4e98-b1df-7da7dd158cd2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "70725752-4941-4ecb-a7f9-2732d6ada539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf0939a-0f24-4229-9a88-b594fb033685",
        "cursor": {
          "ref": "85506418-0815-446e-abde-d2c68bf229f4",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "dca245e5-0639-4bc1-bbd9-10660be67df9"
        },
        "item": {
          "id": "eaf0939a-0f24-4229-9a88-b594fb033685",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "bf8cfe47-e18e-4cdf-ae0f-d96ac141bc1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526e2341-bf44-4dbc-b37d-cbd0e9bb7a84",
        "cursor": {
          "ref": "ea29a57b-de47-43fb-a72e-8f1b7a7ac769",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3f2a1aa3-41d2-47aa-98cd-05d9288951f7"
        },
        "item": {
          "id": "526e2341-bf44-4dbc-b37d-cbd0e9bb7a84",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3eb39b9f-9a49-4bf2-90e4-cd7bfffe7055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62898462-9861-48b8-879e-f754c77a2996",
        "cursor": {
          "ref": "df73ff73-d575-41f8-886b-c3e26329f4bd",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2fe02099-0eac-4ae2-a0d7-01f89bd29157"
        },
        "item": {
          "id": "62898462-9861-48b8-879e-f754c77a2996",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b8bebd45-d5c4-405f-b475-75697e6b3634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e017ff-3661-4959-8c39-8663d898c75e",
        "cursor": {
          "ref": "92fbf89e-6824-40a4-b143-90f7b0ebc07a",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b312534e-1459-4427-a394-4c366bce6566"
        },
        "item": {
          "id": "58e017ff-3661-4959-8c39-8663d898c75e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2d28675e-c053-4635-8a70-cb3d9e644b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c6330b-c207-4dae-8400-7b9a05ef495f",
        "cursor": {
          "ref": "da3844d5-3429-438f-ac57-51e92bcb3432",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ba9eace4-49b7-4add-aa4e-5c5d870e95c1"
        },
        "item": {
          "id": "f9c6330b-c207-4dae-8400-7b9a05ef495f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a21458a5-06a4-4a6f-ba51-ed1d1317a197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869d98c6-7dd5-4fd9-85ab-68138579322b",
        "cursor": {
          "ref": "4d9eeb15-9260-4e81-bf18-d8c586e255e0",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "424f3914-f089-4e61-9aae-e80802d9e717"
        },
        "item": {
          "id": "869d98c6-7dd5-4fd9-85ab-68138579322b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a9ae6f66-ce1e-4f24-9095-3fb98c1f676c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fdc56e4-8c37-41e1-8c70-d12e0c1c3b83",
        "cursor": {
          "ref": "a2de08e2-8e35-46d3-8574-7702755da298",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6d559e33-301b-409e-a3ca-e479f262596c"
        },
        "item": {
          "id": "1fdc56e4-8c37-41e1-8c70-d12e0c1c3b83",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5f252666-b933-403d-a27f-4b7d34b2b155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9ae0d1-9114-4526-a5c0-8b40292a6ff6",
        "cursor": {
          "ref": "4a76a901-0c98-4cd1-bc00-2a8a7f925142",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8ff88bcd-5a86-43a3-aee2-b307763ba8e6"
        },
        "item": {
          "id": "9a9ae0d1-9114-4526-a5c0-8b40292a6ff6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9bacf021-9b76-485c-94aa-391e49465718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c19abc7-09e2-42a2-b844-66852a9849fc",
        "cursor": {
          "ref": "29c8d99a-50d0-4410-b58a-9677129707bd",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "df931d27-2c73-4446-8ff1-e75ca630e143"
        },
        "item": {
          "id": "6c19abc7-09e2-42a2-b844-66852a9849fc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e2a4f10a-b594-43b1-b23b-92884adb32ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6de2506-9b84-48b7-8e5e-73ff3c922d6e",
        "cursor": {
          "ref": "676fdde6-1e45-49d0-b786-d457f275cd63",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "26e48c05-8bae-4fe7-b834-595951ac3d29"
        },
        "item": {
          "id": "c6de2506-9b84-48b7-8e5e-73ff3c922d6e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "dafe1856-5eac-41ba-9c28-a9645b38cfef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f82259ad-2841-4944-9bf4-457bfc425cce",
        "cursor": {
          "ref": "25839f1e-a781-4d84-9251-8f4907712a0c",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ac287a69-258d-4792-b979-266b797aabc0"
        },
        "item": {
          "id": "f82259ad-2841-4944-9bf4-457bfc425cce",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c401c86e-f9d1-4e14-9fd8-4172904f81e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf407e7-c758-4648-890b-70af58ead78b",
        "cursor": {
          "ref": "d7f4925d-2c39-4fff-b66e-c142941049d6",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "98b09d79-cbb3-45f1-906c-21ff765dc451"
        },
        "item": {
          "id": "6cf407e7-c758-4648-890b-70af58ead78b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b2d09e11-871d-4ab2-aafd-578eb2d0d871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f709f747-27b6-40f9-af95-5ddc999bbfbf",
        "cursor": {
          "ref": "e9df3bc0-e60a-4e10-b314-d1db09fc43dc",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "47f9d813-2d8a-42bf-b01e-60f08c053d2c"
        },
        "item": {
          "id": "f709f747-27b6-40f9-af95-5ddc999bbfbf",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "cf3253e0-951b-4109-a1e4-842a6608dbb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d132d72-939f-4f81-b267-1e62e2317679",
        "cursor": {
          "ref": "d55130ea-c554-4242-b797-fde4564d780c",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c3304a26-bb5c-40ec-ad72-ff1922c272ef"
        },
        "item": {
          "id": "0d132d72-939f-4f81-b267-1e62e2317679",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "74dab6ca-7387-40c0-bd97-28ecda24e7f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bccb02fd-80d2-460d-a6ca-549dd35cbb41",
        "cursor": {
          "ref": "1394e8b1-2d05-47c9-9570-c4ce370c904a",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0a2cd8ea-f4be-42e6-8394-9d32cbb52be8"
        },
        "item": {
          "id": "bccb02fd-80d2-460d-a6ca-549dd35cbb41",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5b169331-3465-41e7-ad45-d94f96b0c3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607aa449-78ed-4a47-96ae-4daedc60528a",
        "cursor": {
          "ref": "c8af3120-66c8-437d-aa4f-27f18ee7a70f",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f1581ae0-3565-467a-8087-78d661cf4a9c"
        },
        "item": {
          "id": "607aa449-78ed-4a47-96ae-4daedc60528a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0d59261f-0f39-44ba-aad6-0be0e8e735ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e9e090-f978-4562-ab85-9ec4e3f45812",
        "cursor": {
          "ref": "6dc49ad2-2daa-4fe9-b309-483b374623b5",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8b95b1dc-9bcc-4cb7-9d7f-0dcff2a77c5e"
        },
        "item": {
          "id": "b6e9e090-f978-4562-ab85-9ec4e3f45812",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8d05b1c9-3b54-4e36-955f-2bd9fa30d43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3477ab8b-3ccc-4032-bef0-e8204507be77",
        "cursor": {
          "ref": "c2933d3c-833e-4cc0-9926-41675acb7752",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c4ef689f-015b-4ca9-ba95-4b774c7e2298"
        },
        "item": {
          "id": "3477ab8b-3ccc-4032-bef0-e8204507be77",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "735fdb1f-c91d-4c80-a156-a44c14ad2ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5afd5ff5-966b-4029-be2e-1dbac128508c",
        "cursor": {
          "ref": "963facd2-9f55-444f-9c82-5504113f4ca8",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8ce7869b-3bf7-4760-a08a-181ace8eaf09"
        },
        "item": {
          "id": "5afd5ff5-966b-4029-be2e-1dbac128508c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "64f5eceb-73c8-4357-be69-299bd904373b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30b9b19-7691-4b28-aa26-d7ba8f5cd6c1",
        "cursor": {
          "ref": "2fce7fed-f7e3-434b-aa9f-97f6986f5715",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "50a372ba-4749-4ecf-94e4-0392a8351475"
        },
        "item": {
          "id": "f30b9b19-7691-4b28-aa26-d7ba8f5cd6c1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6e2d5ac7-5fc2-413b-a9d6-61f65fc012e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63926c71-6605-4285-9d8e-87975770501e",
        "cursor": {
          "ref": "279013dc-c7b5-440a-b658-9051ba2896c4",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7885c43a-2067-4c60-b91d-b66cd8b7eb02"
        },
        "item": {
          "id": "63926c71-6605-4285-9d8e-87975770501e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "109ff802-2572-46e8-a9de-b089c04b1bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01bb1fad-2758-4a71-8c4e-406efa72eb8f",
        "cursor": {
          "ref": "8feace9a-873d-4e05-8dd5-9f207a795511",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b18b6a5c-5c6c-4f92-9b84-11fcde3a6b68"
        },
        "item": {
          "id": "01bb1fad-2758-4a71-8c4e-406efa72eb8f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "65bbbcb3-70f5-4672-9b6c-6ca0528ef6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f4876d-b4f5-4242-a1a8-b633948d3d56",
        "cursor": {
          "ref": "849b72cd-9f14-4ddb-a35f-f490c47f8212",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e3b94e05-1f18-4bdc-91fb-2203e60d6f21"
        },
        "item": {
          "id": "92f4876d-b4f5-4242-a1a8-b633948d3d56",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "32627139-305a-46b3-9515-6b8af5e624f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f812607a-ed68-43c9-8b2b-d5fbd85ba4f5",
        "cursor": {
          "ref": "6764f97b-ef5c-4b60-8893-92c858150fff",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "58ab1db6-012a-4c74-96e9-c1342e590b77"
        },
        "item": {
          "id": "f812607a-ed68-43c9-8b2b-d5fbd85ba4f5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "264c597a-3969-4677-a4b3-c2009b7f96e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6861b98-2dbf-40eb-a898-7b2667a8506e",
        "cursor": {
          "ref": "dc3ece8a-9f1d-4e80-8880-d9975397358d",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "87fc5a93-5145-4aae-88ff-79b072c2fb4d"
        },
        "item": {
          "id": "f6861b98-2dbf-40eb-a898-7b2667a8506e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "52698ec5-096e-4e7e-afea-3ccfa7545fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aba4613-6156-48af-b631-730ecafa2fbc",
        "cursor": {
          "ref": "5cb26a8e-f4a7-4bc3-b848-6341687fab60",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "60dce0ee-a985-4d66-8956-8b06e6b68690"
        },
        "item": {
          "id": "5aba4613-6156-48af-b631-730ecafa2fbc",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0eb4d6c3-971b-4fe3-978d-7c39e078c99e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc8aabc-9c2e-4da4-9480-0c500ef7802d",
        "cursor": {
          "ref": "a627955c-537f-4ba5-b4f9-2fbc357166ff",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a768229b-44a7-45c7-b9f6-9cb298ab385b"
        },
        "item": {
          "id": "5fc8aabc-9c2e-4da4-9480-0c500ef7802d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1b1c7e28-f1c0-4c25-b98d-9612cc2a8db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b9e4cd-65d1-422f-a0b5-30f0a226928f",
        "cursor": {
          "ref": "506fcbe4-3a08-4ddb-9f45-e4a763fd167c",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "92311758-4d71-4610-9ce9-2c9040ab89a0"
        },
        "item": {
          "id": "c0b9e4cd-65d1-422f-a0b5-30f0a226928f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "e1cae1f3-89c1-4675-a899-0aa79bca7a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f119275a-7595-4776-b149-3db9bb4ffc6a",
        "cursor": {
          "ref": "db20d4d2-a2d5-48a6-8cd0-bea4fd17351c",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b240cce2-df93-4559-a351-086673bc91a0"
        },
        "item": {
          "id": "f119275a-7595-4776-b149-3db9bb4ffc6a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "16b41116-6adf-4289-9a01-4d6dfb4c11dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b511bf-f30a-4462-9774-321f3e5a983b",
        "cursor": {
          "ref": "011452c4-c692-4f71-9a44-528a5479e147",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4f480094-4ed0-41b0-bbdf-1df1b9ea15b6"
        },
        "item": {
          "id": "58b511bf-f30a-4462-9774-321f3e5a983b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2b8e91c7-2b14-4295-a556-78e8ed76d061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db07624-dcad-4fd8-a9dd-4c39db8a58c5",
        "cursor": {
          "ref": "d778f237-2384-497c-9938-69d692b8a8cd",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "fa71abeb-dcd0-4267-acf7-4ae45493685f"
        },
        "item": {
          "id": "8db07624-dcad-4fd8-a9dd-4c39db8a58c5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "84e4368e-3582-4b44-b04a-3f24f2342414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbe5ea9-31ab-4cf7-8100-d07e1cf7953d",
        "cursor": {
          "ref": "83b9dd20-683c-418b-b290-391aad0f1083",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a3fc7be5-ebd7-4574-b809-886f6999d5d8"
        },
        "item": {
          "id": "5fbe5ea9-31ab-4cf7-8100-d07e1cf7953d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "98baf9ab-f9c3-4839-9727-5f32512ae96f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11bfeef-8d95-4b8c-91e0-e848c11d7588",
        "cursor": {
          "ref": "f62577f6-cbdc-4980-a4a3-dd936d9d2ad1",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "bbfef3aa-3453-4d09-b554-95380ed01a96"
        },
        "item": {
          "id": "d11bfeef-8d95-4b8c-91e0-e848c11d7588",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6c9517bf-1ebe-4995-aeed-7c126f9c9ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf594e1-ae68-43f8-8675-df5f8ce765f2",
        "cursor": {
          "ref": "808e90b5-7f18-4a42-aeb9-663c4c8f2cf1",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b2d86958-61bd-4983-a3e0-90a754b20172"
        },
        "item": {
          "id": "edf594e1-ae68-43f8-8675-df5f8ce765f2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a78b14c8-8e1c-4660-8b85-f269d74511fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b3594e-0e5d-499f-8faa-0bb17667c752",
        "cursor": {
          "ref": "021fdc7e-37f8-4c62-8a6d-fa8db8f3cf27",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8db030ee-da20-42f1-9ce4-abf3d4adcee4"
        },
        "item": {
          "id": "b8b3594e-0e5d-499f-8faa-0bb17667c752",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "219e3b0e-69a5-4933-aea6-440eb9ca8be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97842c9-5f87-458a-8da0-f9719edab91a",
        "cursor": {
          "ref": "dd55b707-ee98-4e2b-9ff7-9349a5f22cbd",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "66f9dab9-1f76-4475-967f-cca7084fe8db"
        },
        "item": {
          "id": "f97842c9-5f87-458a-8da0-f9719edab91a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3a7d911a-ee95-4e00-8207-b3e6df90e590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b19c0a0-b300-4626-87a4-e37745e5b7df",
        "cursor": {
          "ref": "62043fbf-c6b8-4271-86eb-4913314337cd",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a9ffbbb9-413e-4b79-b536-62764670ad4d"
        },
        "item": {
          "id": "6b19c0a0-b300-4626-87a4-e37745e5b7df",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ae6b328b-0f40-4898-8403-90cda902af59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d433a910-7c9f-4d0f-a497-a0abe9bf347b",
        "cursor": {
          "ref": "813174de-0896-4baf-8253-2f99fc6c791c",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "87c6db5f-7254-48a7-aa6d-76f1d31dd71a"
        },
        "item": {
          "id": "d433a910-7c9f-4d0f-a497-a0abe9bf347b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2827d09c-99d2-4b88-b7b0-bf853adfe8fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478ce401-98fd-4ba5-9aa4-31c54b758445",
        "cursor": {
          "ref": "440cecef-6941-4c0d-8723-d844c0012027",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9fe0040a-7d13-48e1-85b8-490d5894e18b"
        },
        "item": {
          "id": "478ce401-98fd-4ba5-9aa4-31c54b758445",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3d9512f1-0f16-4101-b269-a051745601c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "218ffc59-ff25-4125-8d87-792d55388261",
        "cursor": {
          "ref": "fe671036-5dd3-49c2-86aa-fb338f540486",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "81dc9455-f203-41a0-b961-ae0334d9c8f3"
        },
        "item": {
          "id": "218ffc59-ff25-4125-8d87-792d55388261",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "79d6d140-d479-4b16-8bdb-ec17387e2074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20eb44f3-4596-4212-95f6-88b8cf6b5bfb",
        "cursor": {
          "ref": "892fa07c-e8a8-41fa-b7f6-da09df66f3a1",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d9599b9d-c204-4085-89af-ebc03fa44c33"
        },
        "item": {
          "id": "20eb44f3-4596-4212-95f6-88b8cf6b5bfb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e994400d-7213-48a8-b329-2d8fde66b109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829f4354-2f7f-4e3b-ba56-b5f446b49a39",
        "cursor": {
          "ref": "ba816454-757c-4b59-a7a1-216417b5cc25",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e32b8b1a-77ad-4bb3-95a4-fb51fcbf2889"
        },
        "item": {
          "id": "829f4354-2f7f-4e3b-ba56-b5f446b49a39",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ff825016-90e6-42b0-b188-5cf686bb85a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2486e004-8749-43a9-adc1-fd3dacfc1ddf",
        "cursor": {
          "ref": "5270552f-1995-44ac-bd4d-6366747496de",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "70903855-5a89-47b0-96c5-b8656a7d869a"
        },
        "item": {
          "id": "2486e004-8749-43a9-adc1-fd3dacfc1ddf",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c5285dc5-727f-41a9-a499-cac38498c697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf88ff57-11bd-4a8d-bfaf-8d122f5dbb26",
        "cursor": {
          "ref": "2dae9761-b44b-4f3f-a880-536a6bb01cd6",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "264e67ee-3277-49c3-993e-4dc93eedbdda"
        },
        "item": {
          "id": "cf88ff57-11bd-4a8d-bfaf-8d122f5dbb26",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7079d785-8fa9-4554-8ebe-bb889b4d590e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a884d473-8b38-411c-b7b3-baa5bb2c9b97",
        "cursor": {
          "ref": "af42f29b-d070-4bab-8e4c-0cfce4a98114",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "77c2798d-398a-4431-9491-8b60b6362920"
        },
        "item": {
          "id": "a884d473-8b38-411c-b7b3-baa5bb2c9b97",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f19d86cf-a22f-47a7-81c4-99607fef7cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab4974a-50aa-489c-944c-a956df49e9e0",
        "cursor": {
          "ref": "801129fd-5cef-4606-a8e6-7094e44dc562",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3cdd3dfe-229c-4f85-be69-bba9891b70e0"
        },
        "item": {
          "id": "dab4974a-50aa-489c-944c-a956df49e9e0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d45876f9-d932-4ce3-9226-87acddf975ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41068a6-1c29-4bea-a79c-d513eb519437",
        "cursor": {
          "ref": "3850e0bd-8c41-4a87-829c-6e2589f841c8",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "068d8d9e-1f94-4e39-bc33-05c4f8a5d195"
        },
        "item": {
          "id": "d41068a6-1c29-4bea-a79c-d513eb519437",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "454b4925-63bb-4113-8bd1-d9871436ee58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912c1828-5c7f-4415-ad49-8d729447e88d",
        "cursor": {
          "ref": "c10ddd71-95fb-4b96-b654-ebf5f1ef28b4",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ed6f9e80-f3d3-492c-b503-3d5b011d21d9"
        },
        "item": {
          "id": "912c1828-5c7f-4415-ad49-8d729447e88d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e1cb74d2-5e5c-443a-a948-b7c1461f8213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6396f9-51f7-4289-a7da-f00997262d22",
        "cursor": {
          "ref": "4e305a3c-bf4b-4662-aa60-71c830ce3212",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e56e343c-50b4-4b51-929a-8675b40a7a0a"
        },
        "item": {
          "id": "cf6396f9-51f7-4289-a7da-f00997262d22",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "98709087-f880-4310-9de9-0bf6faf56e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c612952-d63b-4103-8372-9245a991f8c9",
        "cursor": {
          "ref": "8d8dde49-16fc-45dd-9e6b-342d35348ec6",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1151ea77-8290-4e39-9bfc-d50924497b5c"
        },
        "item": {
          "id": "5c612952-d63b-4103-8372-9245a991f8c9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "df6bdc4c-9250-4f3a-9d28-d6d572c1becf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d017fd-a3de-40f2-a93d-bf1fbfedab3d",
        "cursor": {
          "ref": "b1b8cd04-754b-46f5-9239-3eda14d15cb5",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "299f0b16-3692-434e-b5ae-85a6ea451c5c"
        },
        "item": {
          "id": "70d017fd-a3de-40f2-a93d-bf1fbfedab3d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a5129803-23f2-4a30-8025-cb5bd48cfcbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b6889c0-32c0-437a-8396-4c329cd54faf",
        "cursor": {
          "ref": "02cefd8d-ed9d-44db-b2e7-ede235f20b57",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "7de50263-0fa7-4b91-a609-805aa8d9e870"
        },
        "item": {
          "id": "2b6889c0-32c0-437a-8396-4c329cd54faf",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3fc23436-2ee4-4512-844d-53a5ef46261e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17a34fe-7840-41af-af14-5c46ed2c0c1b",
        "cursor": {
          "ref": "01ff6f74-0ced-4428-b7a3-1aad43b3267d",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "29826d40-d42e-44dd-9a44-16657594fb90"
        },
        "item": {
          "id": "b17a34fe-7840-41af-af14-5c46ed2c0c1b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d306cd63-8704-41d1-b7c1-be2a6f7914a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e0b275-07da-41c9-a312-d1628939ebe7",
        "cursor": {
          "ref": "904e08b4-a3bf-4dc1-8e88-d94d2af404fc",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "df86c39a-7c72-45d2-aac7-0f9ceb3ac4bf"
        },
        "item": {
          "id": "96e0b275-07da-41c9-a312-d1628939ebe7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7029e02f-7562-41c9-9c08-8a7de6fbbd77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50cf8e0-d4a4-4e4c-b54c-a4221be3d182",
        "cursor": {
          "ref": "064d574f-0fb1-4217-a203-2383893d2e76",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e19e848b-c9bd-4d26-a976-5fb0f8b9f889"
        },
        "item": {
          "id": "e50cf8e0-d4a4-4e4c-b54c-a4221be3d182",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "da5fe167-8c27-42bb-970e-0845ddc206d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6adb5cd6-47d9-4dc7-92fc-644854ed38c9",
        "cursor": {
          "ref": "8206a4ed-e31f-4b2e-b6d6-9ff004cbec6f",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "76e69480-aee2-43e2-87e0-5e60b3c880c1"
        },
        "item": {
          "id": "6adb5cd6-47d9-4dc7-92fc-644854ed38c9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f7ddb004-c181-411e-b8d0-b768460e8e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6b4e7c-f643-4f2e-ab8e-bc3d6309fe68",
        "cursor": {
          "ref": "b70d6f45-aa8d-4192-83c2-4813257a3385",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1c35f591-6929-4898-bfe2-5de8f223b08a"
        },
        "item": {
          "id": "1d6b4e7c-f643-4f2e-ab8e-bc3d6309fe68",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "003f4db7-e3ab-4bed-a63b-6461b6ddbd39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe4faf4-222c-4d1e-90fd-fa7a737f0ede",
        "cursor": {
          "ref": "deaaa5a2-1b5f-4662-acd6-55b8f62cb11f",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "db6d0c0b-52f8-4c14-88d3-9bef4453e796"
        },
        "item": {
          "id": "dfe4faf4-222c-4d1e-90fd-fa7a737f0ede",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "43b086ae-486f-4c7b-8fdb-944016294435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f75de0f-0ec5-41c3-a0df-683fccd77d57",
        "cursor": {
          "ref": "a64f9813-173c-4d57-9f2e-f7efb41e6e60",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "572106e1-12e0-430c-af2a-aa270f48d718"
        },
        "item": {
          "id": "9f75de0f-0ec5-41c3-a0df-683fccd77d57",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "fbc70ace-d3ce-4c97-bec0-4fd35ba1c2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b92714b-615f-4041-ac3d-48d42dd40e8e",
        "cursor": {
          "ref": "83d397bf-660c-464e-a7c8-948cc20b565d",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0565350b-c1b2-474f-8bf7-823a38d6f02e"
        },
        "item": {
          "id": "0b92714b-615f-4041-ac3d-48d42dd40e8e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4f40fb93-96fc-4673-b5fe-eb9bb48ecbe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502eadaf-42f0-4686-8ea8-e7c3f70ac2f3",
        "cursor": {
          "ref": "216fef4b-2143-42e3-9c59-088829692c2e",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4389a049-f9ae-4412-a5d8-0fdf03554bdf"
        },
        "item": {
          "id": "502eadaf-42f0-4686-8ea8-e7c3f70ac2f3",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6d1550db-057e-4aa0-bc8f-d9e4c91a12be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb0e5bf-6863-44b6-9c6d-e59961b3ad0d",
        "cursor": {
          "ref": "f80c0a82-351c-4f80-a423-53489aac9259",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a7144670-ce56-4aa0-b084-99b3c4ca4047"
        },
        "item": {
          "id": "4fb0e5bf-6863-44b6-9c6d-e59961b3ad0d",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "71970b51-487c-4eb7-8569-416e4db552de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e15753f-e62f-4f5f-b339-7faa4462c49a",
        "cursor": {
          "ref": "cbab9707-bf0a-426b-a746-cd3a6d9e02e6",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "173d1bb7-80fa-4d09-9432-626fed789d03"
        },
        "item": {
          "id": "6e15753f-e62f-4f5f-b339-7faa4462c49a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "67c97191-0f4a-4574-b936-6c6fedf7a94e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ddbbb2-2964-41f3-99f6-b1fe13333faf",
        "cursor": {
          "ref": "efeb7b8a-0de6-49cf-97fe-4e512cb5d53f",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "709780c3-0bfa-4b81-ae61-642ccaf52f9b"
        },
        "item": {
          "id": "74ddbbb2-2964-41f3-99f6-b1fe13333faf",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a4937b25-423d-403a-994e-b3abaa5ee928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f9d3a1-24e2-4010-b08f-1ac8047a4171",
        "cursor": {
          "ref": "eefd14ee-87e4-46ce-9177-6234745f7eab",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9ba5ebad-d74f-40cb-915d-930779b40c9c"
        },
        "item": {
          "id": "83f9d3a1-24e2-4010-b08f-1ac8047a4171",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f1c9aa05-d8ae-48d5-9663-fb84fbff882e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0492d4-504c-4e74-b22b-3fb934b229f8",
        "cursor": {
          "ref": "5a95b916-e134-4596-bb5e-ae3456e3596d",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "186981df-4cd7-411e-a3b5-eb13a74924f3"
        },
        "item": {
          "id": "0f0492d4-504c-4e74-b22b-3fb934b229f8",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "1028ed75-be9d-4281-aabb-db904f304472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cef54ed-764e-4206-b882-85075a6620ea",
        "cursor": {
          "ref": "11b7f549-fa8f-4520-8bfc-ef818d2f9b58",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "0d58defa-6dbd-405c-9550-10cc06caa40c"
        },
        "item": {
          "id": "0cef54ed-764e-4206-b882-85075a6620ea",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "abec3fde-71c0-4c67-a772-dc7f51431631",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 18,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b25b76a-fa80-46b7-bdfd-39a9b204f2d2",
        "cursor": {
          "ref": "09ebe88c-de7d-4837-884b-297144804c6b",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "fe12a6f2-67ab-4c47-afc8-d8b7a257aa04"
        },
        "item": {
          "id": "4b25b76a-fa80-46b7-bdfd-39a9b204f2d2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6863ecb1-82fd-4eb4-a65a-29fd6a6dcbd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d8b0a3-3397-4a93-affa-3808c2d7ea92",
        "cursor": {
          "ref": "9a0a20dc-8505-4226-b96e-31915cf1d9b6",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3fadb9ad-3e84-4c02-9c78-e0b4a90d8946"
        },
        "item": {
          "id": "92d8b0a3-3397-4a93-affa-3808c2d7ea92",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b9178272-fbee-45e9-bbfb-b4bda652bc4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89690b45-7ce6-4e0f-9af5-ea7a129036e6",
        "cursor": {
          "ref": "9b0fbcd7-bda4-48e7-b9dc-895ce93748b9",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8ced258d-c7bd-4d4c-bcc4-9ffcedcbc965"
        },
        "item": {
          "id": "89690b45-7ce6-4e0f-9af5-ea7a129036e6",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4f078a79-6394-49f5-b37b-4a69a31da868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d0b10c-9167-4570-a1b4-8a1fe76c1b03",
        "cursor": {
          "ref": "996d6acf-4a88-47fc-b150-21bceec7d73b",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a1acb0be-1e06-4675-8829-e35705b3ac8d"
        },
        "item": {
          "id": "a1d0b10c-9167-4570-a1b4-8a1fe76c1b03",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "cd41253e-df87-43f4-9b2f-5370c8a4b2c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dbc9374-08eb-43a8-9df7-432410f675ef",
        "cursor": {
          "ref": "5e8d369f-3c92-4966-ae6e-3a0b9c6ccb2e",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3fa62689-a717-4c32-9f37-d2f51e38183c"
        },
        "item": {
          "id": "3dbc9374-08eb-43a8-9df7-432410f675ef",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "abc2bc40-1720-4b34-8af9-244b3775e577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90bdf68d-6ab1-443e-bade-49ef589b7db8",
        "cursor": {
          "ref": "81f76283-ff71-4f26-9e6b-ebe2aaedeb1c",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2c5c28b4-2365-4d26-ad1f-f32b45202fc4"
        },
        "item": {
          "id": "90bdf68d-6ab1-443e-bade-49ef589b7db8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "4d2e390e-cf23-4233-8212-9e16b8cf0548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2b60be-8137-4c07-8b07-85e520162139",
        "cursor": {
          "ref": "ff20dbeb-68de-4af9-9fb2-311259fef2c5",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ecf72019-3e97-4f28-b308-4d317b55d832"
        },
        "item": {
          "id": "6e2b60be-8137-4c07-8b07-85e520162139",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "02bd984b-5254-44a2-ad00-5e0ac91a7c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d9e659-beb6-4484-ab0d-7da2429b276f",
        "cursor": {
          "ref": "ded3de1f-9adb-4937-861b-fd1e8ad2c77b",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "919ecba0-befb-4352-a075-54126de27901"
        },
        "item": {
          "id": "08d9e659-beb6-4484-ab0d-7da2429b276f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "73a9586e-133c-4ca5-bacb-a09aa831f1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "288edf41-fff5-4962-841d-af582d8c5088",
        "cursor": {
          "ref": "d860f898-90e3-4762-bf67-cc5279c53c12",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b7703430-239a-4e0f-be3a-20b56a81b4b0"
        },
        "item": {
          "id": "288edf41-fff5-4962-841d-af582d8c5088",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1b2eb2eb-f169-4a49-8f0e-0547c0af23a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c5bfea-7966-4868-8a3e-d47659e39144",
        "cursor": {
          "ref": "be0c7b28-89b4-4de8-bac2-c0b4423d5386",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "55fa9776-ce3b-4895-82f6-ef6f6bba8a05"
        },
        "item": {
          "id": "b3c5bfea-7966-4868-8a3e-d47659e39144",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c5f1fa12-4447-4666-a1f6-83143aea8d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615e5ec1-53df-4e49-b1a7-740c82e6a710",
        "cursor": {
          "ref": "5f8e304d-e69c-4fed-ab3d-8b7125dc9cef",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6e1ed3ba-bd91-4122-9dc7-c0bb8883b76b"
        },
        "item": {
          "id": "615e5ec1-53df-4e49-b1a7-740c82e6a710",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "dc44f1f9-ec68-48f8-80c4-cf570fbdbfc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1dcd54d-5c88-4891-83d5-3e47f8c2d04d",
        "cursor": {
          "ref": "993a8d76-eaa9-4c48-8cce-58979602b8d4",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "27893a90-0435-42d7-ab4e-d9d237061c4c"
        },
        "item": {
          "id": "e1dcd54d-5c88-4891-83d5-3e47f8c2d04d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b0aacd19-8370-4fd3-87b5-fe4019fc6f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce47141c-7b07-4739-8bff-749a02b08823",
        "cursor": {
          "ref": "5c2dd2c9-65b0-4574-a5de-b0917e02efaf",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f3e7311d-be3f-4af2-b176-aa5995b33ff4"
        },
        "item": {
          "id": "ce47141c-7b07-4739-8bff-749a02b08823",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3f6ff9ea-8d1e-468a-a148-7679669fb88f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7128634e-6519-4e9b-a2aa-6c6613471087",
        "cursor": {
          "ref": "ffca1043-2d8f-4146-a1a2-79161d202b04",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3c070720-e3c0-4e52-a5aa-835e364e4e2b"
        },
        "item": {
          "id": "7128634e-6519-4e9b-a2aa-6c6613471087",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c3c96608-549b-496a-996a-4fec76d65dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c37b1b3-1d5b-4d29-9458-4531cf313cce",
        "cursor": {
          "ref": "568bf335-3b27-4959-8626-b6180ef4b2c2",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "fd644d3b-4770-4fa8-98e8-fcad87b34c66"
        },
        "item": {
          "id": "5c37b1b3-1d5b-4d29-9458-4531cf313cce",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6a0f8002-8cfa-419a-9015-51f969638af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9006fa34-25d2-4965-a012-1f11f53cdb39",
        "cursor": {
          "ref": "2a9c84a3-5c1a-4fcd-b98a-3ec19731c9df",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c17533af-5688-4729-92fb-acd84098b10a"
        },
        "item": {
          "id": "9006fa34-25d2-4965-a012-1f11f53cdb39",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "51bf56db-2f28-4ccc-a163-e0b46e7bcd04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8fd752-797b-40a7-9f5d-c4859d663e9a",
        "cursor": {
          "ref": "76ca1e4f-c01d-44d0-ac93-b52469267e4e",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3ef64b89-55f8-4720-9b1b-90a7ec1f6786"
        },
        "item": {
          "id": "af8fd752-797b-40a7-9f5d-c4859d663e9a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e6d331a9-6593-451b-8e4d-ad76a3b85cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b3dc56-cc06-4f03-80de-2775c0023408",
        "cursor": {
          "ref": "52655257-8707-4a94-94ef-70a941288029",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "92a1a466-9c25-46c2-878b-e83ae3ed81a3"
        },
        "item": {
          "id": "53b3dc56-cc06-4f03-80de-2775c0023408",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "54b08dbc-ee09-49e6-89bf-1b1fd58b7392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f000e0a3-a6e5-42c1-9521-ec8ab32c69ed",
        "cursor": {
          "ref": "dfadd2d8-dbb5-499d-9d0b-417492ea28e9",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4b8266d6-8ad2-48d6-b38b-c9e25a811994"
        },
        "item": {
          "id": "f000e0a3-a6e5-42c1-9521-ec8ab32c69ed",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5f293d1c-fc3c-4731-9f35-0ff55aa4df98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd2d1dc-8cdf-4d18-b3d0-cf603fff3c8b",
        "cursor": {
          "ref": "205dd623-7c52-42d5-9811-48503a17a120",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f401744f-2f1c-4c08-b24c-1577796c25e1"
        },
        "item": {
          "id": "ddd2d1dc-8cdf-4d18-b3d0-cf603fff3c8b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8025e11c-1e8f-4af2-989e-9c0c729fe12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac40c7e-fc5c-4725-9e32-c8806e6ce1b7",
        "cursor": {
          "ref": "3d77c8c6-9b6a-44d7-8654-176583b8a020",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2e8c7552-dde3-4f5c-98ea-6e5807ffa2db"
        },
        "item": {
          "id": "1ac40c7e-fc5c-4725-9e32-c8806e6ce1b7",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "89a53e82-0519-4ce0-94e8-7993a175e427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c0bfa2-a696-44e8-a8bc-43e42a719024",
        "cursor": {
          "ref": "0f405f13-8764-4b2c-b526-6cdbc5f9f689",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "eafb91ab-035e-4878-8b38-8feebab28dac"
        },
        "item": {
          "id": "56c0bfa2-a696-44e8-a8bc-43e42a719024",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "6bdcb01f-d2d3-43fe-8b6e-29bf1365c088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d70257-6482-4f7f-9dda-b635dee1ba86",
        "cursor": {
          "ref": "d48cdd67-48da-46e7-b83a-97ab3f7596d4",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ac961a97-a337-455d-8faa-30bf82120a5f"
        },
        "item": {
          "id": "30d70257-6482-4f7f-9dda-b635dee1ba86",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "77897119-a365-4ee5-80bf-af272216478a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641c7e92-16f9-4698-afd3-54754f560e68",
        "cursor": {
          "ref": "a32d45d5-7988-4a97-95af-f84efb2ed729",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b74100ed-daee-4907-87f2-da0631fb88b7"
        },
        "item": {
          "id": "641c7e92-16f9-4698-afd3-54754f560e68",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4f4fe347-b6cd-496d-b4c1-e4a41fbd5827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 155,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62f6cea-c9a9-4628-a46e-857f2c2de72d",
        "cursor": {
          "ref": "7776f607-e7fe-448a-af6a-357de5a769e4",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0116ff64-c2da-49a9-9554-38dc2177062a"
        },
        "item": {
          "id": "a62f6cea-c9a9-4628-a46e-857f2c2de72d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "699eff91-76a0-46e2-aaf3-f5260a0848cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b905b40-57e2-4f86-8d8c-f021051e9ca9",
        "cursor": {
          "ref": "71bae4b1-ceaa-45c4-af00-e3409625ba35",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9b8c4296-de57-4445-936f-6a08c231b414"
        },
        "item": {
          "id": "4b905b40-57e2-4f86-8d8c-f021051e9ca9",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b6b82c53-5ec6-455c-af57-1ddc484c3a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1b9cdb-884d-4514-bcd8-7b3ba1c2449a",
        "cursor": {
          "ref": "18ca92c0-8ec4-4f23-8890-7196bb28cc5f",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c3d2df97-aad7-488f-808c-c20bc8b7722b"
        },
        "item": {
          "id": "ce1b9cdb-884d-4514-bcd8-7b3ba1c2449a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b4a384f1-8350-4422-8cba-4b9dd2cabd02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f62558-e2aa-4a79-abb2-1a11cfeadf7d",
        "cursor": {
          "ref": "0e48244c-2f9f-46e7-a33c-83a9917ca0b8",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3781140d-3045-404d-9528-8b419a8dbe9c"
        },
        "item": {
          "id": "c3f62558-e2aa-4a79-abb2-1a11cfeadf7d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "fe1e24cd-1326-401e-8e76-15bbe0823721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c4e5c2-1a4b-4f09-ade0-849af1714357",
        "cursor": {
          "ref": "682aa70e-f5e1-4d33-be00-80e7e47df9cc",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e0f6edbc-978b-4dd4-9632-7f5dfa51210a"
        },
        "item": {
          "id": "c1c4e5c2-1a4b-4f09-ade0-849af1714357",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c9bae3e1-47a5-4790-a498-7153a5f3f9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41dafa48-5207-4a14-b056-9dfce5b79887",
        "cursor": {
          "ref": "58ca9929-bd56-4688-8e7a-dc287cd8b5aa",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "673ae0ed-bfbc-45b5-ae26-47350830694d"
        },
        "item": {
          "id": "41dafa48-5207-4a14-b056-9dfce5b79887",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "47388610-65a4-4c62-a72f-f2a4f4242631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504bc7b5-99b6-494b-a99a-65e2e523c132",
        "cursor": {
          "ref": "6983a957-8734-4666-90c7-ed41cb8e4b03",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "61c46581-4048-483f-8e3e-d77e467c4a5a"
        },
        "item": {
          "id": "504bc7b5-99b6-494b-a99a-65e2e523c132",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "cf66bf1a-4d8c-41d8-9053-0be1294ffa6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec8de4a-06c4-4602-8293-fb2f0c8ed7c0",
        "cursor": {
          "ref": "9bb97cbd-9356-4a9a-a709-8fad823ee5de",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "484ee579-c914-4e7c-8f0e-2d4c8128d1ba"
        },
        "item": {
          "id": "dec8de4a-06c4-4602-8293-fb2f0c8ed7c0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4d089d58-fe01-46c1-af95-4fb8b6ea5fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42cf2a24-6979-4088-a8c5-31b72066a159",
        "cursor": {
          "ref": "4582010e-fc5d-4c57-90e8-d801782de563",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b99fa962-432a-43de-862b-dac47c303b26"
        },
        "item": {
          "id": "42cf2a24-6979-4088-a8c5-31b72066a159",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "12fabe0a-6ae0-45df-a5b4-4f7f6f766f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef199cfc-b788-425a-86b2-8b17b21a3ca3",
        "cursor": {
          "ref": "b1cc7a2e-78be-4170-a0bc-212e6d4a81b0",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "83b06fe9-6e05-4e33-ad69-2c35e8039985"
        },
        "item": {
          "id": "ef199cfc-b788-425a-86b2-8b17b21a3ca3",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c0a3534f-9f37-494e-8538-8c828cbe4227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ddfd02-1d72-4517-b52a-3b748b74bb53",
        "cursor": {
          "ref": "8cf06e3b-6048-42f5-977a-5e6097bb2b71",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "738cfef9-8b12-41ae-ba7b-98ee56333dac"
        },
        "item": {
          "id": "66ddfd02-1d72-4517-b52a-3b748b74bb53",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "8c0d74df-8446-4d92-8696-29029932cc7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec997c56-87ec-4a2a-9f22-08a72400f144",
        "cursor": {
          "ref": "1193ee95-b606-44a3-9ef7-d3a3f14f0170",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "57990258-8c51-477e-9caf-10be7f00dc57"
        },
        "item": {
          "id": "ec997c56-87ec-4a2a-9f22-08a72400f144",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0e372509-d3e1-4016-b4e1-ecc3aacb9123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549e0ff0-52db-4676-b3e7-99b877cfeea5",
        "cursor": {
          "ref": "79cefcbf-bc1c-40b3-9232-17803e4bb4c8",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ae802f8e-2c55-440d-b914-7b290a72e5d7"
        },
        "item": {
          "id": "549e0ff0-52db-4676-b3e7-99b877cfeea5",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ff667ada-c28f-42f4-a476-44694714a536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2b8009-f23c-4a8c-b6ee-5ef28bb8f942",
        "cursor": {
          "ref": "3b9df414-05ad-4924-af79-9525380be131",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "645bc93c-7dd5-4bf7-aaed-14170b05df2c"
        },
        "item": {
          "id": "fe2b8009-f23c-4a8c-b6ee-5ef28bb8f942",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c8ea6410-4ac7-4c25-9d25-ee47e7e2b958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56dd92b9-4a39-4435-bd86-4a13ab41c0e3",
        "cursor": {
          "ref": "bd9f1fe4-492e-4c00-a456-a0845d4c5726",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "dfe71548-413b-4e85-8116-95a871c51eae"
        },
        "item": {
          "id": "56dd92b9-4a39-4435-bd86-4a13ab41c0e3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1e71df41-6435-4b11-9608-c30326095351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1feeec-f46d-4818-b6c4-9813f1425a25",
        "cursor": {
          "ref": "df8bbc8f-018e-4ec1-91f7-b5d7c07accc2",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ac301650-784a-4bc5-9d5e-e14e88280b2e"
        },
        "item": {
          "id": "8d1feeec-f46d-4818-b6c4-9813f1425a25",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "246b82b5-038c-4f6b-8a21-1e6c74a32e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf127c2f-0af2-4252-aadd-e98a9d441eda",
        "cursor": {
          "ref": "4ff76248-96da-4873-a72f-7151bda42192",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "99b41176-8e29-4a96-b8bd-95b317b52334"
        },
        "item": {
          "id": "cf127c2f-0af2-4252-aadd-e98a9d441eda",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "20064e63-cbde-486a-a9d9-c0f1ba9c48e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a205380-7315-4cf0-a2f9-dce27e30d7a0",
        "cursor": {
          "ref": "739d7633-a6ca-444e-8875-1efe9ba0b293",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b66eca1e-ef2e-46c4-8a43-7140167b6194"
        },
        "item": {
          "id": "3a205380-7315-4cf0-a2f9-dce27e30d7a0",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "cbb7ae8a-41ae-4c2d-8707-c1bcbf754586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9e63cd-3e59-419a-8d87-c90d61ff63c7",
        "cursor": {
          "ref": "5c0b6876-ab79-4304-895b-169643c41cf7",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d33916e6-ac75-409b-9d01-5340fa45b4e2"
        },
        "item": {
          "id": "5c9e63cd-3e59-419a-8d87-c90d61ff63c7",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "12797cc3-85eb-4f80-ae22-c964964fca5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4e5394-93a8-41d1-853f-da28168b5b98",
        "cursor": {
          "ref": "5b230519-b966-447f-8c82-7837356245c6",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6e7e9441-6fa0-455f-b45c-60a1783a917a"
        },
        "item": {
          "id": "7a4e5394-93a8-41d1-853f-da28168b5b98",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "02a85efd-004f-40ad-8bb9-7439800d993c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a4f3b9-37ff-41ed-9ff3-f06361e6088c",
        "cursor": {
          "ref": "908ea38a-0c3a-49fe-bafe-dc3d91fe37c5",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "dd5225c6-9a41-4008-a9d7-0977302232b0"
        },
        "item": {
          "id": "a0a4f3b9-37ff-41ed-9ff3-f06361e6088c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b9c3c21c-6b90-4602-ab9c-f3390c5e6325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b83bd1d-3ba0-4d88-b268-e00f5007d145",
        "cursor": {
          "ref": "a690fe7b-c18a-4192-a054-3e4131f240ac",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6678bf8e-4684-4a39-9488-51b82dec3352"
        },
        "item": {
          "id": "0b83bd1d-3ba0-4d88-b268-e00f5007d145",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "efd0cf0e-bd4d-4bba-9d5e-140d12a275e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6423c6bd-3608-4861-b0eb-2c02cfedc8ef",
        "cursor": {
          "ref": "6450b403-f66e-4e0b-824b-db2238966b34",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b130328c-6a50-4c99-a875-6219605082b7"
        },
        "item": {
          "id": "6423c6bd-3608-4861-b0eb-2c02cfedc8ef",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "993890c3-5216-4689-9552-da3a730fb92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe697f9-e2b6-49e4-bb9f-f176b9cdfafe",
        "cursor": {
          "ref": "32cd770f-8170-4dee-8cd2-7f76b48ac7e0",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9826ad45-839e-4c26-b159-0dbfce96a1a3"
        },
        "item": {
          "id": "cfe697f9-e2b6-49e4-bb9f-f176b9cdfafe",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c7ee9e5d-a8e7-448f-9a71-53f96b4a9e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1040c899-92ac-4a2c-b950-f12971873f88",
        "cursor": {
          "ref": "22447b8a-51fc-4412-abb5-2ca6867f600d",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d1fded37-663d-4105-953b-497de077f972"
        },
        "item": {
          "id": "1040c899-92ac-4a2c-b950-f12971873f88",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6d8c3870-e9b2-474f-8bcb-d2893d883e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb82d5d-ca5f-4adb-a4e8-c5578212f44f",
        "cursor": {
          "ref": "13c3b386-f48d-4617-989a-e07b05d708ff",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b8bbb44e-6f37-4ca2-bb54-2c9c58093c93"
        },
        "item": {
          "id": "0eb82d5d-ca5f-4adb-a4e8-c5578212f44f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "22b44622-28f7-469b-9694-a82efc9fe95b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e77fa717-2d3d-4cae-a156-086ee8efb77e",
        "cursor": {
          "ref": "3ec4df67-da87-404e-aebd-37a7641fb96a",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c98e8a8d-7109-4dc8-b0b3-48acfb7f6de1"
        },
        "item": {
          "id": "e77fa717-2d3d-4cae-a156-086ee8efb77e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e66eecd7-9e88-42fa-a358-3aa78533bf75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ec4271-4c0b-4410-b3d6-d18ff7aa8655",
        "cursor": {
          "ref": "fd93ec08-07fa-42dd-93af-2ef0e094e67e",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "71d644d0-2a85-439f-bb89-94207e36bb6c"
        },
        "item": {
          "id": "99ec4271-4c0b-4410-b3d6-d18ff7aa8655",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "55803486-ade0-413e-9fad-cf6b56e30b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08d64cf-16fe-4dbe-b89d-4a9b06929be1",
        "cursor": {
          "ref": "79141cd0-3d1a-4e1e-9d62-61bdfb85191d",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e6b1eb35-42a9-474a-a181-d58fde911633"
        },
        "item": {
          "id": "d08d64cf-16fe-4dbe-b89d-4a9b06929be1",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ecf15407-8d9d-4661-9c6b-0de0c9bba564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7cea34-df6b-423f-81fe-0bf85d9084d0",
        "cursor": {
          "ref": "ac6f6c68-0f06-44b4-b73a-d3fa49125426",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d52a307b-cc72-4e8f-a69c-6ebda6d4517c"
        },
        "item": {
          "id": "2c7cea34-df6b-423f-81fe-0bf85d9084d0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e0a0bda0-2806-4644-b8e6-5acc20e1abaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f3ab1d-fd73-4607-93a9-7b281af0014f",
        "cursor": {
          "ref": "e1752768-3077-42ac-bceb-b8e4cd60a301",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "73d9f030-b861-40e1-a8d4-2f5b780780b6"
        },
        "item": {
          "id": "e4f3ab1d-fd73-4607-93a9-7b281af0014f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4fe5000a-243c-4168-842a-35ac20b60bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9469252-4476-4b41-b897-274f780759e8",
        "cursor": {
          "ref": "f7939aae-7408-4df5-b536-1b79eb9f6d0a",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e85e3165-a95d-45a8-bbaf-56dfc312fe5d"
        },
        "item": {
          "id": "b9469252-4476-4b41-b897-274f780759e8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4a30e0e0-e9b9-41dd-b224-f0e84589d009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b642ce-e6dd-4103-94c0-b902239fa546",
        "cursor": {
          "ref": "080780e0-2e10-41a6-b135-bc9a7a0ae0ef",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "832c6689-ebc8-4807-8c51-73fec06a8e9d"
        },
        "item": {
          "id": "f3b642ce-e6dd-4103-94c0-b902239fa546",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "cd80565c-9c5c-440e-a295-3e71ba005c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef6c273-668a-4e52-b78d-26d0ff2b69f4",
        "cursor": {
          "ref": "17c98b64-f9fd-4f32-8ce5-0b45f2013585",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "23203e07-ac81-4ef2-940d-e6673aefc136"
        },
        "item": {
          "id": "7ef6c273-668a-4e52-b78d-26d0ff2b69f4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0ff4a247-1d56-4d9c-a231-8a7ec096bb08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428c170e-b2d5-4300-99d3-14c36666515e",
        "cursor": {
          "ref": "a8324cb0-ecac-4e42-9dc3-f4e03827d146",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "bc33261b-baff-4630-bffc-2d5012421c2d"
        },
        "item": {
          "id": "428c170e-b2d5-4300-99d3-14c36666515e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a3caed4b-9e70-4141-9019-2b220953442e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4484ce-170f-4a37-8c9d-9ab358658d20",
        "cursor": {
          "ref": "050f54a1-0144-48bb-97d8-6f1e7a087ccb",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "7a812795-b700-4020-b0a9-513c12a8e7f3"
        },
        "item": {
          "id": "8c4484ce-170f-4a37-8c9d-9ab358658d20",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "75684a59-0392-4211-80bb-49469c7edfff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "655605df-902f-432d-9360-de7f17384a53",
        "cursor": {
          "ref": "334d1788-e376-468f-8524-05c470e0bc79",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a6a7a28b-b350-4988-a7d9-62673a58a47d"
        },
        "item": {
          "id": "655605df-902f-432d-9360-de7f17384a53",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c22e2398-6dc0-4219-8f27-0cb7757adac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1924d6b3-5f5c-4937-b8b4-4ae1e9aededa",
        "cursor": {
          "ref": "ba4955ae-5f82-4c93-9f86-f8653e2c8f9e",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c2748f9c-934d-4fd8-9048-9dfba4e67458"
        },
        "item": {
          "id": "1924d6b3-5f5c-4937-b8b4-4ae1e9aededa",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "851c02cf-836c-4499-853f-dbca2955771d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719fbde2-7dbe-46c4-bdab-0e444cf76d05",
        "cursor": {
          "ref": "09974afa-94a8-4dc0-a340-c5c24a0bb1e8",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5a3ce8ef-382c-40de-9d7a-267defb4a1c3"
        },
        "item": {
          "id": "719fbde2-7dbe-46c4-bdab-0e444cf76d05",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3d4d545b-8990-479a-9537-f5e217262997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8284a233-4299-49d2-802e-b28f03363c1f",
        "cursor": {
          "ref": "b22c8910-52d2-400b-857d-f4a6b4f5f31f",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d5df3abf-f72d-4c5f-b71f-aef9a8844058"
        },
        "item": {
          "id": "8284a233-4299-49d2-802e-b28f03363c1f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b07189f4-4592-477b-b698-ffd73be88672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207a5449-b9a1-4663-ad57-f34e386ea7d2",
        "cursor": {
          "ref": "41eb397b-00b8-4685-ac9b-13cf30942f37",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "cb67eaed-e09b-4df7-a7fd-028a73eb7cc1"
        },
        "item": {
          "id": "207a5449-b9a1-4663-ad57-f34e386ea7d2",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1747c33f-aa88-415f-888c-8dd30c52a19c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1721d9b4-5147-4412-a14b-8ff190ee6850",
        "cursor": {
          "ref": "72eb1b7a-aded-443d-818b-b7f57a26cb18",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ec4ee42f-a0ab-4061-b6c5-a270b607da34"
        },
        "item": {
          "id": "1721d9b4-5147-4412-a14b-8ff190ee6850",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "45030eb8-91c0-492c-8998-2b801e524d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf591d28-4d33-48f9-86ef-e4b68b518f5b",
        "cursor": {
          "ref": "3ae53aee-6904-4e60-a52f-fc8066d17e0f",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "91c9c27a-0322-4e72-a9bb-b07caaa00e51"
        },
        "item": {
          "id": "bf591d28-4d33-48f9-86ef-e4b68b518f5b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "586fe318-9d7d-4fd5-b0ce-e0463ac873ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6807aa29-12a9-460e-a93d-95ed2e6404ff",
        "cursor": {
          "ref": "e46c2cb6-7a70-4e4e-9481-29a621357799",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0eaea3a6-4943-4303-a604-4664744a9a6c"
        },
        "item": {
          "id": "6807aa29-12a9-460e-a93d-95ed2e6404ff",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "1848e8a5-e75f-42a6-afbe-22a419b28c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bbc4305-b5d2-4dd9-8733-307e5837b224",
        "cursor": {
          "ref": "f2be2132-f0e9-4e80-b136-f4d0b5b6cc31",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5252a785-5c84-4046-8d13-d0260244f62b"
        },
        "item": {
          "id": "3bbc4305-b5d2-4dd9-8733-307e5837b224",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "41c8b24d-8375-4eed-8a34-f1c280731176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3be883f-8739-46b2-9597-6495fa738cbe",
        "cursor": {
          "ref": "ebddb20b-7ef2-404c-9dc2-2e2e8c3b9fb9",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "025425a9-b976-4288-b7d4-c5d8db55e48c"
        },
        "item": {
          "id": "b3be883f-8739-46b2-9597-6495fa738cbe",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f2b727d0-9b99-4de7-8dc9-865da92ada5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d7ca47-e239-46bc-9bf2-8cc723b8197c",
        "cursor": {
          "ref": "dbda95e4-578f-421f-8e77-7e31fb763675",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "221426d8-2dec-4ff3-82b8-043c7226b3ad"
        },
        "item": {
          "id": "f4d7ca47-e239-46bc-9bf2-8cc723b8197c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "53095fd2-a34c-4c08-a852-73a9cd982440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1588876-153a-4482-b2c7-f6304c91520f",
        "cursor": {
          "ref": "7e76be73-f983-4443-8a0e-26a986147c22",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c996a969-63d6-4ae3-973b-0a48539cc3e0"
        },
        "item": {
          "id": "d1588876-153a-4482-b2c7-f6304c91520f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2b61696a-bda0-4cde-80d1-0051bdf5763e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71dad08a-6f7b-4b1b-adee-987275fa90fc",
        "cursor": {
          "ref": "bd9cf013-42fe-4d5f-8b03-723de2df1969",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "2b6c40b0-b6e8-4aad-96c7-2bb96cf784cc"
        },
        "item": {
          "id": "71dad08a-6f7b-4b1b-adee-987275fa90fc",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7bf8f87d-afec-4b25-9003-925bd265b512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d5ea6b-267e-416a-adc2-32a2fe1ce77e",
        "cursor": {
          "ref": "98f62d5b-f97f-4158-a901-e262e0d9aeff",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "49a9a5ce-c572-4157-8dc3-1e1a3b666e37"
        },
        "item": {
          "id": "56d5ea6b-267e-416a-adc2-32a2fe1ce77e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c0d81eec-04cb-4ee7-9058-cce6747b2110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e5d8c9-a9ac-4639-be07-018eb3ad6703",
        "cursor": {
          "ref": "c4348f1a-92f7-4246-b66a-b24eb3fdeb75",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "3a482624-e370-474d-93f2-7b81a2a91c70"
        },
        "item": {
          "id": "80e5d8c9-a9ac-4639-be07-018eb3ad6703",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "42797878-da8b-4f8b-a1a3-373a7be7a680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5620bee-e914-41f7-b655-933e269da395",
        "cursor": {
          "ref": "3259daa9-5a49-465d-9c5b-e6392d12b769",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "bb7a8c7a-7280-4b4a-8dd2-dbca135fef4e"
        },
        "item": {
          "id": "d5620bee-e914-41f7-b655-933e269da395",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ddbc756c-a8d8-4e90-9d07-250db1824a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb38727-2957-46c7-84db-ce3d9c423cd8",
        "cursor": {
          "ref": "62deb954-5b30-42ad-9d8c-b6eaabc355c1",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "003dc238-e9c3-4869-bb94-d47d571ca57c"
        },
        "item": {
          "id": "9bb38727-2957-46c7-84db-ce3d9c423cd8",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "07d2d6fa-200b-4198-808a-ff241cda95b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3803af5a-28d8-4ca4-8a64-a5bc7110984a",
        "cursor": {
          "ref": "10863b0f-5426-476e-b3ca-9d27fb8a5613",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "029882c7-52d1-4ff6-aed7-2f52ff10c84b"
        },
        "item": {
          "id": "3803af5a-28d8-4ca4-8a64-a5bc7110984a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4d6b6132-83d0-4a29-a5f3-48be3acd65e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987f679d-7d7e-4b34-b9e1-1cc5bc2da3c8",
        "cursor": {
          "ref": "5f164245-4e2d-4baf-85c6-8658cf5fb526",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "c98bc184-6405-4e33-8d96-bdea468e3607"
        },
        "item": {
          "id": "987f679d-7d7e-4b34-b9e1-1cc5bc2da3c8",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9c2d8222-f1c5-42c3-b63d-93aa3631d57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf7a212-a871-442c-aaed-519d0c17e36c",
        "cursor": {
          "ref": "2be4f801-c656-48c4-a67b-0fe4bb806e4f",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "d02b0be2-a8ae-452c-9c69-991b1d1961ae"
        },
        "item": {
          "id": "aaf7a212-a871-442c-aaed-519d0c17e36c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "40e6c522-d5c9-44f9-8a9a-5ad3eda96869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e430de22-58fa-4c44-93a8-6e3bc9c29313",
        "cursor": {
          "ref": "f0026d99-6f8a-4fd9-882d-86ce71b67442",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "6006abda-d8cb-474d-aa45-62e812404983"
        },
        "item": {
          "id": "e430de22-58fa-4c44-93a8-6e3bc9c29313",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a09bfb94-cbec-422c-b095-f4e7061bf1ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18ffdc1-58b9-488b-86e8-6fcf36541a23",
        "cursor": {
          "ref": "57bb5270-1c22-4c41-ab84-78bd826de0aa",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "9eeb1688-4997-44c2-a72d-0e17d982aadf"
        },
        "item": {
          "id": "d18ffdc1-58b9-488b-86e8-6fcf36541a23",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "39f5a82f-92dc-4d02-90d2-e37260b5bf68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e543d8c0-10c5-4ca1-b652-8858cec01ff4",
        "cursor": {
          "ref": "63cd3c5a-d84c-4374-9191-15b37de77717",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e8407382-8207-47b9-b5d0-31ab49b6d37f"
        },
        "item": {
          "id": "e543d8c0-10c5-4ca1-b652-8858cec01ff4",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d668ca12-d8c6-459d-9a3b-fc533f6a6eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a321fe01-b70a-4abc-a7e9-0bb59213c409",
        "cursor": {
          "ref": "5ebd116e-168c-4b6a-abaf-a3cfe6f18231",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "372c3353-d0e7-42db-9f87-67b493fb3a35"
        },
        "item": {
          "id": "a321fe01-b70a-4abc-a7e9-0bb59213c409",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ee779861-4c5f-45ae-b7b5-83130765c7f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a171dfc-d2c2-425e-902c-327e89ceb79b",
        "cursor": {
          "ref": "fb0b5698-a370-4b6a-a956-be78c8979733",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "e484b96e-bf10-42ee-a6d5-31911065a0ac"
        },
        "item": {
          "id": "3a171dfc-d2c2-425e-902c-327e89ceb79b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f7766e4e-33d3-478c-be38-289a70f9fa5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d2618b-a56f-437f-8a2b-7ad7e174af22",
        "cursor": {
          "ref": "45ab193d-0826-4d8c-ae4e-53f23c80d00a",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "fc8b6bdd-ef9f-4025-848b-1c8344aef984"
        },
        "item": {
          "id": "99d2618b-a56f-437f-8a2b-7ad7e174af22",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9a58a49c-6ba2-4c7c-a79a-05f97e6603d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10180a1-ef3b-4400-b7d6-f4e66021e621",
        "cursor": {
          "ref": "1edcea6d-e63f-436d-a61f-ce8f5d6f099b",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "e9a80982-d7ae-4b9b-871c-f04d9b9016ce"
        },
        "item": {
          "id": "c10180a1-ef3b-4400-b7d6-f4e66021e621",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "33a299b9-29ce-402f-8b9d-6aae2284b7b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4ba5a0-2758-48c0-a2ee-a272287a63ca",
        "cursor": {
          "ref": "0a4599ab-e379-4bf4-9b46-167bec922803",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "5a9d798a-cd83-4951-b7cf-86f5896bcf19"
        },
        "item": {
          "id": "8a4ba5a0-2758-48c0-a2ee-a272287a63ca",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d322797a-8eb6-4544-a499-52ea3d8175b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4ffef0-5e3f-48a0-a2b5-cc8dd2192b82",
        "cursor": {
          "ref": "3a266db6-3b27-48da-87d4-770fee83acf0",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "bc6c07fc-1fe1-488c-ac66-7ded9be0eace"
        },
        "item": {
          "id": "6e4ffef0-5e3f-48a0-a2b5-cc8dd2192b82",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "404948f2-6306-4737-9cb7-fac9b706b615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc98478d-7b71-4ab2-ad3a-822a57c61fe8",
        "cursor": {
          "ref": "b2c4aaab-58f8-4cd6-982d-7276002d2a03",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "b09fd8cd-8d37-4bc9-8be5-d89d1aadf7a5"
        },
        "item": {
          "id": "fc98478d-7b71-4ab2-ad3a-822a57c61fe8",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2fc0f923-aa68-41ce-919e-c3cbc1da7a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e16a3b7-0a09-40f7-8358-e7b160042c48",
        "cursor": {
          "ref": "1a4fad00-2b4f-4ba3-acd1-1afb06ed30e5",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "c781b5cc-a53f-402f-9428-13eb87112ef8"
        },
        "item": {
          "id": "1e16a3b7-0a09-40f7-8358-e7b160042c48",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "eb6b3a04-b683-42b3-821a-0fe7ef704992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00015572-2c19-4526-9bc6-a8e8023f29b3",
        "cursor": {
          "ref": "5117ab72-04f8-4c94-883d-67f06631a875",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "9553bd6f-e79c-48cc-9be6-2a28defac883"
        },
        "item": {
          "id": "00015572-2c19-4526-9bc6-a8e8023f29b3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e63a4998-5108-4ea5-bd85-53cc668cacf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd13a1a-ee00-479f-96b9-542a2015e021",
        "cursor": {
          "ref": "4bd6fde6-216e-4b82-8a1e-2b589836a7a6",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "0626ddbf-6bb0-4085-9c97-619402535fa1"
        },
        "item": {
          "id": "9cd13a1a-ee00-479f-96b9-542a2015e021",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "27cf449d-64af-4d48-a2de-30464c6b4864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d2e793-4106-48d1-9c98-152026118dc3",
        "cursor": {
          "ref": "af7878a5-3cfd-4987-9a04-c0ed75b1c039",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "12ae4844-a827-4808-8e28-ca79d569f54e"
        },
        "item": {
          "id": "94d2e793-4106-48d1-9c98-152026118dc3",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "794b8da6-ba6d-4f7a-b676-4edca64233de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028718bb-c8f3-47d9-be80-936080f35104",
        "cursor": {
          "ref": "43da7777-8bd0-425d-90d0-99bb0a7b23d2",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "f883e28e-7577-4d61-91fe-1d1b98691953"
        },
        "item": {
          "id": "028718bb-c8f3-47d9-be80-936080f35104",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "235bcb2b-5d85-4237-acf8-28aabc06bbfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc551b95-e244-4bc3-9e80-6dbab6670abc",
        "cursor": {
          "ref": "be8b81b9-805a-47e8-b67c-fe6b9c1f324c",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "10e06819-6479-4b47-8aec-9a47baaac8fb"
        },
        "item": {
          "id": "fc551b95-e244-4bc3-9e80-6dbab6670abc",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e212b589-f0b4-4780-ac91-fa109e7ff828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1efe3a-2d2d-4584-a0d8-94aa534b8ada",
        "cursor": {
          "ref": "133161e2-8ed8-4465-b098-614d59c015ba",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "b9ad3cf1-c73b-49a7-bd7a-ece0b7f539fb"
        },
        "item": {
          "id": "6a1efe3a-2d2d-4584-a0d8-94aa534b8ada",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0cb45a0a-c2f5-4b8a-98f5-307e569621ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c459c57e-a0c4-43d9-a961-68f97e4b0872",
        "cursor": {
          "ref": "bc67e4ed-1c0f-4eb7-8120-4c37093715b9",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "333a1694-5449-42a0-a7f9-b826aabd48e7"
        },
        "item": {
          "id": "c459c57e-a0c4-43d9-a961-68f97e4b0872",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "738d4e64-a64c-4fde-8607-46e9418f0aa6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12dc7dd-d303-4f37-88d0-8458aabe7570",
        "cursor": {
          "ref": "693d58fd-bdee-4f90-97fa-d7d04505d0b3",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "424a10a4-6132-4702-9de0-a495d7af82ce"
        },
        "item": {
          "id": "b12dc7dd-d303-4f37-88d0-8458aabe7570",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1dbed0d3-c81d-43fa-bb42-41bd6b3e92ee",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "13939bc5-e5a4-4539-91ba-cf5aa33eb4e5",
        "cursor": {
          "ref": "a890b695-53fe-41bb-b395-f8fc66aebbe4",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "a7adb827-68a2-49b9-bad2-d305a369cb2e"
        },
        "item": {
          "id": "13939bc5-e5a4-4539-91ba-cf5aa33eb4e5",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8cd5b309-0850-4d56-95f2-ce9067fdafad",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa1108d-c3e1-404b-8a00-3c485c91e7da",
        "cursor": {
          "ref": "c4ff77ce-e597-4045-ac84-24d37adabae9",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "16691406-b43e-4396-a505-8c7e8d7a98c2"
        },
        "item": {
          "id": "7fa1108d-c3e1-404b-8a00-3c485c91e7da",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "df384580-6c7e-4a36-a026-ebea7fa6ec83",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d280bedb-f452-4819-979c-4a78829c62a2",
        "cursor": {
          "ref": "770a73e0-a384-4fbb-9d7a-ff9129340531",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e81627c8-4ef5-45b8-b623-cdecb659def8"
        },
        "item": {
          "id": "d280bedb-f452-4819-979c-4a78829c62a2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "dea91bff-cf54-4fa8-9a8b-fe0be32edd11",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d280bedb-f452-4819-979c-4a78829c62a2",
        "cursor": {
          "ref": "770a73e0-a384-4fbb-9d7a-ff9129340531",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e81627c8-4ef5-45b8-b623-cdecb659def8"
        },
        "item": {
          "id": "d280bedb-f452-4819-979c-4a78829c62a2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "dea91bff-cf54-4fa8-9a8b-fe0be32edd11",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7f5ac6-d015-491c-8352-618be028a59b",
        "cursor": {
          "ref": "a1b7d184-cc52-4927-ac24-25560db69284",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "dc8b2436-16c6-4c56-9be0-0d3083fc8a35"
        },
        "item": {
          "id": "6c7f5ac6-d015-491c-8352-618be028a59b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f6fdfee2-aeca-4195-84db-5610758b5b51",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0756668-94f6-4966-9882-16f65dd1a324",
        "cursor": {
          "ref": "d41c4666-6b86-4293-b718-b662f48e7a6a",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "ba16dafe-1939-4b0e-8dec-9470cf5a7307"
        },
        "item": {
          "id": "e0756668-94f6-4966-9882-16f65dd1a324",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "66fdc42c-222f-49c4-ab1c-6264c2ecd796",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}