{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "77a25375-ab8d-427c-aa43-21a689f71563",
        "name": "Clear Cache",
        "item": [
          {
            "id": "99d9cb2c-076f-430e-a899-4ada67ab7ff9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "37d58608-bf48-41fc-8d21-10b4a9b152f5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "28012eb7-730d-4bc4-9301-9d6c7c3796e7"
                }
              }
            ]
          },
          {
            "id": "8df2e95c-e404-407f-98b5-6c776519e088",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6cf48f4b-206e-4fe9-b9bb-df4562ace5e4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "21a366c3-10c5-4b17-bf5e-79a849cddd16"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "50619822-9540-4adf-ac89-6137d6bd4846",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e05784e7-48cc-4378-beb3-b70a9a580b64",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e42c4e46-ccc4-4812-bca9-b5a1827d1753",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d01343f7-c87a-475c-a0c5-6bef371a1376",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ec5e6080-c1b3-427b-920d-53d792a066a0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "525b836b-6d7e-4ddc-9b92-ec323c8e7a33",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c0373224-ed7d-46e6-beaf-7c0682eabc79"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a0bbdbb6-b970-44cb-9d63-6dc323e7a0c5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f1494924-6942-4977-8302-0a80dab19bf1"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b6abe64-d919-4a28-aa99-b0c144c04491",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0df485dd-c8e1-46ab-a60c-f335f05f4c58"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "512a93cf-913c-48e3-a829-af623e2bb8a4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a957e7e8-b9a4-45f7-af42-9fcc0b657da1"
            }
          }
        ]
      },
      {
        "id": "7dc88976-7309-4812-8672-eb4bb5afbbec",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4abfd3b9-53bb-4395-9678-62d05da8d0a0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "db075bfb-3c4c-4f81-9305-3d48b9d511b1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2eaa3789-69a5-4755-a222-6df760824780",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c4b688-d5ba-41a8-b873-66341b4bf209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c853546e-a55c-410a-bcf6-176f46c6fce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e3759f-329e-477e-abb5-90f683e2f97f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "018d39ae-ae7a-49a0-ae6b-eec6bf80ba4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db05b12c-46e6-45d9-9d3c-41df8d7e6f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ced3109-a19a-4e7b-a6d5-5fc73c4469cd",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b097e7-02aa-4651-b01c-065c386cb90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a0a19ea-6dd2-4472-bd13-bbc837102b60"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3ea82c16-229e-456e-ae37-509c5e2d540d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cd1863b0-ed81-4b20-9894-624ad3a76c32",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83fe2b5-aafd-47be-927a-f22563055a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "668719f0-d1e9-4edf-9088-040433b3a69c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c894c5d9-7b31-4ef6-ab47-e9626eb1138b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8338aa7f-eee2-4c6a-859e-cdd54734d519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da237949-206e-42a1-8ad0-e693d58f4924",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1dd421f-1c04-40a4-bb6e-c6d98b57cad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d21d668-5539-45bb-9c18-eb8884a0f045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b701753c-a3ff-453a-aee0-2695cad802d1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "99708601-c82a-444f-ae61-9a63609a4400"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "68282fb6-fd31-46a3-82d8-7a9786c437d0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "009db0cd-f173-4920-835a-8467f7c27025",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b52d74ed-4c7b-43e4-927b-87048e11b76e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "847c6702-1f33-438c-9e10-0329ae4b284f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88e49a46-0873-45b8-91a7-ccc644d1de50",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "020f534b-c400-470c-8730-533954b2128c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa9e45ef-85bb-4893-857b-035fb87a29d4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ea451bb-41b3-4161-b465-017a3575cd7b"
            }
          }
        ]
      },
      {
        "id": "79fe3544-43a5-4384-bc80-0e8ed52e1c78",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "43d48158-d30f-42a0-b927-7cb4aad7f18c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ba6d2f15-199e-4fc0-974d-fcc7ee258c6d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "05526054-ec1d-45c3-a2f7-0b8bcd4016ae",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36edafc-365b-48cd-a1c0-9c26e16b699d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f41fa082-a1f9-4628-8926-e84657b80950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217ee071-4615-45b1-b32b-0d6893743daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20fd28b4-0778-40a0-8ef4-9c16c8b25b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15138722-cf19-4146-9045-1c4729444370",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e208763f-b3d0-42cf-b40f-634f25ddfb73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c97e0cc4-2af3-486e-a890-afaae818a0f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e082022-07fe-41be-8854-69d725c9147b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4ff8197-a7d2-4c91-bc1a-1f16226bae13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003a076f-4dde-4aa4-a855-d1e3afa9b677",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71192dad-6c50-4a2e-a967-300c0f2c07b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "031be842-67f8-466e-8886-b2e89a9d7b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1906d12-78da-4c1c-bd70-92fbe6cd0b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5137115f-9dc0-4571-a8e3-274359eb180e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf070e1-d7ea-47e1-aebe-bbbd9b508354",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d555d0f8-fb03-4c61-b32c-7f3de26f68a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1295c28-c726-4e33-830f-2a9fa33b6cfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a52535-7c87-4a42-a87f-6d6b089f6737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f362393-73f9-479a-954e-2ee48da0d392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b79a58e-8dce-48c0-917c-f64551cdc629",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "691177dc-5e1f-4f6d-9ba4-610f103eea10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d10d802-496b-41d0-bd37-c903b66a3fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f469b9c-1fde-4265-8698-315c302337f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f198620-0d21-44d7-9b90-0c6d78deaff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce00f8cf-8770-4175-b7f4-fe22531dad29",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a35d2e6-480b-4a53-88e6-75b0bd32467f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ba45440-bbab-4e1d-9ddb-53267e442a08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ef902b-0f2f-4336-91e1-8a212b8ed6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "454d7647-8811-4181-a2b9-03e395a9ecae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49bf8c3b-dc5d-4fc0-b389-6bb0a81d9803",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4c725f-2656-4fbd-83bf-3eda5a6e3817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "915efd8b-dd61-4ad5-9d7f-f83fe1f3162c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799f61cb-8f08-46fc-94bb-f3d105a74d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51934e3c-8d63-48ae-a97b-06a5cdccb7fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462f180c-58ba-4360-96da-347cccb8cd9d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22673c72-a5d8-4cc1-bf01-208c55cd74d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07ee3734-6e60-4362-868f-32c2d88e3bf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ecded53-d12e-44a4-9108-aed3e5bfd047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b90fa0d2-37ff-4e2e-abe8-8e5c3c322bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6318a5-7f7c-4c3b-a5fe-12dab6b6490d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cebea3e3-5155-441c-bdcd-c0c7a168b8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c34df69-05a0-49b6-b9cb-d9df581a0b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e68d35-d9e0-445d-b68f-004ecab022a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b095e4ea-9ac2-4b6c-be29-c4aea2febcb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e2f837-5d24-4574-8320-477ad9172171",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ca6f98-1d67-4ee3-bfdb-81dd54028fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49318da5-5b82-40cd-ba4e-e54c8b20caba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd0963b-ddf0-404d-8ab2-7eab189eb8d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "742c7584-f4bc-4d90-9e74-3e2ee8837dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326f59e1-abf4-4b45-836e-be9a4a75b85b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49cbdcd-6fb4-4e85-aa77-2b8b7b28719f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb9fe314-27e1-4cbf-a9da-60388943a6b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45922418-e5ab-47e9-b0b6-ae9637083975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eee061b5-82c4-42e5-b2de-ff74f6d92707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2c42e6-30c6-40a8-a848-47b92d181343",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a4f1dc-d442-478e-a9f2-88aaced856f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "836615e9-de55-44c7-81f3-a0b20cf0e124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef5ccaa-a147-4862-b444-89ce99875eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c61c6e3c-384b-4b30-8dd1-41b831a3c533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd7ba61-518a-430e-8d1f-5e6b91d2c385",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8591a049-e6c9-4d15-aee9-ef3ff55027cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d5037ba-983b-4d36-b0f5-17cba8260d6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618d9b4c-c136-461f-8a6c-85776270b8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ec3b5d7-b428-484c-a6bc-96547ad0c832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ff1340-d38d-4cfb-9682-d6a6f0f9e522",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7608b4ea-ccec-4f5f-95ff-ad357e8f719a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccc3fb0c-25a7-4596-8cd2-702fef9f1805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e77e0fc-0578-4180-b61f-e3783b1a2736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ac04a1b-1909-4d7c-808c-daf67ad47b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ba330d-bf45-4934-a469-95bc6f1d8bad",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12511ca-4803-4eca-a423-b67171bed1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2fbba7b-bf5d-4163-8bc0-5cc31662d327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3a2788-9f13-4b3e-ab18-6751e14cd073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfdac690-c5f0-4720-86ca-2fd846c31534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017bfbf3-452d-4b4b-b59b-de04dc6ef995",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d49d908-8b6b-42c2-8a3c-a3c4d63566a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45538b38-30d5-48d1-b6e6-1a15bc00eebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa6899d9-c738-4dd9-8522-125d2f1856a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "576ceaaf-9036-4c7f-a822-d6860791b055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a8190b-9602-4263-b566-f70cb29e5f45",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0503e3f-9484-49f6-b223-4f9ce9c35dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d0bae2-0453-49d7-8170-c0073b1ed7c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a6d7d8-eb53-4fca-8051-83a284a371d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0afc79c-255e-4b6b-909e-50441080ad80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420e3293-d3dc-4c12-bc70-1a9a53754e77",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9654d1a8-2dbe-4794-938c-1ffd65513c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb1b2a06-7d4f-4594-bd68-3077ff270f94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f13bdee-671b-41b3-a578-dc4a524b5096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "92d2fea0-c37b-41bf-982e-6ed36eb254b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2bbd7fa-9f5c-4b57-8768-e65083a651fc",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9e3d6c-6184-4ae5-beac-dddbc61d536e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f3bca8d-c579-43f9-ba8b-6fdf9876ae4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b644a43-976f-48ec-b8bd-a6179fdafb25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "afce247f-99f3-442a-b953-8c55b94ee358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c65a2b9-d6a8-45d8-93d6-6c4284f1486b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d7a30c-a6f4-4db1-b5d3-dc1d52d83830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c8a712-bc0e-49f4-850e-1273dfa7e7c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891df431-3f35-4311-9c42-8f45dcd98062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1417e80-f740-40b4-bae0-f3021fe93df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b95cfa5-d212-4892-923f-4d1f5158c121",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db55413e-f91d-4f73-8192-76e55f1e6474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2918cb0e-6ba4-438b-a1e1-1adae6156f94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359b3ab8-8c58-48c1-95d2-00a02e008a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4281679-9821-4e26-8b7b-c7692acffc88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0081a76c-f6d1-440c-8772-5224665b865c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7173de-4924-4b31-80d7-86c77dd38956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b3853a-5ad5-4036-b69f-ea7b9da36ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270fbf02-7460-4f23-8ab9-1669514aac99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e812bd94-e569-44b7-b16a-46b3f17fe94c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c46bb1-4924-412a-b710-ac9a4175703d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b27e451-d83e-492f-9cc0-460aa698ac0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56756a3d-fc24-4c4c-8b92-f9bc2ffdde46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4bc4661-4dbd-48cd-81f2-ace02dc3ceee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "99486418-99e7-4356-87fa-9df41de80d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e94f42-a8cf-493e-aa99-bac111afec73",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d09d5cc-0842-4498-830c-e27d97450edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "642788f1-bab1-4318-9ab1-822f88a47b38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a08178-b7eb-4049-8d37-06ab5ec9cc30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b825f0f-3459-4ccb-9570-44f33da6ffe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de239e6-07bf-4782-a29a-ec8bc8cdbc23",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65fb617-11f5-4441-bb62-bcbbf29b3d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24c21190-6b65-4c6f-87f3-395c81a57b41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a45f250-03fc-4f33-8603-0e449a5ce8a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0b2b59e-a3b9-421a-a467-3b5560f0eb6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72efd2b7-027d-4ec5-9c08-a98485c5eaba",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d295b6-fe6c-4aea-b599-ebc46ac97db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6990473f-3db7-4e16-9507-b270db167e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc004c72-fb1d-427d-a620-e99aa4065e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "52b05d0a-9230-488e-a073-6d234107d985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740fec49-a4f5-4b21-b4e0-5da88499240b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8581bc-02bf-4486-9e44-b1d35792c75b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a311400e-4dc6-4533-99c5-d7d5db9e8226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57eca8ec-0386-443e-a0c2-6a47144af08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f03bc08-3003-4760-915e-c3b71f369f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33622806-713e-4c2a-aeaf-616a40cf03ba",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f526d0-5b3e-4537-8161-114674c8de54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d97d83a2-285c-4826-b3b3-8e0cda66e81d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de1b366-458c-4251-86c5-813a027fbccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "21ced7f0-4cce-41c5-8ee3-e88de0717f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018a1b3b-d40b-4b8f-b4ec-a32ad7ea583a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8176d9cc-e8e2-48e2-a83b-39803063f948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6766e52-b07b-4b36-bd41-a6adb6d08fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3671864-0fc4-4419-9206-004e1d215e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f1d38bf-7797-4467-acd0-fd5c2e1ccc12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff315dcf-46ef-44a7-8622-4ffff858f19a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb91739-c2b7-494a-a208-9aa62202b364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "906173f0-b0f8-4915-97a4-52fe2d407401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd63301-ba3b-42a9-87ce-47a724c44489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8df992d9-6b3c-4792-8676-8952c760b69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f08198-075d-4394-a194-d0b91ac63ef8",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8871160f-7cd1-4457-88a0-a2e29358101b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "169d883f-6f48-4759-8f95-2e79c1d3c69c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b8b704-00f8-493b-bcca-f41ce99055ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "73186353-6c82-48f9-b963-58fa8b618979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa31e4a0-8d7e-44f7-82aa-877435503843",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c90db25-9f36-4ba1-99e8-c0a1df5be943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "778b0803-27e4-4b56-93b9-c9e37e54fc95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50fea2df-8adb-4d9e-ac48-359e1447041f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "749ca7ca-6faf-4676-b2be-90735a59d5e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab5cda1-65d6-4c12-b30e-18bc08aa6e01",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54797a43-9f0a-40f3-8a45-4daf54c871bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e1f1c9-71f5-4df5-96c4-d35b8ad23440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4728fa-11e4-44ad-a159-78362638499a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "659a3183-7650-4402-b8bd-ea1b3ed89e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33646ba6-8e0a-4072-a35b-2a277b5d7a2a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa22232-ba57-45de-8c12-bbe017bc88ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b174be4-7f11-4d68-b367-3be88658bb45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b8e895-3c37-44e6-9840-3e74deb8689d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d7db90a-02db-4ac1-a684-44bdb05c512a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ced214-95be-44b0-a2ae-a1e9806cb4f9",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3001e607-946f-4a28-bc50-94469d258228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2e0ae3e-fa63-4cee-b749-944e34f383b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f75d15-6493-4c8a-83ed-706aac9e1f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a4fae2c8-6b49-4ab6-8958-866a64baead7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57e0759-f258-4aef-981b-4a1d6af1910d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "029b31a4-f913-46ab-8b93-58f55e461211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "636848be-b1dd-4209-aa0a-408786f5e876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85545297-00bc-4cb4-829f-f1bd3c0c1705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1729b459-7117-48cc-8288-66fe08f5671e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca77e209-71a3-4269-964d-071f62f5eda4",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98413987-f0b1-4238-a434-001768dd461f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "373e14f5-7077-4c50-9b2c-c704a0083554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19f43c8-4e93-4ee7-92c6-e9276a37c3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d8c2d8f-2810-490c-83e9-f267b924193b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86d63fc-42be-4531-af01-0c08b5788d62",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c891926-04ef-4e76-aabb-73219b9b535e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aa22d8e-b591-4aa7-ad92-597ab87ed856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697615ba-24b4-45cf-9669-7329669cf59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b72da6c-f359-4e59-8d40-a2918b7de4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff00e06-2cf6-4a77-8a42-22acaf1d75f2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1c08c8-055f-47ad-a48e-ca0a46a079cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf94d134-8c3a-426a-8707-9cb152a6b2eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f82e2a-b920-42ab-877c-e7b9d197cc1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "694f4db0-113f-4961-8ed1-f70025e45f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0acc9760-a18e-4e3e-b00a-e256b2891f83",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22fd25b4-2287-4a93-8fff-0ceb8c577296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7015f31a-730b-4702-b568-e37f035d3c60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e093bca2-c368-4a93-999f-41ccae8cae15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d6001e1-5cb6-4c43-b631-1c0b742dbe10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31946ffa-65e1-41f4-b016-a491932999ca",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de855bca-b01a-473c-9923-7ed1059be7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef8c482f-e910-4217-87c7-a204ca0f5de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59841db4-1d9e-4a83-a858-1535ce9a6d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "69714b4b-14b0-4b1a-8fd6-10f51dbda84f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0218ad6e-81fc-456f-8dc3-b58b99667a03",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c45e211-a58c-479c-ae7f-65b16cbcdd40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e60b62ff-29f6-48b7-9e2b-c3bab49c0473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0042a775-a125-4d20-b113-594ae4eb0b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "90246968-1c21-4d1e-9404-2836d2d59872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff30cd19-8b19-4d99-b37d-cd6efd02baba",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb081354-7860-4873-bfd8-1aab2e16d7a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "125e2dff-c6fd-4b6f-9ee1-7fef6f15ad78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7122533d-48e3-4bd7-bed0-85d84388f6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa7aa5b9-2c81-4f07-8924-6fabb7ad0fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79e9f7a-278f-4714-8f4b-1271e320b511",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14226fec-fce4-4db8-8dfd-476d7684af41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f26be49b-53fe-498c-bbfe-d4c80d2af9bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb0caef-12b1-4578-aa8f-3c02fdffe584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e70d25bc-b039-429c-8bdb-70f169e6ef76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47afe462-86b4-4169-945b-ab766cfd9362",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f08126-dbab-4290-8891-e528fd1c710f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65fdc6c-cd76-4eaf-aeec-80ca702114a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f1e319-c2dd-49d2-8131-99bd3848f07d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe75bfb0-70f4-4473-be35-3dea740cb5ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5d7ed4-9f9e-4794-a5c9-77d6e19067ae",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c543ec51-a509-4539-97ae-20aa090ebf56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4f18af0-8825-467e-b20d-b6bc20888bd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ba60a5-531c-4d48-9e89-6e2fef52f2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee7af794-8edc-4f8e-99e3-6351a55bf62d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624c6fe8-b4f7-408a-8394-ac43a7a1574b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb4b9f87-239f-468d-b748-a6755e127481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d250df83-538c-4490-89d1-1e91f9bbb9f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9081aa38-95c2-4455-85cd-9ec5d4f9bafc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6362cf56-766f-40bb-b2a8-40f84f326c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fbd4ec6-213c-4315-9400-b132fe9cc380",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ee4a5a-ac74-40fd-b0e9-c65b6abe10e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a082ba25-c041-459b-8faa-640748c28cdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ffeb392-ce2f-4075-87c3-75f9642e3989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "19189f2d-9bc4-458e-9872-21fe7b86b691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b70e3f4-b776-495b-a54c-1cd65d15cd9c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2e75b3-2525-4bd2-85ad-2237b2f02667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f1d1c24-279d-499b-90e1-f7098f8f2a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2669b42e-0144-4ecc-b203-4413663c90d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0af25666-5fad-41ed-be5d-c9b4a253c492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40db3ae4-7b88-46a3-a7a1-650ca7724aca",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f0f1a98-7faf-40d1-aaed-1ebfe93cd8d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ef6d2b2-1820-459e-a907-a8219a355376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa26fe9-01fe-4136-9c5f-50eb95cd7bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a2f3603a-b611-4a52-b56c-e7a0d877a3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053faf67-85a1-4aed-aa31-4b4092d0ab75",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "387578f5-f30b-4656-900e-590aaf94881d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58314405-8138-480f-8608-ee8b610a6d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "186d194a-39cb-4104-9316-11da9dada124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1b76690-63ed-444c-ab67-8a5ae379d408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e49828b5-fde4-42d9-bb26-e2e7fdd1f81a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2042369f-db63-452c-9244-f647a4c69e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c548f81f-65d0-4260-bd7a-45368c48dbcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e835763-aed9-4c93-ac35-2684c48896a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d95bdedf-a379-4c5a-b408-288d21746c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda943fd-f03b-4b54-b933-9086a7cb3bbc",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47841f4d-ab7b-4cbd-ad3c-4e653e200fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe08488b-1c46-4b19-b89c-8ec55c2e9bf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4ede1b-3e3b-4c18-aa56-a194d6e4564e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "957840ed-4df1-4025-b41a-2c33f4d56c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "731eff84-cc68-4e0a-b139-b2a1af349219",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b0c715-35c7-417d-aa9f-cf82bd797feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c114ba1c-d9ce-4441-bf9d-9ba70b668091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428cd7f9-49ae-483d-8eeb-8b27b152b9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffe5feee-4394-4ec8-bcbe-a23a381b4b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac70b208-32e3-4307-bf43-1d7308a00463",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aeb53de-678d-4d31-9c35-8c90f20605f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4635136b-75ee-4d2e-959b-6645fa44af4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7edcbd86-8111-4a9f-8faf-57879e061a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c56b2ce0-d038-4ad4-a953-a6790caa2fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d38fc2-4da1-491c-beb9-6e617a6c1ef3",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e728c5ff-c47b-47ef-88bc-37d00b944489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d31df6d-ac00-4d10-8a89-014a27fb5db7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1e8d0c-1e04-4195-a74d-ea83b59d498e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5ebec6b5-6e4e-406a-8539-4edf43085825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f128c9e-bc4c-4a76-b432-cab9835665a7",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa45ca2-048c-4347-8bba-ad6858a2c0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25605971-6676-43c5-be42-3748d26a34cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e93b53-40b4-4a77-987f-824f218af2da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6092585c-400c-4be2-a101-7918ed6673dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14572a53-76ff-470f-aba1-dddb749fe8f5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed9ee603-3d4a-479b-b24c-b02965b47316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43185b98-f2e7-44d4-8d3f-0ee7b6239e67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effd923b-7a48-44bd-a69c-6104c8ef5584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c93e50c2-0038-4f6b-bbcf-1925ef72d821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb53bbd-b48c-45e7-bac1-c4c0d0194753",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e5a1ad-f40d-4a98-909d-9bca73fa6800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1579cd56-b820-4215-b4cd-6508cd51ee16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53ef78f-80de-41e3-8806-7e9f1237df90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "abb7fcb6-05ef-4c52-b16c-9082703c9044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7981b9-64db-4def-a761-222800f15611",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "749bcb59-3126-404d-afbd-2f394251184c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f3aa843-69c4-4cf8-afd8-050d3a38dfd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49bd67a-39e0-460b-80e3-f13e33c74f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9fed09d-1a47-47ec-b2b6-30305e38173b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22a63ea-dedb-4cd8-91d9-a948116ce4da",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "869176f5-1a65-4a67-8575-72d648c73bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8e18cdb-4ec4-4c4e-a524-5d7df26c0c42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ae2b11-5005-47c9-91b3-8f4a43916fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6735e1c8-b7b2-47cb-9df4-e5ef2a1ffb8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c66b5e1-95fa-4d76-8aae-f54f3e54eadd",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62894e74-ce34-41de-bdb0-71034f89c016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d9f492-a308-486f-bab9-7b065ede9af7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324af1bf-8cad-4a00-b09b-206449095fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "08752316-978c-41a2-a0ba-7f028e33b5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8834aaed-d5c4-4afa-b337-04602c83a7c7",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "202d762f-7fc8-411b-96c2-20509f6b19ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d151ae7-eced-4873-8944-c7e43b261d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6710bdcf-2fe4-4120-a7a4-471517777fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "54bc3a51-9579-4caa-9788-912c0a5559af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530c4555-8128-4cfb-bae9-d399476c6161",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3023141-0a28-4dfa-b0c0-7876888f1b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99e53c6c-35e5-4c9e-8dbe-026d5a71e372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2266dc9c-573d-4d11-aff5-faf4651ae6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "34b12fd4-611e-48ed-9e32-009ca44e118a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd87da31-9afb-47b0-9ab2-e175954da1b6",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f45e951-17a0-4af1-8382-b311687cafe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2e05a80-bdaf-4634-90b4-554026ec4147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09e1b95-a20d-4bf3-be7a-960e08be6665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57f4d8d6-d8ec-48c1-bf1b-4bd60cc6ed05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd87eee-0e99-4a10-b676-5097d11a36dc",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eae6d28-6900-49d8-ad20-716bbd673fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fe238cf-3385-4870-8541-869a3da35e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f06e44-f01a-49a3-9a03-a85482849a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "271c0f2f-ccc7-485c-8b48-7b742b0c7d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56ac158-baa4-44cc-a465-23ab840816bc",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bad212d-c7ee-4d50-8eb5-673521d7fcca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8585fee-02f3-47c4-b9ac-07f4d3dc2085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0883b27e-7294-497a-819c-cdb006d29c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a5d528e5-9c07-46d1-ab68-c64a0ce1f051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bedbd903-705e-4555-8739-d09b72403ef3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c1f998-f33d-44a9-8c84-b7536765ea96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aee4712-9520-4e48-8741-335faaa171f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "037e3259-efc3-4da9-b590-e8fff94e8f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc26f403-5ae2-4eb8-a532-c35c5a1954ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1d2077-a985-4622-b9da-8bc178bdb81c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9a437f-549e-469c-b3fe-180a81169a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "123246a0-ee05-45ed-8548-5cbe656ac3ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8315338b-5432-44df-b6a5-088aac790648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "26e2a80a-7f3e-4b86-b646-d4fdaf976045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ddd877-6a2a-4ed3-b6fe-61d0a5e918f7",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "723a3f4a-1b0a-44b2-a6f6-8675188149da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52dff955-4f98-473a-be20-78cf3070f3ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c907d011-05fe-4e51-8002-491fd38a5d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "98a09e44-5205-4960-9a01-5708dda6bc56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c9c082-278c-461f-b1ee-05ad4406cc3b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "017f64e9-9528-46aa-a8c6-22a0f79434ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c012314a-131f-42eb-9614-33332cabef0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318f4d9b-16ea-41a0-9f17-5090c440bf81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3565cd29-a06c-43a7-89d9-86de6a03f1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "314e84f1-62b6-4319-b8dd-de864f97e018",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f915a111-bf24-494f-8afb-648cfaa1eabc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4973b395-c77b-4b69-b457-6336ae8a45b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a5cc4c-392a-4705-abf6-d2d5166c7cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c5cdb64-68d2-43b1-9477-361a52c201fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af1b5ea-2af6-44f1-b886-a86bf4c05999",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1484d41c-43ff-4ebf-bcbb-6e1be7c7ac4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "003dce7c-a8d5-4ee5-b756-e6aa16b54821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4172bc-9c93-4c5c-a518-6da569a3b4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cccb5137-d4fc-4016-a806-26b29b3214ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70432a00-7310-47f3-a7b8-0dea78a5964a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d66ae84-e813-4b32-87ea-1d7271857734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b072584e-20ea-499d-8dc4-2885262db432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5286e4ca-f34c-4f88-8883-bd948a810751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e2a51223-1785-42c4-ab63-850f7b9bb2d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6f6c9a-db11-492d-bb79-39a65f504f31",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b634d0d9-58bb-4fb7-afd2-16956f27dbf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4991d1eb-eecf-46ae-89e2-3367c0b24afa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e462f4d-b003-4d6b-adec-cdfed7e076b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b209d809-93b3-4532-ad8a-c615daf38a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b1a37f3-58ed-4b80-8af5-7e56dc2b44db",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "237f458e-adfe-4a1d-bff4-a35ea2030f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4822ad5-ec42-49d1-88b9-55091d0e4d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4255b0b5-b3fa-4e97-b7de-bf4a07c29658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "91c1d0c0-647c-4d75-b143-340c95f8146c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ea9d34-20b5-49a9-bd6a-19df5a8a59d5",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9393918e-eb01-4efa-ab1e-fb3352cea212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "116e99d4-52df-421e-87be-cc86ef7e9862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b29183-8b5e-4483-b3c4-8d089b12f9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "945fcfde-2bc7-444e-9280-32e04a6e6a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48ca264-f0ee-4f60-a425-580d73d2eea5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f97ee60-7a44-4973-8ac0-7753fc648761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59330862-779e-4be6-b441-126606ca3ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5549740a-480f-4c38-b625-caea84f050ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43dfd852-dfa8-4d73-9c76-cb087c2b8a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5d0f3b-b2d8-4c4d-9d8c-9158d51a279b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17cd59ab-7477-4c24-8d39-de5c3c803db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c198420-4d70-4a37-8672-06a4767a00dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ce93fe-e81d-461d-ad20-d47f221a79bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d182e1f7-c943-4a61-8eb3-dfc8a2dafef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d18927b2-ec02-4a4a-b640-34d2089f380c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b69b2e8-d035-48cf-8dda-cf38d1ee81c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5160e02-b56b-4c1f-88eb-5afb2c9b4ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c49590f-c34b-4f23-a2b6-7e8a74a16d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7c5772e7-0733-4518-992b-7db8a7213f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb820d7-10ac-4d32-a96d-0ce356b02d37",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b263d4f1-0c49-4ffa-84d1-475d3bdf94c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4ded9c2-63f0-4cb0-a544-b89ae54650a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07835db6-53bb-481d-9821-a7c2f15b93b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b7ab931-f4a2-4f5a-b620-be6c5aaaaad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1acd70-95f4-4ce2-a147-6a7a7b1c5b83",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10600df2-0d7f-4e89-9928-e0b4c2f5c6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b0f0755-c07c-42cf-bdc9-fdf81fe2b3a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4c8dd5-1981-4699-8333-b44d33544464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f1bdcda-97c9-43c3-9689-9f0838ba6d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f257e1c2-bd06-47a1-bce3-95e0166e6a93",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "663d4ffe-8e54-44d5-908e-57791ec9e933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a51497c4-3833-447d-a76f-e173e4855329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85cc97e9-b691-4ea2-b81f-f5e535c365fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "87ae82ee-9f42-4eab-98f1-5a6485f41a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f63594-e9cd-430c-85ea-a5ce4eb4c243",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf2fcd5-03e5-4b2b-8b84-111883a6e5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232f4c51-2a9b-42b2-a0f6-3555f12cd9d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2ec9e8-92d9-4fdd-ae2c-372ed6644105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "55945af7-e803-48bc-ba7e-abe473c1a5d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad19416-2b3a-486b-9291-133d3d2094fc",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d1634c-214f-497f-b24a-3b53047e82e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "979322c5-9976-48d7-ae5a-d115614a2888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1746d59e-ca18-425e-b508-b3a9661353ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b22a60c5-5616-4631-b65c-33dd7b697b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09124586-6942-4a35-ba98-b8511af789d8",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b241e7-5171-416b-aac7-1a9e7daad3d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de931cd0-d051-49ea-89c9-8a72f5b3324d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df97540a-3a2f-44e1-9c8d-311bcb584ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "26d55fda-e66c-4ab3-8e77-b163123647eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1306656f-e609-4eac-95d3-234e0147d74c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ac5702-7579-4415-bee5-75b5b1fdd371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cadb86e-2974-4709-8543-8eac7affb9ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14730c2a-1ae3-4f6e-9a9f-868b1ad00cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e6c7fac-06aa-40de-878f-3d39ae43c5c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18f27c0-2d9e-48f8-a330-881714757d79",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6c240f-96e3-479a-8a4e-b678325b9a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8717eba-e090-48df-a37e-bb2a0c5d1cd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48b9830-fb15-47d4-82c0-ebdfd4eaceaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "84c19c15-652b-4ccd-87c6-bd19316a999d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09c942c-830c-48c2-975d-400c08292cad",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bcdc722-7b9c-4a60-8606-ec18dc94933f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da1828b-b8ca-41fe-8eb7-420df1175460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857e30c2-4df1-4f82-b925-37108ce16a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "aae45300-ece4-4c91-a363-5a6c9406b115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "969c7c69-e4fd-41de-ab59-7ce4e106e106",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ad9185-38db-4ae4-8c0e-84fea9d2e71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7007717-b75f-4e1c-bcf9-73064be955d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c4705e9-e756-4633-9fdb-d7204075012e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "00025bb8-c901-44f2-90fe-d91cd7970dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa78faa7-e842-4c56-8b3e-7b7817022a1b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d733e5ba-5ce0-48e4-b7bc-1d152cf75265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c06b7e9-a87a-4b47-b4dc-244b9a1b3901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc51b43-96db-4b8e-9ae5-1f213355c35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bec47dd-90ea-4518-a09a-3d5c49ed9b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8948c95b-dbeb-4771-bad4-0fcf7cd50aed",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a95d88-939e-4bf7-8261-a96ab1e871a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7bd5f0c8-da41-478b-a837-6438aca0cd28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5ac5f3-f895-4ca0-9d44-dcb81e1b4bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "75e57f9c-4999-40f1-aa62-98a5b21909ec"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "933d9222-7731-4c42-b0b4-3c52be62ae03",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4d91f92f-e382-44a7-9d1d-b68448eef496",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c342a039-5001-4bfb-a7a9-3b80d86f3964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4fea106a-0dcd-48ba-97b3-23a4ff2bce2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2823fc-aa90-482c-9d20-e6cd651f1c64",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c1c1ef1-21dc-4058-aa3e-ac268b3582f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22af457f-8966-4d18-926e-a351940c238c",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "479d3714-f6b8-4c6d-be4d-790cd6afc88e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "989206fd-bd21-4c67-99be-0939f64aa688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d13437-e152-4355-baaf-825888150ab5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e0709af-74e1-43da-82d4-287c8d677960"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24b3efde-2de4-422b-b702-2a8dcedc4102",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca80d8d5-e9b0-4551-ae66-7c0a6a36d8cc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "38d50354-46b4-47c5-9c07-e608f9afc804",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5fdb9786-3418-41a8-a961-4deef9ca0b36"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8dfd68ee-9f57-492d-8226-2445d83d7a4a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "64be1a91-4431-40b7-9456-a7f33e7df3f5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "04501a6c-1cf6-4854-86f9-d623ed918185",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aea1ca90-9bb0-4664-901c-6bea7d9d4df9"
                }
              }
            ]
          },
          {
            "id": "6024355d-b857-4e2a-9a68-98b19500af00",
            "name": "Positive Testing",
            "item": [
              {
                "id": "224aa456-50e1-4fc3-8cfe-24f01d8f9318",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "73f1edb5-218f-4180-832c-c80c147f62d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f5840416-7a8d-44a8-bb04-702d795e0626"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75492612-0c93-409a-a566-0ef7ea32bfe5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "203cfb14-1d50-4fa3-b9a7-c03828acb86d"
                    }
                  }
                ]
              },
              {
                "id": "21dce02a-6938-4ff9-97d3-4455d5f32f29",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa3f8783-4bdf-4e69-9b91-4801ae857dff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3dad107f-ffd8-4076-aca8-93c3627f9470"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3655826-74aa-4642-aebc-dfc03a9e8134",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5238df06-0534-4289-a0e3-001370ad48ae"
                    }
                  }
                ]
              },
              {
                "id": "cb6bf115-b1b2-47a7-a1b9-dfd9f230505e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6ff002f-1223-4f00-a23e-ae262208bc59",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9e788606-400e-44c8-b8aa-0f83b2352a0a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52b96802-8ad8-4200-a5cc-7fc7ef37583a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "74eaa7f8-4e3d-447f-8ef6-7de589ada656"
                    }
                  }
                ]
              },
              {
                "id": "0781e391-078f-4a4f-be4d-3eff375c3223",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fd878de-7f50-4cfb-84b8-e772e8902b4d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5f48f4fa-4013-4049-b4b9-57ad38e98171"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b94ebe90-8f46-4928-843b-260f04937eeb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "56e75c01-46d6-4864-985a-9dfae0a7db54"
                    }
                  }
                ]
              },
              {
                "id": "2f55d57c-45a3-4525-8ba4-f490bd5c5a65",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2465b3c-43dd-48e2-aa74-6847e39d65a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7da4a717-81a1-41f7-a15f-e3160b2da850"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a4571bc-70f5-4280-8960-11aeef47cd80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5ba3a21e-8b5c-4f69-97ff-a49851ff5b2e"
                    }
                  }
                ]
              },
              {
                "id": "994e68ca-fff5-48a9-8fc4-89a1a4c031b1",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f4f10a1-fec3-4001-80f2-d447f45cfe39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bf59712f-52fc-43d8-8329-b300020c3189"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a75385c-68b1-410b-8c9c-d2383f10d283",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0318dcd9-ce0c-4170-95b4-364edc013bf4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "97ce4f88-99b4-4837-ba74-a9cb8a1a712e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f5a065c8-4451-466d-a8a2-9e90856f86cc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "46fb4b42-d7c2-41cf-acd5-e8b478e8bbca",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "910b268b-43af-47d8-9a3b-289649aa8243"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1385e57a-70fe-48ea-a3c0-dc81188ca220",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "931cb549-a1eb-49e2-8487-eebfe6535a52"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "091f6c51-7034-412d-bb58-a817f1c054eb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "712bf1f0-bb17-4ce3-ab20-bd12e6fa1286"
            }
          }
        ]
      },
      {
        "id": "6be2a8af-3302-41af-b186-b0f26694da25",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7aff52fe-2dd8-44e8-993a-5081b59a4df4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0b205ead-faed-4a45-ada3-2ba83d88d3e8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3a353841-085f-48c8-ac01-59f438964b83",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11c660c-fe37-453c-bd32-88a22b9fc0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c53f0cd7-6aef-499d-a1d2-85814d12d72f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165e2693-38a7-496a-9354-0d1027d3c2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "556f4146-bb8a-48ff-bf7a-c5500dcabb24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5987c439-7c97-41a4-aa2a-3a6a8d400252",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0bb55ae-720a-49c7-a1e3-02252d9a9f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdceda95-ed1e-4319-b52e-6ffda4592b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37211a93-3b98-483f-b99c-d38d8ed781b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e48d5508-0b91-4eb4-a199-52040dedf292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6fdc84c-6432-4226-91ad-f20f4c541b6a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c4d991-19aa-44d5-9e27-b4f14ccff8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "207120a6-3e62-461b-88ba-884eb6455030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f37d50-62c8-4987-b38e-3fed10210cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f82641e1-729f-4301-8ed5-6155667cc581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4848466b-5364-4ffe-a11b-cc97f473d5db",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a80074-9182-47f9-9323-c5e4697e92d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b1fbe50-5006-4d86-90f0-342385c0902f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96444c4a-7794-4527-8f58-5a729448f6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "40eacfe8-9bd1-4bf9-a849-506d5b25dec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b51128c-4fb1-4e39-9fbd-785c44f37f6e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d41304-1ccb-4fa4-ac2a-60fe4379931e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa5899fb-4d44-418d-9077-0c98253a7369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "512bd0a5-0201-4180-bb73-47d43d5d7c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d9d0a6-26db-4712-a0f4-ed28b0e4cf7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90577cd-0e66-47a9-be0a-742935715886",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcfc9ad9-62a7-4d80-a652-a0da94003aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49a84a02-2da7-4512-8a66-3478dcfdf748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce9679a-c5f3-4080-baa1-c59b2ce97646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "971ec889-6826-4853-b5b0-6a39cced1e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc05952f-4e71-4c5e-bd28-afdd2db6f70a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e711b24-df05-48eb-87eb-1c0f1ed94ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68206de2-6d2e-4d66-9f65-a025051ac375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c29ef8-f992-4b07-a23a-dd1f6cfbaa79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "76aa2062-95cf-484d-a5a3-c27e53e240f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a4921b-5e96-4543-8a90-00647c92f4dc",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e584db05-86c5-4c0f-9fff-f69afed43ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e1adbf-25b1-42d9-bfa5-61ae2d6c16c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f964ad5a-a114-4b9a-a8d9-1e5323529e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa9cb192-1c7e-4c32-b2b5-751746b0c62d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc47988-34df-4478-a7b0-dab44f888cee",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3a21ed-f313-4c44-9c51-777a24f2dce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33936590-a13a-4319-b5b2-98c60fe5f190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76068f98-758d-48c0-8e90-c24f6c687ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2797974d-347e-446b-86c5-209dbe09eff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6717539b-99c7-4d16-8892-7b0ad83fbf35",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7032c17f-616b-4549-92ad-53083dbb07e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2250cce4-5844-4c7f-a861-329c27dc6094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb9ba08-e10c-4a85-abc8-f05b0b135172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f18c21a8-11f8-4896-9670-d62972f84fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8549d24f-3a1b-4255-9596-8df002013c34",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "539828d8-533c-455b-900f-545fbfe49826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "294bb417-d3d2-49c7-be99-82c813db5692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae952dfb-6ab4-41e3-9552-eaa367c13aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "39d5c0d0-ee1f-427e-ab32-6e0c8a07330c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229b812b-3fe7-4fe7-be17-58b72705db25",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d543e7-8fde-4b67-bb32-3082f471456a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4c4426b-40fe-4cfc-90ce-19123add65ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2960146-1035-4831-a488-52a6d34c3501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "41ac7f6a-5f1e-4ae3-9543-2714c24d1067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f27873e-e244-4d84-bebf-b94454e00256",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec559f4-8a1a-4663-857d-4cc87cc265dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d264597-41ae-4019-bce7-0c2e2dd557d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52c50d8-87e7-40cb-a287-117c1090a307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "68617e02-1591-46a4-add6-8681adaac103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86fa0212-1e8d-4203-83d5-7c65520e2fda",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b16ca71-b317-4045-9a20-4f8c6be0548e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8798ecb1-c421-4985-9c0f-32422c3dd852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "106baa8b-6706-4f9b-9583-dad7725e1842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2188a4e9-d1ce-4c30-a910-7449d7e551f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a1d2c2-0a02-452c-8cc2-2161f2acb510",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0563e237-dc70-4502-a1ec-53ae87fdb066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75fccc0b-5298-4c36-a71a-aa6857b8cabe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f91f3a-9a74-4d99-aef3-f2ee6882ad6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "58032a1f-8b4d-4a4a-bfbf-e4c9e845bc14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d86cfe-c9a7-4db8-aa55-e12a3fbfb199",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d5567a-2888-430c-8e87-416e0c8b4d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9614563-b2a7-4339-8380-acd8750c6cfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a16eb12-b531-4d22-b6b7-f9285dac0529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f843cc51-efba-427a-acd5-d2946550f818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c5c611-cb89-471c-9ea6-ffd9407416f7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de8fb8e-5434-4d97-94e3-3c32da95d676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28266452-7760-4fb7-a28e-3c3c6af8a890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54a3531-0e27-4437-a3c1-03b5bdda053a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c3ae25b-441d-4d69-8f22-a63cacf75de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d971e44e-f54f-4a5f-a543-2b81f59d6f72",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72bc0f6a-c257-40f1-9392-6d53ee7c3986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9234eaa4-0078-4b2b-9bc8-b53afb8b6944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30eb9e42-abf9-4320-baf2-09b9227be106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ebb178c-f606-49d8-bc4b-0d998e78eedc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fcce625-83c8-4c50-a9de-07300ed9a4cf",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bccdefd-f95f-45d2-acc2-0dbd01c7be59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f647d29-6662-4ca1-ba08-cb717bc8ace8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64cd79aa-f4ea-4538-900f-be5018e1b6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d42d359d-7a1a-416e-84b1-c5087535528a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052b69d9-7897-421b-b19a-f0cba07ae9e0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0826e778-5cb3-4f17-8ba1-42b600f60cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cfbe66d-e567-4e4e-bae9-0a654219739a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80873f91-6b2d-43b5-b78d-905594da0582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd7708d6-bae2-4cb5-8d15-37a77d31a386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e432b88-0771-47d0-8f05-d72b715656db",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c491e8-ee92-4328-bad2-1372d2ca6c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd6664b5-4ab4-405f-8618-191827c7f9e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f27b76-14c7-47cb-ae9a-a0f5a1e8e6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "adeefdaa-0020-4e19-8759-3ddf38bf1f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b22643e-77eb-4e82-91f9-a1d90b7ac2e0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03838de4-b1e0-4952-9316-645f8a3dd4f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccc9a886-1875-490e-85b5-49260260665b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2163206-f061-4674-a3b0-04667ec1e862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aaa8c2de-1b89-4f7d-9315-71aa048c78c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247cce34-d068-4a2c-b25e-0eeb4631c908",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f730596-96f6-4397-942a-89266f8723e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32803412-5862-4772-8c5a-aea8ec41ad34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab0c17c-0ac1-499a-a931-56be29ebed8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d3e06e0-c741-41d2-83b0-a007618f0093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69000de6-81c0-4f79-9e2c-5ed546990d0e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd9b05d-30c4-4e3e-a31c-fdac897eec81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9d40126-3f12-46cd-ac28-8178f2493638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f54c712-34a0-4db8-8998-ed6465c14240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8665532-e31d-4215-9064-53cb61536dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31f1826-d8aa-45ff-8d5e-0afd898150f8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55950e31-1595-44e7-9060-42f50aa9d384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc52cfa9-952f-4c03-a407-164355596d90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9627245b-9b7f-4ff1-9201-85ef59b25a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b90a40f3-3cc4-4936-9a89-494a597baf89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed5c303-b433-49e4-bc1f-5de3f514b259",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e2ae7ac-cb6c-49bb-874a-9bd0c55ccd49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2993acd-e0b5-4617-9349-5d878f023eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc98a299-a71f-4f45-9e19-999934641dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8617d4e-fa6b-46e4-8dd6-c0e56cc9113b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33269893-5eae-427e-afe1-1fae089893ab",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3912a8f1-187e-4d5c-8f47-fe7e31cf6795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "185b9710-d317-4c7f-b72b-4653ce1649ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f782b3-409b-441b-ad67-786c721677f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28e4651c-8b93-40cc-bea8-d03bfd55ce6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe9ee6c-fa62-4673-b74d-3ba9a755c69b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8239ae5c-16e2-48e7-ad1c-f89c7a7b4f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b7bc0b3-9b6e-4dc5-add8-8a58841f4aa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388599d8-7c05-470a-9b19-a8e7bdb4d3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6870998c-acab-4ce3-860e-4f2c571f3ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2477e68e-839c-4274-996d-3dd642477dd9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac4663a-62a6-4be5-8864-7fa852d1e58e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c722ba-2049-4141-bc2a-b39e1b7220fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529b1585-a0f4-4183-b77b-09c63386ddfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6920fe6-634a-4bb7-ba79-1961a23ed86a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737c5b63-cf0a-4700-8a9a-3c816c44a045",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d739a00-cdca-414d-a8df-11c428a678b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cddd1198-765c-484c-80c3-72e88f7f3538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dce060f-bbde-4cb1-9486-3912a5186d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4131c0d5-dbbb-40d5-b93e-44ee1e4c548a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea8f04c-12b4-4b11-9c37-99311ac28bc6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73261f89-f0d5-447d-aec7-a6f10f3453a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc9df0f-2a69-48c9-b0bc-b0aebfa0a58c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f570a982-2872-4e5a-9d4e-097d3a31e521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0b36d61-0c58-4fd5-ab8c-32566ff5ff97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f969a3da-945d-452e-83f1-feaf93bc7237",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1bcf2d9-c4f5-4db8-b4e1-491ad804af88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14a72019-97c5-4176-bb5f-458df7d9e987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60afcdeb-233a-4e2a-8dfa-6cccdbd5194d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e286f9a1-51e3-4e73-b68f-8472e4d8fd1f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "12b0adac-85ea-4dbd-bd9b-95175f49ab74",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a0b74823-ae33-4c4c-880e-71e4039c1467",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad1644c-78a8-4b46-8fa4-9193a0761a7b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fcbcef88-ff6c-45fc-a924-b480a3eb786a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b6d8abf-9ebc-4efc-91b2-7f31c3312d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c71c81d-6974-4eb9-8ff8-04c6c5da9f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b60e2b86-f874-4cdf-a796-2412a3e7cc07",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0540a7fd-e56f-453a-884c-cca949daab25",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6efa69c6-da37-4ea4-90f2-175bc2cf39d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01e5818-009c-4ffe-b2ac-8b9c7bcaaf1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e5c7b864-8c40-4317-8022-aa57490438dd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "082cce38-a361-4c10-8618-c23173d105af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa4726d3-5659-4312-8ee8-2fb7cd4ff96d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cbc7cab4-0420-41bb-85ed-877635291efa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23ca4f67-2821-46a4-9154-5842dcf094e5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e41d6b7-96a7-48ff-8c2d-4010a3e811d9",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0abb1b7f-e9bc-4056-a472-1fa5e7a81982"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6d1fc43e-ddab-4447-b2bb-6af042627712",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8cac6534-7da1-4a05-9567-72b33acee3ed"
            }
          }
        ]
      },
      {
        "id": "81dc8805-edc6-49e8-9a11-18e850645ffc",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9cb8453b-d795-4caf-9624-38cc756e0b88",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f4d9aa72-fa17-48b0-ba90-e080c006122c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "42303bcc-b495-4139-b2b7-6683c511ff2a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c84736-7c51-40f6-ad9d-bfc4b0a95645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9adfe1b-1a22-46a7-b658-71e794200a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951ee3d0-52af-4cf5-a21e-e41db50e061f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "496f4090-6deb-42c5-b823-779841181eac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba3e23ce-9254-4d65-ae90-e5d79c9bee52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb5dbad-1923-43a3-9136-c4377a33a77e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c58a5bf-d3ff-453f-972b-cea4fabe20c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff4c3196-0a83-4dff-b372-d662a51b83e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd10a508-dd90-4cdc-a0ee-61379fb3c14c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141c6ff3-7a45-405a-9518-e6125ee1ccf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a725583b-729b-40de-bbf2-45dafaa8a7e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "134c7a3b-9903-4d49-88cb-58ef3e2b43e5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17328685-ae58-4db3-9891-88a739cbeac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac3c8e51-5092-4226-878a-a4a2c73e26aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508cedd4-9eab-4b73-bef4-40385b93630b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c21420-9c0d-4baf-ab0d-af3b836941ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "757a1562-4ae6-49d7-81f0-b32fc5a5c858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28bd84b-730b-4d9f-acb6-a1487cce726e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55a2205-8aca-46b1-b05d-20c552f8f0db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2bdce4e-915a-449c-a6ad-50301875f2d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc340e88-b1ed-4f32-bc3f-f66b97d59655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "370aecea-3ece-4a7e-85fc-a5fd91ff803c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae95e88-4de2-40de-a841-0edd91cf442d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d7fbec-dd53-42fe-b0b8-aff0d1aaa2b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8fb5acb-a83d-4d43-b505-56f52e419bd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e911d4-1cfc-4ec2-8066-e7997fb4ae5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5f58494-20f9-4440-8ecd-67e7214d57ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0d79ae-4dfc-42c5-af5a-21f30d49e984",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9c70a0-df33-46b9-a778-b1ff687a9a79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4371c889-ee75-4a90-9a6c-84c2f086c10d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ba129b-9e4d-47c4-a2e4-a1ec0ee79e11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "587cc29e-307b-49e7-aab4-b3e83f79ebba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e76e517-0f4d-440f-a2e5-6f50e60317e0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee5e3e8-59f5-496b-ad03-3467239fbe08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95f885f3-a211-4b1f-968e-9dc4bd6a7e93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "958da944-3735-48ad-9850-b2f3bd5fba68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66901c66-852f-40b6-bb5f-7e3fc7646fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b029cc20-b970-4c36-ac85-cfcff6eb47e2",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c01693-44f7-463b-a3b1-a181ffd501fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9e3ef40-57cf-4af6-8eea-6a713f96d099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f87c4dc-8433-430c-b6b7-f13333382f89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bafc8be-52b2-4629-b198-a73fab78c28e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12987b4a-e10c-4aea-a184-52f732581a80",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd8a632-003d-44e3-a92b-835ecaebe959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e366c13c-267b-40ed-bd10-6bfb8e01a70e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e303f40-bdbc-43d1-8390-1faa9df968cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7435c746-cea8-48dd-904d-8cc6d936c7e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "718739e1-7a3e-4a75-b5fc-ba60b26268a4",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af39ac7d-b7ea-4d14-9e47-7c35902dbfe4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8eec7397-1ffb-4f74-bf18-06c4e205f561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0166d75d-4d31-4b7f-ad71-93c1bc4965f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dbc6524-8aae-4725-9c72-bece3158c495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e9d4d7b-3003-4734-8def-2854b9cb8eb6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd4beca-b791-4548-a0da-458a98c01832",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fa821e9-9373-450d-8f02-d11b821feb72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20bc03a-70a5-4ab2-b102-dd8d191d016e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e164638-c261-46c9-9ad3-e256361a8929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9863e95-78bf-45c2-bed3-e936a4e104be",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9054810c-e89d-4d57-9c14-5776d166d6e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e032d98-2ada-4993-aaa1-df56e988e340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcff0f26-afda-4659-b2c7-1cbf499f6e4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d29b061f-dc4e-497f-9e32-04ba8e8fd657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c39bbe-4960-4b5a-b20f-ef2e478c807d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e89e01-c560-4b4e-b3ff-3c1293d61320",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60b5007d-3300-4399-bfe7-b07086bc174f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07cc4958-52f2-42d0-80de-3960180fc440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58aea043-1498-4eb5-a49c-91fc37679108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7363ac-db13-4138-b7b8-57405121d48f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503e2569-a7b3-493e-b7f2-c27f492842e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be99c69f-3b7f-4b60-b9a3-e516d57b452e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb113d0-9eee-4d87-9bde-c7d5be6318de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb20dca-0255-4401-888a-0770c112db7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81363671-d302-403c-9287-030653fb2248",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f90fba5-097d-4bb9-ac0e-ca2edff2099f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3711ecb5-2daa-473c-b59c-32e3873e5197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30051e50-f9ba-46c4-b548-4a20bf441639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fc72c52-8a74-4aae-ae01-47c8283f6b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d86a91-98b0-47e6-a505-3d7e3338aad9",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f40e5af4-da17-4e9f-b186-6b8d48f395f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d02730c-2f0d-4625-8c95-503a7477e157"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68674a42-6c41-4814-afba-afacb43bbaee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba902911-0450-49c1-8cb7-ada6ebf97ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5f751d-970a-41ad-b534-750a781a0c57",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08cc9394-405e-4bdc-9093-169347239c2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e44cbadd-d39d-4463-a991-2e64f3991e56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf46cdbb-e13e-47e7-879a-ad0162b54dc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6f25558-b8b9-4b4d-968a-8cd17c0e5703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6ae5e5-5948-4d08-bb19-cb9468c30fb5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b08362d-e9a8-4d22-b071-fcac8df5b267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44613871-769f-4a77-a046-bad81fc63a04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2ec958-d9b8-40a8-bf5c-978ecf0c24be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73fe706a-3a3e-485a-ac2a-3e57c8eee27b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1dc868-606d-4964-a587-511f7d5ccd18",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7137cb-0e7a-44d3-80f6-94c8d9cfb837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c322a165-4e7e-4076-9ca5-72880040308b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "380b6581-4c74-4249-a4fe-185c8a45011a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09d500cd-866b-4769-8e6e-2df82f873da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5be4b4-196c-4272-a3c3-0186a4c93713",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f31ffb-3f49-4d18-b274-2bb1e4f7e01d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ea6cc5d-1593-4005-b2a4-835067bf62a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b95ac7-819f-48eb-8a5f-1020177e760a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9613d8bc-2eee-457b-b918-31c4a42539b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c85665-6717-421c-bb55-d78dde792f9f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1542c1ba-e318-4f24-b3d3-4cf3b5dce104",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0d1f585-57a4-4083-9deb-6158fbed815a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb414c1-d9e8-4295-bf21-6b08b060da50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52f92d86-e578-4fb6-9da7-a8fe7f0d5c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a636b4b-3f91-4548-8880-ad48c5c78c4f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b592426-5b0b-4c13-b4f6-0e7157a73c54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab20d0d2-cc42-4a0f-b1fe-e2565107243a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "661957ef-eddd-4f23-a101-aa180385cb6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "879c037c-cfbb-466d-aeca-30c2860adae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80038140-3ec2-4f06-bbf3-e22eea197fe8",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8cc07c1-adfb-49f0-bf6f-4732aab0e082",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efa824ce-a6dc-4c54-b213-716abae93c63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e40f84-1cb7-46c0-b45d-a1a964a97425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43f3c7ce-5364-449a-b1f4-be918cc4e9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba388c2d-524a-41e5-bb38-56df176a2bc8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71bfec2-1f95-4743-92c8-809f31c39ed8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adc8992c-5ff9-4b4b-b51c-97b9c06ae04d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3868b3ad-5d5e-41f3-a8ab-b973e49d9ba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15f80cca-82f1-4c7b-9bb1-98c1526efd10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383dc523-8546-48e9-b5e2-5947d8b58a1f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75606855-f448-4fb4-9f86-f1d5ddb683b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7fe2741-2c7a-4092-848f-82fece41dc57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "610e2338-598c-4254-a7af-05330b8fbd6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5f4960e-2685-4af4-aab5-61f1a6b0a7c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23bcf7a7-3c70-427e-be3d-07dfbfbc0e7b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0b9f62-971a-474e-8714-c34f86dbf530",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1995c7d7-bd99-496a-81e9-554a87a9d07f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5986713-5921-43ea-9922-c9aa2b5148b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1147e46-5f5e-4d81-bb02-dbc29c48f88a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9946d09-60d1-4e6e-8a6c-2dea5728eeda",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161ac6e7-bbc2-47d0-b422-c25f17c6bee5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f804ec5b-e653-403b-97b9-07645763e263"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "151e9e87-95cf-4102-87b9-e597f592cc52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2f27ba0-430c-4fe7-91cd-d230069981cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2712044e-aaba-445a-9890-b0caa4e07957",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38a76fa-afc7-4516-a8fd-a428870882f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ff33e7b-4df0-4abd-9a14-6e6a4edeec73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "774c70a5-911d-44f5-aa17-9a4a54649744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca724c2e-c118-4f03-bbf2-50198c1500ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd9b036f-7deb-49f3-a75f-fcd7ef2a912e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6812b405-33b5-4e4c-9af2-fdb9b5b61bdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3427b0dc-64e4-434d-85ca-59eda70399fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9ba473-8363-46ce-98a5-89dfd0197f22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "626da52c-5083-4e2f-b75c-ef92d24e4191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "485fc977-8f8d-411e-85cb-1bf229bfbcfc",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1582cd5f-30dd-47a8-af54-32288bae77f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00293656-394a-4db8-96f5-b5eb4ee1fbb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "533ac91f-1184-47d5-876b-255eaf13b88f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b06851bd-f53a-4689-9250-5d6053267507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d446bdc3-632e-4766-b17b-392d38a12edb",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d202edf-2ba5-452a-bdcc-bb5c9b654aa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa64fb22-7545-46eb-981e-7560ed9ae247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "920991bb-027a-4ad7-8bf7-f9ba8cb5ded4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b719f837-1fa3-43b5-b2fc-ca8faacde333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64040219-9e77-4668-8217-673b524039da",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e349b232-edd7-4876-9a70-7a3bdd4142a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "850666b4-633f-4c36-b025-16191862a7e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1b156a-f3df-40e5-9a20-0dad9021ecdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0cfc3a7-0752-488c-8e3a-dd0237ce3f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661aec79-189e-4490-be20-cc3e1f40480a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c6fd6a-eea3-40a8-a125-07e711061c8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76b842f7-c58b-4f43-afdc-3d1a3f76c871"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "298e5216-0a54-4213-8734-edccec89229b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba828ddc-436e-4191-8772-48f10214a817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6aae1ad-b0cb-4de5-8d2b-2e265a262e2f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0ac882-2122-40a1-bd03-eef75cdd08f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89dcf32c-2da8-4aa1-adde-b43f12c2c25e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76385a3b-04ee-41b8-9dd5-ffda2af5b743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "485201c5-35a3-4d7e-b9ec-f265da0aaf10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d83e54-81f0-4402-803a-46ba6fb5ccf3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5332f8-ef7b-4c75-8a67-104d88f0d717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40fb11dd-1c18-45ae-8d94-e9978ece153f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3beea613-e23b-4d83-8300-ed0e568065c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afe95bbd-e64d-48e6-a9ce-c5670aa79861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e2ef33-9951-4d2e-be06-1b21af166076",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ecae3a-bb16-4378-97d1-91b147e61d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dba5ed7-d3dc-41a4-995c-56b3514f2626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80dfaf36-1d35-47d1-a30e-75f4fa899818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a33fecf-0c0e-4bd1-9ed4-96f3c08cc937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded12409-284d-4948-9cfa-1e37696159f1",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3562e38-017e-493a-b911-8bc2cb4f6b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4396f91-8dda-421b-9ab7-aeb1a96f630d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3739204-907b-4841-8be7-fb41c874c6de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1758f95d-9b9f-4556-b78d-d780e29f1868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301bc1f7-f65b-4e1b-abd8-2bb02e0d53b9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c12b423-9163-4553-b247-82ab167e050e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7789bfc1-1061-4c80-a476-ebce64b781f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04974170-494a-46d4-a2ab-1bc0d6656908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26b1541d-dd3f-4c53-bf55-dd40ad56bca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af2d919-f571-46d3-85f7-27802e425c4a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f78733-3c44-4d50-ad3f-391199b2fa9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f201a4ac-080b-4b4f-9208-a1eb6ef92928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdeac89b-f25b-4e1c-b795-2a2b2c97e966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f4dbff2-a068-43d2-b42a-4dc55d2224e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ba7417-8507-47b7-9935-47063dd8b192",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0960ffd7-b744-4ee8-ac63-0ef2510bd168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "148793f8-f50b-46df-860e-466a314effbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a1314c-0972-461b-bef9-d9c540864df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "613555d7-df9b-4177-9506-f2aaa9f73586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08029bb-b1ae-4087-835e-ef32cae66571",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb52cff-6b66-4417-8e2b-4bab66066614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81e57812-ca2e-4519-82f0-c990a1a3b740"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9aae90-decd-403b-bd9d-b6c160b86b11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e9f363c-5e9f-4b60-92fa-6dd6865edcd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e309a5f-5fe2-4882-8ed9-47708a81d22f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62c828e-d055-49ba-9797-1600cb743e9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f23712a-74b8-4952-87bd-6fffce52191b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d1ee2b-a93b-4825-aec3-0f291a98a501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a20397da-35a0-42a9-8142-90af12b261d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9975c886-910c-4ab7-a173-ce3120963ce0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a5ee21-41cc-406a-b65f-bc62a7d0ed94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "109e33f7-3d22-4d00-a13f-7754e12c11ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a51361-e256-4273-8823-e288bd61149a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f87d361f-32b4-437a-9e32-e37c10bd1363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cbb327a-4cf4-40f8-ac35-0a5acd380bb8",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0972a97-342d-4129-8924-a11bf71c8e1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14307cf2-30e6-4643-933d-981bc5cdbafa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1141a10a-cfc0-4e4c-8310-16a4404b0d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "481a94d7-6895-4f46-9f02-e5ed9ed10aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce52be6-6c87-48da-b2f4-c64d1b609616",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9181ac-b091-4f25-a95c-4a3e62e89e6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c74d82-0a3f-47af-a5c5-2aa709d78f28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "689b2f5f-108b-4733-bcfc-17627bcbc4a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9d5866d-b901-4a4f-8327-4f4419f110f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d46f27-913a-481c-afaa-0aaa00cdf1e2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe61646-551b-454a-b6c1-2b0d3c1c5ca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e0d4ec5-b0bd-4534-9909-42c0f8e673da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1a8d83-b562-443c-81b2-c128351f7e59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "004aaa24-39c5-47da-9a02-9bc50cc0ca29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3eb180-15ba-4f08-aaa3-d91e1f7cbbd2",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7dd0676-26fb-49c8-aed9-0c8ca932ecbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2063699-5a34-4529-aca0-5ac192633989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "646d78e7-ff4e-44c4-887e-5b2ee1304be1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4f30482-b9db-474a-9f3c-a540b8102e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05aba2ee-70b5-4e73-8843-45809023f062",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3772014b-dd37-443e-b2d7-8ee33b096c58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3183ea07-c28e-43a1-8ec9-17c1716f0105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c3dc24-f650-442c-b6ba-34d177c51d87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25697867-2903-40b1-8434-5a3a7ae1de9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c666c38-4947-4997-8e0b-557edf19a827",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a691ad54-77c2-402a-a635-28e3e763a47a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cec1418-e2cd-4c8f-8390-e13d1524f612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17afddd0-7afd-44ca-8a20-bc328c953a06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13a4d068-2225-4773-a0ac-acc4791fae36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e646d517-b898-4ff5-ba00-4453278003ff",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ccea65-dca3-49ee-a9a7-4530a808b1b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa04e6ec-916d-4523-b6f2-dca662cc741c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "686a93ef-3211-46d8-a85d-2e3e96dead26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f5c14c2-7f36-42fc-bad7-dd96daba3b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69de6d1-760b-4e4f-91fa-4d81407b0b4e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6726a4eb-f867-4cd1-bd7f-a163269e6ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff64687c-e776-43d6-a628-4358be067406"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1b4122-f51e-4ccb-b786-859238253394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca9014ae-e027-4bcc-bdd5-0e7ebb2dae92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9f9a8f-07da-48f3-89cb-1abd43ae5e6d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b54212-7bc4-499f-902a-724831806d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0a526e3-9703-40b1-9fcc-b4f9fa32b0b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabf74b2-c7aa-43c6-b336-4e400270214f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2437cf71-c3f5-4a3c-87a9-c3342b16db06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3ff14d-3473-4497-bc0c-288465d8f28d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3487faef-7b5e-462c-88a6-9377ac705f22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b35085c4-33ba-40dc-af87-7e6c9ee0b44e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c348e8cf-5584-4d5f-ad01-45f9939e82d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "940fb61c-3bf7-4fae-b9fa-ea77c597908c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78bec941-c5ad-4168-b290-0741e21e1a8a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3ee4dd-e5d6-48a2-9550-f244b312efb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d1ff41c-0907-45d0-ac52-ae99bb98da54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4eaca0e-aa1a-40b2-9c26-b0a4b75f357c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7aba4b4-8d44-429c-9a17-5991bd1a9b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f4fff4-5ef7-4ab6-9971-5440470df089",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e79a373-c807-4f46-8fe0-4e884a773b2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d43183a6-1f74-4159-bb95-9c308ec2d7d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4690ba-bbf8-48cb-97b6-616f4aae31e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ece325-5b88-4498-8c76-9074b525ec75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c70a3e-4c62-4cf0-8b66-23bd5d1d5a8e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9bda157-63f3-4b0b-9851-fe2f74284f2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eeea6fb-8beb-4dd5-92fd-27d89560abc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d80933-bf78-4e95-8666-8063f43639df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5988f735-c809-4f93-ab83-5859a0258fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d35c19-fd9a-41b2-ab13-2b2a3f65e664",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f89b0f-5d03-4e5a-be73-a909e1f856ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2d16149-7cdf-44db-9ca3-9e56f236241e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1348f9ed-3830-4764-a71d-f207bfabf184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10dac72e-c40b-4ce9-931c-af499360d6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c23cd4-614b-45eb-9bf5-199c1deccf05",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396c1d6e-2fbc-4d2c-8142-566df077ea66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c03f6c-9afc-4cdb-91bf-e266ebf21cdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb51334c-04ac-45e9-a0d9-3974c2cd85cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b06a58f-20a7-4e7d-93f2-54964aba5436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80620dbe-024a-4de4-8988-9b46b7b4e8cb",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a951431b-4abf-4588-9dc5-137f2a7ad8c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac02169-659f-4fb0-9458-af19e3a51193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d31576-7a8a-4773-929c-d4dc388b13c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca28de53-78cc-404e-a3b6-776f45f287a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea48f9a-1635-47bc-8057-a0b570c72ea3",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8befd148-428a-4dbf-9940-9e31b7761a55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2763603-c494-479b-9787-30a2dc1b76c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd03057-3d22-4a38-8c92-c2f744fbf56e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66877fbd-de89-491e-b8f0-2f7c99a7d415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f035d7a3-3723-42b4-afb7-a8838cbffd1f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a8b484-d57f-414d-969c-f391c6de6671",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99fccb5e-0972-4f19-8945-9555c87702da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd2bc4a-7641-41f0-a9ca-bb21bf7d87ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a95a5a19-553f-4293-b368-440910fd8958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201e7792-7e7d-47bf-8112-35f6ff50f4da",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2257eb2-d9bd-4b20-8e8c-1ed1c32cd596",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a39350c-f602-40c8-b6ae-7c41a0fe59bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa38df8-2077-4499-bb4a-c7060037b5a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b90431a-2c7b-46f1-8237-47b430b2c7ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec8e31e-a107-4bed-ad22-e14d4fad2956",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec5dc7d-979b-467f-9d8a-41851c2ec70a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ca8910f-cf04-46a8-985e-d7fbd11068b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d44c44-6ffa-4a0e-995e-cd1c6b2c2b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a882624e-3931-489a-a557-bfdd77f6ea4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b9f1d4-3b98-4f62-9f9c-2a0a843edee4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914578b3-765d-40cb-89eb-5a5872750b77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33cd67b2-1122-493a-ad84-0705292a712d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6e51a5-b6f5-4dd5-96a7-f35585c6e8c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b026d7d-29fc-486f-85f9-068ff8c2b61f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab3779d-3a42-4b95-96d3-e19987209ed0",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8aad97-fe7f-4fc8-857c-d1bd32d73382",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfa32f73-da57-4f30-95af-9fcc463ee45f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6272ded2-4080-4812-9cfc-028c494e7388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c83b6a16-151e-4298-a661-5b3a93176739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a9077c-9095-441a-8edc-8dbb16f4c180",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8203453f-239c-4e6e-a194-edefad461196",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea680c83-2234-448c-926b-632ed80432a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ba0e0a-473c-4461-b22d-9eef167bec2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b622fb5-8f1e-4920-8514-4ed9e546899a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3622146-b889-403d-a8fa-554d9dc2d71c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1be77c-d545-433b-94b3-3ee37f7d50c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "253ab735-1b1b-4dff-9d58-889ddecede81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6927e3fa-19ad-427d-bba1-ddec60ae82f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a27c108-f5bc-4662-aa6b-7dafad9adc49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b988fdc0-b455-422b-b844-a40c02b0e391",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b82759eb-0c83-4a99-924c-66c34fa2faba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df415a6e-5761-412d-ac6f-6a250b9c6c32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2fe824f-0c2d-4f83-89fa-edd6df979d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75396e48-9475-41c5-a6f4-5474b440a8b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf80bc2-a76b-4d1d-9b21-812f328735d4",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c11a2b-ae5e-4844-91dd-0f8f61395bdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99793864-9d13-49f1-a4a1-6d7312cd3762"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae9f5c6-3cd5-4046-a049-46f6ed9e60a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44968bbd-d85b-47e2-9739-bdf51d441638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1670d6-146d-4feb-80ff-68892bee984a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea292d76-ba16-4299-b5e3-4efc654d038c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3899e937-f58c-4966-b5bb-026860339289"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7c2b25-637a-4978-9c59-45831650f35e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac2769c-801f-42f6-b522-e2d8d80df989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04ee94b-6579-44ae-b947-dad70c69300c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa5aac0-d658-4c8f-9622-da06e05bbcb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abec1e94-f0cf-45d5-b14b-3b45e7afd12e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "914f9a40-d90c-402a-bb45-3afc785aeef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3901d602-9e5d-4d6f-bd75-5d0d86feb9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd5c354d-7908-4e9b-a5c8-523bd069a431",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10ee9db-2380-4efb-abc7-938c075398cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d47e244-99d3-496a-b1ca-aa0f32851ff3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5071be39-8d96-45a3-b4f5-cc230c3bce2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "507449cb-bf53-4020-a100-632e430ff032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f400d62-f2e0-4f0c-b91e-e022cb3b098e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c145d428-0ff7-4364-9bd7-bdd11d1adf9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0c4b86d-ddb2-4eee-af26-04944db458e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27dce27d-1e08-4e57-af40-a9220ff5564f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87d39121-73e4-4834-ad5f-c7f39499266b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39992d9d-da36-495c-8a5c-04a076c05513",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003cc161-b961-4d58-b757-d2eb9348ab4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32279e6f-5d2b-4a0b-a854-10c624715bd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "359a0192-e115-4fe2-90ac-effdc620142e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eaaacb8-ca86-4ef6-87c6-558548ff0123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bfc8aa3-45aa-4dd0-b03d-0041ea6c3c27",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc77b5e-02b4-4a6b-908d-48efb0ca56ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc287b2b-a2b1-43b2-9eb5-00b289f201a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3813987a-a02c-424a-b55d-66b2037616ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee8910c8-77ac-472c-b934-3e6f7ed55fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8bb16ac-a3bd-4011-b876-b0c0a103c10b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd4e89e-7bed-410a-8979-f7af336347aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b6c82ef-0484-488f-b9bf-60142eb4ec67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cdc8aa0-2328-40eb-986a-ff6af69ea73e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aff8bfb1-8429-472a-acb8-e1e1b3798c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5c350e-09b0-4a8f-a6e7-4a88e3058b0a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7304d079-4e64-488b-ace6-9c79cf78177d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b0a2101-ea8e-41c0-a4cc-aa0f09d1991a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ae82cf-f665-4695-a33f-05de084c8f98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05cb2009-f288-44ce-a545-49b5ab24e7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e62913f8-7efd-4c2f-9447-d9fad89e6fc6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910cb310-013e-401b-9223-d3b9ff53f86a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df57d675-e92d-4135-adf0-63a076c8a350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2c95f4-999e-433c-8cef-849b8d6f9d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9ef667e-c5aa-4782-b047-af87a2e7b8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cedcc935-0acb-4ea2-a5bf-d621f0987236",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b2806f-f12a-4261-b27c-7d4ef75ec638",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4e9e19f-b5bb-4a53-8fbc-7a441b474921"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08395935-9326-49e0-bd14-10f87ce7d673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4481eb41-e7d3-4f3e-85a2-9b1809d9ec17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8584067-a399-430b-9a5d-e77d2c97de32",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77883924-50ce-4a54-8137-ac61fafa193b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2a1e47e-8041-4e22-8f7d-32356eb82e1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef48765d-aabc-4861-8783-50b3d86a7b6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54508833-2757-48ed-942a-f2f102d2b652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef342565-dfcd-45b9-b1e0-e9c9a5282cf8",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a951a290-7a46-44f8-9bc9-215162e20240",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82e7441f-37c9-4244-b100-93611c9b8142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6776fcb8-5ce6-4647-88b4-64f139bfdbf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d036bd61-646f-4337-ada2-9d399b62dd7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e48da8-25e1-4825-a8ab-7d7fc85129cb",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c279c8-eb4a-41c5-b035-0add8f09f011",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09096a34-aea2-4692-bd69-cf8c242a7f2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9effe9c5-406d-497e-a37f-009f69479c73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee36ce52-2b62-4ce2-89d1-5f7dc79bcab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2219a99-0559-4af2-9050-e859120ccc92",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc983a2-a5b8-4709-8568-2a3118be1d31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9a529fc-de96-4700-9cf0-08421cf5187e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb670309-e635-4b26-af6f-6633ebfea2e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6052c044-e204-41cd-909e-f335f21a0043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd785afc-009e-47d7-85e2-c83fcfbb5780",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8d9ffb-714a-4dc1-bdb1-65cba5cfc39e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e927d389-cd06-432a-9ac5-4267aad03305"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e89b41e-568f-4085-9c53-3be17703ce5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dba6b0bd-d1e4-4d93-b9c9-778364ac523a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c03a48-036f-401a-85fa-ab3fb091f266",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1af486f-88d1-4ae5-adfa-0fb7bbf672db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9c47ae8-c9dc-4c74-a44d-cf4995e482f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7be320-f7e1-4cdd-b0f8-803ac538478f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f63a64dd-f5f7-4fc9-a58f-ffaefee3d604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4165cca7-374c-4a5f-8763-538ef203475d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0f3c2c-d6e1-442a-90d3-094b27f6970f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e9a6bd4-51d6-4f36-911d-b2ec0573ddb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "833914c3-9c26-4728-aa28-6012a39f289b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15baf05f-e49a-4039-a671-3cb3e133f9ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c233aac3-e120-4546-85aa-3c8946ee011a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3463d385-b54c-4324-b243-a450885b3067",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c5367d4-2b8d-4795-aa2f-38c42b89308c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e93995a-8b73-4e1c-b88a-3ea9feb8e8c9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbcba8c3-e0f5-4a62-afa6-0b4dabd6088f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2277efb0-294d-4c5a-a98d-7f244809b707",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac9af34-a10d-41fc-855e-8578a866d313",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19883a45-e24b-41a6-a653-36c2a15cb84b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09074000-abf5-4bf3-be90-1e380f4c8956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "949f42f4-f3ab-43c7-9306-30818b94494d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27042015-76a8-4b26-9d31-119b4a6d9cfb",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768a1369-0833-49bc-8ae8-7a8d620e24a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "178f2a1d-d99d-47f3-bbbb-e5e3fdc45557"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc62a98-5a42-4553-aacc-317336ee5274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "215b1950-3be0-4096-b69c-615baacbba74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4143c847-f425-4003-92e5-467d50502ddc",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e94f1c4-5b63-486c-83da-21e5de585929",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22374248-ba6b-40cc-94cd-373220119ca9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0668d7e6-881a-430f-945a-a8de53150c8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9df00146-a818-4b72-af6e-35817cef66be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8846445e-bec1-4d26-b61a-67cfb5c244c1",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819076a8-26b0-4bab-8b70-f2994d6863d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab00d458-9bd7-42e1-b89e-20da1bd6c649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40153b4d-ed61-4b69-9c3f-8e3596f0f754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fad8d310-3384-40ac-92d1-606d796643b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d031c7-cd4f-4d4d-9163-e3e7e806c279",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831acfda-3ee3-4d63-9841-fcd1ee5a6723",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3683447c-31b1-4760-b261-bde535f8338a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dcd9f2c-37ce-44d9-954f-cf8d3f9b0453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93478a03-c6e6-40fd-83fc-e0acea99b1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "374fd288-722b-4bc7-bc45-7b25d8c956e6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "954855f6-4faf-4b2e-b6d2-3e1a6ce5f328",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8ecbca7-fa06-4e61-a239-b79ad680cfc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b66334-f38f-4c3b-aeb5-4070f6be7aea",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db7af2bb-d4e9-47ef-b372-9b2c47998a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524d93a3-403b-4934-96ac-b64b57f63768",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c7eff3-9c9f-4fa3-9f01-cb7d98a0093d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e92766ce-86db-4237-8ab0-53a13aa63495"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "419b74c9-4333-452b-930e-0294eeb80f7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c953d20d-474f-4f91-9a5c-1053d3d9a80f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99368456-41fb-44fb-a8db-6a443a8e33b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4840fc2-7eb2-4e33-8c07-b390a3c4149d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "830b34c5-f078-48e8-b80f-e97ef42ee925",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d8161ed1-6755-4bb8-8968-88aa6ccad78d"
                    }
                  }
                ]
              },
              {
                "id": "e91a8714-8005-4921-a0b9-97d00b8fee48",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d9534a51-ccd8-4efc-8b10-50a74cb9281c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e32ae1a6-1d0e-4e85-9597-1a48dc36f39e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1a0b3fde-60ad-49c6-bcd1-9a484962d22d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d256546-66a9-486b-af16-5abe0b02225f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36b16740-5eb7-417f-827e-4f2fa5bd35e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c13c44-e91c-4710-ae1f-3db920a64d42",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f057b30a-5582-49fe-af72-bf666083953d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8685eda9-147d-4500-bccd-7af80e39958b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe06ab2-615f-423d-a15f-5fba5c7d921b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf45fe35-af34-465e-8cc2-48b0882cad55"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3dd9aed-7527-4348-9984-cc0030707525",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d0f9ba1-6e56-4026-ac4f-043e8426947c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "69e84017-98f2-487e-acf9-7a5a1aa84850",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3dcd466c-1dd9-4909-9f1b-cfae57101404"
                    }
                  }
                ]
              },
              {
                "id": "6a929b0a-3270-44a2-9234-5b69efc96c1a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f87d9205-24ef-4f63-84f0-4be30092a9f9",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc91aa1-7c6a-4723-beb9-acad41bb2f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ec8c4203-4795-4c9c-80ff-3882008f4ef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2bd00eb-936c-49fe-8275-00206ed65674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93f2db7b-c0da-4f70-9b21-c4ef88438f79"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3d1ae153-72c0-4011-8a2c-591a7e68c0c2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9946281b-ed32-4de1-9f4d-da3652ca3aea",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fdb74a27-b2b8-4482-821d-fecd10dc13ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7ee8b841-a030-4fe8-9fd0-0f4b72cadf5b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a06c6c5-aebf-4c54-b4ea-ab866ef7d99c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d9def1b-93f5-43d8-8947-0564b032bc07"
                    }
                  }
                ]
              },
              {
                "id": "6deadbda-3d34-4b0f-8568-e083b20beb59",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2f54135-2f95-4f54-bf78-1183962a6ce3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e90e6f4e-e6ca-43de-96d2-b4b9d710f958"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cbaa7ed4-d062-4368-8a86-818447cecb9f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56614b7d-4882-4501-8882-fd74b6000427"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3527053c-6841-4575-b619-56c6b42111f3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "fb48ee99-cd9e-4663-97ba-cecd25f06c4a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "758c950f-60c9-474a-91c1-e8f8eb63cb63",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "066d9afe-1671-4de2-ad39-e820960a3a03"
            }
          }
        ]
      },
      {
        "id": "a48aec8e-f704-4ac1-b9fd-d56b61b65204",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "faaeaef6-4c2f-4934-9611-0b70e355d3cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "64f516b6-38ab-4305-b719-48ea9a92a99c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a782290c-92a2-4265-a7f9-e345fdf69720",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0880c0-11f5-4c73-b696-11be83185bce",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e2e669ae-9ce3-4497-9116-6330122f12b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97036054-a9b6-4892-8ba7-d96f39e9fa64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f015deb-beaf-414b-838d-95b16cd4c89e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ba01d9-13d3-4cc2-83a2-6f7c2328e2e9",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a6f777-aa34-4c48-8170-e665a1ea8d0b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f183806c-e430-425c-8e9b-dcb401f5ebee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43b101e-a540-4b50-bef0-a07bf74afb5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "77134d30-604a-442a-8da0-b6dd3237dd75"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e61dbe3-5a4a-4206-b0ff-b3b9ffd6a4c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76805ee3-1ec5-452c-97c5-7b7683d12147"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6084685d-fe2f-409c-b356-f20e3db64f8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86853280-52fa-4ae6-96d4-a689397c73d7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "492ca69e-bbce-46be-96cc-b943877f210c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1c823e97-9bad-4daa-a35f-6ccd56b710da"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d5f01eb4-528d-4943-ba71-b9fd28f29ef0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad7997c2-a0ac-4658-b5e4-ac0dfaf0790a"
            }
          }
        ]
      },
      {
        "id": "9dea05ff-a6be-4047-8e03-756aacaa6180",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c6095b65-e0e8-400b-954b-07400534691b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "61a3695c-7779-4f5d-8436-124b290530d7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "18d1f662-0b6a-4773-8f7d-5f70cdd014a7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192cb776-9d8c-4aa9-9dd0-e69e99b688f2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62e0d70b-ebf8-4875-9008-9ae83ede0a71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66c2755-65fa-4ecd-a8cc-a5fc81f29498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fec21e56-cf2a-4000-97ad-8e06d8e5609e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ac27f2-f6c1-4e8d-adc5-5700d00e64d0",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f55454-af91-4fb5-9d87-1f432f1dab1b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "59f0d335-653d-4479-822b-1ace0ad50644"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b85da6-ac3a-43ea-896f-37468cd442dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8af0eabe-4a27-47d0-8f67-4248f5136ac6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "90849bc5-0625-471f-8eb6-1fac8e06842d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ceb5a885-832d-4c73-b8e9-a020f4454c35"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "22883d46-6c0c-4273-9eab-3d9a50471b4e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2629820-4099-4052-84e0-5a0f070f4c16"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c9c5d44f-004f-4ac9-b781-8a6683b97beb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ee4d5c72-a5bf-45c9-b306-93eda659ec7a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6df6b96d-1446-4112-b8ac-79b075051b42",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f4472e6e-bdb7-4949-be45-446816bf1add"
            }
          }
        ]
      },
      {
        "id": "d32a3000-1677-4021-a3ca-107a87b06ee4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "199f3213-9b77-448a-b57c-60a99bd3f737",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f7860750-2def-44c3-a3e8-8d53595616c3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2128a89e-3dcc-47b9-9882-0d8be2bf00c8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b493577d-17a1-4437-95b9-921031489ccb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e0d160d-09ed-4897-9ec8-433c76b842a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8230a70-c49e-4af3-a323-9b1e41c500c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ff766ae-cf10-4cd4-bcd3-8ea9aab572c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1548a2d8-5e87-404c-b999-060b33e64e7b",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11654d8-eb96-4b11-a831-c4ff30293106",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bb09e5d5-8423-45c1-b341-80153c165b4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1798bc-4dc6-4e96-bd06-90a8d555083a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eff62037-5d86-4014-97cd-cf51e6956dfc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06b8ca2d-69b8-4d45-920e-1bf52eaa99e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d72f38ea-3264-4d0d-9388-eacd3c66b283"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ddbb107d-f88b-41f3-b213-c6b1e1f66358",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e60cc372-97e9-4f17-8826-9ddade2f2f60"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ffedb9b4-fd3f-4a34-8da4-788ca8ac07bf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8c77b0af-66c1-404e-b1cb-0440f5370f25"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2438be7d-3bb6-4000-b00b-bf707138bd9e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "640419a6-0d32-439d-91bc-94a71e635814"
            }
          }
        ]
      },
      {
        "id": "202a1f42-34b7-4e80-b1bf-80e5c7e0cbdc",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "260ab3e9-20ad-4efd-ab14-b62bfc3e26af",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "50b18f33-7021-4272-a212-fe8d6778e144",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7872f59c-5c5c-42f7-a425-d12b8349d41a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f58bc060-6b13-45b4-808a-aaf920f6b779",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d3d990a6-10a0-4c15-946a-65922fcd329f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 722.1884615384613,
      "responseMin": 15,
      "responseMax": 11029,
      "responseSd": 1186.4719448940682,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1682642302506,
      "completed": 1682642504209
    },
    "executions": [
      {
        "id": "99d9cb2c-076f-430e-a899-4ada67ab7ff9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "bbd0e659-8724-46fe-86eb-217a8f4052a4",
          "httpRequestId": "59d1c8a4-85d4-4940-bc77-0c59e50de4fe"
        },
        "item": {
          "id": "99d9cb2c-076f-430e-a899-4ada67ab7ff9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e5545f37-8dca-48a4-b794-41bbc369298f",
          "status": "OK",
          "code": 200,
          "responseTime": 103,
          "responseSize": 0
        }
      },
      {
        "id": "8df2e95c-e404-407f-98b5-6c776519e088",
        "cursor": {
          "ref": "f54e5e18-edeb-40d9-9fef-5fa3961db5c2",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5d9d443f-e3e0-4332-806b-d176770205eb"
        },
        "item": {
          "id": "8df2e95c-e404-407f-98b5-6c776519e088",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1a56905c-da86-42b4-bc4a-d8ec405ddc98",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "e42c4e46-ccc4-4812-bca9-b5a1827d1753",
        "cursor": {
          "ref": "c5d0470d-5c43-494d-a2ab-b4d0f0078ca0",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "71b519dc-dcde-4f2d-8784-643a4cc0aff9"
        },
        "item": {
          "id": "e42c4e46-ccc4-4812-bca9-b5a1827d1753",
          "name": "did_json"
        },
        "response": {
          "id": "2636df3e-3f8f-4e4b-9ae6-980a33206575",
          "status": "OK",
          "code": 200,
          "responseTime": 812,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eaa3789-69a5-4755-a222-6df760824780",
        "cursor": {
          "ref": "f12f78ef-b19c-40ec-a5ea-f7c2599a1b21",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "feb84783-861e-4350-8811-4d665cec29f0"
        },
        "item": {
          "id": "2eaa3789-69a5-4755-a222-6df760824780",
          "name": "did:invalid"
        },
        "response": {
          "id": "bc8bafa2-a4aa-4ffe-9fa3-da3d0fcaf38d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eaa3789-69a5-4755-a222-6df760824780",
        "cursor": {
          "ref": "f12f78ef-b19c-40ec-a5ea-f7c2599a1b21",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "feb84783-861e-4350-8811-4d665cec29f0"
        },
        "item": {
          "id": "2eaa3789-69a5-4755-a222-6df760824780",
          "name": "did:invalid"
        },
        "response": {
          "id": "bc8bafa2-a4aa-4ffe-9fa3-da3d0fcaf38d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e3759f-329e-477e-abb5-90f683e2f97f",
        "cursor": {
          "ref": "b58a4cfc-9eb6-41c8-ba9f-5313adb8b5a4",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "139f9c2c-9ae6-44cf-b8d3-97e2f7e5e3f5"
        },
        "item": {
          "id": "13e3759f-329e-477e-abb5-90f683e2f97f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9ae889a9-b69e-454c-a498-bd87392f8624",
          "status": "Not Found",
          "code": 404,
          "responseTime": 767,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ced3109-a19a-4e7b-a6d5-5fc73c4469cd",
        "cursor": {
          "ref": "ac09e9c2-7daf-45db-9922-bfbfb8d40e0c",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8e4ad596-fe0f-4673-8578-d7830f748147"
        },
        "item": {
          "id": "8ced3109-a19a-4e7b-a6d5-5fc73c4469cd",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e03b4093-54a1-4f81-95b0-f6bcff02c27d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 563,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1863b0-ed81-4b20-9894-624ad3a76c32",
        "cursor": {
          "ref": "d665cf82-20e0-458b-8405-4fdf3f122188",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9625d87a-af53-43f6-858a-a937932446dc"
        },
        "item": {
          "id": "cd1863b0-ed81-4b20-9894-624ad3a76c32",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b2376c98-5055-40f7-8c76-bd13bbb5e89d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da237949-206e-42a1-8ad0-e693d58f4924",
        "cursor": {
          "ref": "9f0697af-21fa-4fcf-a936-5aee06fa12d5",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "16a8089d-5413-49f9-9cc3-ad8a7f24a363"
        },
        "item": {
          "id": "da237949-206e-42a1-8ad0-e693d58f4924",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "439a82f1-ea60-4d45-8177-95d648d76feb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 565,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da237949-206e-42a1-8ad0-e693d58f4924",
        "cursor": {
          "ref": "9f0697af-21fa-4fcf-a936-5aee06fa12d5",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "16a8089d-5413-49f9-9cc3-ad8a7f24a363"
        },
        "item": {
          "id": "da237949-206e-42a1-8ad0-e693d58f4924",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "439a82f1-ea60-4d45-8177-95d648d76feb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 565,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009db0cd-f173-4920-835a-8467f7c27025",
        "cursor": {
          "ref": "cec73bc6-14da-4ae4-b6f7-5a02bfd9f61e",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4c5370ff-14b6-461e-ba32-63b7f05becbf"
        },
        "item": {
          "id": "009db0cd-f173-4920-835a-8467f7c27025",
          "name": "identifiers"
        },
        "response": {
          "id": "d08f657f-cc6c-4e9d-b6cb-efc397261e62",
          "status": "OK",
          "code": 200,
          "responseTime": 1048,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05526054-ec1d-45c3-a2f7-0b8bcd4016ae",
        "cursor": {
          "ref": "7376ef6e-fe54-4027-85a6-dc66bcf0a50d",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "86afc92c-4136-44f6-9e47-14bab142fb06"
        },
        "item": {
          "id": "05526054-ec1d-45c3-a2f7-0b8bcd4016ae",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "21bfea17-fecb-4f34-9639-87c464c9698e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05526054-ec1d-45c3-a2f7-0b8bcd4016ae",
        "cursor": {
          "ref": "7376ef6e-fe54-4027-85a6-dc66bcf0a50d",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "86afc92c-4136-44f6-9e47-14bab142fb06"
        },
        "item": {
          "id": "05526054-ec1d-45c3-a2f7-0b8bcd4016ae",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "21bfea17-fecb-4f34-9639-87c464c9698e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15138722-cf19-4146-9045-1c4729444370",
        "cursor": {
          "ref": "c072ca0f-a5ee-4fe6-9b77-d07ce29c5dae",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "48a82c06-67ad-4e1f-84cb-2c173e34ff53"
        },
        "item": {
          "id": "15138722-cf19-4146-9045-1c4729444370",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2fb5540a-5198-4779-ba80-9af53e94af01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003a076f-4dde-4aa4-a855-d1e3afa9b677",
        "cursor": {
          "ref": "a9ef1411-3b46-47ec-a2dc-204ec1b73c95",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9ec4658c-5f45-43af-9f9e-10a5e1e456fd"
        },
        "item": {
          "id": "003a076f-4dde-4aa4-a855-d1e3afa9b677",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e0e945dd-1918-45c0-a0b7-4b5880122039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf070e1-d7ea-47e1-aebe-bbbd9b508354",
        "cursor": {
          "ref": "b0847ee9-4fe6-4c8f-b4dd-6171090ea65e",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e8282946-62c9-4b9b-a8c7-b044cdde8ca2"
        },
        "item": {
          "id": "dcf070e1-d7ea-47e1-aebe-bbbd9b508354",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b37bf37f-ed5a-4473-9f42-90c09dd5f6ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b79a58e-8dce-48c0-917c-f64551cdc629",
        "cursor": {
          "ref": "88c21385-0519-4074-8fae-55a7a5563e06",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f8021b8b-a410-44f6-8964-acd02a59a58d"
        },
        "item": {
          "id": "2b79a58e-8dce-48c0-917c-f64551cdc629",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7f3b006e-bdc4-4382-baf5-c7a983ec2943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce00f8cf-8770-4175-b7f4-fe22531dad29",
        "cursor": {
          "ref": "246051c6-9fe9-4f26-83bf-a7814fd2074b",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "daa2c31c-570e-44d3-acd3-02e65c4a6c85"
        },
        "item": {
          "id": "ce00f8cf-8770-4175-b7f4-fe22531dad29",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6c4a33b7-308e-4fd7-8ad7-68df11dd575d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49bf8c3b-dc5d-4fc0-b389-6bb0a81d9803",
        "cursor": {
          "ref": "55b96ca2-8467-4118-87fa-032b8d984e19",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "632ddd2a-45e5-4791-a805-da603435b25d"
        },
        "item": {
          "id": "49bf8c3b-dc5d-4fc0-b389-6bb0a81d9803",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6712c5cc-96f4-4958-99cf-5d09a9e4232d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462f180c-58ba-4360-96da-347cccb8cd9d",
        "cursor": {
          "ref": "6e10d6a4-f719-41c1-b6b6-ca52069ed0bb",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "56435497-0893-4017-b22d-bd63de72b41c"
        },
        "item": {
          "id": "462f180c-58ba-4360-96da-347cccb8cd9d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d26face0-1ed4-49ce-8bc3-bc404a284c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6318a5-7f7c-4c3b-a5fe-12dab6b6490d",
        "cursor": {
          "ref": "f9ecd6ff-4f0a-4aaf-9e2a-28481ec06690",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "865b9ee8-bab9-4142-98d2-4941db88e75c"
        },
        "item": {
          "id": "7f6318a5-7f7c-4c3b-a5fe-12dab6b6490d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "16414d27-fe82-4a0d-b039-15f277966fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e2f837-5d24-4574-8320-477ad9172171",
        "cursor": {
          "ref": "f8086d38-1cf6-4bee-a678-a196286c8a03",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f8d2e467-df0b-46a7-90d4-8bb6886d6a62"
        },
        "item": {
          "id": "32e2f837-5d24-4574-8320-477ad9172171",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "56a4d5e0-612a-4d85-aeaf-a70404cfe789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326f59e1-abf4-4b45-836e-be9a4a75b85b",
        "cursor": {
          "ref": "34449a93-2d4d-44a6-8ae1-496a20e7fc6f",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "cac00f8c-de8e-41f7-88c1-a994378947fd"
        },
        "item": {
          "id": "326f59e1-abf4-4b45-836e-be9a4a75b85b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "8f2c6457-add8-4b2a-9c58-6d3868f5cb74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2c42e6-30c6-40a8-a848-47b92d181343",
        "cursor": {
          "ref": "bb71f26c-75de-4722-993f-8a5bc696b83c",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9b1f752e-2596-40aa-85a2-c891106a04a7"
        },
        "item": {
          "id": "ea2c42e6-30c6-40a8-a848-47b92d181343",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "04a09168-13de-4644-a501-32f112c02eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd7ba61-518a-430e-8d1f-5e6b91d2c385",
        "cursor": {
          "ref": "99bba98d-da14-4f1f-9625-0a266676d737",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "05fa0947-981b-4f45-8c23-ba0f03a0609f"
        },
        "item": {
          "id": "fdd7ba61-518a-430e-8d1f-5e6b91d2c385",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "89770895-4e93-436f-8afd-3ef46395af22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ff1340-d38d-4cfb-9682-d6a6f0f9e522",
        "cursor": {
          "ref": "b9d73c39-c091-4c9c-adde-3e4490f39fc2",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c925d275-d031-4bde-b7f0-93a1be239d7a"
        },
        "item": {
          "id": "e3ff1340-d38d-4cfb-9682-d6a6f0f9e522",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d634435c-b1a8-4fb0-9e38-fe9554c6ab3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ba330d-bf45-4934-a469-95bc6f1d8bad",
        "cursor": {
          "ref": "3e12a1b7-f48e-47bb-993c-b80a91dfb552",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "67abc8d4-df48-4677-a81c-3a639dd65021"
        },
        "item": {
          "id": "23ba330d-bf45-4934-a469-95bc6f1d8bad",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e5a6509a-f2c6-4ae1-bf1b-8cba63fe7b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017bfbf3-452d-4b4b-b59b-de04dc6ef995",
        "cursor": {
          "ref": "8d246b89-a98c-43f1-b5c3-c5b9ca2c072e",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9abc85ce-c973-449a-a2bd-d1b68065440c"
        },
        "item": {
          "id": "017bfbf3-452d-4b4b-b59b-de04dc6ef995",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ae8bebbf-cf7f-46de-98aa-81513621d04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a8190b-9602-4263-b566-f70cb29e5f45",
        "cursor": {
          "ref": "16207468-428e-4c9e-9006-3c2ab3a53599",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5d9cdcbb-79a6-4d04-99e1-0b247006c0c3"
        },
        "item": {
          "id": "97a8190b-9602-4263-b566-f70cb29e5f45",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e0195e3d-ff2a-4edd-ba2b-18498a5497e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420e3293-d3dc-4c12-bc70-1a9a53754e77",
        "cursor": {
          "ref": "4decd47d-fdde-4613-8110-2d12f07d8d72",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "afd166cf-d379-4aea-aec3-9e802947fe40"
        },
        "item": {
          "id": "420e3293-d3dc-4c12-bc70-1a9a53754e77",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "6fe7512e-8623-439d-b12e-5eabb5ac7a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2bbd7fa-9f5c-4b57-8768-e65083a651fc",
        "cursor": {
          "ref": "b9387dee-49cf-41dc-887e-e33637992002",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "54423bf5-c021-434c-8c6d-073445157002"
        },
        "item": {
          "id": "f2bbd7fa-9f5c-4b57-8768-e65083a651fc",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "32edb6e8-fffd-437f-978b-293a7281886c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c65a2b9-d6a8-45d8-93d6-6c4284f1486b",
        "cursor": {
          "ref": "c88a596e-0fa6-49c5-be10-88b75edb3217",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e1dc3a5a-82a6-480d-b85f-4a673b0eae52"
        },
        "item": {
          "id": "5c65a2b9-d6a8-45d8-93d6-6c4284f1486b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c82a068f-9096-41fb-93d9-399ea097dfbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b95cfa5-d212-4892-923f-4d1f5158c121",
        "cursor": {
          "ref": "5e5b34b1-7a44-411d-89bf-d0512541f5ee",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5282d1bd-2b6b-4e3f-aee5-439651ac6baf"
        },
        "item": {
          "id": "0b95cfa5-d212-4892-923f-4d1f5158c121",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "bd4ab837-2ae3-40a8-aeb2-2aaade5ea1db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0081a76c-f6d1-440c-8772-5224665b865c",
        "cursor": {
          "ref": "b3858457-ba17-474c-a855-e28662b44ddc",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "89ad0a93-7181-4632-b87c-9acb67f15181"
        },
        "item": {
          "id": "0081a76c-f6d1-440c-8772-5224665b865c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "65068372-440f-4f11-90e0-79db89528249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c46bb1-4924-412a-b710-ac9a4175703d",
        "cursor": {
          "ref": "28eaea35-bbdf-4971-94f9-53bd909035c2",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "712576b9-5851-479a-839b-655b917ea2b0"
        },
        "item": {
          "id": "c0c46bb1-4924-412a-b710-ac9a4175703d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c0eb9697-0951-4590-ae58-a566c76145cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e94f42-a8cf-493e-aa99-bac111afec73",
        "cursor": {
          "ref": "678c2fc4-30e5-4e50-b95f-81449ec7289e",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2fe75803-da98-4767-8dc0-c17006e0647b"
        },
        "item": {
          "id": "67e94f42-a8cf-493e-aa99-bac111afec73",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "cb884c3d-422a-48bf-81a8-e5f33e800c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de239e6-07bf-4782-a29a-ec8bc8cdbc23",
        "cursor": {
          "ref": "dba0d2a4-ea9a-4944-996a-6437351c7a8e",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1fcce482-a9c6-4c1d-a739-c264137680e4"
        },
        "item": {
          "id": "2de239e6-07bf-4782-a29a-ec8bc8cdbc23",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "33df1323-d733-4a3b-aff7-85b0d1f05ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72efd2b7-027d-4ec5-9c08-a98485c5eaba",
        "cursor": {
          "ref": "b30ab613-ab62-4598-8a3a-6c00b27d56e8",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f8a6475b-9c56-4077-aaad-0ee0d0148b5d"
        },
        "item": {
          "id": "72efd2b7-027d-4ec5-9c08-a98485c5eaba",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "bc92800f-aaa6-4b31-8469-4e81ef133083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740fec49-a4f5-4b21-b4e0-5da88499240b",
        "cursor": {
          "ref": "5340026c-ace8-4fd3-b9a8-c6c554b49838",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "43efbb4b-cf8b-4f6b-a1fc-dd1bb9c179f4"
        },
        "item": {
          "id": "740fec49-a4f5-4b21-b4e0-5da88499240b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e89ae6e0-7357-41bb-ab56-600825a8195a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33622806-713e-4c2a-aeaf-616a40cf03ba",
        "cursor": {
          "ref": "1464af35-bd49-4a1f-9226-f45d15062b6b",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "cb3556fb-2841-4791-a22e-77cfa3eaf2e1"
        },
        "item": {
          "id": "33622806-713e-4c2a-aeaf-616a40cf03ba",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5ed4db3c-3bde-40fa-beab-10f2093d9117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018a1b3b-d40b-4b8f-b4ec-a32ad7ea583a",
        "cursor": {
          "ref": "70160f0a-c9f9-469e-a961-f658bea33f2c",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "49a90b83-cce0-4bb7-b0b7-4b67c5fdbf4e"
        },
        "item": {
          "id": "018a1b3b-d40b-4b8f-b4ec-a32ad7ea583a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d0e66f69-906e-43e1-bd74-0510fe84b6da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff315dcf-46ef-44a7-8622-4ffff858f19a",
        "cursor": {
          "ref": "a76e6e79-0ae0-4fd1-b610-9608db6adae0",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "815610c5-ee9f-489d-994a-ec9bcad612e4"
        },
        "item": {
          "id": "ff315dcf-46ef-44a7-8622-4ffff858f19a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3496b06e-79b8-416a-9790-42dfbfda5220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f08198-075d-4394-a194-d0b91ac63ef8",
        "cursor": {
          "ref": "a39be252-5ea1-44e4-b2f7-c5fdf04c7896",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "84ba8459-6504-4c48-861d-9f6e7f5ffe26"
        },
        "item": {
          "id": "19f08198-075d-4394-a194-d0b91ac63ef8",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "46ac3479-4129-4bbc-8d51-ddc92689e9bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa31e4a0-8d7e-44f7-82aa-877435503843",
        "cursor": {
          "ref": "cc34f52e-bd63-46a3-b52f-0e3aa9e61871",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d0d7e386-d9d7-4cac-9807-51ed90681cb4"
        },
        "item": {
          "id": "aa31e4a0-8d7e-44f7-82aa-877435503843",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d5228fc9-3734-4f18-b135-bcd9fbe22d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab5cda1-65d6-4c12-b30e-18bc08aa6e01",
        "cursor": {
          "ref": "dccb08e7-2b6d-417f-961c-b1b8b8ee8ac1",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f713915a-c519-4c2a-b90b-cbebe0b1582b"
        },
        "item": {
          "id": "fab5cda1-65d6-4c12-b30e-18bc08aa6e01",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0b9dbc63-3ddb-4809-a8f5-35efea9f3649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33646ba6-8e0a-4072-a35b-2a277b5d7a2a",
        "cursor": {
          "ref": "77f56edf-72ec-4776-b58a-1c3270f9ae5c",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3df0d35a-55a8-43da-8ce7-5e0a217cb3db"
        },
        "item": {
          "id": "33646ba6-8e0a-4072-a35b-2a277b5d7a2a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9fd4bed4-495b-4cb2-a2d1-b0348a2345ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 971,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ced214-95be-44b0-a2ae-a1e9806cb4f9",
        "cursor": {
          "ref": "0f46fdbc-0a4f-48e5-a62e-4105a889bbf9",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "81eed7a2-41e4-498c-883a-789a29dd16d8"
        },
        "item": {
          "id": "39ced214-95be-44b0-a2ae-a1e9806cb4f9",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f5b42517-9f64-4b8a-96b0-5a8b30d6e276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 903,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57e0759-f258-4aef-981b-4a1d6af1910d",
        "cursor": {
          "ref": "01e8e0a9-80f5-493d-bcae-a9aeeaf6c73b",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "653c587b-0a9a-44b4-9767-6a45c0611771"
        },
        "item": {
          "id": "c57e0759-f258-4aef-981b-4a1d6af1910d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d131f8bd-43ab-4885-9d46-599f7f68ff9c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1152,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca77e209-71a3-4269-964d-071f62f5eda4",
        "cursor": {
          "ref": "6d62b71e-a1c8-4c69-acb4-e231f1a0e0da",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "18607ad8-ebda-48cc-8948-3738e2d25ceb"
        },
        "item": {
          "id": "ca77e209-71a3-4269-964d-071f62f5eda4",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b93b66b4-8ad3-438d-8aa3-b33acb51d6bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 993,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86d63fc-42be-4531-af01-0c08b5788d62",
        "cursor": {
          "ref": "927c30d0-aeb9-40bc-b7f5-88e4e95d5735",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "509496a5-a790-4a0f-ada0-c224a91113a1"
        },
        "item": {
          "id": "b86d63fc-42be-4531-af01-0c08b5788d62",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b09d6638-4b46-44fb-85e3-01d27372a972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff00e06-2cf6-4a77-8a42-22acaf1d75f2",
        "cursor": {
          "ref": "bb933c5d-aff2-4a1b-9ab4-0f6957473ac5",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a50fb6fa-ac15-4c1d-8d5c-d4e09c3f8b54"
        },
        "item": {
          "id": "0ff00e06-2cf6-4a77-8a42-22acaf1d75f2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8e6232e9-8a8b-4f1a-bf88-478696ebb802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0acc9760-a18e-4e3e-b00a-e256b2891f83",
        "cursor": {
          "ref": "5e9723a4-c614-4901-a01d-8ffe0efb33d9",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "dc81abbe-373f-4bbb-9e9e-45821be09841"
        },
        "item": {
          "id": "0acc9760-a18e-4e3e-b00a-e256b2891f83",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d6c7a7d7-a8a3-409f-b5ef-70894bd4238b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31946ffa-65e1-41f4-b016-a491932999ca",
        "cursor": {
          "ref": "115891c9-4247-4366-aa67-01df27b1d3c4",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "396f808c-4061-4345-8256-526d5851b1ed"
        },
        "item": {
          "id": "31946ffa-65e1-41f4-b016-a491932999ca",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "54d8eb4e-c850-4e9f-90ae-664f75c66bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0218ad6e-81fc-456f-8dc3-b58b99667a03",
        "cursor": {
          "ref": "1e92fe0c-61f5-4094-9c98-0c785390c558",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e705a1f2-8ef2-411c-b600-3bcdd2c37808"
        },
        "item": {
          "id": "0218ad6e-81fc-456f-8dc3-b58b99667a03",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "bf0eaa2e-181a-476e-bc3c-104e5a9e4f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff30cd19-8b19-4d99-b37d-cd6efd02baba",
        "cursor": {
          "ref": "d0134730-c21e-4901-b472-52e99946fbd8",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0c9558fd-3f77-41d5-8a23-1b91c15f0a58"
        },
        "item": {
          "id": "ff30cd19-8b19-4d99-b37d-cd6efd02baba",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d0ebfdb1-f2bb-4eca-b7cf-98326ffc46de",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 720,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79e9f7a-278f-4714-8f4b-1271e320b511",
        "cursor": {
          "ref": "05104c0d-c36e-4030-a559-d696b7ae66a4",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2c1bcf8e-2b53-4e86-b166-cc61ae8dd3b6"
        },
        "item": {
          "id": "f79e9f7a-278f-4714-8f4b-1271e320b511",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9526b75e-6b43-4205-8291-7a4c32ff92e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47afe462-86b4-4169-945b-ab766cfd9362",
        "cursor": {
          "ref": "64b6d352-4529-4744-853b-439e859c7607",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "656f80e5-545c-4201-8f8d-9ebc1572620c"
        },
        "item": {
          "id": "47afe462-86b4-4169-945b-ab766cfd9362",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c6e140f9-c821-40ef-9e11-6ad49fb6c1ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5d7ed4-9f9e-4794-a5c9-77d6e19067ae",
        "cursor": {
          "ref": "2751071e-d106-4e04-afd8-b0d3e1f31998",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "10578b3a-0c80-4279-af6f-c1d7201866b6"
        },
        "item": {
          "id": "7b5d7ed4-9f9e-4794-a5c9-77d6e19067ae",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5f5a4ed1-8b8f-4dcf-ad56-c67c4751339c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624c6fe8-b4f7-408a-8394-ac43a7a1574b",
        "cursor": {
          "ref": "01bcf36c-55e4-4f62-932e-7ada4ca84355",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "20c4a0a0-522d-4043-bbf5-cb8fbdc89ca9"
        },
        "item": {
          "id": "624c6fe8-b4f7-408a-8394-ac43a7a1574b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "badc6274-4dde-434f-b796-3380de24d3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fbd4ec6-213c-4315-9400-b132fe9cc380",
        "cursor": {
          "ref": "ce0309bc-1007-4a95-8fd5-0fe06bacb579",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0f17b5bd-0feb-4591-a295-921fca471282"
        },
        "item": {
          "id": "6fbd4ec6-213c-4315-9400-b132fe9cc380",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6265e62a-7ada-4778-9e34-4f4e54b215fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b70e3f4-b776-495b-a54c-1cd65d15cd9c",
        "cursor": {
          "ref": "a768cfdd-ded4-4d55-879b-acbf9b43db6a",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "70fbcab5-b03b-4cb0-b950-74d5694bb8f0"
        },
        "item": {
          "id": "1b70e3f4-b776-495b-a54c-1cd65d15cd9c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3eae4f96-d4cc-465a-a298-f5a0dfd04f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40db3ae4-7b88-46a3-a7a1-650ca7724aca",
        "cursor": {
          "ref": "9ad0b555-6c19-48dd-a370-fef37ba2bbe0",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5b0cd980-caf8-4221-83a9-01994b8998e8"
        },
        "item": {
          "id": "40db3ae4-7b88-46a3-a7a1-650ca7724aca",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "8e05b646-36a2-4dc8-8aee-feb9cf584d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053faf67-85a1-4aed-aa31-4b4092d0ab75",
        "cursor": {
          "ref": "10a2c48e-5039-4715-80a4-0bc5e0e314df",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "49456056-1bb0-4c0e-a319-3effa042c493"
        },
        "item": {
          "id": "053faf67-85a1-4aed-aa31-4b4092d0ab75",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "066ff4d4-272e-4ef9-b8ed-78235269ff14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49828b5-fde4-42d9-bb26-e2e7fdd1f81a",
        "cursor": {
          "ref": "c89d83fe-2517-401a-85bd-5fc2ba4fb27d",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "de6f2810-eacc-4e37-8edb-5d0a4de6d3c5"
        },
        "item": {
          "id": "e49828b5-fde4-42d9-bb26-e2e7fdd1f81a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f1417a6e-3066-415b-83a1-19bba8a1cb2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda943fd-f03b-4b54-b933-9086a7cb3bbc",
        "cursor": {
          "ref": "233cf19b-6025-4309-907d-b7f7fb39f5e3",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c64904de-9cb5-4bf2-a174-5049b5096a0a"
        },
        "item": {
          "id": "bda943fd-f03b-4b54-b933-9086a7cb3bbc",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6591ad0c-504c-4dcf-97e0-c843ba4dceff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731eff84-cc68-4e0a-b139-b2a1af349219",
        "cursor": {
          "ref": "0bfc15ce-a68d-405c-8bef-58813d7e07ee",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b48899a4-6a8f-44bc-b115-23b73bc8dcc9"
        },
        "item": {
          "id": "731eff84-cc68-4e0a-b139-b2a1af349219",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "455a0f4f-3b70-4fdb-b2ba-3efd18b4f41b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac70b208-32e3-4307-bf43-1d7308a00463",
        "cursor": {
          "ref": "e9922245-2d6b-42e9-8350-b773c5f1821d",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a52ca2b1-ec6c-4a0a-8902-28cd2f6f23c7"
        },
        "item": {
          "id": "ac70b208-32e3-4307-bf43-1d7308a00463",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "68cc74ca-9337-4b2a-8359-a9ee1b8ccdd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d38fc2-4da1-491c-beb9-6e617a6c1ef3",
        "cursor": {
          "ref": "fb750e65-16a6-4c9a-9253-29c6d4b2f703",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "747b31b3-2b8c-4af8-8d9a-f8d0359ad721"
        },
        "item": {
          "id": "b0d38fc2-4da1-491c-beb9-6e617a6c1ef3",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "12badda0-a6d9-4113-982c-75ea2f5dccd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 879,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f128c9e-bc4c-4a76-b432-cab9835665a7",
        "cursor": {
          "ref": "0d7eb4c6-6ea8-4ac1-87f7-a0d879deaf00",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c304ca19-a77a-40df-aa28-13030ffd587a"
        },
        "item": {
          "id": "1f128c9e-bc4c-4a76-b432-cab9835665a7",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d2323288-e988-45f3-911b-46cb624455d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 995,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14572a53-76ff-470f-aba1-dddb749fe8f5",
        "cursor": {
          "ref": "e76a8804-3544-42e4-9c7a-b15bac2c43e3",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "706b55ac-321b-4894-a8b6-89536f5ba57b"
        },
        "item": {
          "id": "14572a53-76ff-470f-aba1-dddb749fe8f5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "96008948-0394-4d6c-b52e-61a1bfeb7703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 975,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb53bbd-b48c-45e7-bac1-c4c0d0194753",
        "cursor": {
          "ref": "6ff93b6d-fd39-45bd-be22-b8c85f00ef1f",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6070ddbc-6d2e-4432-8458-7cbfe7cc8ad8"
        },
        "item": {
          "id": "9eb53bbd-b48c-45e7-bac1-c4c0d0194753",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3f0111aa-2b11-483b-b91f-6c768de7825a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7981b9-64db-4def-a761-222800f15611",
        "cursor": {
          "ref": "2d09bb23-9c77-4cab-91df-208c8001bf16",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "bf585335-d4a1-4fdd-bff9-5e9e0f30dcbc"
        },
        "item": {
          "id": "ee7981b9-64db-4def-a761-222800f15611",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9dbd51ff-86dc-451b-9ae6-9ae88fa3d52b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22a63ea-dedb-4cd8-91d9-a948116ce4da",
        "cursor": {
          "ref": "93b67a2d-ee1e-4ca2-aa15-2e25383c5811",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c2445ba2-50df-45d2-84ea-fcf44af1bf92"
        },
        "item": {
          "id": "d22a63ea-dedb-4cd8-91d9-a948116ce4da",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "1e2f3d19-b407-4efb-965d-75a569f46f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c66b5e1-95fa-4d76-8aae-f54f3e54eadd",
        "cursor": {
          "ref": "7ce2ba47-0435-475e-955c-99dfc71c1058",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4308efc0-f25d-4de7-9e5e-346fc179750b"
        },
        "item": {
          "id": "1c66b5e1-95fa-4d76-8aae-f54f3e54eadd",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b375aa76-c811-44e1-9926-d1e715fb80b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8834aaed-d5c4-4afa-b337-04602c83a7c7",
        "cursor": {
          "ref": "03621f18-2790-41b0-90c4-5b2bf316d81b",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7a5482e7-9c65-4b28-a829-58137ab66eca"
        },
        "item": {
          "id": "8834aaed-d5c4-4afa-b337-04602c83a7c7",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1e93586b-cecf-4786-9d05-b306051d8788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530c4555-8128-4cfb-bae9-d399476c6161",
        "cursor": {
          "ref": "6b4b0587-f010-4044-ab9f-7994eb6557fb",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9d1974d6-4a5d-456f-b9f4-95acdc4660e4"
        },
        "item": {
          "id": "530c4555-8128-4cfb-bae9-d399476c6161",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "14cf6d7c-51cc-480e-bb9a-cdc24b8a1fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd87da31-9afb-47b0-9ab2-e175954da1b6",
        "cursor": {
          "ref": "b9bb5ccc-22d8-4f1b-a9b7-dfabb2c53d37",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d9c7fe0b-4cf3-45ea-bb84-534b1afa557d"
        },
        "item": {
          "id": "dd87da31-9afb-47b0-9ab2-e175954da1b6",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6608de54-f14e-4401-a46e-b67584e3833c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd87eee-0e99-4a10-b676-5097d11a36dc",
        "cursor": {
          "ref": "78fb053f-310a-4847-9b98-52b354048ce5",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a4cc0e66-b392-4982-98ce-f18b9a186664"
        },
        "item": {
          "id": "bdd87eee-0e99-4a10-b676-5097d11a36dc",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "882a6c88-d4b8-4193-aa5e-13493baff532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56ac158-baa4-44cc-a465-23ab840816bc",
        "cursor": {
          "ref": "814e9759-a9db-455b-b4f1-97eec3562a0c",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "41d96daa-8157-4481-a4b9-c042be16847c"
        },
        "item": {
          "id": "a56ac158-baa4-44cc-a465-23ab840816bc",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "700fba85-7a29-4d93-baa9-95647f9af3db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bedbd903-705e-4555-8739-d09b72403ef3",
        "cursor": {
          "ref": "ab0a3d16-aa6d-4dcc-9737-3331ef900562",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a06cc69d-48bd-4d2a-92ea-00a61b398451"
        },
        "item": {
          "id": "bedbd903-705e-4555-8739-d09b72403ef3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "47cd4872-fe2d-4219-b6b4-f2edd110ad8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1d2077-a985-4622-b9da-8bc178bdb81c",
        "cursor": {
          "ref": "dfe7ba08-544b-4aad-b130-d95e44c8f8dd",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "069e579b-2df6-4c2d-b610-fa885deea4e1"
        },
        "item": {
          "id": "4e1d2077-a985-4622-b9da-8bc178bdb81c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2c563493-5f94-4fc5-882c-b49c5db90f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ddd877-6a2a-4ed3-b6fe-61d0a5e918f7",
        "cursor": {
          "ref": "b94b768e-1d86-439b-81a8-69237b9a8fc1",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6773ab6c-c6d7-4c38-8229-1afda00bc452"
        },
        "item": {
          "id": "68ddd877-6a2a-4ed3-b6fe-61d0a5e918f7",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "044bce38-f4ae-4445-981b-942fe3c59ac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c9c082-278c-461f-b1ee-05ad4406cc3b",
        "cursor": {
          "ref": "48bad71d-d90d-4d8f-804a-b433ea0ebe26",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1d7b81c1-58e4-4fc7-b2c4-9f35c6f5fd04"
        },
        "item": {
          "id": "60c9c082-278c-461f-b1ee-05ad4406cc3b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e9c6f02a-8fa0-4ac9-bf4e-4b2e514879a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314e84f1-62b6-4319-b8dd-de864f97e018",
        "cursor": {
          "ref": "26465028-f3e8-4765-b770-16c49a388721",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d84a68a3-49d3-4648-aa66-2f03e0f8e31d"
        },
        "item": {
          "id": "314e84f1-62b6-4319-b8dd-de864f97e018",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "89faedf5-cc1a-49b9-b187-87c53a492c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af1b5ea-2af6-44f1-b886-a86bf4c05999",
        "cursor": {
          "ref": "35478703-9ca0-4d99-8cf0-f8131e07861a",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "178b3ac9-d641-41af-b147-eb952b41d99c"
        },
        "item": {
          "id": "5af1b5ea-2af6-44f1-b886-a86bf4c05999",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "38ff6b17-3f51-4aed-b493-b80a39cea2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70432a00-7310-47f3-a7b8-0dea78a5964a",
        "cursor": {
          "ref": "6a4761b6-6053-41c1-867e-ed3e62a9f0d2",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3af6a152-3667-4967-bfdb-a4c1a84462de"
        },
        "item": {
          "id": "70432a00-7310-47f3-a7b8-0dea78a5964a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e80ce673-aaba-4861-b60f-273e767ba2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6f6c9a-db11-492d-bb79-39a65f504f31",
        "cursor": {
          "ref": "a7bfcfb8-6726-4d21-84db-737a6f8120a3",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "deeb1c12-8067-4021-b8ff-33d3ff71743f"
        },
        "item": {
          "id": "3d6f6c9a-db11-492d-bb79-39a65f504f31",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "37f6ee25-b3e4-405d-b63a-e6adbe27603f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1a37f3-58ed-4b80-8af5-7e56dc2b44db",
        "cursor": {
          "ref": "c561f728-816d-4a81-9a4c-1412514828b6",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a0935fd7-b35b-4b21-ae56-7ed3a8d3e799"
        },
        "item": {
          "id": "6b1a37f3-58ed-4b80-8af5-7e56dc2b44db",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c54f39d2-4978-4d94-8368-ec3945989b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ea9d34-20b5-49a9-bd6a-19df5a8a59d5",
        "cursor": {
          "ref": "d2b43e17-d7f7-4834-aad9-8a85afc0d635",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a343b571-44fe-491a-8a28-fd01ad5c936a"
        },
        "item": {
          "id": "93ea9d34-20b5-49a9-bd6a-19df5a8a59d5",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9563658a-4ee3-4100-a6ef-f86d534cf53e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 832,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48ca264-f0ee-4f60-a425-580d73d2eea5",
        "cursor": {
          "ref": "a5987fec-d2bd-4f4c-ac8b-4b0fdfe2102e",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d6bbc6a1-84a4-4ea5-9d6c-0a5b7b7cd915"
        },
        "item": {
          "id": "e48ca264-f0ee-4f60-a425-580d73d2eea5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3b0909cf-5c94-454c-a92d-c4f351d912fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 963,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5d0f3b-b2d8-4c4d-9d8c-9158d51a279b",
        "cursor": {
          "ref": "e0986ac9-39e8-4856-b46d-7f89d712f6c3",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "04922acb-a0c7-4235-8782-3886e642ec5d"
        },
        "item": {
          "id": "4b5d0f3b-b2d8-4c4d-9d8c-9158d51a279b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "cb5406a9-dec8-49b2-963f-9bb671674b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1050,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18927b2-ec02-4a4a-b640-34d2089f380c",
        "cursor": {
          "ref": "ddbac99f-f14c-4483-884c-01abbdcce5e3",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1fd4a48a-bfd1-4f22-b677-f9a4495fce8d"
        },
        "item": {
          "id": "d18927b2-ec02-4a4a-b640-34d2089f380c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "63142e13-9b36-41c4-ae0e-2acdc57d6bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 944,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb820d7-10ac-4d32-a96d-0ce356b02d37",
        "cursor": {
          "ref": "073864a8-e2eb-4b44-b3c4-7306fb7ec3fe",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "fa5378df-73e5-4278-843a-82e0dc02994a"
        },
        "item": {
          "id": "1eb820d7-10ac-4d32-a96d-0ce356b02d37",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2dd7089d-7692-4fdb-8b2f-9f424efea126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1acd70-95f4-4ce2-a147-6a7a7b1c5b83",
        "cursor": {
          "ref": "21d81724-1571-4649-81a3-edb75e6247f0",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9da797e4-9804-45c0-9059-5b7fbb018d40"
        },
        "item": {
          "id": "3f1acd70-95f4-4ce2-a147-6a7a7b1c5b83",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4870f2f7-06d9-4cbb-8ea1-3707ed378560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f257e1c2-bd06-47a1-bce3-95e0166e6a93",
        "cursor": {
          "ref": "5b5e9b01-1e53-409a-81d4-ae1d2096782b",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "3fd97392-861a-467c-9426-6bcbdd88dbc7"
        },
        "item": {
          "id": "f257e1c2-bd06-47a1-bce3-95e0166e6a93",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "31cb578d-b320-42bd-ac91-5064e84af2fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 842,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f63594-e9cd-430c-85ea-a5ce4eb4c243",
        "cursor": {
          "ref": "81cab55d-2e64-46ae-970d-ac14b98477a2",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "28d1dd10-d582-4585-b2c3-db07e142323b"
        },
        "item": {
          "id": "e9f63594-e9cd-430c-85ea-a5ce4eb4c243",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c3f197bf-7d3c-4c7d-a2b4-1f404f75c085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad19416-2b3a-486b-9291-133d3d2094fc",
        "cursor": {
          "ref": "aedac4db-f98b-4947-adba-87c7ca7f93ec",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "684b9731-d641-450a-ba65-fa58f7da465a"
        },
        "item": {
          "id": "3ad19416-2b3a-486b-9291-133d3d2094fc",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4228dace-087e-45dd-a7c5-886a09870d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 792,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09124586-6942-4a35-ba98-b8511af789d8",
        "cursor": {
          "ref": "761ce796-07b2-4514-8db1-f81261dc293f",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "17c464a0-65a2-4d19-bc2a-126e1d6d6f47"
        },
        "item": {
          "id": "09124586-6942-4a35-ba98-b8511af789d8",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "eb6626c3-ac25-4bae-ad2f-809965d15f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1306656f-e609-4eac-95d3-234e0147d74c",
        "cursor": {
          "ref": "8c000bab-3f42-419e-b83d-3f307e6c19b4",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "75c964cf-ef3b-4311-9b08-c905500af35f"
        },
        "item": {
          "id": "1306656f-e609-4eac-95d3-234e0147d74c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0a46361f-829f-48c6-8d14-a961f0bab214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 790,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18f27c0-2d9e-48f8-a330-881714757d79",
        "cursor": {
          "ref": "42203faa-7f94-40da-8478-1e83f80259af",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "28cfbcff-406c-4d6a-a024-c9ea472d7965"
        },
        "item": {
          "id": "b18f27c0-2d9e-48f8-a330-881714757d79",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d79d47d5-4b26-4606-be9f-04f10d198245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09c942c-830c-48c2-975d-400c08292cad",
        "cursor": {
          "ref": "4c481ae5-4185-4941-b0f4-93e81f390a80",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9e160846-9fae-4966-a845-f253d6b448f5"
        },
        "item": {
          "id": "e09c942c-830c-48c2-975d-400c08292cad",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ae8d8200-3a98-4b00-a692-b219644cfcae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969c7c69-e4fd-41de-ab59-7ce4e106e106",
        "cursor": {
          "ref": "c2985a31-16eb-4705-bea3-6e33cfa26f29",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d3c95ead-f2f4-433f-9d53-80cca322c4d4"
        },
        "item": {
          "id": "969c7c69-e4fd-41de-ab59-7ce4e106e106",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b8e964a7-5495-4d09-b86b-bcf1a2b316ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa78faa7-e842-4c56-8b3e-7b7817022a1b",
        "cursor": {
          "ref": "c56d34e9-0a69-4c6f-8eab-133fe802a82e",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "25d6aa73-04da-44c1-89af-8e3db9871011"
        },
        "item": {
          "id": "fa78faa7-e842-4c56-8b3e-7b7817022a1b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "2ccdeb99-c942-443f-bff9-604564d6c20d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8948c95b-dbeb-4771-bad4-0fcf7cd50aed",
        "cursor": {
          "ref": "851cc32e-025b-417f-83ac-9a4b3679ba9c",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f19ce0bf-bee6-4357-b84c-42f482f81774"
        },
        "item": {
          "id": "8948c95b-dbeb-4771-bad4-0fcf7cd50aed",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "20acd3fc-d998-40dc-9957-9f5456b21347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d91f92f-e382-44a7-9d1d-b68448eef496",
        "cursor": {
          "ref": "25968c21-0c2e-48c9-be5b-e79be1f8c47b",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f6b94e9c-fce9-41e5-80c9-bf04dc5b1d2e"
        },
        "item": {
          "id": "4d91f92f-e382-44a7-9d1d-b68448eef496",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "24c8a4e3-5e23-470a-a925-f9ba3e3edc59",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22af457f-8966-4d18-926e-a351940c238c",
        "cursor": {
          "ref": "3517f82e-957a-419c-a8ac-8a56d9b6f75b",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "79155dc1-b6ec-438e-bcf5-e088a26b17ac"
        },
        "item": {
          "id": "22af457f-8966-4d18-926e-a351940c238c",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "2796eef8-42aa-4e52-b923-a17f52c6340e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 766,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224aa456-50e1-4fc3-8cfe-24f01d8f9318",
        "cursor": {
          "ref": "32211a22-16b5-43fc-8921-919efdc94a4a",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "eba20728-cabf-4aa8-a328-6802b7bc3e62"
        },
        "item": {
          "id": "224aa456-50e1-4fc3-8cfe-24f01d8f9318",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1d157c7d-0349-4c7c-8a3a-328844391a63",
          "status": "Created",
          "code": 201,
          "responseTime": 8386,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "21dce02a-6938-4ff9-97d3-4455d5f32f29",
        "cursor": {
          "ref": "6de35901-94da-4768-8ee8-66b8852a7777",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "30a0d672-c767-46f7-8925-46d352c3101e"
        },
        "item": {
          "id": "21dce02a-6938-4ff9-97d3-4455d5f32f29",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "04c770bc-13f5-4196-8cba-fcbb001550a1",
          "status": "Created",
          "code": 201,
          "responseTime": 7960,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6bf115-b1b2-47a7-a1b9-dfd9f230505e",
        "cursor": {
          "ref": "bb52ea92-9ca9-4e89-ab37-ec0bbf2f7c25",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9c965bdf-513a-4589-af98-26064c8b2885"
        },
        "item": {
          "id": "cb6bf115-b1b2-47a7-a1b9-dfd9f230505e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "146e0ea3-2b05-47ea-8fb9-dc2c78c76f74",
          "status": "Created",
          "code": 201,
          "responseTime": 7288,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0781e391-078f-4a4f-be4d-3eff375c3223",
        "cursor": {
          "ref": "201fb349-57c1-4613-a63d-ea84437c8786",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "84516fc0-b006-464b-8c62-2174f96d31ae"
        },
        "item": {
          "id": "0781e391-078f-4a4f-be4d-3eff375c3223",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ac9884d1-4a40-484a-8c21-76565bab14e3",
          "status": "Created",
          "code": 201,
          "responseTime": 11029,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f55d57c-45a3-4525-8ba4-f490bd5c5a65",
        "cursor": {
          "ref": "59c766bb-fa39-4ae2-8746-fa43a526dfb0",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d1198a84-6dda-4355-b7c9-a1626d860c42"
        },
        "item": {
          "id": "2f55d57c-45a3-4525-8ba4-f490bd5c5a65",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2e86185c-d5a6-47b9-84e7-2b45fa00aa46",
          "status": "Created",
          "code": 201,
          "responseTime": 7031,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "994e68ca-fff5-48a9-8fc4-89a1a4c031b1",
        "cursor": {
          "ref": "30e65b24-f6b9-412b-bc1f-895b2eb874d3",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "8115a9f4-0957-4f39-b92e-606aa0104508"
        },
        "item": {
          "id": "994e68ca-fff5-48a9-8fc4-89a1a4c031b1",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5426a6ec-111e-410d-96c8-7a8ba3eda1da",
          "status": "Created",
          "code": 201,
          "responseTime": 7444,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a353841-085f-48c8-ac01-59f438964b83",
        "cursor": {
          "ref": "38a92b82-96a5-49ca-82fe-9c966313d311",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "664cd6e3-c78f-4c99-bd68-742dc2166ecb"
        },
        "item": {
          "id": "3a353841-085f-48c8-ac01-59f438964b83",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2b9e3c6d-343f-47ff-ae05-bf42cf09f8c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a353841-085f-48c8-ac01-59f438964b83",
        "cursor": {
          "ref": "38a92b82-96a5-49ca-82fe-9c966313d311",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "664cd6e3-c78f-4c99-bd68-742dc2166ecb"
        },
        "item": {
          "id": "3a353841-085f-48c8-ac01-59f438964b83",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2b9e3c6d-343f-47ff-ae05-bf42cf09f8c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5987c439-7c97-41a4-aa2a-3a6a8d400252",
        "cursor": {
          "ref": "4f2075ba-0db1-4f5c-80ae-26e703920402",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ea2644c4-ab32-4f95-a1f2-14a88bf6e2ed"
        },
        "item": {
          "id": "5987c439-7c97-41a4-aa2a-3a6a8d400252",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "104a5306-2821-476b-af60-b011f5a57e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6fdc84c-6432-4226-91ad-f20f4c541b6a",
        "cursor": {
          "ref": "3404f51e-d481-4129-a1dd-8bfe5611a0ef",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "fd1e6d47-b5cd-4854-9679-9816d5f17e14"
        },
        "item": {
          "id": "f6fdc84c-6432-4226-91ad-f20f4c541b6a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5e3b4f34-b7ac-4a30-8867-12b2ae89c35f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4848466b-5364-4ffe-a11b-cc97f473d5db",
        "cursor": {
          "ref": "f5b0846c-2ff7-4f5e-94ec-42ded7bd9afa",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "98cd6095-7340-4f5d-ad8c-126d0ca4d9fe"
        },
        "item": {
          "id": "4848466b-5364-4ffe-a11b-cc97f473d5db",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7a5274e6-8cc1-49df-af46-135ffcc3cc4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b51128c-4fb1-4e39-9fbd-785c44f37f6e",
        "cursor": {
          "ref": "7194edae-f35d-439b-aeac-cf11b67b86e0",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6fb0de45-e6dc-4db6-a1cc-4c610b6d1174"
        },
        "item": {
          "id": "1b51128c-4fb1-4e39-9fbd-785c44f37f6e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "62f8f97c-fd25-4fee-a00e-ded8525ab739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90577cd-0e66-47a9-be0a-742935715886",
        "cursor": {
          "ref": "bb6a271b-622e-4a0b-998c-36d6f8692d51",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "eb4b9550-a9af-4aa9-a945-dcb9846c2fe6"
        },
        "item": {
          "id": "d90577cd-0e66-47a9-be0a-742935715886",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c205ab10-7a6e-4677-a463-1e688b12fe55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc05952f-4e71-4c5e-bd28-afdd2db6f70a",
        "cursor": {
          "ref": "7a0fb00b-390c-44ef-ae85-4c09144d1c85",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8fe7849c-72c0-400b-82b8-e65425b79884"
        },
        "item": {
          "id": "bc05952f-4e71-4c5e-bd28-afdd2db6f70a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "056c5479-2551-4fc0-96c2-f5bd2f4fb4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a4921b-5e96-4543-8a90-00647c92f4dc",
        "cursor": {
          "ref": "8ce1880b-38dd-4395-a40a-5ac53296348c",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "cf81a578-1e2f-49d8-8b67-d1c95eb91e07"
        },
        "item": {
          "id": "68a4921b-5e96-4543-8a90-00647c92f4dc",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1d2e5c7e-9255-4c54-9473-dfe6aa941938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc47988-34df-4478-a7b0-dab44f888cee",
        "cursor": {
          "ref": "f3e4c9fc-2476-483a-8184-8b751b367918",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "aa9972c4-19be-43d5-9d55-484259c3408b"
        },
        "item": {
          "id": "9bc47988-34df-4478-a7b0-dab44f888cee",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7b2cfb5c-e1c2-4375-8615-3e97d6ccdeef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6717539b-99c7-4d16-8892-7b0ad83fbf35",
        "cursor": {
          "ref": "5c36e464-1013-4dcc-aaf1-f073be237eb1",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f8d7dc49-0323-474d-b59d-279a5d366cb5"
        },
        "item": {
          "id": "6717539b-99c7-4d16-8892-7b0ad83fbf35",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fa90eb4f-8ce5-4d24-a6ac-d9ea09dfdea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 923,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8549d24f-3a1b-4255-9596-8df002013c34",
        "cursor": {
          "ref": "9ff3a7b5-868c-4d03-b2e2-913214b142d4",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1f335615-8ae2-41da-9d39-11b0ec1c2e77"
        },
        "item": {
          "id": "8549d24f-3a1b-4255-9596-8df002013c34",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "689fa3f4-3e03-4b0f-9ff2-b277046939f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 823,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229b812b-3fe7-4fe7-be17-58b72705db25",
        "cursor": {
          "ref": "939d24d7-5d2d-4b77-8131-1d489468a74f",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1c8c76b3-78bb-4048-ab90-9eb75473ab08"
        },
        "item": {
          "id": "229b812b-3fe7-4fe7-be17-58b72705db25",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1d3db194-9456-48e5-88a1-f072aa0fe72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 812,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f27873e-e244-4d84-bebf-b94454e00256",
        "cursor": {
          "ref": "78ff7b80-a2e1-4a5f-bf60-64dbe1ae4595",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "14a5ca1b-e80f-4bd6-98a2-6ce6e9fa671a"
        },
        "item": {
          "id": "6f27873e-e244-4d84-bebf-b94454e00256",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e50514a5-7eb9-4a5f-a9fe-6f7c73556a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1067,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86fa0212-1e8d-4203-83d5-7c65520e2fda",
        "cursor": {
          "ref": "cfb4430f-69e3-4689-9b56-23bece54f43c",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5867408b-3976-4c71-8bd4-6fdb391f6505"
        },
        "item": {
          "id": "86fa0212-1e8d-4203-83d5-7c65520e2fda",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "153f6a6e-3810-4934-90f0-126b50702571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a1d2c2-0a02-452c-8cc2-2161f2acb510",
        "cursor": {
          "ref": "009b17f4-bd2c-4660-bd42-7dd51d808922",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "438c246e-ff22-4061-8cb7-a41421c3218d"
        },
        "item": {
          "id": "d0a1d2c2-0a02-452c-8cc2-2161f2acb510",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "646c7a37-b649-4ebb-a7bb-b03fc9dc19fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d86cfe-c9a7-4db8-aa55-e12a3fbfb199",
        "cursor": {
          "ref": "2ccf3abf-4b4d-489a-812b-b9b962572530",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5fc8974a-30f5-4076-86d7-f3f36ec935c0"
        },
        "item": {
          "id": "09d86cfe-c9a7-4db8-aa55-e12a3fbfb199",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e73edf99-1c50-4d26-87f6-ca42ffe58743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c5c611-cb89-471c-9ea6-ffd9407416f7",
        "cursor": {
          "ref": "0bda056d-ee69-4585-bd4f-5fa840da629a",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "81eec321-09fa-4a8a-a800-5740f6f33197"
        },
        "item": {
          "id": "e0c5c611-cb89-471c-9ea6-ffd9407416f7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4b41fefe-a7f8-41cf-82d4-f88324c0eabd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d971e44e-f54f-4a5f-a543-2b81f59d6f72",
        "cursor": {
          "ref": "dc5b61e3-11e9-4ea7-b0dc-6981e0347857",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "cc290bd2-2793-46f5-a9a6-7d19b453a3f9"
        },
        "item": {
          "id": "d971e44e-f54f-4a5f-a543-2b81f59d6f72",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "866251de-ef7d-438c-9e11-4108d8b2637a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fcce625-83c8-4c50-a9de-07300ed9a4cf",
        "cursor": {
          "ref": "1084ce4f-b968-4c9d-9584-d3b76f7c21bd",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0a87782f-a22a-4014-8667-a1102ff7333e"
        },
        "item": {
          "id": "7fcce625-83c8-4c50-a9de-07300ed9a4cf",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f45d90c8-9b42-43a5-8e98-77c4524ba1e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052b69d9-7897-421b-b19a-f0cba07ae9e0",
        "cursor": {
          "ref": "0217f5b7-c036-46d0-9c97-36c57218a345",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "11d187b8-7816-4ad1-828f-055f81cf71ae"
        },
        "item": {
          "id": "052b69d9-7897-421b-b19a-f0cba07ae9e0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4164e075-7f04-4ac9-a800-3a8feed1caf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e432b88-0771-47d0-8f05-d72b715656db",
        "cursor": {
          "ref": "fdf92016-e2cd-45d1-a045-d0f839b37d1a",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ab2afb20-5bbf-4851-9397-1cc3a4099c98"
        },
        "item": {
          "id": "2e432b88-0771-47d0-8f05-d72b715656db",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "99e62dc1-99c3-4e56-82ec-9bd2f3e59326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b22643e-77eb-4e82-91f9-a1d90b7ac2e0",
        "cursor": {
          "ref": "a86a27d9-18e5-4a0c-b2af-4c43fada9643",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5d5572c1-dc5e-47d8-a293-ace89728bde3"
        },
        "item": {
          "id": "6b22643e-77eb-4e82-91f9-a1d90b7ac2e0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "12034abe-9bd5-48c3-8878-0ca9bb4c3e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247cce34-d068-4a2c-b25e-0eeb4631c908",
        "cursor": {
          "ref": "fbe77345-1b6a-4ec6-8fea-8fd101be5660",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c273730a-cde9-47e0-98a8-8740cbe8ff06"
        },
        "item": {
          "id": "247cce34-d068-4a2c-b25e-0eeb4631c908",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "180a6fd5-201e-413d-b361-b0f3803ecd79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69000de6-81c0-4f79-9e2c-5ed546990d0e",
        "cursor": {
          "ref": "10be1da5-32c3-4c62-9660-c707e7c0b6f2",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4fcc8140-b82a-4750-9ec1-2bf9609fd2e2"
        },
        "item": {
          "id": "69000de6-81c0-4f79-9e2c-5ed546990d0e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7fef58c1-46b3-4edf-b536-aeee06f417ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31f1826-d8aa-45ff-8d5e-0afd898150f8",
        "cursor": {
          "ref": "0f90115a-a1d5-40c6-9ec6-015beba24d7e",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8f8a1b13-4851-4278-b058-e8255c80c72d"
        },
        "item": {
          "id": "d31f1826-d8aa-45ff-8d5e-0afd898150f8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "efeed9bb-b741-41b4-b3b4-049564d2a73b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed5c303-b433-49e4-bc1f-5de3f514b259",
        "cursor": {
          "ref": "f963793f-f6e8-4cdc-b42f-4561ca46f402",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "68035d68-ecb4-4721-9f36-e329a2c54063"
        },
        "item": {
          "id": "1ed5c303-b433-49e4-bc1f-5de3f514b259",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5a504166-fe1c-4c3d-9531-a8ba422c81fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33269893-5eae-427e-afe1-1fae089893ab",
        "cursor": {
          "ref": "b2698f10-e356-450f-b8c9-e4e9879f4742",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "47645a57-a522-4bd4-ab6e-9f31c673b364"
        },
        "item": {
          "id": "33269893-5eae-427e-afe1-1fae089893ab",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c099e225-9be2-483f-8818-23f7dd5b0483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe9ee6c-fa62-4673-b74d-3ba9a755c69b",
        "cursor": {
          "ref": "e1afa222-b10a-492a-a797-a6182b7677d5",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "60620381-7f3b-4f79-804e-949550baef65"
        },
        "item": {
          "id": "dbe9ee6c-fa62-4673-b74d-3ba9a755c69b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0a711eb2-0358-4559-8afa-7775b7c082f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2477e68e-839c-4274-996d-3dd642477dd9",
        "cursor": {
          "ref": "63a7e83a-b5c8-4b28-a797-1c422aea6ed6",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1f1225e2-1e2c-4aea-8dbc-bb6f0fce710d"
        },
        "item": {
          "id": "2477e68e-839c-4274-996d-3dd642477dd9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5d9cfb0f-7763-4f4f-b613-bed5fe9a0e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737c5b63-cf0a-4700-8a9a-3c816c44a045",
        "cursor": {
          "ref": "f6e45781-a182-4d86-902d-edd68b617914",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2c86284f-8369-4a88-85d8-5f82a5dcc3f7"
        },
        "item": {
          "id": "737c5b63-cf0a-4700-8a9a-3c816c44a045",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "df695385-0419-4d36-b2ad-fa8b394bac80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea8f04c-12b4-4b11-9c37-99311ac28bc6",
        "cursor": {
          "ref": "e99c011b-0205-4608-9a65-cd407e1dbc41",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3bb8aba7-831a-4751-ad8f-a162d9ebb5c0"
        },
        "item": {
          "id": "6ea8f04c-12b4-4b11-9c37-99311ac28bc6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d4eea430-1c79-4dc9-b125-8fb461bb946d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f969a3da-945d-452e-83f1-feaf93bc7237",
        "cursor": {
          "ref": "dcabf249-4f32-4038-b5f6-d39bb0857214",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0047207f-817c-4311-b68b-7d8f76a364af"
        },
        "item": {
          "id": "f969a3da-945d-452e-83f1-feaf93bc7237",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "e5874080-7d65-4243-a9b6-721dea708002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b74823-ae33-4c4c-880e-71e4039c1467",
        "cursor": {
          "ref": "6ea50d51-6090-4638-824f-2a609d40103d",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c7a3ca75-6a52-482b-bab3-4dfb5b54d734"
        },
        "item": {
          "id": "a0b74823-ae33-4c4c-880e-71e4039c1467",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f85f9fd4-a5f1-44dd-9b3a-09c0e4e0f8d5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60e2b86-f874-4cdf-a796-2412a3e7cc07",
        "cursor": {
          "ref": "6d0f66d6-bc69-45e7-a089-7d5ef2b67626",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "07123941-4113-40bc-be22-06084057731b"
        },
        "item": {
          "id": "b60e2b86-f874-4cdf-a796-2412a3e7cc07",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "84d296ee-3797-43e4-aa68-37e20e4199e6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 580,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42303bcc-b495-4139-b2b7-6683c511ff2a",
        "cursor": {
          "ref": "213ee8d8-9872-4d61-9804-85f25a0c7b62",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "37ee08c8-cff5-498f-a2bf-a97d5ca66358"
        },
        "item": {
          "id": "42303bcc-b495-4139-b2b7-6683c511ff2a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b74e4526-f98b-4f20-bddf-6bb53e01ef48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42303bcc-b495-4139-b2b7-6683c511ff2a",
        "cursor": {
          "ref": "213ee8d8-9872-4d61-9804-85f25a0c7b62",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "37ee08c8-cff5-498f-a2bf-a97d5ca66358"
        },
        "item": {
          "id": "42303bcc-b495-4139-b2b7-6683c511ff2a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b74e4526-f98b-4f20-bddf-6bb53e01ef48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951ee3d0-52af-4cf5-a21e-e41db50e061f",
        "cursor": {
          "ref": "68988cfe-84b0-4c2d-b344-5fa83423624f",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1df3ae81-4081-4afc-9eb6-87da2d0d1c2e"
        },
        "item": {
          "id": "951ee3d0-52af-4cf5-a21e-e41db50e061f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "76b9ee67-301f-462e-94a9-8071507cb1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb5dbad-1923-43a3-9136-c4377a33a77e",
        "cursor": {
          "ref": "83f0730c-4d31-4775-90e2-b2d66a36df99",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f33fa490-f30c-4db4-b898-199b2e017adc"
        },
        "item": {
          "id": "6fb5dbad-1923-43a3-9136-c4377a33a77e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "15038f67-2d13-4a66-88b1-aef86ad39474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd10a508-dd90-4cdc-a0ee-61379fb3c14c",
        "cursor": {
          "ref": "da9821c5-21eb-4d17-b284-b5bdefcd5d99",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e6082a60-d29c-4115-a719-97586c844397"
        },
        "item": {
          "id": "bd10a508-dd90-4cdc-a0ee-61379fb3c14c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "922affb7-8850-42b9-8158-4294b6b101e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134c7a3b-9903-4d49-88cb-58ef3e2b43e5",
        "cursor": {
          "ref": "633b219a-b7e6-4a75-89b2-8dc095462924",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d4e4221a-e859-4750-bcae-daf959ec01a4"
        },
        "item": {
          "id": "134c7a3b-9903-4d49-88cb-58ef3e2b43e5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "47e53ddb-d6c1-4b13-9aeb-18f5d017b908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508cedd4-9eab-4b73-bef4-40385b93630b",
        "cursor": {
          "ref": "fb96f01a-6005-4537-b691-fa60273824dc",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e27092a4-96be-48b0-9363-a7957f288219"
        },
        "item": {
          "id": "508cedd4-9eab-4b73-bef4-40385b93630b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9ab62e9b-2966-474b-ac52-d2ac655995b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28bd84b-730b-4d9f-acb6-a1487cce726e",
        "cursor": {
          "ref": "a4561530-ee5d-4ed2-b767-95f09de86031",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e45daeff-92dc-40f3-89fd-ebb53ac14149"
        },
        "item": {
          "id": "a28bd84b-730b-4d9f-acb6-a1487cce726e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d3a7855e-3c1b-49dd-a781-03e20e14c947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae95e88-4de2-40de-a841-0edd91cf442d",
        "cursor": {
          "ref": "e8c47bc1-aa2e-481e-8a01-9c86ae51e159",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6a194faa-9e68-48e5-acb5-9ef9cbadb8e0"
        },
        "item": {
          "id": "0ae95e88-4de2-40de-a841-0edd91cf442d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "27ac8512-9955-4b30-8469-2793fda0f5b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0d79ae-4dfc-42c5-af5a-21f30d49e984",
        "cursor": {
          "ref": "90efd214-3dea-4f01-b6e3-8b7f09ed718e",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6340069b-5368-412e-93d0-f269f8d97be5"
        },
        "item": {
          "id": "3e0d79ae-4dfc-42c5-af5a-21f30d49e984",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "cc37e154-0b90-4a0e-97d3-a827cd938b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e76e517-0f4d-440f-a2e5-6f50e60317e0",
        "cursor": {
          "ref": "1e1fb86b-8121-4b79-af00-e8b79e233f9c",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9700a93a-ea4b-4686-ae42-68224ba1823c"
        },
        "item": {
          "id": "1e76e517-0f4d-440f-a2e5-6f50e60317e0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "17a64151-e072-4c79-aab9-ce1ecf466b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b029cc20-b970-4c36-ac85-cfcff6eb47e2",
        "cursor": {
          "ref": "1971eb94-5681-4ef2-964f-c90465230490",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a7499369-15cd-4589-be51-f9f2f853e6e7"
        },
        "item": {
          "id": "b029cc20-b970-4c36-ac85-cfcff6eb47e2",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2f031d8e-bcf3-4a63-b849-f8a1e9ea1ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12987b4a-e10c-4aea-a184-52f732581a80",
        "cursor": {
          "ref": "3d5a388c-96c5-44c1-96cb-4393de3e52eb",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "626e0cde-4ce0-4b9e-aee2-9438365e5753"
        },
        "item": {
          "id": "12987b4a-e10c-4aea-a184-52f732581a80",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "57eaaeab-8042-49fd-a46a-f3a0fae7136e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "718739e1-7a3e-4a75-b5fc-ba60b26268a4",
        "cursor": {
          "ref": "4b2ef2b7-3357-49e1-be5d-bd40acf246e2",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "374da09e-2587-4a75-93b6-57cdd6995a11"
        },
        "item": {
          "id": "718739e1-7a3e-4a75-b5fc-ba60b26268a4",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6147d65d-6c2d-4acf-a1bc-b9e04fdbf891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e9d4d7b-3003-4734-8def-2854b9cb8eb6",
        "cursor": {
          "ref": "6b80ff26-dfe6-4785-9b5e-5b14f59e4b83",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "78e1be00-d0a0-4274-8ed6-85864523b29e"
        },
        "item": {
          "id": "6e9d4d7b-3003-4734-8def-2854b9cb8eb6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1d02d943-c13a-4944-80aa-d72e975f20f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9863e95-78bf-45c2-bed3-e936a4e104be",
        "cursor": {
          "ref": "56933231-b581-4758-a93e-e54873c48845",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3f585d80-06a0-414b-8bf4-04808f4a1431"
        },
        "item": {
          "id": "c9863e95-78bf-45c2-bed3-e936a4e104be",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b63ea3a7-849d-4065-b02a-9f99d9775141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c39bbe-4960-4b5a-b20f-ef2e478c807d",
        "cursor": {
          "ref": "5ee0f88f-4cff-469e-bc52-0bb868757123",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "11d203ed-e683-4435-b9ab-ed52554a88d5"
        },
        "item": {
          "id": "72c39bbe-4960-4b5a-b20f-ef2e478c807d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d8f948ce-e4ff-44bf-82a4-83863f04ae97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7363ac-db13-4138-b7b8-57405121d48f",
        "cursor": {
          "ref": "35086ba7-ef58-41c8-bc7f-b74ec7a2c926",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d4b00246-1ea0-40be-807e-890c7749d5c2"
        },
        "item": {
          "id": "8b7363ac-db13-4138-b7b8-57405121d48f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c1d38644-1acb-44e5-9df0-85e84591e670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81363671-d302-403c-9287-030653fb2248",
        "cursor": {
          "ref": "e979d07b-853b-4508-ac58-f86eff2eb133",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "47542673-a121-481b-8f87-da7d9cf1a5a0"
        },
        "item": {
          "id": "81363671-d302-403c-9287-030653fb2248",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0ab4e0ce-69e2-42cd-90a5-33d830268eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d86a91-98b0-47e6-a505-3d7e3338aad9",
        "cursor": {
          "ref": "b7488ba0-eeac-4fe6-8efd-3b71260b7188",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8e570624-d703-4388-bac3-fbc0ddab56bd"
        },
        "item": {
          "id": "e0d86a91-98b0-47e6-a505-3d7e3338aad9",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "1aa66a20-f81d-40ba-8a5c-064dc517951f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5f751d-970a-41ad-b534-750a781a0c57",
        "cursor": {
          "ref": "3f39c95e-6a36-4192-a312-c1604304a662",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5c62235e-081f-400e-a2a3-31e450e53b84"
        },
        "item": {
          "id": "7e5f751d-970a-41ad-b534-750a781a0c57",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c90abc16-ae95-4498-af2b-68011d21fd35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6ae5e5-5948-4d08-bb19-cb9468c30fb5",
        "cursor": {
          "ref": "e6a4bdea-bf57-4cb2-8e93-9f856c833602",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4a82e827-24fd-4494-89e9-c9d93e18661c"
        },
        "item": {
          "id": "cc6ae5e5-5948-4d08-bb19-cb9468c30fb5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d4b943cd-7c9f-4eec-babf-ea994a9a4a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1dc868-606d-4964-a587-511f7d5ccd18",
        "cursor": {
          "ref": "5729905b-137a-400c-acc8-7dc03b2191f4",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d3c09c0d-b54e-43b4-b2bd-c9877c6a7ac0"
        },
        "item": {
          "id": "7d1dc868-606d-4964-a587-511f7d5ccd18",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "09ca2747-4e55-42b9-8995-e1a53fd3275f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5be4b4-196c-4272-a3c3-0186a4c93713",
        "cursor": {
          "ref": "ad6298e5-3485-4728-ae3d-3ad3092c8c71",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "213a4602-ff8b-4d41-b20a-e33849d4be1a"
        },
        "item": {
          "id": "8b5be4b4-196c-4272-a3c3-0186a4c93713",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a5f551b1-d25c-4ad5-9f01-635d82d8aa5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c85665-6717-421c-bb55-d78dde792f9f",
        "cursor": {
          "ref": "ed0a40d7-f092-443a-a64f-6c50c99ad97d",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2859bb9d-aaa1-4a7a-8e6a-b8fe218359c4"
        },
        "item": {
          "id": "60c85665-6717-421c-bb55-d78dde792f9f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4ec335fe-7455-4eb0-b0b0-a82fc2888fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a636b4b-3f91-4548-8880-ad48c5c78c4f",
        "cursor": {
          "ref": "eeb2a2dc-d499-4742-9b9c-ec3a1f571388",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c7231437-b092-4ace-bc2d-d5f22a2229d8"
        },
        "item": {
          "id": "8a636b4b-3f91-4548-8880-ad48c5c78c4f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "54e9a19f-424f-4933-a131-515e78403988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80038140-3ec2-4f06-bbf3-e22eea197fe8",
        "cursor": {
          "ref": "2f633b01-40a3-4860-ba5b-3fcff3317251",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "072621f4-67d3-4be6-9989-b9e2cbe057ab"
        },
        "item": {
          "id": "80038140-3ec2-4f06-bbf3-e22eea197fe8",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "553196ae-74a1-4846-82a9-90d919e2a9db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba388c2d-524a-41e5-bb38-56df176a2bc8",
        "cursor": {
          "ref": "2769b784-4766-4b24-9986-1376738306f4",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9ea00239-c709-48ee-9d5b-91c4643a47cd"
        },
        "item": {
          "id": "ba388c2d-524a-41e5-bb38-56df176a2bc8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0be60534-b14e-4577-bb86-1d747b56fddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383dc523-8546-48e9-b5e2-5947d8b58a1f",
        "cursor": {
          "ref": "10b480ab-b53b-4291-9628-13de37393904",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8b3cc61a-9478-4084-bab3-e6ffdd114064"
        },
        "item": {
          "id": "383dc523-8546-48e9-b5e2-5947d8b58a1f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c75f8539-0691-4096-bf8c-725da03b1e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23bcf7a7-3c70-427e-be3d-07dfbfbc0e7b",
        "cursor": {
          "ref": "1f06b0e3-62dd-4c70-b887-013850438678",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "65f55cb1-71e7-4b1f-9523-e02237f24b76"
        },
        "item": {
          "id": "23bcf7a7-3c70-427e-be3d-07dfbfbc0e7b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f16ad011-5880-40c8-a3f6-3da176a2fbf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9946d09-60d1-4e6e-8a6c-2dea5728eeda",
        "cursor": {
          "ref": "a2210b97-0857-492d-9d4e-e609be6717e1",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0bfc1de9-5f5c-4fa2-a046-6e2d07797328"
        },
        "item": {
          "id": "e9946d09-60d1-4e6e-8a6c-2dea5728eeda",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1a904713-5c87-4982-8788-fd02f19dfd6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2712044e-aaba-445a-9890-b0caa4e07957",
        "cursor": {
          "ref": "4ada16fa-8d5d-4b39-8cca-285bd20a4427",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "75dbc792-c038-4abb-8215-c5b2469ecc2b"
        },
        "item": {
          "id": "2712044e-aaba-445a-9890-b0caa4e07957",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "711117e6-f9ce-4769-9ae1-f4646fc7c6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd9b036f-7deb-49f3-a75f-fcd7ef2a912e",
        "cursor": {
          "ref": "a7fd4d1e-2bfc-4dc1-8f02-e99aaa0ccc2b",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "68f3ab57-60f8-4c30-963a-9eb685d8dbf1"
        },
        "item": {
          "id": "fd9b036f-7deb-49f3-a75f-fcd7ef2a912e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d1e22799-4cd6-4d99-9da0-3a51808905f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "485fc977-8f8d-411e-85cb-1bf229bfbcfc",
        "cursor": {
          "ref": "39f68138-c659-4a9f-a1de-b1548ed2e8cb",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6bc3004b-bd77-4909-a6a3-f0834d188923"
        },
        "item": {
          "id": "485fc977-8f8d-411e-85cb-1bf229bfbcfc",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2e597ed4-04dd-4ea7-87b9-002b339dad66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d446bdc3-632e-4766-b17b-392d38a12edb",
        "cursor": {
          "ref": "a4e296b2-15fa-434a-a8ba-f4eed29cd35a",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "96fa3678-64cc-4310-a5d8-77c661e0bfd6"
        },
        "item": {
          "id": "d446bdc3-632e-4766-b17b-392d38a12edb",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "171a8678-2603-4935-b338-3d13b0705420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64040219-9e77-4668-8217-673b524039da",
        "cursor": {
          "ref": "67d27e0e-774d-45d8-a79f-3e46814dd89d",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "eab47fef-8956-441f-aa48-1adfc27c0556"
        },
        "item": {
          "id": "64040219-9e77-4668-8217-673b524039da",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a6876a85-17f5-4af3-98d1-3b57e3ec245b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661aec79-189e-4490-be20-cc3e1f40480a",
        "cursor": {
          "ref": "a13f8e7e-1b2a-45dd-96f3-5f2a064d4351",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d68a0601-d288-4022-a28b-b62b6eebcd26"
        },
        "item": {
          "id": "661aec79-189e-4490-be20-cc3e1f40480a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a5b0bd04-d2b7-4952-911b-99003fa9c434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6aae1ad-b0cb-4de5-8d2b-2e265a262e2f",
        "cursor": {
          "ref": "05eccea1-e57a-4c63-8f04-922fe71ff98c",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "86063d5b-fd13-41c5-9735-9d2fb027a2a1"
        },
        "item": {
          "id": "e6aae1ad-b0cb-4de5-8d2b-2e265a262e2f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "361a6296-e906-4ca7-968d-5c644da401f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d83e54-81f0-4402-803a-46ba6fb5ccf3",
        "cursor": {
          "ref": "673ad391-1481-4a02-9161-8c55146bc371",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b13301e7-4693-4007-bc3a-6c75e2da26ba"
        },
        "item": {
          "id": "52d83e54-81f0-4402-803a-46ba6fb5ccf3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "3db1519a-b3a1-4b4e-b06e-692b941903ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e2ef33-9951-4d2e-be06-1b21af166076",
        "cursor": {
          "ref": "63efe73a-d238-448b-af6e-919c41ad108b",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0d3c81a6-338b-4271-99cd-05bb0e62d1d0"
        },
        "item": {
          "id": "b1e2ef33-9951-4d2e-be06-1b21af166076",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "fa4ae1ef-0c6b-48bb-a10e-cdad4e8bce39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded12409-284d-4948-9cfa-1e37696159f1",
        "cursor": {
          "ref": "5f12ac78-70e7-4402-8daa-d7433d67fd60",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e6cb163f-effe-47a1-900f-34c21ea00923"
        },
        "item": {
          "id": "ded12409-284d-4948-9cfa-1e37696159f1",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "73a6f91b-ce06-4746-bea4-c8cb88621c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 924,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301bc1f7-f65b-4e1b-abd8-2bb02e0d53b9",
        "cursor": {
          "ref": "0bbc699f-f322-49fb-8608-30ce3ac38f48",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "fb7922b4-2dff-4d8c-8650-7a9d42f8b4ed"
        },
        "item": {
          "id": "301bc1f7-f65b-4e1b-abd8-2bb02e0d53b9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "fccf46d9-6889-4ba2-936e-cd25ec48fc9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af2d919-f571-46d3-85f7-27802e425c4a",
        "cursor": {
          "ref": "5bb22ae1-ff15-4977-b5a1-58fd9c916d80",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0ac77429-5c8f-414d-9d7a-4993dcb33b1f"
        },
        "item": {
          "id": "9af2d919-f571-46d3-85f7-27802e425c4a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0cebd6f0-e88c-4aed-a1ee-1c99df256f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ba7417-8507-47b7-9935-47063dd8b192",
        "cursor": {
          "ref": "7f0ca145-0805-4a22-ba3a-380f803d980a",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "dbc7d947-efec-46de-b884-6226b3d96bde"
        },
        "item": {
          "id": "39ba7417-8507-47b7-9935-47063dd8b192",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8c06ce1b-219b-4b83-aa30-dbd9da4fa785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08029bb-b1ae-4087-835e-ef32cae66571",
        "cursor": {
          "ref": "f75592f8-62a9-43d0-901b-ec6443e0a04f",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "43aea975-3218-4b78-bdf5-9caeb5e55254"
        },
        "item": {
          "id": "d08029bb-b1ae-4087-835e-ef32cae66571",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a19c8cd2-cdac-4d6b-a91f-d5931ee080c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e309a5f-5fe2-4882-8ed9-47708a81d22f",
        "cursor": {
          "ref": "fea5f0a4-404c-4564-9472-a6098105357a",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f6806494-bf64-4c25-a6d8-0fcee0093dd4"
        },
        "item": {
          "id": "6e309a5f-5fe2-4882-8ed9-47708a81d22f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9f111cf3-64c3-4c11-bf6e-e54fd1f16e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9975c886-910c-4ab7-a173-ce3120963ce0",
        "cursor": {
          "ref": "3452f142-2c54-47aa-b0a9-3f7ebad34d97",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "113b82f2-612f-4ac9-8824-15c2af4387dd"
        },
        "item": {
          "id": "9975c886-910c-4ab7-a173-ce3120963ce0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "71753c9e-cb09-45bc-902d-1839d3ad26cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cbb327a-4cf4-40f8-ac35-0a5acd380bb8",
        "cursor": {
          "ref": "ea63db86-88ae-4bf8-9632-c2cbb331f3eb",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "87dc9449-5e26-4367-879f-66ba9cccf7f4"
        },
        "item": {
          "id": "2cbb327a-4cf4-40f8-ac35-0a5acd380bb8",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f02439aa-e9ef-4215-aea9-40e92ce40051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce52be6-6c87-48da-b2f4-c64d1b609616",
        "cursor": {
          "ref": "a33b461e-97d1-43c6-b37f-7f2757ae0d8b",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "92d99b2d-6b51-4229-87fc-b5739eeb74e0"
        },
        "item": {
          "id": "fce52be6-6c87-48da-b2f4-c64d1b609616",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "08112ef7-b2e2-4ee8-9cc6-c286eaab08f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d46f27-913a-481c-afaa-0aaa00cdf1e2",
        "cursor": {
          "ref": "eae8aabc-87c9-4394-bd32-bdd7148cfccf",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d90c996c-ec3a-47bd-a412-ec14e551c49d"
        },
        "item": {
          "id": "59d46f27-913a-481c-afaa-0aaa00cdf1e2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5f5180dc-c016-43e6-84d3-da46a2282a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3eb180-15ba-4f08-aaa3-d91e1f7cbbd2",
        "cursor": {
          "ref": "1472fa7d-7513-4724-876e-1f791c6cecf1",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c536edfb-e9f5-4c2d-9c83-a434ce7d3867"
        },
        "item": {
          "id": "2a3eb180-15ba-4f08-aaa3-d91e1f7cbbd2",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d7df61ac-c0ac-4024-8b60-c554c988e60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05aba2ee-70b5-4e73-8843-45809023f062",
        "cursor": {
          "ref": "51dfcebd-2f02-4bfe-9581-0ed9a1e6bd07",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "27bb43de-f9cb-42e4-adb5-bb66ecb5e437"
        },
        "item": {
          "id": "05aba2ee-70b5-4e73-8843-45809023f062",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1c6a2a0d-ae48-43c5-a9c9-d0986f0f8e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c666c38-4947-4997-8e0b-557edf19a827",
        "cursor": {
          "ref": "bdbbaac0-48ce-4287-a29d-2f21d49469d5",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fe4af985-bc27-41bd-93b1-5353ce04a533"
        },
        "item": {
          "id": "7c666c38-4947-4997-8e0b-557edf19a827",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7a358e68-f57f-467b-932c-36f0d621536d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e646d517-b898-4ff5-ba00-4453278003ff",
        "cursor": {
          "ref": "97cff247-ca07-4fb2-aad7-94dc3b71cc7a",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "45905c4d-8c4b-48ef-8364-8ef32bf0ded0"
        },
        "item": {
          "id": "e646d517-b898-4ff5-ba00-4453278003ff",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "7be90f33-92cc-49e1-995b-5bd69fca09e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69de6d1-760b-4e4f-91fa-4d81407b0b4e",
        "cursor": {
          "ref": "f431983e-813a-44a7-861a-8e2340e50b6d",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9ba66143-0509-462c-814f-5bd4f1f05619"
        },
        "item": {
          "id": "e69de6d1-760b-4e4f-91fa-4d81407b0b4e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "06d27987-ff1a-4277-817f-0b58055d6c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9f9a8f-07da-48f3-89cb-1abd43ae5e6d",
        "cursor": {
          "ref": "caca2197-e637-4d66-8ff2-527fd1160df6",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "204428f8-354c-4ae1-a715-41d69d151772"
        },
        "item": {
          "id": "2c9f9a8f-07da-48f3-89cb-1abd43ae5e6d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ec732b58-53dd-42e1-8685-ded9cfd91827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3ff14d-3473-4497-bc0c-288465d8f28d",
        "cursor": {
          "ref": "ee3739f4-cf2f-4fbd-a6dd-7974c4093235",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ae52f523-b774-4c10-8f0c-03962cbe97cb"
        },
        "item": {
          "id": "cc3ff14d-3473-4497-bc0c-288465d8f28d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "dc74f790-c683-4653-b14d-2b861cbb611b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78bec941-c5ad-4168-b290-0741e21e1a8a",
        "cursor": {
          "ref": "b5bed4f3-9bd7-47f1-80c6-5c8c499964e2",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d432dde8-3546-49e0-b9bf-e7b2104bff52"
        },
        "item": {
          "id": "78bec941-c5ad-4168-b290-0741e21e1a8a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "262537a9-b764-4d29-8944-20b2de94ee2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f4fff4-5ef7-4ab6-9971-5440470df089",
        "cursor": {
          "ref": "fb5f7f18-95cf-49b6-b088-c331085be561",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "eaf88157-c586-4677-81c7-44500cae2915"
        },
        "item": {
          "id": "66f4fff4-5ef7-4ab6-9971-5440470df089",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c9011a82-936c-4e89-aeed-f91af3fd87a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 853,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c70a3e-4c62-4cf0-8b66-23bd5d1d5a8e",
        "cursor": {
          "ref": "82ddaafb-a0f1-4754-88ca-dd584c8df076",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "285f919a-dc25-4c87-9b00-ffe24c87ce48"
        },
        "item": {
          "id": "31c70a3e-4c62-4cf0-8b66-23bd5d1d5a8e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "25dd8921-371e-48e5-99dc-1e6363ec41ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 936,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d35c19-fd9a-41b2-ab13-2b2a3f65e664",
        "cursor": {
          "ref": "2cb01124-5bc3-4b5f-945f-1a3cdabaebc4",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f12f4025-916b-407c-a344-640da1d2b669"
        },
        "item": {
          "id": "26d35c19-fd9a-41b2-ab13-2b2a3f65e664",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c2f7aca3-619b-4309-bdb3-9ef4fc43b632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c23cd4-614b-45eb-9bf5-199c1deccf05",
        "cursor": {
          "ref": "21d01cbe-baa4-4852-91e9-0a6971143216",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "37d31c7c-da8a-4b26-aa52-581047609f1e"
        },
        "item": {
          "id": "c9c23cd4-614b-45eb-9bf5-199c1deccf05",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0593dc4d-2767-4fcb-bf47-7ecabda56d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80620dbe-024a-4de4-8988-9b46b7b4e8cb",
        "cursor": {
          "ref": "54d861e3-8b15-4ee8-bd04-c4cf80de1ab9",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6557787e-e85d-49ad-a750-87820e932cbf"
        },
        "item": {
          "id": "80620dbe-024a-4de4-8988-9b46b7b4e8cb",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "08841ea7-6f8c-4c61-aab7-292e681d6807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea48f9a-1635-47bc-8057-a0b570c72ea3",
        "cursor": {
          "ref": "fa747d74-868e-4079-a9c9-3e50f5135cca",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6ee8cc1a-a6ca-4784-b25a-dc837aca536e"
        },
        "item": {
          "id": "bea48f9a-1635-47bc-8057-a0b570c72ea3",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "73583a25-8bca-4980-95dd-64b78dfbea18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f035d7a3-3723-42b4-afb7-a8838cbffd1f",
        "cursor": {
          "ref": "028331c7-b990-4673-a119-b41a71368f25",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "08a4dd24-4026-4769-bbbb-b1c2480aa681"
        },
        "item": {
          "id": "f035d7a3-3723-42b4-afb7-a8838cbffd1f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9bead0f6-de2b-4e86-9e3c-e494c8a25474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201e7792-7e7d-47bf-8112-35f6ff50f4da",
        "cursor": {
          "ref": "b494513f-7e0a-4e43-a0b3-01e2096757e5",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "89c5216b-89fb-427f-909e-a67ebf78aef1"
        },
        "item": {
          "id": "201e7792-7e7d-47bf-8112-35f6ff50f4da",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3eaa2d43-de8a-4a70-94d7-e08860b6876a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec8e31e-a107-4bed-ad22-e14d4fad2956",
        "cursor": {
          "ref": "4d6b51ef-a79d-437a-920f-be1e4113d1c3",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0ee8690f-0c20-4694-8b59-4d0102770b45"
        },
        "item": {
          "id": "4ec8e31e-a107-4bed-ad22-e14d4fad2956",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e6e81fa4-52a7-4add-bf22-ea6662a7395e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b9f1d4-3b98-4f62-9f9c-2a0a843edee4",
        "cursor": {
          "ref": "13831edf-e30e-4ee6-9e94-1017600c8379",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f33459bb-dd9e-47f0-b350-4a8534e8f0fa"
        },
        "item": {
          "id": "b2b9f1d4-3b98-4f62-9f9c-2a0a843edee4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "14ec5f9c-aecc-4e11-8401-2875adcf9db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab3779d-3a42-4b95-96d3-e19987209ed0",
        "cursor": {
          "ref": "df961419-1fb3-4216-b3b6-112a8f3117f3",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "610a1005-79b8-4e2f-b920-5c0b7a284f94"
        },
        "item": {
          "id": "cab3779d-3a42-4b95-96d3-e19987209ed0",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "1ee77d3d-9970-4937-8424-381df44f8583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a9077c-9095-441a-8edc-8dbb16f4c180",
        "cursor": {
          "ref": "692d5a1a-6983-4b3c-a253-ec1e5faa8e0b",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ae8601fc-297e-435d-a57b-f18ca4e12901"
        },
        "item": {
          "id": "27a9077c-9095-441a-8edc-8dbb16f4c180",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4d79d960-6d63-4f21-a720-a73e54cade5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3622146-b889-403d-a8fa-554d9dc2d71c",
        "cursor": {
          "ref": "57620793-cf84-43ef-8ccf-0df263aaa7ab",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7da79ab7-4c91-4ada-938d-e702604263d5"
        },
        "item": {
          "id": "e3622146-b889-403d-a8fa-554d9dc2d71c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "757cd78a-ad16-4ba0-9dbb-62bb1460960e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b988fdc0-b455-422b-b844-a40c02b0e391",
        "cursor": {
          "ref": "c4146e47-455e-41f8-b259-a301ea3cd69a",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4635145a-19c1-4862-b49e-0c2c3a4dfeed"
        },
        "item": {
          "id": "b988fdc0-b455-422b-b844-a40c02b0e391",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "09f0dd6c-112b-455e-9d62-42f0da714d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf80bc2-a76b-4d1d-9b21-812f328735d4",
        "cursor": {
          "ref": "50f03f14-dd01-477a-915d-c5030af6a5e3",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "8b22d193-2e36-4f71-934c-961873ce4d09"
        },
        "item": {
          "id": "2cf80bc2-a76b-4d1d-9b21-812f328735d4",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7c5362b7-df4e-45e5-bb02-45c44a4fbe19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1670d6-146d-4feb-80ff-68892bee984a",
        "cursor": {
          "ref": "1ec03f48-84cd-4384-81ef-75992f84f9a0",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5db7131b-9d0d-4ac2-82ea-d90247dddcd9"
        },
        "item": {
          "id": "0f1670d6-146d-4feb-80ff-68892bee984a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0e78c42a-ad9b-43a8-9403-23c72f7e4423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04ee94b-6579-44ae-b947-dad70c69300c",
        "cursor": {
          "ref": "8d85c13a-6731-49ef-b94a-9a458aedbc54",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "257d4058-8812-4e85-87d5-a584ec515249"
        },
        "item": {
          "id": "b04ee94b-6579-44ae-b947-dad70c69300c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "864ea992-5671-4513-a4cb-9e29886cb7d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5c354d-7908-4e9b-a5c8-523bd069a431",
        "cursor": {
          "ref": "be63d7df-4ffe-401c-a70d-fa702b8bb8ff",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9e88593b-6eaa-4970-a3aa-74d035f9cd17"
        },
        "item": {
          "id": "dd5c354d-7908-4e9b-a5c8-523bd069a431",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "935762b8-f0c4-4712-b74b-5c8dcd4a5968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f400d62-f2e0-4f0c-b91e-e022cb3b098e",
        "cursor": {
          "ref": "c896d535-b07e-42b1-bac8-736ab4bbdb3c",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1181621c-71cd-4116-af6f-c4f2cb00056a"
        },
        "item": {
          "id": "7f400d62-f2e0-4f0c-b91e-e022cb3b098e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "852120b7-46be-46f8-ae6a-f61da0e2c163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39992d9d-da36-495c-8a5c-04a076c05513",
        "cursor": {
          "ref": "81f9b501-20e9-4e93-bf3e-6bc8dfcbf176",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0d7be607-a0c1-44bb-8369-841c7cd53814"
        },
        "item": {
          "id": "39992d9d-da36-495c-8a5c-04a076c05513",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "48654679-b86d-425e-a817-b837d8c23f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bfc8aa3-45aa-4dd0-b03d-0041ea6c3c27",
        "cursor": {
          "ref": "2a787eb4-5c59-4c15-8fc4-d229be4e3bf6",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "84e05317-cc0b-46f6-a417-4f1215bcdab4"
        },
        "item": {
          "id": "3bfc8aa3-45aa-4dd0-b03d-0041ea6c3c27",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "42679f36-65b9-4fff-8d46-c3546e52c84a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bb16ac-a3bd-4011-b876-b0c0a103c10b",
        "cursor": {
          "ref": "e4a700f8-9ca3-42ad-a2ac-7a466cbbc2cf",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d5ffd426-7165-4eb5-86ef-0553adf3cffc"
        },
        "item": {
          "id": "d8bb16ac-a3bd-4011-b876-b0c0a103c10b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f65d62ce-3fe0-4d15-b261-ceec1311db13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5c350e-09b0-4a8f-a6e7-4a88e3058b0a",
        "cursor": {
          "ref": "957ea6db-537a-4dc9-bbe8-0614516755cc",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2d9aae75-428a-4dcd-aec9-d0172ce65089"
        },
        "item": {
          "id": "ae5c350e-09b0-4a8f-a6e7-4a88e3058b0a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1a0c47d6-f8be-4811-8b2e-a91652ef884e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62913f8-7efd-4c2f-9447-d9fad89e6fc6",
        "cursor": {
          "ref": "8a4b70eb-f826-47f6-a9fe-a35dbfce5d4f",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3e155b6d-3ff2-40c0-b91c-635c162599a5"
        },
        "item": {
          "id": "e62913f8-7efd-4c2f-9447-d9fad89e6fc6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c5eb3e17-b28e-436f-ae62-5b9a463b88d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cedcc935-0acb-4ea2-a5bf-d621f0987236",
        "cursor": {
          "ref": "e3e910bf-9e45-4add-a579-c21925b6ba83",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "cdffebfd-9878-4508-9841-10e19429b2d7"
        },
        "item": {
          "id": "cedcc935-0acb-4ea2-a5bf-d621f0987236",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e31f535b-50a8-4d0b-a0c2-ae74d40e2c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8584067-a399-430b-9a5d-e77d2c97de32",
        "cursor": {
          "ref": "d755814b-b951-4737-819b-60d0deda9bcd",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8e14cff0-200f-4a5a-83c5-efe31c76bf50"
        },
        "item": {
          "id": "f8584067-a399-430b-9a5d-e77d2c97de32",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c7fbfcaf-da8f-4ddd-9856-2ee0f7a6c088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef342565-dfcd-45b9-b1e0-e9c9a5282cf8",
        "cursor": {
          "ref": "61f0fb6f-8f0f-4f5e-9760-bd42b846c948",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "188cf091-4385-4b02-b2f2-884901a0b081"
        },
        "item": {
          "id": "ef342565-dfcd-45b9-b1e0-e9c9a5282cf8",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "99096628-bdf2-4ea7-b643-4280080da3c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e48da8-25e1-4825-a8ab-7d7fc85129cb",
        "cursor": {
          "ref": "61765f61-7c98-412b-8fd4-687d9a0de78f",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "10d47dcc-8c07-42d6-87a5-15eaec9dcb2e"
        },
        "item": {
          "id": "80e48da8-25e1-4825-a8ab-7d7fc85129cb",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f6ac5b14-24ac-4715-8dcd-ab2116cf116d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2219a99-0559-4af2-9050-e859120ccc92",
        "cursor": {
          "ref": "f7db46a4-c3ea-473f-a8ae-440826779677",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e9951e36-6a36-4a76-921a-6b8404c6464c"
        },
        "item": {
          "id": "b2219a99-0559-4af2-9050-e859120ccc92",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ba383114-7509-439f-aa11-36fd18310a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd785afc-009e-47d7-85e2-c83fcfbb5780",
        "cursor": {
          "ref": "158bc276-aa1b-47e6-8d35-e4a481478431",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "07937767-ef81-4c12-9830-36d054ba05cf"
        },
        "item": {
          "id": "fd785afc-009e-47d7-85e2-c83fcfbb5780",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "09744d42-da4a-4ff8-b260-274c0654d03f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c03a48-036f-401a-85fa-ab3fb091f266",
        "cursor": {
          "ref": "250ca142-6be1-4942-a8a2-4aa5f0f106b7",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "be57347d-c097-4cef-a9ba-a50a9b49e740"
        },
        "item": {
          "id": "11c03a48-036f-401a-85fa-ab3fb091f266",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a2041d81-05ac-4209-9b3a-4a6682cacd2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4165cca7-374c-4a5f-8763-538ef203475d",
        "cursor": {
          "ref": "941eedcc-78d8-4656-93d9-e657084c866e",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "dd38f9be-3fba-4ff7-8a47-4a6be93cd8e5"
        },
        "item": {
          "id": "4165cca7-374c-4a5f-8763-538ef203475d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "03e3c293-7a1c-41d8-86af-bd8f7772ad11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c233aac3-e120-4546-85aa-3c8946ee011a",
        "cursor": {
          "ref": "5862130d-7af3-47cf-8597-ea0444739f19",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "66c55835-1014-423e-95fa-20917837fd32"
        },
        "item": {
          "id": "c233aac3-e120-4546-85aa-3c8946ee011a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6789ae47-d689-44ab-abcb-b9ce73506f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2277efb0-294d-4c5a-a98d-7f244809b707",
        "cursor": {
          "ref": "f7c417a4-d9f3-48ee-9ee4-ce2cc1c8b701",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d82b8285-7cb9-4d8f-bb28-a70f6fe20eae"
        },
        "item": {
          "id": "2277efb0-294d-4c5a-a98d-7f244809b707",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9d2d6e2d-374f-40f7-a034-bfc8f87bb865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27042015-76a8-4b26-9d31-119b4a6d9cfb",
        "cursor": {
          "ref": "6bba844a-cfe0-416b-bc90-6eb1bc20533c",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "770e1e7e-3f8c-44a5-a501-a7b18b8943b6"
        },
        "item": {
          "id": "27042015-76a8-4b26-9d31-119b4a6d9cfb",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "edc9d1e4-7181-4fd5-b4a6-feae4c4636cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4143c847-f425-4003-92e5-467d50502ddc",
        "cursor": {
          "ref": "1007567c-affd-4b39-86bb-da010aae9611",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4bbecacf-38df-4633-9532-489ee22da0f6"
        },
        "item": {
          "id": "4143c847-f425-4003-92e5-467d50502ddc",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "237e7601-71ad-4e3e-b54a-a0ee3a2b1451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8846445e-bec1-4d26-b61a-67cfb5c244c1",
        "cursor": {
          "ref": "0de6f9b3-2164-406a-914f-e522a4deedda",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2652734b-7a24-41fb-a5cb-56f839125ab8"
        },
        "item": {
          "id": "8846445e-bec1-4d26-b61a-67cfb5c244c1",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c171a9d1-14da-43ff-aad8-bdb967f893b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d031c7-cd4f-4d4d-9163-e3e7e806c279",
        "cursor": {
          "ref": "78ff3bf7-d58d-48a1-b29b-678f97f02aaa",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "03dde67e-9f48-4221-8bfa-7cb5dd07aa3b"
        },
        "item": {
          "id": "66d031c7-cd4f-4d4d-9163-e3e7e806c279",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "626fcf67-cc25-42c9-8622-4c462a9fe797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374fd288-722b-4bc7-bc45-7b25d8c956e6",
        "cursor": {
          "ref": "3c94c653-6fe8-494b-897e-840b0f964b46",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8ce10ff4-f106-4320-b0c0-2bdbfe2e203b"
        },
        "item": {
          "id": "374fd288-722b-4bc7-bc45-7b25d8c956e6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "24e17b5f-a522-4520-9caf-1ba6ba988130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524d93a3-403b-4934-96ac-b64b57f63768",
        "cursor": {
          "ref": "a76803ba-cc30-4c58-90e0-29500d1b5bcf",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a4c92e88-3517-4de7-b4af-4792c67dc77e"
        },
        "item": {
          "id": "524d93a3-403b-4934-96ac-b64b57f63768",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1e7b5040-d856-4400-b9e5-b0901a3b0e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9534a51-ccd8-4efc-8b10-50a74cb9281c",
        "cursor": {
          "ref": "8d354ec3-6575-4d60-8a9d-5237f9c77fcf",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "90b6abc8-e1f9-466c-8532-38b0c18e67d4"
        },
        "item": {
          "id": "d9534a51-ccd8-4efc-8b10-50a74cb9281c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6494b7de-b668-4e92-bc70-13802e6a1125",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c13c44-e91c-4710-ae1f-3db920a64d42",
        "cursor": {
          "ref": "9a11eb3b-4de6-4a3b-b6e0-a87ac1aaf5a6",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "cd3a224d-5e80-47bc-862c-f159960dfc47"
        },
        "item": {
          "id": "59c13c44-e91c-4710-ae1f-3db920a64d42",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "e4dc4ad4-4c63-440f-b51f-d2926f8cf6b3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 383,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87d9205-24ef-4f63-84f0-4be30092a9f9",
        "cursor": {
          "ref": "9a69adbd-489c-446c-b765-cb36bb5ba4e1",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d74e1d86-94de-4bec-bed2-0990b46bf3f9"
        },
        "item": {
          "id": "f87d9205-24ef-4f63-84f0-4be30092a9f9",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "72ed8761-2dcc-405d-a4f2-734d136bcb31",
          "status": "OK",
          "code": 200,
          "responseTime": 412,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9946281b-ed32-4de1-9f4d-da3652ca3aea",
        "cursor": {
          "ref": "4766a81a-9301-4bb3-9492-7a3925501606",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9a243fe3-db27-409a-b2ba-76c6c10608cd"
        },
        "item": {
          "id": "9946281b-ed32-4de1-9f4d-da3652ca3aea",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3928bb57-5ada-4368-9655-0e11f9bac4af",
          "status": "OK",
          "code": 200,
          "responseTime": 1864,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6deadbda-3d34-4b0f-8568-e083b20beb59",
        "cursor": {
          "ref": "68517475-b0ad-4958-9276-d143651b0089",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0bd39323-a706-47cc-af9f-9e62ab56560b"
        },
        "item": {
          "id": "6deadbda-3d34-4b0f-8568-e083b20beb59",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3efcdcda-d741-486c-9c24-6af3780c15ac",
          "status": "OK",
          "code": 200,
          "responseTime": 1713,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a782290c-92a2-4265-a7f9-e345fdf69720",
        "cursor": {
          "ref": "4a65f281-233c-474d-b02c-291159ad8a02",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "099b75ed-8ec0-4f6a-90aa-35eac0f0dba3"
        },
        "item": {
          "id": "a782290c-92a2-4265-a7f9-e345fdf69720",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ed440aad-712b-4238-a161-244a361ca2f7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a782290c-92a2-4265-a7f9-e345fdf69720",
        "cursor": {
          "ref": "4a65f281-233c-474d-b02c-291159ad8a02",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "099b75ed-8ec0-4f6a-90aa-35eac0f0dba3"
        },
        "item": {
          "id": "a782290c-92a2-4265-a7f9-e345fdf69720",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ed440aad-712b-4238-a161-244a361ca2f7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a782290c-92a2-4265-a7f9-e345fdf69720",
        "cursor": {
          "ref": "4a65f281-233c-474d-b02c-291159ad8a02",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "099b75ed-8ec0-4f6a-90aa-35eac0f0dba3"
        },
        "item": {
          "id": "a782290c-92a2-4265-a7f9-e345fdf69720",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ed440aad-712b-4238-a161-244a361ca2f7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ba01d9-13d3-4cc2-83a2-6f7c2328e2e9",
        "cursor": {
          "ref": "dbfdb631-648e-497a-acdc-a7757b51c292",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "00f94406-b862-458e-8561-ca28de32fef5"
        },
        "item": {
          "id": "65ba01d9-13d3-4cc2-83a2-6f7c2328e2e9",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "8d0a5a37-880e-4c70-9818-0f474822c8da",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 352,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d1f662-0b6a-4773-8f7d-5f70cdd014a7",
        "cursor": {
          "ref": "5cdc9840-b19d-4134-a19a-ce959a9d12fe",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "86f14635-86e9-4204-92d7-12975127d736"
        },
        "item": {
          "id": "18d1f662-0b6a-4773-8f7d-5f70cdd014a7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "108202e2-7bc0-4b75-9ea0-9687f814fd63",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d1f662-0b6a-4773-8f7d-5f70cdd014a7",
        "cursor": {
          "ref": "5cdc9840-b19d-4134-a19a-ce959a9d12fe",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "86f14635-86e9-4204-92d7-12975127d736"
        },
        "item": {
          "id": "18d1f662-0b6a-4773-8f7d-5f70cdd014a7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "108202e2-7bc0-4b75-9ea0-9687f814fd63",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ac27f2-f6c1-4e8d-adc5-5700d00e64d0",
        "cursor": {
          "ref": "d4e0ff97-c189-41d7-86a4-b680aba376d6",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "aeb02bd0-da8f-4f9c-8618-707babd7a647"
        },
        "item": {
          "id": "55ac27f2-f6c1-4e8d-adc5-5700d00e64d0",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "ac31bb2c-d14a-47e6-8c4b-a2a3bdd549b6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1142,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2128a89e-3dcc-47b9-9882-0d8be2bf00c8",
        "cursor": {
          "ref": "1ebfafb2-d017-4c87-8300-bf97d32f4cd4",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "94638c57-f6aa-496a-89f1-652a8f87d1c8"
        },
        "item": {
          "id": "2128a89e-3dcc-47b9-9882-0d8be2bf00c8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b8e26145-8f58-48b3-91c0-85be27ec7c5e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2128a89e-3dcc-47b9-9882-0d8be2bf00c8",
        "cursor": {
          "ref": "1ebfafb2-d017-4c87-8300-bf97d32f4cd4",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "94638c57-f6aa-496a-89f1-652a8f87d1c8"
        },
        "item": {
          "id": "2128a89e-3dcc-47b9-9882-0d8be2bf00c8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b8e26145-8f58-48b3-91c0-85be27ec7c5e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1548a2d8-5e87-404c-b999-060b33e64e7b",
        "cursor": {
          "ref": "9b5e1279-2466-4304-af79-e51c50b3cc6c",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1f2139e5-b36a-43a7-84c2-df5b572ed192"
        },
        "item": {
          "id": "1548a2d8-5e87-404c-b999-060b33e64e7b",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "f329a352-59c4-4c37-bd8a-38ea232cbcbf",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 770,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}